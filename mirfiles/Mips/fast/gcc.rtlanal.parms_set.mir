--- |
  ; ModuleID = '../unison/src/unison/test/fast/Mips/speed/gcc.rtlanal.parms_set.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips--linux-gnu"
  
  %struct.rtx_def.365 = type { i32, [1 x %union.rtunion_def.366] }
  %union.rtunion_def.366 = type { i32 }
  
  ; Function Attrs: norecurse nounwind
  define hidden void @parms_set(%struct.rtx_def.365* nocapture readonly %x, %struct.rtx_def.365* nocapture readnone %pat, i8* nocapture %data) #0 {
    %1 = bitcast %struct.rtx_def.365* %x to i32*
    %2 = load i32, i32* %1, align 4
    %.mask = and i32 %2, -65536
    %3 = icmp eq i32 %.mask, 3997696
    br i1 %3, label %4, label %21
  
  ; <label>:4                                       ; preds = %0
    %5 = getelementptr inbounds %struct.rtx_def.365, %struct.rtx_def.365* %x, i32 0, i32 1, i32 0, i32 0
    %6 = load i32, i32* %5, align 4
    %7 = icmp ult i32 %6, 53
    br i1 %7, label %8, label %21
  
  ; <label>:8                                       ; preds = %4
    %9 = getelementptr inbounds i8, i8* %data, i32 4
    %10 = bitcast i8* %9 to i32*
    %11 = load i32, i32* %10, align 4
    %12 = shl i32 1, %6
    %13 = and i32 %11, %12
    %14 = icmp eq i32 %13, 0
    br i1 %14, label %21, label %15
  
  ; <label>:15                                      ; preds = %8
    %16 = xor i32 %12, -1
    %17 = and i32 %11, %16
    %sunkaddr = ptrtoint i8* %data to i32
    %sunkaddr1 = add i32 %sunkaddr, 4
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i32*
    store i32 %17, i32* %sunkaddr2, align 4
    %18 = bitcast i8* %data to i32*
    %19 = load i32, i32* %18, align 4
    %20 = add nsw i32 %19, -1
    store i32 %20, i32* %18, align 4
    br label %21
  
  ; <label>:21                                      ; preds = %15, %8, %4, %0
    ret void
  }
  
  attributes #0 = { norecurse nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            parms_set
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
  - { id: 2, class: gpr32 }
  - { id: 3, class: gpr32 }
  - { id: 4, class: gpr32 }
  - { id: 5, class: gpr32 }
  - { id: 6, class: gpr32 }
  - { id: 7, class: gpr32 }
  - { id: 8, class: gpr32 }
  - { id: 9, class: gpr32 }
  - { id: 10, class: gpr32 }
  - { id: 11, class: gpr32 }
  - { id: 12, class: gpr32 }
  - { id: 13, class: gpr32 }
  - { id: 14, class: gpr32 }
  - { id: 15, class: gpr32 }
  - { id: 16, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%3' }
  - { reg: '%a2', virtual-reg: '%5' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 51):
    successors: %bb.1(50), %bb.4(50)
    liveins: %a0, %a2
  
    %5 = COPY %a2
    %3 = COPY %a0
    %6 = LW %3, 0, <0x396cf00> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1)
    %7 = LUi 65535
    %8 = AND killed %6, killed %7
    %9 = LUi 61
    BNE killed %8, killed %9, %bb.4, implicit-def dead %at
    B %bb.1, implicit-def dead %at
  
  bb.1 (%ir-block.4, freq 25):
    successors: %bb.2(50), %bb.4(50)
  
    %0 = LW %3, 4, <0x396cf00> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.5)
    %10 = SLTiu %0, 53
    BEQ killed %10, %zero, %bb.4, implicit-def dead %at
    B %bb.2, implicit-def dead %at
  
  bb.2 (%ir-block.8, freq 12):
    successors: %bb.4(37), %bb.3(62)
  
    %11 = ADDiu %zero, 1
    %2 = SLLV killed %11, %0
    %1 = LW %5, 4, <0x396cf00> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.10)
    %12 = AND %1, %2
    BEQ killed %12, %zero, %bb.4, implicit-def dead %at
    B %bb.3, implicit-def dead %at
  
  bb.3 (%ir-block.15, freq 8):
    successors: %bb.4(100)
  
    %13 = NOR %2, %zero
    %14 = AND %1, killed %13
    SW killed %14, %5, 4, <0x396cf00> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr2)
    %15 = LW %5, 0, <0x396cf00> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.18)
    %16 = ADDiu killed %15, -1
    SW killed %16, %5, 0, <0x396cf00> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.18)
  
  bb.4 (%ir-block.21, freq 51):
    liveouts:
  
    RetRA

...
--- |
  ; ModuleID = '../unison/src/unison/test/fast/Mips/speed/gcc.rtlanal.parms_set.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips--linux-gnu"
  
  %struct.rtx_def.365 = type { i32, [1 x %union.rtunion_def.366] }
  %union.rtunion_def.366 = type { i32 }
  
  ; Function Attrs: norecurse nounwind
  define hidden void @parms_set(%struct.rtx_def.365* nocapture readonly %x, %struct.rtx_def.365* nocapture readnone %pat, i8* nocapture %data) #0 {
    %1 = bitcast %struct.rtx_def.365* %x to i32*
    %2 = load i32, i32* %1, align 4
    %.mask = and i32 %2, -65536
    %3 = icmp eq i32 %.mask, 3997696
    br i1 %3, label %4, label %21
  
  ; <label>:4                                       ; preds = %0
    %5 = getelementptr inbounds %struct.rtx_def.365, %struct.rtx_def.365* %x, i32 0, i32 1, i32 0, i32 0
    %6 = load i32, i32* %5, align 4
    %7 = icmp ult i32 %6, 53
    br i1 %7, label %8, label %21
  
  ; <label>:8                                       ; preds = %4
    %9 = getelementptr inbounds i8, i8* %data, i32 4
    %10 = bitcast i8* %9 to i32*
    %11 = load i32, i32* %10, align 4
    %12 = shl i32 1, %6
    %13 = and i32 %11, %12
    %14 = icmp eq i32 %13, 0
    br i1 %14, label %21, label %15
  
  ; <label>:15                                      ; preds = %8
    %16 = xor i32 %12, -1
    %17 = and i32 %11, %16
    %sunkaddr = ptrtoint i8* %data to i32
    %sunkaddr1 = add i32 %sunkaddr, 4
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i32*
    store i32 %17, i32* %sunkaddr2, align 4
    %18 = bitcast i8* %data to i32*
    %19 = load i32, i32* %18, align 4
    %20 = add nsw i32 %19, -1
    store i32 %20, i32* %18, align 4
    br label %21
  
  ; <label>:21                                      ; preds = %15, %8, %4, %0
    ret void
  }
  
  attributes #0 = { norecurse nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            parms_set
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
  - { id: 2, class: gpr32 }
  - { id: 3, class: gpr32 }
  - { id: 4, class: gpr32 }
  - { id: 5, class: gpr32 }
  - { id: 6, class: gpr32 }
  - { id: 7, class: gpr32 }
  - { id: 8, class: gpr32 }
  - { id: 9, class: gpr32 }
  - { id: 10, class: gpr32 }
  - { id: 11, class: gpr32 }
  - { id: 12, class: gpr32 }
  - { id: 13, class: gpr32 }
  - { id: 14, class: gpr32 }
  - { id: 15, class: gpr32 }
  - { id: 16, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%3' }
  - { reg: '%a2', virtual-reg: '%5' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 51):
    successors: %bb.1(50), %bb.4(50)
    liveins: %a0, %a2
  
    %5 = COPY %a2
    %3 = COPY %a0
    %6 = LW %3, 0, <0x396cf00> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1)
    %7 = LUi 65535
    %8 = AND killed %6, killed %7
    %9 = LUi 61
    BNE killed %8, killed %9, %bb.4, implicit-def dead %at
    B %bb.1, implicit-def dead %at
  
  bb.1 (%ir-block.4, freq 25):
    successors: %bb.2(50), %bb.4(50)
  
    %0 = LW %3, 4, <0x396cf00> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.5)
    %10 = SLTiu %0, 53
    BEQ killed %10, %zero, %bb.4, implicit-def dead %at
    B %bb.2, implicit-def dead %at
  
  bb.2 (%ir-block.8, freq 12):
    successors: %bb.4(37), %bb.3(62)
  
    %11 = ADDiu %zero, 1
    %2 = SLLV killed %11, %0
    %1 = LW %5, 4, <0x396cf00> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.10)
    %12 = AND %1, %2
    BEQ killed %12, %zero, %bb.4, implicit-def dead %at
    B %bb.3, implicit-def dead %at
  
  bb.3 (%ir-block.15, freq 8):
    successors: %bb.4(100)
  
    %13 = NOR %2, %zero
    %14 = AND %1, killed %13
    SW killed %14, %5, 4, <0x396cf00> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr2)
    %15 = LW %5, 0, <0x396cf00> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.18)
    %16 = ADDiu killed %15, -1
    SW killed %16, %5, 0, <0x396cf00> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.18)
  
  bb.4 (%ir-block.21, freq 51):
    liveouts:
  
    RetRA

...
