--- |
  ; ModuleID = '/home/romi/didaktoriko/unison/unison-experiments/experiments/test-input/c/mediabench/mips_zip/build-mips/ghostscript/ghostscript.isave.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips--linux-gnu"
  
  %struct.gs_memory_struct_type_s = type { i32, i8*, %struct.struct_shared_procs_s*, void (i8*, i32)*, %struct.gs_ptr_procs_s* (i8*, i32, i32, i8**)*, void (i8*, i32, %struct.gc_state_s*)*, void (i8*)* }
  %struct.struct_shared_procs_s = type opaque
  %struct.gs_ptr_procs_s = type { void (i8*, %struct.gc_state_s*)*, i32 (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)* }
  %struct.gc_state_s = type opaque
  %struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i32, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i32, i32, [40 x i8] }
  %struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
  %struct.gs_dual_memory_s = type { %struct.gs_ref_memory_s*, %union.vm_spaces_s, i32, i32, i32 (%struct.gs_dual_memory_s*, i32)*, i32, i32 }
  %struct.gs_ref_memory_s = type { %struct.gs_memory_procs_s, %struct.gs_memory_s*, i32, i32, %struct.gs_ref_memory_s*, i32, %struct.gs_memory_gc_status_s, i32, %struct.chunk_s*, %struct.chunk_s*, %struct.chunk_s, %struct.chunk_s*, %struct.chunk_locator_s, i32, i32, i32, %struct.lost_, %struct.gs_gc_root_s*, i32, %struct.alloc_change_s*, %struct.alloc_save_s*, %struct.alloc_save_s*, %struct.gs_memory_status_s, [101 x %struct.obj_header_s*] }
  %struct.gs_memory_procs_s = type { i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i8*, i32, i8*)*, i32 (%struct.gs_memory_s*, i8*)*, %struct.gs_memory_struct_type_s* (%struct.gs_memory_s*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i8*, i32, i32, i8*)*, void (%struct.gs_memory_s*, i8*, i32, i8*)*, void (%struct.gs_memory_s*, %struct.gs_gc_root_s*, %struct.gs_ptr_procs_s*, i8**, i8*)*, void (%struct.gs_memory_s*, %struct.gs_gc_root_s*, i8*)*, void (%struct.gs_memory_s*, %struct.gs_memory_status_s*)*, void (%struct.gs_memory_s*, i32)* }
  %struct.gs_memory_s = type { %struct.gs_memory_procs_s }
  %struct.gs_memory_gc_status_s = type { i32, i32, i32*, i32, i32, i32 }
  %struct.chunk_s = type { %struct.chunk_head_s*, i8*, i8*, %struct.obj_header_s*, i8*, i8*, i8*, i8*, %struct.chunk_s*, %struct.chunk_s*, %struct.chunk_s*, i32, i32, i16*, i16, i8*, i8*, i32, i8*, i32*, i8*, i8*, i8* }
  %struct.chunk_head_s = type { i8*, [1 x i8*], %struct.obj_header_s }
  %struct.obj_header_s = type { %union._d }
  %union._d = type { %struct.obj_header_data_s, [4 x i8] }
  %struct.obj_header_data_s = type { %union._f, i32, %union._t }
  %union._f = type { %struct._l }
  %struct._l = type { i32 }
  %union._t = type { %struct.gs_memory_struct_type_s* }
  %struct.chunk_locator_s = type { %struct.gs_ref_memory_s*, %struct.chunk_s* }
  %struct.lost_ = type { i32, i32, i32 }
  %struct.gs_gc_root_s = type { %struct.gs_gc_root_s*, %struct.gs_ptr_procs_s*, i8** }
  %struct.alloc_change_s = type { %struct.alloc_change_s*, i16*, %struct.ref_s, i16 }
  %struct.ref_s = type { %struct.tas_s, %union.v }
  %struct.tas_s = type { i16, i16 }
  %union.v = type { i32 }
  %struct.alloc_save_s = type { %struct.gs_ref_memory_s, %struct.gs_dual_memory_s*, i32, i32, i32, i8* }
  %struct.gs_memory_status_s = type { i32, i32 }
  %union.vm_spaces_s = type { [4 x %struct.gs_ref_memory_s*] }
  %struct.name_s = type { i16, i16, i8*, %struct.ref_s* }
  
  @.str = private unnamed_addr constant [29 x i8] c"alloc_save_state(local save)\00", align 1
  @.str.1 = private unnamed_addr constant [30 x i8] c"alloc_save_state(local inner)\00", align 1
  @.str.2 = private unnamed_addr constant [30 x i8] c"alloc_save_state(global save)\00", align 1
  @.str.3 = private unnamed_addr constant [31 x i8] c"alloc_save_state(global inner)\00", align 1
  @st_alloc_change = internal global %struct.gs_memory_struct_type_s { i32 20, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i32 0, i32 0), %struct.struct_shared_procs_s* null, void (i8*, i32)* @change_clear_marks, %struct.gs_ptr_procs_s* (i8*, i32, i32, i8**)* @change_enum_ptrs, void (i8*, i32, %struct.gc_state_s*)* @change_reloc_ptrs, void (i8*)* null }, align 4
  @.str.4 = private unnamed_addr constant [18 x i8] c"alloc_save_change\00", align 1
  @gs_stderr = external global %struct._IO_FILE*, align 4
  @.str.5 = private unnamed_addr constant [8 x i8] c"isave.c\00", align 1
  @.str.6 = private unnamed_addr constant [53 x i8] c"Bad type %u for save!  pcont = 0x%lx, where = 0x%lx\0A\00", align 1
  @st_chunk = external global %struct.gs_memory_struct_type_s, align 4
  @.str.7 = private unnamed_addr constant [24 x i8] c"alloc_save_space(inner)\00", align 1
  @st_alloc_save = internal global %struct.gs_memory_struct_type_s { i32 716, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), %struct.struct_shared_procs_s* null, void (i8*, i32)* null, %struct.gs_ptr_procs_s* (i8*, i32, i32, i8**)* @save_enum_ptrs, void (i8*, i32, %struct.gc_state_s*)* @save_reloc_ptrs, void (i8*)* null }, align 4
  @.str.8 = private unnamed_addr constant [23 x i8] c"alloc_save_space(save)\00", align 1
  @.str.9 = private unnamed_addr constant [11 x i8] c"alloc_save\00", align 1
  @st_ref_memory = external global %struct.gs_memory_struct_type_s, align 4
  @ptr_struct_procs = external global %struct.gs_ptr_procs_s, align 4
  @.str.10 = private unnamed_addr constant [13 x i8] c"alloc_change\00", align 1
  @ptr_ref_procs = external global %struct.gs_ptr_procs_s, align 4
  @st_bytes = external global %struct.gs_memory_struct_type_s, align 4
  @.str.11 = private unnamed_addr constant [21 x i8] c"combine_space(inner)\00", align 1
  @.str.12 = private unnamed_addr constant [21 x i8] c"combine_space(saved)\00", align 1
  @.str.13 = private unnamed_addr constant [15 x i8] c"forget_changes\00", align 1
  @st_refs = external global %struct.gs_memory_struct_type_s, align 4
  
  ; Function Attrs: norecurse nounwind
  define void @alloc_save_init(%struct.gs_dual_memory_s* nocapture %dmem) #0 {
    %1 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 3
    store i32 0, i32* %1, align 4, !tbaa !1
    %2 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 5
    store i32 -1, i32* %2, align 4, !tbaa !7
    %3 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 6
    store i32 0, i32* %3, align 4, !tbaa !8
    ret void
  }
  
  ; Function Attrs: nounwind
  define i32 @alloc_save_state(%struct.gs_dual_memory_s* %dmem, i8* %cdata) #1 {
    %1 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 3
    %2 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %1, align 4, !tbaa !9
    %3 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 2
    %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %3, align 4, !tbaa !11
    %5 = tail call i32 @gs_next_ids(i32 signext 2) #5
    %6 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 3
    %7 = load i32, i32* %6, align 4, !tbaa !1
    %8 = icmp ne i32 %7, 0
    %9 = icmp eq %struct.gs_ref_memory_s* %4, %2
    %or.cond3 = or i1 %9, %8
    br i1 %or.cond3, label %.thread, label %10
  
  ; <label>:10                                      ; preds = %0
    %11 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %4, i32 0, i32 18
    %12 = load i32, i32* %11, align 4, !tbaa !12
    %13 = icmp eq i32 %12, 1
    br i1 %13, label %14, label %.thread
  
  ; <label>:14                                      ; preds = %10
    %15 = tail call fastcc %struct.alloc_save_s* @alloc_save_space(%struct.gs_ref_memory_s* nonnull %4, %struct.gs_dual_memory_s* nonnull %dmem)
    br label %.thread
  
  .thread:                                          ; preds = %14, %10, %0
    %16 = phi i1 [ true, %14 ], [ false, %10 ], [ false, %0 ]
    %17 = phi %struct.alloc_save_s* [ %15, %14 ], [ null, %10 ], [ null, %0 ]
    %18 = tail call fastcc %struct.alloc_save_s* @alloc_save_space(%struct.gs_ref_memory_s* %2, %struct.gs_dual_memory_s* nonnull %dmem)
    %19 = icmp eq %struct.alloc_save_s* %18, null
    %20 = icmp eq %struct.alloc_save_s* %17, null
    %or.cond = and i1 %16, %20
    %or.cond4 = or i1 %19, %or.cond
    br i1 %or.cond4, label %21, label %49
  
  ; <label>:21                                      ; preds = %.thread
    %22 = icmp eq %struct.alloc_save_s* %18, null
    br i1 %22, label %35, label %23
  
  ; <label>:23                                      ; preds = %21
    %24 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %2, i32 0, i32 11
    %25 = bitcast %struct.chunk_s** %24 to i8**
    %26 = load i8*, i8** %25, align 4, !tbaa !22
    %27 = bitcast %struct.gs_ref_memory_s* %2 to %struct.gs_memory_s*
    %28 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %2, i32 0, i32 0, i32 11
    %29 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %28, align 4, !tbaa !23
    %30 = bitcast %struct.alloc_save_s* %18 to i8*
    tail call void %29(%struct.gs_memory_s* %27, i8* %30, i8* nonnull getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i32 0, i32 0)) #5
    %31 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %2, i32 0, i32 1
    %32 = load %struct.gs_memory_s*, %struct.gs_memory_s** %31, align 4, !tbaa !25
    %33 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %32, i32 0, i32 0, i32 11
    %34 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %33, align 4, !tbaa !23
    tail call void %34(%struct.gs_memory_s* %32, i8* %26, i8* nonnull getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i32 0, i32 0)) #5
    br label %35
  
  ; <label>:35                                      ; preds = %23, %21
    %36 = icmp eq %struct.alloc_save_s* %17, null
    br i1 %36, label %85, label %37
  
  ; <label>:37                                      ; preds = %35
    %38 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %4, i32 0, i32 11
    %39 = bitcast %struct.chunk_s** %38 to i8**
    %40 = load i8*, i8** %39, align 4, !tbaa !22
    %41 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
    %42 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %4, i32 0, i32 0, i32 11
    %43 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %42, align 4, !tbaa !23
    %44 = bitcast %struct.alloc_save_s* %17 to i8*
    tail call void %43(%struct.gs_memory_s* %41, i8* %44, i8* nonnull getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i32 0, i32 0)) #5
    %45 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %4, i32 0, i32 1
    %46 = load %struct.gs_memory_s*, %struct.gs_memory_s** %45, align 4, !tbaa !25
    %47 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %46, i32 0, i32 0, i32 11
    %48 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %47, align 4, !tbaa !23
    tail call void %48(%struct.gs_memory_s* %46, i8* %40, i8* nonnull getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i32 0, i32 0)) #5
    br label %85
  
  ; <label>:49                                      ; preds = %.thread
    %50 = icmp eq %struct.alloc_save_s* %17, null
    br i1 %50, label %58, label %51
  
  ; <label>:51                                      ; preds = %49
    %52 = add i32 %5, 1
    %53 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %17, i32 0, i32 4
    store i32 %52, i32* %53, align 4, !tbaa !26
    %54 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %17, i32 0, i32 5
    store i8* null, i8** %54, align 4, !tbaa !28
    %55 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %17, i32 0, i32 2
    %56 = load i32, i32* %55, align 4, !tbaa !29
    %57 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %18, i32 0, i32 2
    store i32 %56, i32* %57, align 4, !tbaa !29
    store i32 0, i32* %55, align 4, !tbaa !29
    br label %58
  
  ; <label>:58                                      ; preds = %51, %49
    %59 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %18, i32 0, i32 4
    store i32 %5, i32* %59, align 4, !tbaa !26
    %60 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %18, i32 0, i32 5
    store i8* %cdata, i8** %60, align 4, !tbaa !28
    %sunkaddr = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr1 = add i32 %sunkaddr, 24
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i32*
    %61 = load i32, i32* %sunkaddr2, align 4, !tbaa !1
    %62 = icmp eq i32 %61, 0
    br i1 %62, label %80, label %63
  
  ; <label>:63                                      ; preds = %58
    %64 = bitcast %struct.alloc_save_s* %18 to %struct.gs_ref_memory_s*
    %65 = tail call fastcc i32 @save_set_new(%struct.gs_ref_memory_s* %64, i32 signext 0)
    %66 = icmp sgt i32 %65, 100000
    br i1 %66, label %67, label %80
  
  ; <label>:67                                      ; preds = %63
    tail call void @file_save() #5
    %68 = tail call fastcc %struct.alloc_save_s* @alloc_save_space(%struct.gs_ref_memory_s* %2, %struct.gs_dual_memory_s* nonnull %dmem)
    %69 = icmp eq %struct.alloc_save_s* %68, null
    br i1 %69, label %80, label %70
  
  ; <label>:70                                      ; preds = %67
    %71 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %68, i32 0, i32 4
    store i32 %5, i32* %71, align 4, !tbaa !26
    %72 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %68, i32 0, i32 5
    store i8* %cdata, i8** %72, align 4, !tbaa !28
    %sunkaddr3 = ptrtoint %struct.alloc_save_s* %18 to i32
    %sunkaddr4 = add i32 %sunkaddr3, 708
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to i32*
    store i32 0, i32* %sunkaddr5, align 4, !tbaa !26
    %sunkaddr6 = ptrtoint %struct.alloc_save_s* %18 to i32
    %sunkaddr7 = add i32 %sunkaddr6, 712
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to i8**
    store i8* null, i8** %sunkaddr8, align 4, !tbaa !28
    %73 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %18, i32 0, i32 0, i32 13
    %74 = load i32, i32* %73, align 4, !tbaa !30
    %75 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %18, i32 0, i32 0, i32 14
    %76 = load i32, i32* %75, align 4, !tbaa !31
    %77 = add i32 %76, %74
    %78 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %68, i32 0, i32 0, i32 14
    store i32 %77, i32* %78, align 4, !tbaa !31
    %79 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %2, i32 0, i32 14
    store i32 %77, i32* %79, align 4, !tbaa !32
    br label %80
  
  ; <label>:80                                      ; preds = %70, %67, %63, %58
    %sunkaddr9 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr10 = add i32 %sunkaddr9, 24
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to i32*
    %81 = load i32, i32* %sunkaddr11, align 4, !tbaa !1
    %82 = add nsw i32 %81, 1
    store i32 %82, i32* %sunkaddr11, align 4, !tbaa !1
    %83 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 6
    store i32 2, i32* %83, align 4, !tbaa !8
    %84 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 5
    store i32 2, i32* %84, align 4, !tbaa !7
    tail call void @file_save() #5
    br label %85
  
  ; <label>:85                                      ; preds = %80, %37, %35
    %.0 = phi i32 [ %5, %80 ], [ 0, %35 ], [ 0, %37 ]
    ret i32 %.0
  }
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.start(i64, i8* nocapture) #2
  
  declare i32 @gs_next_ids(i32 signext) #3
  
  ; Function Attrs: nounwind
  define internal fastcc %struct.alloc_save_s* @alloc_save_space(%struct.gs_ref_memory_s* %mem, %struct.gs_dual_memory_s* %dmem) unnamed_addr #1 {
    %save_mem = alloca %struct.gs_ref_memory_s, align 4
    %1 = bitcast %struct.gs_ref_memory_s* %save_mem to i8*
    call void @llvm.lifetime.start(i64 696, i8* %1)
    %2 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 10
    %3 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 10, i32 5
    %4 = bitcast i8** %3 to i32*
    %5 = load i32, i32* %4, align 4, !tbaa !33
    %6 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 10, i32 2
    %7 = bitcast i8** %6 to i32*
    %8 = load i32, i32* %7, align 4, !tbaa !34
    %9 = sub i32 %5, %8
    %10 = icmp ugt i32 %9, 24
    br i1 %10, label %11, label %19
  
  ; <label>:11                                      ; preds = %0
    %12 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 1
    %13 = load %struct.gs_memory_s*, %struct.gs_memory_s** %12, align 4, !tbaa !25
    %14 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %13, i32 0, i32 0, i32 2
    %15 = load i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)** %14, align 4, !tbaa !35
    %16 = tail call i8* %15(%struct.gs_memory_s* %13, %struct.gs_memory_struct_type_s* nonnull @st_chunk, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i32 0, i32 0)) #5
    %17 = bitcast i8* %16 to %struct.chunk_s*
    %18 = icmp eq i8* %16, null
    br i1 %18, label %73, label %19
  
  ; <label>:19                                      ; preds = %11, %0
    %inner.0 = phi %struct.chunk_s* [ %17, %11 ], [ null, %0 ]
    %20 = bitcast %struct.gs_ref_memory_s* %save_mem to i8*
    %21 = bitcast %struct.gs_ref_memory_s* %mem to i8*
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* %20, i8* %21, i32 696, i32 4, i1 false), !tbaa.struct !36
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* nonnull %mem) #5
    %22 = bitcast %struct.gs_ref_memory_s* %mem to %struct.gs_memory_s*
    %23 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 0, i32 18
    %24 = load void (%struct.gs_memory_s*, %struct.gs_memory_status_s*)*, void (%struct.gs_memory_s*, %struct.gs_memory_status_s*)** %23, align 4, !tbaa !42
    %25 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 22
    tail call void %24(%struct.gs_memory_s* %22, %struct.gs_memory_status_s* %25) #5
    tail call void @ialloc_reset(%struct.gs_ref_memory_s* nonnull %mem) #5
    %26 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 10, i32 8
    store %struct.chunk_s* null, %struct.chunk_s** %26, align 4, !tbaa !43
    %27 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 10, i32 9
    store %struct.chunk_s* null, %struct.chunk_s** %27, align 4, !tbaa !44
    %28 = icmp eq %struct.chunk_s* %inner.0, null
    br i1 %28, label %36, label %29
  
  ; <label>:29                                      ; preds = %19
    %sunkaddr = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr1 = add i32 %sunkaddr, 144
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i8**
    %30 = load i8*, i8** %sunkaddr2, align 4, !tbaa !34
    %sunkaddr3 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr4 = add i32 %sunkaddr3, 156
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to i8**
    %31 = load i8*, i8** %sunkaddr5, align 4, !tbaa !33
    %32 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 11
    %33 = load %struct.chunk_s*, %struct.chunk_s** %32, align 4, !tbaa !22
    tail call void @alloc_init_chunk(%struct.chunk_s* nonnull %2, i8* %30, i8* %31, i32 signext 1, %struct.chunk_s* %33) #5
    %34 = bitcast %struct.chunk_s* %inner.0 to i8*
    %35 = bitcast %struct.chunk_s* %2 to i8*
    tail call void @llvm.memcpy.p0i8.p0i8.i32(i8* %34, i8* %35, i32 92, i32 4, i1 false), !tbaa.struct !45
    store %struct.chunk_s* %inner.0, %struct.chunk_s** %32, align 4, !tbaa !22
    br label %38
  
  ; <label>:36                                      ; preds = %19
    %37 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 11
    store %struct.chunk_s* null, %struct.chunk_s** %37, align 4, !tbaa !22
    %sunkaddr6 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr7 = add i32 %sunkaddr6, 156
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to i8**
    store i8* null, i8** %sunkaddr8, align 4, !tbaa !33
    %sunkaddr9 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr10 = add i32 %sunkaddr9, 144
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to i8**
    store i8* null, i8** %sunkaddr11, align 4, !tbaa !34
    br label %38
  
  ; <label>:38                                      ; preds = %36, %29
    %inner.0.sink1 = phi %struct.chunk_s* [ null, %36 ], [ %inner.0, %29 ]
    %39 = bitcast %struct.gs_ref_memory_s* %mem to %struct.gs_memory_s*
    %40 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 9
    store %struct.chunk_s* %inner.0.sink1, %struct.chunk_s** %40, align 4
    %41 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 8
    store %struct.chunk_s* %inner.0.sink1, %struct.chunk_s** %41, align 4
    %42 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 0, i32 2
    %43 = load i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)** %42, align 4, !tbaa !35
    %44 = tail call i8* %43(%struct.gs_memory_s* nonnull %39, %struct.gs_memory_struct_type_s* nonnull @st_alloc_save, i8* nonnull getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #5
    %45 = icmp eq i8* %44, null
    br i1 %45, label %46, label %54
  
  ; <label>:46                                      ; preds = %38
    %47 = bitcast %struct.gs_ref_memory_s* %mem to i8*
    %48 = bitcast %struct.gs_ref_memory_s* %save_mem to i8*
    %49 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 1
    %50 = load %struct.gs_memory_s*, %struct.gs_memory_s** %49, align 4, !tbaa !25
    %51 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %50, i32 0, i32 0, i32 11
    %52 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %51, align 4, !tbaa !23
    %53 = bitcast %struct.chunk_s* %inner.0 to i8*
    tail call void %52(%struct.gs_memory_s* %50, i8* %53, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i32 0, i32 0)) #5
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull %47, i8* nonnull %48, i32 696, i32 4, i1 false), !tbaa.struct !36
    br label %73
  
  ; <label>:54                                      ; preds = %38
    %55 = bitcast %struct.gs_ref_memory_s* %mem to %struct.gs_memory_s*
    %56 = bitcast %struct.gs_ref_memory_s* %save_mem to i8*
    %57 = bitcast i8* %44 to %struct.alloc_save_s*
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull %44, i8* nonnull %56, i32 696, i32 4, i1 false), !tbaa.struct !36
    %58 = getelementptr inbounds i8, i8* %44, i32 696
    %59 = bitcast i8* %58 to %struct.gs_dual_memory_s**
    store %struct.gs_dual_memory_s* %dmem, %struct.gs_dual_memory_s** %59, align 4, !tbaa !46
    %60 = tail call %struct.gs_memory_s* @name_memory() #5
    %61 = icmp eq %struct.gs_memory_s* %60, %55
    %62 = zext i1 %61 to i32
    %63 = getelementptr inbounds i8, i8* %44, i32 700
    %64 = bitcast i8* %63 to i32*
    store i32 %62, i32* %64, align 4, !tbaa !29
    %65 = bitcast %struct.gs_dual_memory_s* %dmem to %struct.gs_ref_memory_s**
    %66 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %65, align 4, !tbaa !47
    %67 = icmp eq %struct.gs_ref_memory_s* %66, %mem
    %68 = zext i1 %67 to i32
    %69 = getelementptr inbounds i8, i8* %44, i32 704
    %70 = bitcast i8* %69 to i32*
    store i32 %68, i32* %70, align 4, !tbaa !48
    %71 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 20
    %72 = bitcast %struct.alloc_save_s** %71 to i8**
    store i8* %44, i8** %72, align 4, !tbaa !49
    br label %73
  
  ; <label>:73                                      ; preds = %54, %46, %11
    %.0 = phi %struct.alloc_save_s* [ null, %46 ], [ %57, %54 ], [ null, %11 ]
    %74 = bitcast %struct.gs_ref_memory_s* %save_mem to i8*
    call void @llvm.lifetime.end(i64 696, i8* %74)
    ret %struct.alloc_save_s* %.0
  }
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.end(i64, i8* nocapture) #2
  
  ; Function Attrs: norecurse nounwind
  define internal fastcc i32 @save_set_new(%struct.gs_ref_memory_s* nocapture readonly %mem, i32 signext %to_new) unnamed_addr #0 {
    %1 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 19
    %2 = icmp ne i32 %to_new, 0
    %3 = select i1 %2, i32 2, i32 0
    %chp.01.i = load %struct.alloc_change_s*, %struct.alloc_change_s** %1, align 4, !tbaa !37
    %4 = icmp eq %struct.alloc_change_s* %chp.01.i, null
    br i1 %4, label %save_set_new_changes.exit, label %.lr.ph.i
  
  .lr.ph.i:                                         ; preds = %0, %14
    %chp.02.i = phi %struct.alloc_change_s* [ %chp.0.i, %14 ], [ %chp.01.i, %0 ]
    %5 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %chp.02.i, i32 0, i32 1
    %6 = load i16*, i16** %5, align 4, !tbaa !50
    %7 = load i16, i16* %6, align 2, !tbaa !40
    %8 = zext i16 %7 to i32
    %9 = icmp ugt i16 %7, 16383
    br i1 %9, label %14, label %10
  
  ; <label>:10                                      ; preds = %.lr.ph.i
    %11 = and i32 %8, 65533
    %12 = or i32 %11, %3
    %13 = trunc i32 %12 to i16
    store i16 %13, i16* %6, align 4, !tbaa !54
    br label %14
  
  ; <label>:14                                      ; preds = %10, %.lr.ph.i
    %15 = bitcast %struct.alloc_change_s* %chp.02.i to %struct.alloc_change_s**
    %chp.0.i = load %struct.alloc_change_s*, %struct.alloc_change_s** %15, align 4, !tbaa !37
    %16 = icmp eq %struct.alloc_change_s* %chp.0.i, null
    br i1 %16, label %save_set_new_changes.exit, label %.lr.ph.i
  
  save_set_new_changes.exit:                        ; preds = %14, %0
    %17 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 8
    %cp.08 = load %struct.chunk_s*, %struct.chunk_s** %17, align 4, !tbaa !37
    %18 = icmp eq %struct.chunk_s* %cp.08, null
    br i1 %18, label %._crit_edge12, label %.lr.ph11
  
  .lr.ph11:                                         ; preds = %save_set_new_changes.exit
    br label %19
  
  ; <label>:19                                      ; preds = %70, %.lr.ph11
    %cp.010 = phi %struct.chunk_s* [ %cp.08, %.lr.ph11 ], [ %cp.0, %70 ]
    %scanned.09 = phi i32 [ 0, %.lr.ph11 ], [ %scanned.3, %70 ]
    %20 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.010, i32 0, i32 12
    %21 = load i32, i32* %20, align 4, !tbaa !55
    %22 = icmp eq i32 %21, 0
    br i1 %22, label %70, label %23
  
  ; <label>:23                                      ; preds = %19
    %24 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.010, i32 0, i32 1
    %25 = bitcast i8** %24 to %struct.obj_header_s**
    %26 = load %struct.obj_header_s*, %struct.obj_header_s** %25, align 4, !tbaa !56
    %27 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.010, i32 0, i32 2
    %28 = bitcast i8** %27 to %struct.obj_header_s**
    %29 = load %struct.obj_header_s*, %struct.obj_header_s** %28, align 4, !tbaa !57
    %30 = icmp ult %struct.obj_header_s* %26, %29
    br i1 %30, label %.lr.ph, label %._crit_edge
  
  .lr.ph:                                           ; preds = %23, %.loopexit
    %scanned.16 = phi i32 [ %scanned.2, %.loopexit ], [ %scanned.09, %23 ]
    %has_refs.05 = phi i32 [ %has_refs.1, %.loopexit ], [ 0, %23 ]
    %pre.04 = phi %struct.obj_header_s* [ %68, %.loopexit ], [ %26, %23 ]
    %31 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.04, i32 0, i32 0, i32 0, i32 1
    %32 = load i32, i32* %31, align 4, !tbaa !58
    %33 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.04, i32 0, i32 0, i32 0, i32 2, i32 0
    %34 = load %struct.gs_memory_struct_type_s*, %struct.gs_memory_struct_type_s** %33, align 4, !tbaa !37
    %35 = icmp eq %struct.gs_memory_struct_type_s* %34, @st_refs
    br i1 %35, label %36, label %.loopexit
  
  ; <label>:36                                      ; preds = %.lr.ph
    %37 = icmp eq i32 %to_new, 0
    %38 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.04, i32 1
    %39 = bitcast %struct.obj_header_s* %38 to i16*
    %40 = bitcast %struct.obj_header_s* %38 to i8*
    %41 = getelementptr inbounds i8, i8* %40, i32 %32
    br i1 %37, label %.preheader, label %.preheader1
  
  .preheader1:                                      ; preds = %45, %47, %36
    %prp.0 = phi i16* [ %39, %36 ], [ %46, %45 ], [ %51, %47 ]
    %42 = load i16, i16* %prp.0, align 2, !tbaa !40
    %43 = zext i16 %42 to i32
    %44 = icmp ugt i16 %42, 16383
    br i1 %44, label %45, label %47
  
  ; <label>:45                                      ; preds = %.preheader1
    %46 = getelementptr inbounds i16, i16* %prp.0, i32 1
    br label %.preheader1
  
  ; <label>:47                                      ; preds = %.preheader1
    %48 = bitcast i8* %41 to i16*
    %49 = or i32 %43, 2
    %50 = trunc i32 %49 to i16
    store i16 %50, i16* %prp.0, align 4, !tbaa !54
    %51 = getelementptr inbounds i16, i16* %prp.0, i32 4
    %52 = icmp ult i16* %51, %48
    br i1 %52, label %.preheader1, label %.loopexit
  
  .preheader:                                       ; preds = %56, %58, %36
    %prp.1 = phi i16* [ %39, %36 ], [ %57, %56 ], [ %62, %58 ]
    %53 = load i16, i16* %prp.1, align 2, !tbaa !40
    %54 = zext i16 %53 to i32
    %55 = icmp ugt i16 %53, 16383
    br i1 %55, label %56, label %58
  
  ; <label>:56                                      ; preds = %.preheader
    %57 = getelementptr inbounds i16, i16* %prp.1, i32 1
    br label %.preheader
  
  ; <label>:58                                      ; preds = %.preheader
    %59 = bitcast i8* %41 to i16*
    %60 = and i32 %54, 65533
    %61 = trunc i32 %60 to i16
    store i16 %61, i16* %prp.1, align 4, !tbaa !54
    %62 = getelementptr inbounds i16, i16* %prp.1, i32 4
    %63 = icmp ult i16* %62, %59
    br i1 %63, label %.preheader, label %.loopexit
  
  .loopexit:                                        ; preds = %47, %58, %.lr.ph
    %has_refs.1 = phi i32 [ %has_refs.05, %.lr.ph ], [ 1, %58 ], [ 1, %47 ]
    %.pn = phi i32 [ 16, %.lr.ph ], [ %32, %58 ], [ %32, %47 ]
    %scanned.2 = add i32 %.pn, %scanned.16
    %64 = bitcast %struct.obj_header_s* %pre.04 to i8*
    %65 = add i32 %32, 23
    %66 = and i32 %65, -8
    %67 = getelementptr inbounds i8, i8* %64, i32 %66
    %68 = bitcast i8* %67 to %struct.obj_header_s*
    %69 = icmp ult %struct.obj_header_s* %68, %29
    br i1 %69, label %.lr.ph, label %._crit_edge
  
  ._crit_edge:                                      ; preds = %.loopexit, %23
    %scanned.1.lcssa = phi i32 [ %scanned.09, %23 ], [ %scanned.2, %.loopexit ]
    %has_refs.0.lcssa = phi i32 [ 0, %23 ], [ %has_refs.1, %.loopexit ]
    %sunkaddr = ptrtoint %struct.chunk_s* %cp.010 to i32
    %sunkaddr1 = add i32 %sunkaddr, 48
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i32*
    store i32 %has_refs.0.lcssa, i32* %sunkaddr2, align 4, !tbaa !55
    br label %70
  
  ; <label>:70                                      ; preds = %._crit_edge, %19
    %scanned.3 = phi i32 [ %scanned.1.lcssa, %._crit_edge ], [ %scanned.09, %19 ]
    %71 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.010, i32 0, i32 9
    %cp.0 = load %struct.chunk_s*, %struct.chunk_s** %71, align 4, !tbaa !37
    %72 = icmp eq %struct.chunk_s* %cp.0, null
    br i1 %72, label %._crit_edge12, label %19
  
  ._crit_edge12:                                    ; preds = %70, %save_set_new_changes.exit
    %scanned.0.lcssa = phi i32 [ 0, %save_set_new_changes.exit ], [ %scanned.3, %70 ]
    ret i32 %scanned.0.lcssa
  }
  
  declare void @file_save() #3
  
  ; Function Attrs: nounwind
  define i32 @alloc_save_change(%struct.gs_dual_memory_s* nocapture readonly %dmem, %struct.ref_s* %pcont, i16* %where, i8* nocapture readnone %cname) #1 {
    %1 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 3
    %2 = load i32, i32* %1, align 4, !tbaa !1
    %3 = icmp eq i32 %2, 0
    br i1 %3, label %81, label %4
  
  ; <label>:4                                       ; preds = %0
    %5 = icmp eq %struct.ref_s* %pcont, null
    br i1 %5, label %6, label %8
  
  ; <label>:6                                       ; preds = %4
    %7 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 3
    br label %15
  
  ; <label>:8                                       ; preds = %4
    %9 = bitcast %struct.ref_s* %pcont to i16*
    %10 = load i16, i16* %9, align 4, !tbaa !54
    %11 = zext i16 %10 to i32
    %12 = lshr i32 %11, 2
    %13 = and i32 %12, 3
    %14 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 %13
    br label %15
  
  ; <label>:15                                      ; preds = %8, %6
    %.in = phi %struct.gs_ref_memory_s** [ %7, %6 ], [ %14, %8 ]
    %16 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %.in, align 4, !tbaa !37
    %17 = bitcast %struct.gs_ref_memory_s* %16 to %struct.gs_memory_s*
    %18 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %16, i32 0, i32 0, i32 2
    %19 = load i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)** %18, align 4, !tbaa !35
    %20 = tail call i8* %19(%struct.gs_memory_s* %17, %struct.gs_memory_struct_type_s* nonnull @st_alloc_change, i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i32 0, i32 0)) #5
    %21 = icmp eq i8* %20, null
    br i1 %21, label %81, label %22
  
  ; <label>:22                                      ; preds = %15
    %23 = icmp eq %struct.ref_s* %pcont, null
    %24 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %16, i32 0, i32 19
    %25 = bitcast %struct.alloc_change_s** %24 to i32*
    %26 = load i32, i32* %25, align 4, !tbaa !60
    %27 = bitcast i8* %20 to i32*
    store i32 %26, i32* %27, align 4, !tbaa !61
    %28 = getelementptr inbounds i8, i8* %20, i32 4
    %29 = bitcast i8* %28 to i16**
    store i16* %where, i16** %29, align 4, !tbaa !50
    br i1 %23, label %30, label %33
  
  ; <label>:30                                      ; preds = %22
    %31 = getelementptr inbounds i8, i8* %20, i32 16
    %32 = bitcast i8* %31 to i16*
    store i16 -2, i16* %32, align 4, !tbaa !62
    br label %64
  
  ; <label>:33                                      ; preds = %22
    %34 = bitcast %struct.ref_s* %pcont to i16*
    %35 = load i16, i16* %34, align 4, !tbaa !54
    %36 = zext i16 %35 to i32
    %37 = and i32 %36, 15360
    %38 = icmp eq i32 %37, 1024
    br i1 %38, label %41, label %39
  
  ; <label>:39                                      ; preds = %33
    %.mask = and i16 %35, -256
    %40 = icmp eq i16 %.mask, 512
    br i1 %40, label %41, label %44
  
  ; <label>:41                                      ; preds = %39, %33
    %42 = getelementptr inbounds i8, i8* %20, i32 16
    %43 = bitcast i8* %42 to i16*
    store i16 -1, i16* %43, align 4, !tbaa !62
    br label %64
  
  ; <label>:44                                      ; preds = %39
    %45 = and i32 %36, 15872
    %46 = icmp eq i32 %45, 2048
    br i1 %46, label %47, label %55
  
  ; <label>:47                                      ; preds = %44
    %48 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %pcont, i32 0, i32 1, i32 0
    %49 = load i32, i32* %48, align 4, !tbaa !37
    %50 = ptrtoint i16* %where to i32
    %51 = sub i32 %50, %49
    %52 = trunc i32 %51 to i16
    %53 = getelementptr inbounds i8, i8* %20, i32 16
    %54 = bitcast i8* %53 to i16*
    store i16 %52, i16* %54, align 4, !tbaa !62
    br label %64
  
  ; <label>:55                                      ; preds = %44
    %56 = bitcast %struct.ref_s* %pcont to i8*
    %57 = load %struct._IO_FILE*, %struct._IO_FILE** @gs_stderr, align 4, !tbaa !37
    tail call void @lprintf_file_and_line(%struct._IO_FILE* %57, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0), i32 signext 426) #5
    %58 = load %struct._IO_FILE*, %struct._IO_FILE** @gs_stderr, align 4, !tbaa !37
    %59 = load i8, i8* %56, align 4, !tbaa !41
    %60 = zext i8 %59 to i32
    %61 = ptrtoint %struct.ref_s* %pcont to i32
    %62 = ptrtoint i16* %where to i32
    %63 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %58, i8* nonnull getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i32 0, i32 0), i32 signext %60, i32 signext %61, i32 signext %62)
    tail call void @gs_exit(i32 signext 1) #5
    br label %64
  
  ; <label>:64                                      ; preds = %55, %47, %41, %30
    %65 = load i16, i16* %where, align 2, !tbaa !40
    %66 = icmp ugt i16 %65, 16383
    br i1 %66, label %67, label %68
  
  ; <label>:67                                      ; preds = %64
    %sunkaddr = ptrtoint i8* %20 to i32
    %sunkaddr1 = add i32 %sunkaddr, 8
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i16*
    store i16 %65, i16* %sunkaddr2, align 4, !tbaa !40
    br label %80
  
  ; <label>:68                                      ; preds = %64
    %69 = getelementptr inbounds i8, i8* %20, i32 12
    %70 = getelementptr inbounds i16, i16* %where, i32 2
    %71 = bitcast i16* %70 to i32*
    %72 = bitcast i8* %69 to i32*
    %73 = load i32, i32* %71, align 4
    store i32 %73, i32* %72, align 4
    %74 = bitcast i16* %where to i32*
    %75 = load i32, i32* %74, align 4
    %sunkaddr3 = ptrtoint i8* %20 to i32
    %sunkaddr4 = add i32 %sunkaddr3, 8
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to i32*
    store i32 %75, i32* %sunkaddr5, align 4
    %76 = load i16, i16* %where, align 4, !tbaa !54
    %77 = zext i16 %76 to i32
    %78 = or i32 %77, 2
    %79 = trunc i32 %78 to i16
    store i16 %79, i16* %where, align 4, !tbaa !54
    br label %80
  
  ; <label>:80                                      ; preds = %68, %67
    %sunkaddr6 = ptrtoint %struct.gs_ref_memory_s* %16 to i32
    %sunkaddr7 = add i32 %sunkaddr6, 272
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to i8**
    store i8* %20, i8** %sunkaddr8, align 4, !tbaa !60
    br label %81
  
  ; <label>:81                                      ; preds = %80, %15, %0
    %.0 = phi i32 [ 0, %80 ], [ 0, %0 ], [ -1, %15 ]
    ret i32 %.0
  }
  
  declare void @lprintf_file_and_line(%struct._IO_FILE*, i8*, i32 signext) #3
  
  ; Function Attrs: nounwind
  declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #1
  
  declare void @gs_exit(i32 signext) #3
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.memcpy.p0i8.p0i8.i32(i8* nocapture, i8* nocapture readonly, i32, i32, i1) #2
  
  ; Function Attrs: norecurse nounwind readonly
  define i32 @alloc_save_level(%struct.gs_dual_memory_s* nocapture readonly %dmem) #4 {
    %1 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 3
    %2 = load i32, i32* %1, align 4, !tbaa !1
    ret i32 %2
  }
  
  ; Function Attrs: norecurse nounwind readonly
  define %struct.alloc_save_s* @alloc_save_current(%struct.gs_dual_memory_s* nocapture readonly %dmem) #4 {
    %1 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 3
    %2 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %1, align 4, !tbaa !9
    %3 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %2, i32 0, i32 20
    %save.01 = load %struct.alloc_save_s*, %struct.alloc_save_s** %3, align 4, !tbaa !37
    %4 = icmp eq %struct.alloc_save_s* %save.01, null
    br i1 %4, label %.critedge, label %.lr.ph
  
  .lr.ph:                                           ; preds = %0, %8
    %save.02 = phi %struct.alloc_save_s* [ %save.0, %8 ], [ %save.01, %0 ]
    %5 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save.02, i32 0, i32 4
    %6 = load i32, i32* %5, align 4, !tbaa !26
    %7 = icmp eq i32 %6, 0
    br i1 %7, label %8, label %.critedge
  
  ; <label>:8                                       ; preds = %.lr.ph
    %9 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save.02, i32 0, i32 0, i32 20
    %save.0 = load %struct.alloc_save_s*, %struct.alloc_save_s** %9, align 4, !tbaa !37
    %10 = icmp eq %struct.alloc_save_s* %save.0, null
    br i1 %10, label %.critedge, label %.lr.ph
  
  .critedge:                                        ; preds = %.lr.ph, %8, %0
    %save.0.lcssa = phi %struct.alloc_save_s* [ null, %0 ], [ null, %8 ], [ %save.02, %.lr.ph ]
    ret %struct.alloc_save_s* %save.0.lcssa
  }
  
  ; Function Attrs: norecurse nounwind readonly
  define i32 @alloc_is_since_save(i8* readnone %vptr, %struct.alloc_save_s* readonly %save) #4 {
    %1 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 1
    %2 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %1, align 4, !tbaa !46
    %3 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 1, i32 0, i32 3
    %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %3, align 4, !tbaa !9
    %5 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %4, i32 0, i32 20
    %6 = load %struct.alloc_save_s*, %struct.alloc_save_s** %5, align 4, !tbaa !49
    %7 = icmp eq %struct.alloc_save_s* %6, null
    br i1 %7, label %.critedge, label %.preheader
  
  .preheader:                                       ; preds = %0, %._crit_edge
    %mem.0 = phi %struct.gs_ref_memory_s* [ %23, %._crit_edge ], [ %4, %0 ]
    %8 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem.0, i32 0, i32 8
    %cp.010 = load %struct.chunk_s*, %struct.chunk_s** %8, align 4, !tbaa !37
    %9 = icmp eq %struct.chunk_s* %cp.010, null
    br i1 %9, label %._crit_edge, label %.lr.ph12
  
  .lr.ph12:                                         ; preds = %.preheader, %17
    %cp.011 = phi %struct.chunk_s* [ %cp.0, %17 ], [ %cp.010, %.preheader ]
    %10 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011, i32 0, i32 1
    %11 = load i8*, i8** %10, align 4, !tbaa !56
    %12 = icmp ugt i8* %11, %vptr
    br i1 %12, label %17, label %13
  
  ; <label>:13                                      ; preds = %.lr.ph12
    %14 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011, i32 0, i32 7
    %15 = load i8*, i8** %14, align 4, !tbaa !63
    %16 = icmp ugt i8* %15, %vptr
    br i1 %16, label %.critedge, label %17
  
  ; <label>:17                                      ; preds = %13, %.lr.ph12
    %18 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011, i32 0, i32 9
    %cp.0 = load %struct.chunk_s*, %struct.chunk_s** %18, align 4, !tbaa !37
    %19 = icmp eq %struct.chunk_s* %cp.0, null
    br i1 %19, label %._crit_edge, label %.lr.ph12
  
  ._crit_edge:                                      ; preds = %17, %.preheader
    %20 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem.0, i32 0, i32 20
    %21 = load %struct.alloc_save_s*, %struct.alloc_save_s** %20, align 4, !tbaa !49
    %22 = icmp eq %struct.alloc_save_s* %21, %save
    %23 = bitcast %struct.alloc_save_s* %21 to %struct.gs_ref_memory_s*
    br i1 %22, label %24, label %.preheader
  
  ; <label>:24                                      ; preds = %._crit_edge
    %25 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 3
    %26 = load i32, i32* %25, align 4, !tbaa !1
    %27 = icmp eq i32 %26, 1
    br i1 %27, label %28, label %.critedge
  
  ; <label>:28                                      ; preds = %24
    %29 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 1, i32 0, i32 2
    %30 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %29, align 4, !tbaa !11
    %31 = icmp eq %struct.gs_ref_memory_s* %30, %4
    br i1 %31, label %.critedge, label %32
  
  ; <label>:32                                      ; preds = %28
    %33 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %30, i32 0, i32 8
    %cp1.06 = load %struct.chunk_s*, %struct.chunk_s** %33, align 4, !tbaa !37
    %34 = icmp eq %struct.chunk_s* %cp1.06, null
    br i1 %34, label %.critedge, label %.lr.ph
  
  .lr.ph:                                           ; preds = %32, %42
    %cp1.07 = phi %struct.chunk_s* [ %cp1.0, %42 ], [ %cp1.06, %32 ]
    %35 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07, i32 0, i32 1
    %36 = load i8*, i8** %35, align 4, !tbaa !56
    %37 = icmp ugt i8* %36, %vptr
    br i1 %37, label %42, label %38
  
  ; <label>:38                                      ; preds = %.lr.ph
    %39 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07, i32 0, i32 7
    %40 = load i8*, i8** %39, align 4, !tbaa !63
    %41 = icmp ugt i8* %40, %vptr
    br i1 %41, label %.critedge, label %42
  
  ; <label>:42                                      ; preds = %38, %.lr.ph
    %43 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07, i32 0, i32 9
    %cp1.0 = load %struct.chunk_s*, %struct.chunk_s** %43, align 4, !tbaa !37
    %44 = icmp eq %struct.chunk_s* %cp1.0, null
    br i1 %44, label %.critedge, label %.lr.ph
  
  .critedge:                                        ; preds = %13, %38, %42, %32, %28, %24, %0
    %.3 = phi i32 [ 1, %0 ], [ 0, %28 ], [ 0, %24 ], [ 0, %32 ], [ 0, %42 ], [ 1, %38 ], [ 1, %13 ]
    ret i32 %.3
  }
  
  ; Function Attrs: norecurse nounwind readonly
  define i32 @alloc_name_is_since_save(%struct.ref_s* nocapture readonly %pnref, %struct.alloc_save_s* readonly %save) #4 {
    %1 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 2
    %2 = load i32, i32* %1, align 4, !tbaa !29
    %3 = icmp eq i32 %2, 0
    br i1 %3, label %alloc_is_since_save.exit, label %4
  
  ; <label>:4                                       ; preds = %0
    %5 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %pnref, i32 0, i32 1
    %6 = bitcast %union.v* %5 to %struct.name_s**
    %7 = load %struct.name_s*, %struct.name_s** %6, align 4, !tbaa !37
    %8 = getelementptr inbounds %struct.name_s, %struct.name_s* %7, i32 0, i32 1
    %9 = load i16, i16* %8, align 2
    %10 = icmp slt i16 %9, 0
    br i1 %10, label %alloc_is_since_save.exit, label %11
  
  ; <label>:11                                      ; preds = %4
    %12 = getelementptr inbounds %struct.name_s, %struct.name_s* %7, i32 0, i32 2
    %13 = load i8*, i8** %12, align 4, !tbaa !64
    %14 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 1
    %15 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %14, align 4, !tbaa !46
    %16 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %15, i32 0, i32 1, i32 0, i32 3
    %17 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %16, align 4, !tbaa !9
    %18 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %17, i32 0, i32 20
    %19 = load %struct.alloc_save_s*, %struct.alloc_save_s** %18, align 4, !tbaa !49
    %20 = icmp eq %struct.alloc_save_s* %19, null
    br i1 %20, label %alloc_is_since_save.exit, label %.preheader.i
  
  .preheader.i:                                     ; preds = %11, %._crit_edge.i
    %mem.0.i = phi %struct.gs_ref_memory_s* [ %36, %._crit_edge.i ], [ %17, %11 ]
    %21 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem.0.i, i32 0, i32 8
    %cp.010.i = load %struct.chunk_s*, %struct.chunk_s** %21, align 4, !tbaa !37
    %22 = icmp eq %struct.chunk_s* %cp.010.i, null
    br i1 %22, label %._crit_edge.i, label %.lr.ph12.i
  
  .lr.ph12.i:                                       ; preds = %.preheader.i, %30
    %cp.011.i = phi %struct.chunk_s* [ %cp.0.i, %30 ], [ %cp.010.i, %.preheader.i ]
    %23 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011.i, i32 0, i32 1
    %24 = load i8*, i8** %23, align 4, !tbaa !56
    %25 = icmp ugt i8* %24, %13
    br i1 %25, label %30, label %26
  
  ; <label>:26                                      ; preds = %.lr.ph12.i
    %27 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011.i, i32 0, i32 7
    %28 = load i8*, i8** %27, align 4, !tbaa !63
    %29 = icmp ugt i8* %28, %13
    br i1 %29, label %alloc_is_since_save.exit, label %30
  
  ; <label>:30                                      ; preds = %26, %.lr.ph12.i
    %31 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011.i, i32 0, i32 9
    %cp.0.i = load %struct.chunk_s*, %struct.chunk_s** %31, align 4, !tbaa !37
    %32 = icmp eq %struct.chunk_s* %cp.0.i, null
    br i1 %32, label %._crit_edge.i, label %.lr.ph12.i
  
  ._crit_edge.i:                                    ; preds = %30, %.preheader.i
    %33 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem.0.i, i32 0, i32 20
    %34 = load %struct.alloc_save_s*, %struct.alloc_save_s** %33, align 4, !tbaa !49
    %35 = icmp eq %struct.alloc_save_s* %34, %save
    %36 = bitcast %struct.alloc_save_s* %34 to %struct.gs_ref_memory_s*
    br i1 %35, label %37, label %.preheader.i
  
  ; <label>:37                                      ; preds = %._crit_edge.i
    %38 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %15, i32 0, i32 3
    %39 = load i32, i32* %38, align 4, !tbaa !1
    %40 = icmp eq i32 %39, 1
    br i1 %40, label %41, label %alloc_is_since_save.exit
  
  ; <label>:41                                      ; preds = %37
    %42 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %15, i32 0, i32 1, i32 0, i32 2
    %43 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %42, align 4, !tbaa !11
    %44 = icmp eq %struct.gs_ref_memory_s* %43, %17
    br i1 %44, label %alloc_is_since_save.exit, label %45
  
  ; <label>:45                                      ; preds = %41
    %46 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %43, i32 0, i32 8
    %cp1.06.i = load %struct.chunk_s*, %struct.chunk_s** %46, align 4, !tbaa !37
    %47 = icmp eq %struct.chunk_s* %cp1.06.i, null
    br i1 %47, label %alloc_is_since_save.exit, label %.lr.ph.i
  
  .lr.ph.i:                                         ; preds = %45, %55
    %cp1.07.i = phi %struct.chunk_s* [ %cp1.0.i, %55 ], [ %cp1.06.i, %45 ]
    %48 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07.i, i32 0, i32 1
    %49 = load i8*, i8** %48, align 4, !tbaa !56
    %50 = icmp ugt i8* %49, %13
    br i1 %50, label %55, label %51
  
  ; <label>:51                                      ; preds = %.lr.ph.i
    %52 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07.i, i32 0, i32 7
    %53 = load i8*, i8** %52, align 4, !tbaa !63
    %54 = icmp ugt i8* %53, %13
    br i1 %54, label %alloc_is_since_save.exit, label %55
  
  ; <label>:55                                      ; preds = %51, %.lr.ph.i
    %56 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07.i, i32 0, i32 9
    %cp1.0.i = load %struct.chunk_s*, %struct.chunk_s** %56, align 4, !tbaa !37
    %57 = icmp eq %struct.chunk_s* %cp1.0.i, null
    br i1 %57, label %alloc_is_since_save.exit, label %.lr.ph.i
  
  alloc_is_since_save.exit:                         ; preds = %26, %51, %55, %45, %41, %37, %11, %4, %0
    %.0 = phi i32 [ 0, %0 ], [ 0, %4 ], [ 1, %11 ], [ 0, %41 ], [ 0, %37 ], [ 0, %45 ], [ 1, %51 ], [ 0, %55 ], [ 1, %26 ]
    ret i32 %.0
  }
  
  ; Function Attrs: nounwind
  define i32 @alloc_name_index_is_since_save(i32 signext %nidx, %struct.alloc_save_s* readonly %save) #1 {
    %1 = tail call %struct.name_s* @name_index_ptr(i32 signext %nidx) #5
    %2 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 2
    %3 = load i32, i32* %2, align 4, !tbaa !29
    %4 = icmp eq i32 %3, 0
    br i1 %4, label %alloc_name_is_since_save.exit, label %5
  
  ; <label>:5                                       ; preds = %0
    %6 = getelementptr inbounds %struct.name_s, %struct.name_s* %1, i32 0, i32 1
    %7 = load i16, i16* %6, align 2
    %8 = icmp slt i16 %7, 0
    br i1 %8, label %alloc_name_is_since_save.exit, label %9
  
  ; <label>:9                                       ; preds = %5
    %10 = getelementptr inbounds %struct.name_s, %struct.name_s* %1, i32 0, i32 2
    %11 = load i8*, i8** %10, align 4, !tbaa !64
    %12 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 1
    %13 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %12, align 4, !tbaa !46
    %14 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %13, i32 0, i32 1, i32 0, i32 3
    %15 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %14, align 4, !tbaa !9
    %16 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %15, i32 0, i32 20
    %17 = load %struct.alloc_save_s*, %struct.alloc_save_s** %16, align 4, !tbaa !49
    %18 = icmp eq %struct.alloc_save_s* %17, null
    br i1 %18, label %alloc_name_is_since_save.exit, label %.preheader.i.i
  
  .preheader.i.i:                                   ; preds = %9, %._crit_edge.i.i
    %mem.0.i.i = phi %struct.gs_ref_memory_s* [ %34, %._crit_edge.i.i ], [ %15, %9 ]
    %19 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem.0.i.i, i32 0, i32 8
    %cp.010.i.i = load %struct.chunk_s*, %struct.chunk_s** %19, align 4, !tbaa !37
    %20 = icmp eq %struct.chunk_s* %cp.010.i.i, null
    br i1 %20, label %._crit_edge.i.i, label %.lr.ph12.i.i
  
  .lr.ph12.i.i:                                     ; preds = %.preheader.i.i, %28
    %cp.011.i.i = phi %struct.chunk_s* [ %cp.0.i.i, %28 ], [ %cp.010.i.i, %.preheader.i.i ]
    %21 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011.i.i, i32 0, i32 1
    %22 = load i8*, i8** %21, align 4, !tbaa !56
    %23 = icmp ugt i8* %22, %11
    br i1 %23, label %28, label %24
  
  ; <label>:24                                      ; preds = %.lr.ph12.i.i
    %25 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011.i.i, i32 0, i32 7
    %26 = load i8*, i8** %25, align 4, !tbaa !63
    %27 = icmp ugt i8* %26, %11
    br i1 %27, label %alloc_name_is_since_save.exit, label %28
  
  ; <label>:28                                      ; preds = %24, %.lr.ph12.i.i
    %29 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011.i.i, i32 0, i32 9
    %cp.0.i.i = load %struct.chunk_s*, %struct.chunk_s** %29, align 4, !tbaa !37
    %30 = icmp eq %struct.chunk_s* %cp.0.i.i, null
    br i1 %30, label %._crit_edge.i.i, label %.lr.ph12.i.i
  
  ._crit_edge.i.i:                                  ; preds = %28, %.preheader.i.i
    %31 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem.0.i.i, i32 0, i32 20
    %32 = load %struct.alloc_save_s*, %struct.alloc_save_s** %31, align 4, !tbaa !49
    %33 = icmp eq %struct.alloc_save_s* %32, %save
    %34 = bitcast %struct.alloc_save_s* %32 to %struct.gs_ref_memory_s*
    br i1 %33, label %35, label %.preheader.i.i
  
  ; <label>:35                                      ; preds = %._crit_edge.i.i
    %36 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %13, i32 0, i32 3
    %37 = load i32, i32* %36, align 4, !tbaa !1
    %38 = icmp eq i32 %37, 1
    br i1 %38, label %39, label %alloc_name_is_since_save.exit
  
  ; <label>:39                                      ; preds = %35
    %40 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %13, i32 0, i32 1, i32 0, i32 2
    %41 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %40, align 4, !tbaa !11
    %42 = icmp eq %struct.gs_ref_memory_s* %41, %15
    br i1 %42, label %alloc_name_is_since_save.exit, label %43
  
  ; <label>:43                                      ; preds = %39
    %44 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %41, i32 0, i32 8
    %cp1.06.i.i = load %struct.chunk_s*, %struct.chunk_s** %44, align 4, !tbaa !37
    %45 = icmp eq %struct.chunk_s* %cp1.06.i.i, null
    br i1 %45, label %alloc_name_is_since_save.exit, label %.lr.ph.i.i
  
  .lr.ph.i.i:                                       ; preds = %43, %53
    %cp1.07.i.i = phi %struct.chunk_s* [ %cp1.0.i.i, %53 ], [ %cp1.06.i.i, %43 ]
    %46 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07.i.i, i32 0, i32 1
    %47 = load i8*, i8** %46, align 4, !tbaa !56
    %48 = icmp ugt i8* %47, %11
    br i1 %48, label %53, label %49
  
  ; <label>:49                                      ; preds = %.lr.ph.i.i
    %50 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07.i.i, i32 0, i32 7
    %51 = load i8*, i8** %50, align 4, !tbaa !63
    %52 = icmp ugt i8* %51, %11
    br i1 %52, label %alloc_name_is_since_save.exit, label %53
  
  ; <label>:53                                      ; preds = %49, %.lr.ph.i.i
    %54 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07.i.i, i32 0, i32 9
    %cp1.0.i.i = load %struct.chunk_s*, %struct.chunk_s** %54, align 4, !tbaa !37
    %55 = icmp eq %struct.chunk_s* %cp1.0.i.i, null
    br i1 %55, label %alloc_name_is_since_save.exit, label %.lr.ph.i.i
  
  alloc_name_is_since_save.exit:                    ; preds = %24, %49, %53, %43, %39, %35, %9, %5, %0
    %.0.i = phi i32 [ 0, %0 ], [ 0, %5 ], [ 1, %9 ], [ 0, %39 ], [ 0, %35 ], [ 0, %43 ], [ 0, %53 ], [ 1, %49 ], [ 1, %24 ]
    ret i32 %.0.i
  }
  
  declare %struct.name_s* @name_index_ptr(i32 signext) #3
  
  ; Function Attrs: norecurse nounwind readonly
  define i32 @alloc_any_names_since_save(%struct.alloc_save_s* nocapture readonly %save) #4 {
    %1 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 2
    %2 = load i32, i32* %1, align 4, !tbaa !29
    ret i32 %2
  }
  
  ; Function Attrs: norecurse nounwind readonly
  define %struct.alloc_save_s* @alloc_find_save(%struct.gs_dual_memory_s* nocapture readonly %dmem, i32 signext %sid) #4 {
    %1 = icmp eq i32 %sid, 0
    br i1 %1, label %.loopexit, label %.preheader
  
  .preheader:                                       ; preds = %0
    %2 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 3
    %3 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %2, align 4, !tbaa !9
    %4 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %3, i32 0, i32 20
    %sprev.01 = load %struct.alloc_save_s*, %struct.alloc_save_s** %4, align 4, !tbaa !37
    %5 = icmp eq %struct.alloc_save_s* %sprev.01, null
    br i1 %5, label %.loopexit, label %.lr.ph
  
  .lr.ph:                                           ; preds = %.preheader, %9
    %sprev.02 = phi %struct.alloc_save_s* [ %sprev.0, %9 ], [ %sprev.01, %.preheader ]
    %6 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %sprev.02, i32 0, i32 4
    %7 = load i32, i32* %6, align 4, !tbaa !26
    %8 = icmp eq i32 %7, %sid
    br i1 %8, label %.loopexit, label %9
  
  ; <label>:9                                       ; preds = %.lr.ph
    %10 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %sprev.02, i32 0, i32 0, i32 20
    %sprev.0 = load %struct.alloc_save_s*, %struct.alloc_save_s** %10, align 4, !tbaa !37
    %11 = icmp eq %struct.alloc_save_s* %sprev.0, null
    br i1 %11, label %.loopexit, label %.lr.ph
  
  .loopexit:                                        ; preds = %.lr.ph, %9, %.preheader, %0
    %.0 = phi %struct.alloc_save_s* [ null, %0 ], [ null, %.preheader ], [ %sprev.02, %.lr.ph ], [ null, %9 ]
    ret %struct.alloc_save_s* %.0
  }
  
  ; Function Attrs: norecurse nounwind readonly
  define i8* @alloc_save_client_data(%struct.alloc_save_s* nocapture readonly %save) #4 {
    %1 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 5
    %2 = load i8*, i8** %1, align 4, !tbaa !28
    ret i8* %2
  }
  
  ; Function Attrs: nounwind
  define i32 @alloc_restore_state_step(%struct.alloc_save_s* readonly %save) #1 {
    %saved.sroa.0.i15 = alloca %struct.gs_ref_memory_s, align 8
    %saved.sroa.0.i = alloca %struct.gs_ref_memory_s, align 8
    %1 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 1
    %2 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %1, align 4, !tbaa !46
    %3 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 1, i32 0, i32 3
    %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %3, align 4, !tbaa !9
    br label %5
  
  ; <label>:5                                       ; preds = %93, %0
    %6 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
    %sunkaddr = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr1 = add i32 %sunkaddr, 276
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to %struct.alloc_save_s**
    %7 = load %struct.alloc_save_s*, %struct.alloc_save_s** %sunkaddr2, align 4, !tbaa !49
    %8 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %7, i32 0, i32 4
    %9 = load i32, i32* %8, align 4, !tbaa !26
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* %4) #5
    %sunkaddr3 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr4 = add i32 %sunkaddr3, 76
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to void (%struct.gs_memory_s*, i32)**
    %10 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %sunkaddr5, align 4, !tbaa !66
    tail call void %10(%struct.gs_memory_s* %6, i32 signext 0) #5
    %sunkaddr6 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr7 = add i32 %sunkaddr6, 132
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to %struct.chunk_s**
    %cp.02.i = load %struct.chunk_s*, %struct.chunk_s** %sunkaddr8, align 4, !tbaa !37
    %11 = icmp eq %struct.chunk_s* %cp.02.i, null
    br i1 %11, label %restore_finalize.exit, label %.lr.ph5.i
  
  .lr.ph5.i:                                        ; preds = %5, %._crit_edge.i
    %cp.03.i = phi %struct.chunk_s* [ %cp.0.i, %._crit_edge.i ], [ %cp.02.i, %5 ]
    %12 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i, i32 0, i32 1
    %13 = bitcast i8** %12 to %struct.obj_header_s**
    %14 = load %struct.obj_header_s*, %struct.obj_header_s** %13, align 4, !tbaa !56
    %15 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i, i32 0, i32 2
    %16 = bitcast i8** %15 to %struct.obj_header_s**
    %17 = load %struct.obj_header_s*, %struct.obj_header_s** %16, align 4, !tbaa !57
    %18 = icmp ult %struct.obj_header_s* %14, %17
    br i1 %18, label %.lr.ph.i, label %._crit_edge.i
  
  .lr.ph.i:                                         ; preds = %.lr.ph5.i, %29
    %pre.01.i = phi %struct.obj_header_s* [ %34, %29 ], [ %14, %.lr.ph5.i ]
    %19 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i, i32 0, i32 0, i32 0, i32 1
    %20 = load i32, i32* %19, align 4, !tbaa !58
    %21 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i, i32 0, i32 0, i32 0, i32 2, i32 0
    %22 = load %struct.gs_memory_struct_type_s*, %struct.gs_memory_struct_type_s** %21, align 4, !tbaa !37
    %23 = getelementptr inbounds %struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* %22, i32 0, i32 6
    %24 = load void (i8*)*, void (i8*)** %23, align 4, !tbaa !67
    %25 = icmp eq void (i8*)* %24, null
    br i1 %25, label %29, label %26
  
  ; <label>:26                                      ; preds = %.lr.ph.i
    %27 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i, i32 1
    %28 = bitcast %struct.obj_header_s* %27 to i8*
    tail call void %24(i8* %28) #5
    br label %29
  
  ; <label>:29                                      ; preds = %26, %.lr.ph.i
    %30 = bitcast %struct.obj_header_s* %pre.01.i to i8*
    %31 = add i32 %20, 23
    %32 = and i32 %31, -8
    %33 = getelementptr inbounds i8, i8* %30, i32 %32
    %34 = bitcast i8* %33 to %struct.obj_header_s*
    %35 = icmp ult %struct.obj_header_s* %34, %17
    br i1 %35, label %.lr.ph.i, label %._crit_edge.i
  
  ._crit_edge.i:                                    ; preds = %29, %.lr.ph5.i
    %36 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i, i32 0, i32 8
    %cp.0.i = load %struct.chunk_s*, %struct.chunk_s** %36, align 4, !tbaa !37
    %37 = icmp eq %struct.chunk_s* %cp.0.i, null
    br i1 %37, label %restore_finalize.exit, label %.lr.ph5.i
  
  restore_finalize.exit:                            ; preds = %._crit_edge.i, %5
    %38 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
    %sunkaddr9 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr10 = add i32 %sunkaddr9, 76
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to void (%struct.gs_memory_s*, i32)**
    %39 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %sunkaddr11, align 4, !tbaa !66
    tail call void %39(%struct.gs_memory_s* %38, i32 signext 1) #5
    tail call void @file_restore(%struct.alloc_save_s* %7, %struct.gs_memory_s* %38) #5
    tail call void @font_restore(%struct.alloc_save_s* %7) #5
    %40 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %7, i32 0, i32 2
    %41 = load i32, i32* %40, align 4, !tbaa !29
    %42 = icmp eq i32 %41, 0
    br i1 %42, label %restore_resources.exit, label %43
  
  ; <label>:43                                      ; preds = %restore_finalize.exit
    tail call void @name_restore(%struct.alloc_save_s* nonnull %7) #5
    br label %restore_resources.exit
  
  restore_resources.exit:                           ; preds = %43, %restore_finalize.exit
    %44 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i to i8*
    %sunkaddr12 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr13 = add i32 %sunkaddr12, 276
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to %struct.alloc_save_s**
    %45 = load %struct.alloc_save_s*, %struct.alloc_save_s** %sunkaddr14, align 4, !tbaa !49
    call void @llvm.lifetime.start(i64 696, i8* %44)
    %sunkaddr15 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr16 = add i32 %sunkaddr15, 272
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to %struct.alloc_change_s**
    %cp.02.i1 = load %struct.alloc_change_s*, %struct.alloc_change_s** %sunkaddr17, align 4, !tbaa !37
    %46 = icmp eq %struct.alloc_change_s* %cp.02.i1, null
    br i1 %46, label %._crit_edge.i5, label %.lr.ph.i3
  
  .lr.ph.i3:                                        ; preds = %restore_resources.exit, %60
    %cp.03.i2 = phi %struct.alloc_change_s* [ %cp.0.i4, %60 ], [ %cp.02.i1, %restore_resources.exit ]
    %47 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %cp.03.i2, i32 0, i32 2
    %48 = bitcast %struct.ref_s* %47 to i16*
    %49 = load i16, i16* %48, align 4, !tbaa !40
    %50 = icmp ugt i16 %49, 16383
    br i1 %50, label %51, label %53
  
  ; <label>:51                                      ; preds = %.lr.ph.i3
    %sunkaddr18 = ptrtoint %struct.alloc_change_s* %cp.03.i2 to i32
    %sunkaddr19 = add i32 %sunkaddr18, 4
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to i16**
    %52 = load i16*, i16** %sunkaddr20, align 4, !tbaa !50
    store i16 %49, i16* %52, align 2, !tbaa !40
    br label %60
  
  ; <label>:53                                      ; preds = %.lr.ph.i3
    %sunkaddr21 = ptrtoint %struct.alloc_change_s* %cp.03.i2 to i32
    %sunkaddr22 = add i32 %sunkaddr21, 4
    %sunkaddr23 = inttoptr i32 %sunkaddr22 to %struct.ref_s**
    %54 = load %struct.ref_s*, %struct.ref_s** %sunkaddr23, align 4, !tbaa !50
    %55 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %cp.03.i2, i32 0, i32 2, i32 1, i32 0
    %56 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %54, i32 0, i32 1, i32 0
    %57 = load i32, i32* %55, align 4
    store i32 %57, i32* %56, align 4
    %sunkaddr24 = ptrtoint %struct.alloc_change_s* %cp.03.i2 to i32
    %sunkaddr25 = add i32 %sunkaddr24, 4
    %sunkaddr26 = inttoptr i32 %sunkaddr25 to i32**
    %58 = load i32*, i32** %sunkaddr26, align 4, !tbaa !50
    %sunkaddr27 = ptrtoint %struct.alloc_change_s* %cp.03.i2 to i32
    %sunkaddr28 = add i32 %sunkaddr27, 8
    %sunkaddr29 = inttoptr i32 %sunkaddr28 to i32*
    %59 = load i32, i32* %sunkaddr29, align 4
    store i32 %59, i32* %58, align 4
    br label %60
  
  ; <label>:60                                      ; preds = %53, %51
    %61 = bitcast %struct.alloc_change_s* %cp.03.i2 to %struct.alloc_change_s**
    %cp.0.i4 = load %struct.alloc_change_s*, %struct.alloc_change_s** %61, align 4, !tbaa !37
    %62 = icmp eq %struct.alloc_change_s* %cp.0.i4, null
    br i1 %62, label %._crit_edge.i5, label %.lr.ph.i3
  
  ._crit_edge.i5:                                   ; preds = %60, %restore_resources.exit
    %63 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i to i8*
    %64 = bitcast %struct.alloc_save_s* %45 to i8*
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* %63, i8* %64, i32 696, i32 4, i1 false) #5
    %65 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %45, i32 0, i32 1
    %66 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %65, align 4
    %67 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %45, i32 0, i32 3
    %68 = load i32, i32* %67, align 4
    %sunkaddr30 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr31 = add i32 %sunkaddr30, 132
    %sunkaddr32 = inttoptr i32 %sunkaddr31 to %struct.chunk_s**
    %69 = load %struct.chunk_s*, %struct.chunk_s** %sunkaddr32, align 4, !tbaa !69
    %70 = icmp eq %struct.chunk_s* %69, null
    br i1 %70, label %restore_free.exit, label %.lr.ph.i22
  
  .lr.ph.i22:                                       ; preds = %._crit_edge.i5, %.backedge.i
    %cp.01.i = phi %struct.chunk_s* [ %73, %.backedge.i ], [ %69, %._crit_edge.i5 ]
    %71 = bitcast %struct.gs_ref_memory_s* %4 to i8*
    %72 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i, i32 0, i32 8
    %73 = load %struct.chunk_s*, %struct.chunk_s** %72, align 4, !tbaa !70
    %74 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i, i32 0, i32 1
    %75 = load i8*, i8** %74, align 4, !tbaa !56
    %76 = getelementptr inbounds i8, i8* %75, i32 16
    %77 = icmp eq i8* %76, %71
    br i1 %77, label %.backedge.i, label %79
  
  .backedge.i:                                      ; preds = %79, %.lr.ph.i22
    %78 = icmp eq %struct.chunk_s* %73, null
    br i1 %78, label %restore_free.exit, label %.lr.ph.i22
  
  ; <label>:79                                      ; preds = %.lr.ph.i22
    tail call void @alloc_free_chunk(%struct.chunk_s* nonnull %cp.01.i, %struct.gs_ref_memory_s* %4) #5
    br label %.backedge.i
  
  restore_free.exit:                                ; preds = %.backedge.i, %._crit_edge.i5
    %80 = bitcast %struct.gs_ref_memory_s* %4 to i8*
    %81 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i to i8*
    %sunkaddr33 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr34 = add i32 %sunkaddr33, 268
    %sunkaddr35 = inttoptr i32 %sunkaddr34 to i32*
    %82 = load i32, i32* %sunkaddr35, align 4, !tbaa !12
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* %80, i8* %81, i32 696, i32 4, i1 false) #5
    store i32 %82, i32* %sunkaddr35, align 4, !tbaa !12
    tail call void @alloc_open_chunk(%struct.gs_ref_memory_s* %4) #5
    %83 = icmp eq i32 %68, 0
    br i1 %83, label %restore_space.exit, label %84
  
  ; <label>:84                                      ; preds = %restore_free.exit
    %85 = bitcast %struct.gs_dual_memory_s* %66 to %struct.gs_ref_memory_s**
    store %struct.gs_ref_memory_s* %4, %struct.gs_ref_memory_s** %85, align 4, !tbaa !47
    %sunkaddr36 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr37 = add i32 %sunkaddr36, 96
    %sunkaddr38 = inttoptr i32 %sunkaddr37 to i32*
    %86 = load i32, i32* %sunkaddr38, align 4, !tbaa !71
    %87 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %66, i32 0, i32 2
    store i32 %86, i32* %87, align 4, !tbaa !72
    br label %restore_space.exit
  
  restore_space.exit:                               ; preds = %84, %restore_free.exit
    %88 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i to i8*
    call void @llvm.lifetime.end(i64 696, i8* nonnull %88)
    %89 = icmp eq i32 %9, 0
    br i1 %89, label %93, label %.critedge
  
  .critedge:                                        ; preds = %restore_space.exit
    %90 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 3
    %91 = load i32, i32* %90, align 4, !tbaa !1
    %92 = add nsw i32 %91, -1
    store i32 %92, i32* %90, align 4, !tbaa !1
    br label %.loopexit
  
  ; <label>:93                                      ; preds = %restore_space.exit
    %94 = icmp eq %struct.alloc_save_s* %7, %save
    br i1 %94, label %.loopexit.loopexit, label %5
  
  .loopexit.loopexit:                               ; preds = %93
    %.phi.trans.insert = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 3
    %.pre = load i32, i32* %.phi.trans.insert, align 4, !tbaa !1
    br label %.loopexit
  
  .loopexit:                                        ; preds = %.loopexit.loopexit, %.critedge
    %95 = phi i32 [ %.pre, %.loopexit.loopexit ], [ %92, %.critedge ]
    %96 = phi %struct.alloc_save_s* [ %save, %.loopexit.loopexit ], [ %7, %.critedge ]
    %97 = icmp eq i32 %95, 0
    br i1 %97, label %98, label %197
  
  ; <label>:98                                      ; preds = %.loopexit
    %99 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 1, i32 0, i32 2
    %100 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %99, align 4, !tbaa !11
    %sunkaddr39 = ptrtoint %struct.gs_dual_memory_s* %2 to i32
    %sunkaddr40 = add i32 %sunkaddr39, 16
    %sunkaddr41 = inttoptr i32 %sunkaddr40 to %struct.gs_ref_memory_s**
    %101 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr41, align 4, !tbaa !9
    %102 = icmp eq %struct.gs_ref_memory_s* %100, %101
    br i1 %102, label %194, label %103
  
  ; <label>:103                                     ; preds = %98
    %104 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %100, i32 0, i32 20
    %105 = load %struct.alloc_save_s*, %struct.alloc_save_s** %104, align 4, !tbaa !49
    %106 = icmp eq %struct.alloc_save_s* %105, null
    br i1 %106, label %194, label %107
  
  ; <label>:107                                     ; preds = %103
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* nonnull %100) #5
    %108 = bitcast %struct.gs_ref_memory_s* %100 to %struct.gs_memory_s*
    %109 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %100, i32 0, i32 0, i32 19
    %110 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %109, align 4, !tbaa !66
    tail call void %110(%struct.gs_memory_s* %108, i32 signext 0) #5
    %111 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %100, i32 0, i32 9
    %cp.02.i6 = load %struct.chunk_s*, %struct.chunk_s** %111, align 4, !tbaa !37
    %112 = icmp eq %struct.chunk_s* %cp.02.i6, null
    br i1 %112, label %restore_finalize.exit13, label %.lr.ph5.i8
  
  .lr.ph5.i8:                                       ; preds = %107, %._crit_edge.i12
    %cp.03.i7 = phi %struct.chunk_s* [ %cp.0.i11, %._crit_edge.i12 ], [ %cp.02.i6, %107 ]
    %113 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i7, i32 0, i32 1
    %114 = bitcast i8** %113 to %struct.obj_header_s**
    %115 = load %struct.obj_header_s*, %struct.obj_header_s** %114, align 4, !tbaa !56
    %116 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i7, i32 0, i32 2
    %117 = bitcast i8** %116 to %struct.obj_header_s**
    %118 = load %struct.obj_header_s*, %struct.obj_header_s** %117, align 4, !tbaa !57
    %119 = icmp ult %struct.obj_header_s* %115, %118
    br i1 %119, label %.lr.ph.i10, label %._crit_edge.i12
  
  .lr.ph.i10:                                       ; preds = %.lr.ph5.i8, %130
    %pre.01.i9 = phi %struct.obj_header_s* [ %135, %130 ], [ %115, %.lr.ph5.i8 ]
    %120 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i9, i32 0, i32 0, i32 0, i32 1
    %121 = load i32, i32* %120, align 4, !tbaa !58
    %122 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i9, i32 0, i32 0, i32 0, i32 2, i32 0
    %123 = load %struct.gs_memory_struct_type_s*, %struct.gs_memory_struct_type_s** %122, align 4, !tbaa !37
    %124 = getelementptr inbounds %struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* %123, i32 0, i32 6
    %125 = load void (i8*)*, void (i8*)** %124, align 4, !tbaa !67
    %126 = icmp eq void (i8*)* %125, null
    br i1 %126, label %130, label %127
  
  ; <label>:127                                     ; preds = %.lr.ph.i10
    %128 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i9, i32 1
    %129 = bitcast %struct.obj_header_s* %128 to i8*
    tail call void %125(i8* %129) #5
    br label %130
  
  ; <label>:130                                     ; preds = %127, %.lr.ph.i10
    %131 = bitcast %struct.obj_header_s* %pre.01.i9 to i8*
    %132 = add i32 %121, 23
    %133 = and i32 %132, -8
    %134 = getelementptr inbounds i8, i8* %131, i32 %133
    %135 = bitcast i8* %134 to %struct.obj_header_s*
    %136 = icmp ult %struct.obj_header_s* %135, %118
    br i1 %136, label %.lr.ph.i10, label %._crit_edge.i12
  
  ._crit_edge.i12:                                  ; preds = %130, %.lr.ph5.i8
    %137 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i7, i32 0, i32 8
    %cp.0.i11 = load %struct.chunk_s*, %struct.chunk_s** %137, align 4, !tbaa !37
    %138 = icmp eq %struct.chunk_s* %cp.0.i11, null
    br i1 %138, label %restore_finalize.exit13, label %.lr.ph5.i8
  
  restore_finalize.exit13:                          ; preds = %._crit_edge.i12, %107
    %139 = bitcast %struct.gs_ref_memory_s* %100 to %struct.gs_memory_s*
    %sunkaddr42 = ptrtoint %struct.gs_ref_memory_s* %100 to i32
    %sunkaddr43 = add i32 %sunkaddr42, 76
    %sunkaddr44 = inttoptr i32 %sunkaddr43 to void (%struct.gs_memory_s*, i32)**
    %140 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %sunkaddr44, align 4, !tbaa !66
    tail call void %140(%struct.gs_memory_s* %139, i32 signext 1) #5
    %sunkaddr45 = ptrtoint %struct.gs_ref_memory_s* %100 to i32
    %sunkaddr46 = add i32 %sunkaddr45, 276
    %sunkaddr47 = inttoptr i32 %sunkaddr46 to %struct.alloc_save_s**
    %141 = load %struct.alloc_save_s*, %struct.alloc_save_s** %sunkaddr47, align 4, !tbaa !49
    tail call void @file_restore(%struct.alloc_save_s* %141, %struct.gs_memory_s* %139) #5
    tail call void @font_restore(%struct.alloc_save_s* %141) #5
    %142 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %141, i32 0, i32 2
    %143 = load i32, i32* %142, align 4, !tbaa !29
    %144 = icmp eq i32 %143, 0
    br i1 %144, label %restore_resources.exit14, label %145
  
  ; <label>:145                                     ; preds = %restore_finalize.exit13
    tail call void @name_restore(%struct.alloc_save_s* nonnull %141) #5
    br label %restore_resources.exit14
  
  restore_resources.exit14:                         ; preds = %145, %restore_finalize.exit13
    %sunkaddr48 = ptrtoint %struct.gs_ref_memory_s* %100 to i32
    %sunkaddr49 = add i32 %sunkaddr48, 276
    %sunkaddr50 = inttoptr i32 %sunkaddr49 to %struct.alloc_save_s**
    %146 = load %struct.alloc_save_s*, %struct.alloc_save_s** %sunkaddr50, align 4, !tbaa !49
    %147 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i15 to i8*
    call void @llvm.lifetime.start(i64 696, i8* %147)
    %148 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %100, i32 0, i32 19
    %cp.02.i16 = load %struct.alloc_change_s*, %struct.alloc_change_s** %148, align 4, !tbaa !37
    %149 = icmp eq %struct.alloc_change_s* %cp.02.i16, null
    br i1 %149, label %._crit_edge.i20, label %.lr.ph.i18
  
  .lr.ph.i18:                                       ; preds = %restore_resources.exit14, %163
    %cp.03.i17 = phi %struct.alloc_change_s* [ %cp.0.i19, %163 ], [ %cp.02.i16, %restore_resources.exit14 ]
    %150 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %cp.03.i17, i32 0, i32 2
    %151 = bitcast %struct.ref_s* %150 to i16*
    %152 = load i16, i16* %151, align 4, !tbaa !40
    %153 = icmp ugt i16 %152, 16383
    br i1 %153, label %154, label %156
  
  ; <label>:154                                     ; preds = %.lr.ph.i18
    %sunkaddr51 = ptrtoint %struct.alloc_change_s* %cp.03.i17 to i32
    %sunkaddr52 = add i32 %sunkaddr51, 4
    %sunkaddr53 = inttoptr i32 %sunkaddr52 to i16**
    %155 = load i16*, i16** %sunkaddr53, align 4, !tbaa !50
    store i16 %152, i16* %155, align 2, !tbaa !40
    br label %163
  
  ; <label>:156                                     ; preds = %.lr.ph.i18
    %sunkaddr54 = ptrtoint %struct.alloc_change_s* %cp.03.i17 to i32
    %sunkaddr55 = add i32 %sunkaddr54, 4
    %sunkaddr56 = inttoptr i32 %sunkaddr55 to %struct.ref_s**
    %157 = load %struct.ref_s*, %struct.ref_s** %sunkaddr56, align 4, !tbaa !50
    %158 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %cp.03.i17, i32 0, i32 2, i32 1, i32 0
    %159 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %157, i32 0, i32 1, i32 0
    %160 = load i32, i32* %158, align 4
    store i32 %160, i32* %159, align 4
    %sunkaddr57 = ptrtoint %struct.alloc_change_s* %cp.03.i17 to i32
    %sunkaddr58 = add i32 %sunkaddr57, 4
    %sunkaddr59 = inttoptr i32 %sunkaddr58 to i32**
    %161 = load i32*, i32** %sunkaddr59, align 4, !tbaa !50
    %sunkaddr60 = ptrtoint %struct.alloc_change_s* %cp.03.i17 to i32
    %sunkaddr61 = add i32 %sunkaddr60, 8
    %sunkaddr62 = inttoptr i32 %sunkaddr61 to i32*
    %162 = load i32, i32* %sunkaddr62, align 4
    store i32 %162, i32* %161, align 4
    br label %163
  
  ; <label>:163                                     ; preds = %156, %154
    %164 = bitcast %struct.alloc_change_s* %cp.03.i17 to %struct.alloc_change_s**
    %cp.0.i19 = load %struct.alloc_change_s*, %struct.alloc_change_s** %164, align 4, !tbaa !37
    %165 = icmp eq %struct.alloc_change_s* %cp.0.i19, null
    br i1 %165, label %._crit_edge.i20, label %.lr.ph.i18
  
  ._crit_edge.i20:                                  ; preds = %163, %restore_resources.exit14
    %166 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i15 to i8*
    %167 = bitcast %struct.alloc_save_s* %146 to i8*
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* %166, i8* %167, i32 696, i32 4, i1 false) #5
    %168 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %146, i32 0, i32 1
    %169 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %168, align 4
    %170 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %146, i32 0, i32 3
    %171 = load i32, i32* %170, align 4
    %sunkaddr63 = ptrtoint %struct.gs_ref_memory_s* %100 to i32
    %sunkaddr64 = add i32 %sunkaddr63, 132
    %sunkaddr65 = inttoptr i32 %sunkaddr64 to %struct.chunk_s**
    %172 = load %struct.chunk_s*, %struct.chunk_s** %sunkaddr65, align 4, !tbaa !69
    %173 = icmp eq %struct.chunk_s* %172, null
    br i1 %173, label %restore_free.exit28, label %.lr.ph.i24
  
  .lr.ph.i24:                                       ; preds = %._crit_edge.i20, %.backedge.i26
    %cp.01.i25 = phi %struct.chunk_s* [ %176, %.backedge.i26 ], [ %172, %._crit_edge.i20 ]
    %174 = bitcast %struct.gs_ref_memory_s* %100 to i8*
    %175 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i25, i32 0, i32 8
    %176 = load %struct.chunk_s*, %struct.chunk_s** %175, align 4, !tbaa !70
    %177 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i25, i32 0, i32 1
    %178 = load i8*, i8** %177, align 4, !tbaa !56
    %179 = getelementptr inbounds i8, i8* %178, i32 16
    %180 = icmp eq i8* %179, %174
    br i1 %180, label %.backedge.i26, label %182
  
  .backedge.i26:                                    ; preds = %182, %.lr.ph.i24
    %181 = icmp eq %struct.chunk_s* %176, null
    br i1 %181, label %restore_free.exit28, label %.lr.ph.i24
  
  ; <label>:182                                     ; preds = %.lr.ph.i24
    tail call void @alloc_free_chunk(%struct.chunk_s* nonnull %cp.01.i25, %struct.gs_ref_memory_s* %100) #5
    br label %.backedge.i26
  
  restore_free.exit28:                              ; preds = %.backedge.i26, %._crit_edge.i20
    %183 = bitcast %struct.gs_ref_memory_s* %100 to i8*
    %184 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i15 to i8*
    %185 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %100, i32 0, i32 18
    %186 = load i32, i32* %185, align 4, !tbaa !12
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* %183, i8* %184, i32 696, i32 4, i1 false) #5
    store i32 %186, i32* %185, align 4, !tbaa !12
    tail call void @alloc_open_chunk(%struct.gs_ref_memory_s* %100) #5
    %187 = icmp eq i32 %171, 0
    br i1 %187, label %restore_space.exit21, label %188
  
  ; <label>:188                                     ; preds = %restore_free.exit28
    %189 = bitcast %struct.gs_dual_memory_s* %169 to %struct.gs_ref_memory_s**
    store %struct.gs_ref_memory_s* %100, %struct.gs_ref_memory_s** %189, align 4, !tbaa !47
    %190 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %100, i32 0, i32 5
    %191 = load i32, i32* %190, align 4, !tbaa !71
    %192 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %169, i32 0, i32 2
    store i32 %191, i32* %192, align 4, !tbaa !72
    br label %restore_space.exit21
  
  restore_space.exit21:                             ; preds = %188, %restore_free.exit28
    %193 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i15 to i8*
    call void @llvm.lifetime.end(i64 696, i8* nonnull %193)
    br label %194
  
  ; <label>:194                                     ; preds = %restore_space.exit21, %103, %98
    %195 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 5
    store i32 -1, i32* %195, align 4, !tbaa !7
    %196 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 6
    store i32 0, i32* %196, align 4, !tbaa !8
    br label %199
  
  ; <label>:197                                     ; preds = %.loopexit
    %198 = tail call fastcc i32 @save_set_new(%struct.gs_ref_memory_s* nonnull %4, i32 signext 1)
    br label %199
  
  ; <label>:199                                     ; preds = %197, %194
    %200 = icmp eq %struct.alloc_save_s* %96, %save
    %201 = zext i1 %200 to i32
    ret i32 %201
  }
  
  ; Function Attrs: nounwind
  define void @alloc_restore_all(%struct.gs_dual_memory_s* %dmem) #1 {
    %empty_save = alloca %struct.alloc_save_s, align 4
    %1 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 3
    %2 = load i32, i32* %1, align 4, !tbaa !1
    %3 = icmp eq i32 %2, 0
    %4 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 3
    %5 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %4, align 4, !tbaa !9
    br i1 %3, label %._crit_edge, label %.lr.ph
  
  .lr.ph:                                           ; preds = %0, %.lr.ph
    %6 = phi %struct.gs_ref_memory_s* [ %12, %.lr.ph ], [ %5, %0 ]
    %7 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %6, i32 0, i32 20
    %8 = load %struct.alloc_save_s*, %struct.alloc_save_s** %7, align 4, !tbaa !49
    %9 = tail call i32 @alloc_restore_state_step(%struct.alloc_save_s* %8)
    %sunkaddr = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr1 = add i32 %sunkaddr, 24
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i32*
    %10 = load i32, i32* %sunkaddr2, align 4, !tbaa !1
    %11 = icmp eq i32 %10, 0
    %sunkaddr3 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr4 = add i32 %sunkaddr3, 16
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to %struct.gs_ref_memory_s**
    %12 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr5, align 4, !tbaa !9
    br i1 %11, label %._crit_edge, label %.lr.ph
  
  ._crit_edge:                                      ; preds = %.lr.ph, %0
    %.lcssa30 = phi %struct.gs_ref_memory_s* [ %5, %0 ], [ %12, %.lr.ph ]
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* %.lcssa30) #5
    %13 = bitcast %struct.gs_ref_memory_s* %.lcssa30 to %struct.gs_memory_s*
    %14 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %.lcssa30, i32 0, i32 0, i32 19
    %15 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %14, align 4, !tbaa !66
    tail call void %15(%struct.gs_memory_s* %13, i32 signext 0) #5
    %16 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %.lcssa30, i32 0, i32 9
    %cp.02.i = load %struct.chunk_s*, %struct.chunk_s** %16, align 4, !tbaa !37
    %17 = icmp eq %struct.chunk_s* %cp.02.i, null
    br i1 %17, label %restore_finalize.exit, label %.lr.ph5.i
  
  .lr.ph5.i:                                        ; preds = %._crit_edge, %._crit_edge.i
    %cp.03.i = phi %struct.chunk_s* [ %cp.0.i, %._crit_edge.i ], [ %cp.02.i, %._crit_edge ]
    %18 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i, i32 0, i32 1
    %19 = bitcast i8** %18 to %struct.obj_header_s**
    %20 = load %struct.obj_header_s*, %struct.obj_header_s** %19, align 4, !tbaa !56
    %21 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i, i32 0, i32 2
    %22 = bitcast i8** %21 to %struct.obj_header_s**
    %23 = load %struct.obj_header_s*, %struct.obj_header_s** %22, align 4, !tbaa !57
    %24 = icmp ult %struct.obj_header_s* %20, %23
    br i1 %24, label %.lr.ph.i, label %._crit_edge.i
  
  .lr.ph.i:                                         ; preds = %.lr.ph5.i, %35
    %pre.01.i = phi %struct.obj_header_s* [ %40, %35 ], [ %20, %.lr.ph5.i ]
    %25 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i, i32 0, i32 0, i32 0, i32 1
    %26 = load i32, i32* %25, align 4, !tbaa !58
    %27 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i, i32 0, i32 0, i32 0, i32 2, i32 0
    %28 = load %struct.gs_memory_struct_type_s*, %struct.gs_memory_struct_type_s** %27, align 4, !tbaa !37
    %29 = getelementptr inbounds %struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* %28, i32 0, i32 6
    %30 = load void (i8*)*, void (i8*)** %29, align 4, !tbaa !67
    %31 = icmp eq void (i8*)* %30, null
    br i1 %31, label %35, label %32
  
  ; <label>:32                                      ; preds = %.lr.ph.i
    %33 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i, i32 1
    %34 = bitcast %struct.obj_header_s* %33 to i8*
    tail call void %30(i8* %34) #5
    br label %35
  
  ; <label>:35                                      ; preds = %32, %.lr.ph.i
    %36 = bitcast %struct.obj_header_s* %pre.01.i to i8*
    %37 = add i32 %26, 23
    %38 = and i32 %37, -8
    %39 = getelementptr inbounds i8, i8* %36, i32 %38
    %40 = bitcast i8* %39 to %struct.obj_header_s*
    %41 = icmp ult %struct.obj_header_s* %40, %23
    br i1 %41, label %.lr.ph.i, label %._crit_edge.i
  
  ._crit_edge.i:                                    ; preds = %35, %.lr.ph5.i
    %42 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i, i32 0, i32 8
    %cp.0.i = load %struct.chunk_s*, %struct.chunk_s** %42, align 4, !tbaa !37
    %43 = icmp eq %struct.chunk_s* %cp.0.i, null
    br i1 %43, label %restore_finalize.exit, label %.lr.ph5.i
  
  restore_finalize.exit:                            ; preds = %._crit_edge.i, %._crit_edge
    %44 = bitcast %struct.gs_ref_memory_s* %.lcssa30 to %struct.gs_memory_s*
    %sunkaddr6 = ptrtoint %struct.gs_ref_memory_s* %.lcssa30 to i32
    %sunkaddr7 = add i32 %sunkaddr6, 76
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to void (%struct.gs_memory_s*, i32)**
    %45 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %sunkaddr8, align 4, !tbaa !66
    tail call void %45(%struct.gs_memory_s* %44, i32 signext 1) #5
    %46 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 2
    %47 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %46, align 4, !tbaa !11
    %sunkaddr9 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr10 = add i32 %sunkaddr9, 16
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to %struct.gs_ref_memory_s**
    %48 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr11, align 4, !tbaa !9
    %49 = icmp eq %struct.gs_ref_memory_s* %47, %48
    br i1 %49, label %88, label %50
  
  ; <label>:50                                      ; preds = %restore_finalize.exit
    %51 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %47, i32 0, i32 18
    %52 = load i32, i32* %51, align 4, !tbaa !12
    %53 = icmp eq i32 %52, 1
    br i1 %53, label %54, label %88
  
  ; <label>:54                                      ; preds = %50
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* nonnull %47) #5
    %55 = bitcast %struct.gs_ref_memory_s* %47 to %struct.gs_memory_s*
    %56 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %47, i32 0, i32 0, i32 19
    %57 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %56, align 4, !tbaa !66
    tail call void %57(%struct.gs_memory_s* %55, i32 signext 0) #5
    %58 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %47, i32 0, i32 9
    %cp.02.i2 = load %struct.chunk_s*, %struct.chunk_s** %58, align 4, !tbaa !37
    %59 = icmp eq %struct.chunk_s* %cp.02.i2, null
    br i1 %59, label %restore_finalize.exit9, label %.lr.ph5.i4
  
  .lr.ph5.i4:                                       ; preds = %54, %._crit_edge.i8
    %cp.03.i3 = phi %struct.chunk_s* [ %cp.0.i7, %._crit_edge.i8 ], [ %cp.02.i2, %54 ]
    %60 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i3, i32 0, i32 1
    %61 = bitcast i8** %60 to %struct.obj_header_s**
    %62 = load %struct.obj_header_s*, %struct.obj_header_s** %61, align 4, !tbaa !56
    %63 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i3, i32 0, i32 2
    %64 = bitcast i8** %63 to %struct.obj_header_s**
    %65 = load %struct.obj_header_s*, %struct.obj_header_s** %64, align 4, !tbaa !57
    %66 = icmp ult %struct.obj_header_s* %62, %65
    br i1 %66, label %.lr.ph.i6, label %._crit_edge.i8
  
  .lr.ph.i6:                                        ; preds = %.lr.ph5.i4, %77
    %pre.01.i5 = phi %struct.obj_header_s* [ %82, %77 ], [ %62, %.lr.ph5.i4 ]
    %67 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i5, i32 0, i32 0, i32 0, i32 1
    %68 = load i32, i32* %67, align 4, !tbaa !58
    %69 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i5, i32 0, i32 0, i32 0, i32 2, i32 0
    %70 = load %struct.gs_memory_struct_type_s*, %struct.gs_memory_struct_type_s** %69, align 4, !tbaa !37
    %71 = getelementptr inbounds %struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* %70, i32 0, i32 6
    %72 = load void (i8*)*, void (i8*)** %71, align 4, !tbaa !67
    %73 = icmp eq void (i8*)* %72, null
    br i1 %73, label %77, label %74
  
  ; <label>:74                                      ; preds = %.lr.ph.i6
    %75 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i5, i32 1
    %76 = bitcast %struct.obj_header_s* %75 to i8*
    tail call void %72(i8* %76) #5
    br label %77
  
  ; <label>:77                                      ; preds = %74, %.lr.ph.i6
    %78 = bitcast %struct.obj_header_s* %pre.01.i5 to i8*
    %79 = add i32 %68, 23
    %80 = and i32 %79, -8
    %81 = getelementptr inbounds i8, i8* %78, i32 %80
    %82 = bitcast i8* %81 to %struct.obj_header_s*
    %83 = icmp ult %struct.obj_header_s* %82, %65
    br i1 %83, label %.lr.ph.i6, label %._crit_edge.i8
  
  ._crit_edge.i8:                                   ; preds = %77, %.lr.ph5.i4
    %84 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i3, i32 0, i32 8
    %cp.0.i7 = load %struct.chunk_s*, %struct.chunk_s** %84, align 4, !tbaa !37
    %85 = icmp eq %struct.chunk_s* %cp.0.i7, null
    br i1 %85, label %restore_finalize.exit9, label %.lr.ph5.i4
  
  restore_finalize.exit9:                           ; preds = %._crit_edge.i8, %54
    %86 = bitcast %struct.gs_ref_memory_s* %47 to %struct.gs_memory_s*
    %sunkaddr12 = ptrtoint %struct.gs_ref_memory_s* %47 to i32
    %sunkaddr13 = add i32 %sunkaddr12, 76
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to void (%struct.gs_memory_s*, i32)**
    %87 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %sunkaddr14, align 4, !tbaa !66
    tail call void %87(%struct.gs_memory_s* %86, i32 signext 1) #5
    br label %88
  
  ; <label>:88                                      ; preds = %restore_finalize.exit9, %50, %restore_finalize.exit
    %89 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 1
    %90 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %89, align 4, !tbaa !73
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* %90) #5
    %91 = bitcast %struct.gs_ref_memory_s* %90 to %struct.gs_memory_s*
    %92 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %90, i32 0, i32 0, i32 19
    %93 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %92, align 4, !tbaa !66
    tail call void %93(%struct.gs_memory_s* %91, i32 signext 0) #5
    %94 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %90, i32 0, i32 9
    %cp.02.i10 = load %struct.chunk_s*, %struct.chunk_s** %94, align 4, !tbaa !37
    %95 = icmp eq %struct.chunk_s* %cp.02.i10, null
    br i1 %95, label %restore_finalize.exit17, label %.lr.ph5.i12
  
  .lr.ph5.i12:                                      ; preds = %88, %._crit_edge.i16
    %cp.03.i11 = phi %struct.chunk_s* [ %cp.0.i15, %._crit_edge.i16 ], [ %cp.02.i10, %88 ]
    %96 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i11, i32 0, i32 1
    %97 = bitcast i8** %96 to %struct.obj_header_s**
    %98 = load %struct.obj_header_s*, %struct.obj_header_s** %97, align 4, !tbaa !56
    %99 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i11, i32 0, i32 2
    %100 = bitcast i8** %99 to %struct.obj_header_s**
    %101 = load %struct.obj_header_s*, %struct.obj_header_s** %100, align 4, !tbaa !57
    %102 = icmp ult %struct.obj_header_s* %98, %101
    br i1 %102, label %.lr.ph.i14, label %._crit_edge.i16
  
  .lr.ph.i14:                                       ; preds = %.lr.ph5.i12, %113
    %pre.01.i13 = phi %struct.obj_header_s* [ %118, %113 ], [ %98, %.lr.ph5.i12 ]
    %103 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i13, i32 0, i32 0, i32 0, i32 1
    %104 = load i32, i32* %103, align 4, !tbaa !58
    %105 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i13, i32 0, i32 0, i32 0, i32 2, i32 0
    %106 = load %struct.gs_memory_struct_type_s*, %struct.gs_memory_struct_type_s** %105, align 4, !tbaa !37
    %107 = getelementptr inbounds %struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* %106, i32 0, i32 6
    %108 = load void (i8*)*, void (i8*)** %107, align 4, !tbaa !67
    %109 = icmp eq void (i8*)* %108, null
    br i1 %109, label %113, label %110
  
  ; <label>:110                                     ; preds = %.lr.ph.i14
    %111 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i13, i32 1
    %112 = bitcast %struct.obj_header_s* %111 to i8*
    tail call void %108(i8* %112) #5
    br label %113
  
  ; <label>:113                                     ; preds = %110, %.lr.ph.i14
    %114 = bitcast %struct.obj_header_s* %pre.01.i13 to i8*
    %115 = add i32 %104, 23
    %116 = and i32 %115, -8
    %117 = getelementptr inbounds i8, i8* %114, i32 %116
    %118 = bitcast i8* %117 to %struct.obj_header_s*
    %119 = icmp ult %struct.obj_header_s* %118, %101
    br i1 %119, label %.lr.ph.i14, label %._crit_edge.i16
  
  ._crit_edge.i16:                                  ; preds = %113, %.lr.ph5.i12
    %120 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i11, i32 0, i32 8
    %cp.0.i15 = load %struct.chunk_s*, %struct.chunk_s** %120, align 4, !tbaa !37
    %121 = icmp eq %struct.chunk_s* %cp.0.i15, null
    br i1 %121, label %restore_finalize.exit17, label %.lr.ph5.i12
  
  restore_finalize.exit17:                          ; preds = %._crit_edge.i16, %88
    %122 = bitcast %struct.gs_ref_memory_s* %90 to %struct.gs_memory_s*
    %sunkaddr15 = ptrtoint %struct.gs_ref_memory_s* %90 to i32
    %sunkaddr16 = add i32 %sunkaddr15, 76
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to void (%struct.gs_memory_s*, i32)**
    %123 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %sunkaddr17, align 4, !tbaa !66
    tail call void %123(%struct.gs_memory_s* %122, i32 signext 1) #5
    %124 = bitcast %struct.alloc_save_s* %empty_save to i8*
    call void @llvm.lifetime.start(i64 716, i8* %124) #5
    %125 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %empty_save, i32 0, i32 1
    store %struct.gs_dual_memory_s* %dmem, %struct.gs_dual_memory_s** %125, align 4, !tbaa !46
    %126 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %empty_save, i32 0, i32 2
    store i32 0, i32* %126, align 4, !tbaa !29
    call void @file_restore(%struct.alloc_save_s* nonnull %empty_save, %struct.gs_memory_s* null) #5
    call void @font_restore(%struct.alloc_save_s* nonnull %empty_save) #5
    %127 = load i32, i32* %126, align 4, !tbaa !29
    %128 = icmp eq i32 %127, 0
    br i1 %128, label %restore_resources.exit, label %129
  
  ; <label>:129                                     ; preds = %restore_finalize.exit17
    call void @name_restore(%struct.alloc_save_s* nonnull %empty_save) #5
    br label %restore_resources.exit
  
  restore_resources.exit:                           ; preds = %129, %restore_finalize.exit17
    %130 = bitcast %struct.alloc_save_s* %empty_save to i8*
    call void @llvm.lifetime.end(i64 716, i8* %130) #5
    %sunkaddr18 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr19 = add i32 %sunkaddr18, 16
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to %struct.gs_ref_memory_s**
    %131 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr20, align 4, !tbaa !9
    %132 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %131, i32 0, i32 9
    %133 = load %struct.chunk_s*, %struct.chunk_s** %132, align 4, !tbaa !69
    %134 = icmp eq %struct.chunk_s* %133, null
    br i1 %134, label %restore_free.exit, label %.lr.ph.i18
  
  .lr.ph.i18:                                       ; preds = %restore_resources.exit
    br label %135
  
  ; <label>:135                                     ; preds = %.backedge.i, %.lr.ph.i18
    %cp.01.i = phi %struct.chunk_s* [ %133, %.lr.ph.i18 ], [ %138, %.backedge.i ]
    %136 = bitcast %struct.gs_ref_memory_s* %131 to i8*
    %137 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i, i32 0, i32 8
    %138 = load %struct.chunk_s*, %struct.chunk_s** %137, align 4, !tbaa !70
    %139 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i, i32 0, i32 1
    %140 = load i8*, i8** %139, align 4, !tbaa !56
    %141 = getelementptr inbounds i8, i8* %140, i32 16
    %142 = icmp eq i8* %141, %136
    br i1 %142, label %.backedge.i, label %144
  
  .backedge.i:                                      ; preds = %144, %135
    %143 = icmp eq %struct.chunk_s* %138, null
    br i1 %143, label %restore_free.exit.loopexit, label %135
  
  ; <label>:144                                     ; preds = %135
    call void @alloc_free_chunk(%struct.chunk_s* nonnull %cp.01.i, %struct.gs_ref_memory_s* %131) #5
    br label %.backedge.i
  
  restore_free.exit.loopexit:                       ; preds = %.backedge.i
    %sunkaddr21 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr22 = add i32 %sunkaddr21, 16
    %sunkaddr23 = inttoptr i32 %sunkaddr22 to %struct.gs_ref_memory_s**
    %.pre = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr23, align 4, !tbaa !9
    br label %restore_free.exit
  
  restore_free.exit:                                ; preds = %restore_free.exit.loopexit, %restore_resources.exit
    %145 = phi %struct.gs_ref_memory_s* [ %.pre, %restore_free.exit.loopexit ], [ %131, %restore_resources.exit ]
    %sunkaddr24 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr25 = add i32 %sunkaddr24, 12
    %sunkaddr26 = inttoptr i32 %sunkaddr25 to %struct.gs_ref_memory_s**
    %146 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr26, align 4, !tbaa !11
    %147 = icmp eq %struct.gs_ref_memory_s* %146, %145
    br i1 %147, label %restore_free.exit24, label %148
  
  ; <label>:148                                     ; preds = %restore_free.exit
    %149 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %146, i32 0, i32 18
    %150 = load i32, i32* %149, align 4, !tbaa !12
    %151 = add nsw i32 %150, -1
    store i32 %151, i32* %149, align 4, !tbaa !12
    %152 = icmp eq i32 %151, 0
    br i1 %152, label %153, label %restore_free.exit24
  
  ; <label>:153                                     ; preds = %148
    %154 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %146, i32 0, i32 9
    %155 = load %struct.chunk_s*, %struct.chunk_s** %154, align 4, !tbaa !69
    %156 = icmp eq %struct.chunk_s* %155, null
    br i1 %156, label %restore_free.exit24, label %.lr.ph.i20
  
  .lr.ph.i20:                                       ; preds = %153
    br label %157
  
  ; <label>:157                                     ; preds = %.backedge.i22, %.lr.ph.i20
    %cp.01.i21 = phi %struct.chunk_s* [ %155, %.lr.ph.i20 ], [ %160, %.backedge.i22 ]
    %158 = bitcast %struct.gs_ref_memory_s* %146 to i8*
    %159 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i21, i32 0, i32 8
    %160 = load %struct.chunk_s*, %struct.chunk_s** %159, align 4, !tbaa !70
    %161 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i21, i32 0, i32 1
    %162 = load i8*, i8** %161, align 4, !tbaa !56
    %163 = getelementptr inbounds i8, i8* %162, i32 16
    %164 = icmp eq i8* %163, %158
    br i1 %164, label %.backedge.i22, label %166
  
  .backedge.i22:                                    ; preds = %166, %157
    %165 = icmp eq %struct.chunk_s* %160, null
    br i1 %165, label %restore_free.exit24, label %157
  
  ; <label>:166                                     ; preds = %157
    call void @alloc_free_chunk(%struct.chunk_s* nonnull %cp.01.i21, %struct.gs_ref_memory_s* %146) #5
    br label %.backedge.i22
  
  restore_free.exit24:                              ; preds = %.backedge.i22, %153, %148, %restore_free.exit
    %sunkaddr27 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr28 = add i32 %sunkaddr27, 8
    %sunkaddr29 = inttoptr i32 %sunkaddr28 to %struct.gs_ref_memory_s**
    %167 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr29, align 4, !tbaa !73
    %168 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %167, i32 0, i32 9
    %169 = load %struct.chunk_s*, %struct.chunk_s** %168, align 4, !tbaa !69
    %170 = icmp eq %struct.chunk_s* %169, null
    br i1 %170, label %restore_free.exit29, label %.lr.ph.i25
  
  .lr.ph.i25:                                       ; preds = %restore_free.exit24
    br label %171
  
  ; <label>:171                                     ; preds = %.backedge.i27, %.lr.ph.i25
    %cp.01.i26 = phi %struct.chunk_s* [ %169, %.lr.ph.i25 ], [ %174, %.backedge.i27 ]
    %172 = bitcast %struct.gs_ref_memory_s* %167 to i8*
    %173 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i26, i32 0, i32 8
    %174 = load %struct.chunk_s*, %struct.chunk_s** %173, align 4, !tbaa !70
    %175 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i26, i32 0, i32 1
    %176 = load i8*, i8** %175, align 4, !tbaa !56
    %177 = getelementptr inbounds i8, i8* %176, i32 16
    %178 = icmp eq i8* %177, %172
    br i1 %178, label %.backedge.i27, label %180
  
  .backedge.i27:                                    ; preds = %180, %171
    %179 = icmp eq %struct.chunk_s* %174, null
    br i1 %179, label %restore_free.exit29, label %171
  
  ; <label>:180                                     ; preds = %171
    call void @alloc_free_chunk(%struct.chunk_s* nonnull %cp.01.i26, %struct.gs_ref_memory_s* %167) #5
    br label %.backedge.i27
  
  restore_free.exit29:                              ; preds = %.backedge.i27, %restore_free.exit24
    ret void
  }
  
  ; Function Attrs: nounwind
  define void @alloc_forget_save(%struct.alloc_save_s* readonly %save) #1 {
    %1 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 1
    %2 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %1, align 4, !tbaa !46
    %3 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 1, i32 0, i32 3
    %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %3, align 4, !tbaa !9
    br label %5
  
  ; <label>:5                                       ; preds = %31, %0
    %sunkaddr = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr1 = add i32 %sunkaddr, 276
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to %struct.alloc_save_s**
    %6 = load %struct.alloc_save_s*, %struct.alloc_save_s** %sunkaddr2, align 4, !tbaa !49
    %7 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %6, i32 0, i32 4
    %8 = load i32, i32* %7, align 4, !tbaa !26
    %9 = icmp eq i32 %8, 0
    %sunkaddr3 = ptrtoint %struct.gs_dual_memory_s* %2 to i32
    %sunkaddr4 = add i32 %sunkaddr3, 24
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to i32*
    %.pre = load i32, i32* %sunkaddr5, align 4, !tbaa !1
    br i1 %9, label %._crit_edge, label %10
  
  ; <label>:10                                      ; preds = %5
    %11 = add nsw i32 %.pre, -1
    %sunkaddr6 = ptrtoint %struct.gs_dual_memory_s* %2 to i32
    %sunkaddr7 = add i32 %sunkaddr6, 24
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to i32*
    store i32 %11, i32* %sunkaddr8, align 4, !tbaa !1
    br label %._crit_edge
  
  ._crit_edge:                                      ; preds = %10, %5
    %12 = phi i32 [ %11, %10 ], [ %.pre, %5 ]
    %13 = icmp eq i32 %12, 0
    %sunkaddr9 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr10 = add i32 %sunkaddr9, 272
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to %struct.alloc_change_s**
    %14 = load %struct.alloc_change_s*, %struct.alloc_change_s** %sunkaddr11, align 4, !tbaa !60
    br i1 %13, label %33, label %15
  
  ; <label>:15                                      ; preds = %._crit_edge
    %16 = bitcast %struct.alloc_save_s* %6 to %struct.gs_ref_memory_s*
    %17 = tail call fastcc i32 @save_set_new(%struct.gs_ref_memory_s* %16, i32 signext 1)
    %18 = icmp eq %struct.alloc_change_s* %14, null
    br i1 %18, label %19, label %.preheader
  
  ; <label>:19                                      ; preds = %15
    %20 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %6, i32 0, i32 0, i32 19
    %21 = bitcast %struct.alloc_change_s** %20 to i32*
    %22 = load i32, i32* %21, align 4, !tbaa !74
    %sunkaddr12 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr13 = add i32 %sunkaddr12, 272
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to i32*
    store i32 %22, i32* %sunkaddr14, align 4, !tbaa !60
    br label %31
  
  .preheader:                                       ; preds = %15, %.preheader
    %chp.0 = phi %struct.alloc_change_s* [ %24, %.preheader ], [ %14, %15 ]
    %23 = bitcast %struct.alloc_change_s* %chp.0 to %struct.alloc_change_s**
    %24 = load %struct.alloc_change_s*, %struct.alloc_change_s** %23, align 4, !tbaa !61
    %25 = icmp eq %struct.alloc_change_s* %24, null
    br i1 %25, label %26, label %.preheader
  
  ; <label>:26                                      ; preds = %.preheader
    %27 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %6, i32 0, i32 0, i32 19
    %28 = bitcast %struct.alloc_change_s** %27 to i32*
    %29 = load i32, i32* %28, align 4, !tbaa !74
    %30 = bitcast %struct.alloc_change_s* %chp.0 to i32*
    store i32 %29, i32* %30, align 4, !tbaa !61
    br label %31
  
  ; <label>:31                                      ; preds = %26, %19
    tail call void @file_forget_save(%struct.alloc_save_s* nonnull %6) #5
    tail call fastcc void @combine_space(%struct.gs_ref_memory_s* %4)
    %32 = icmp eq %struct.alloc_save_s* %6, %save
    br i1 %32, label %.loopexit, label %5
  
  ; <label>:33                                      ; preds = %._crit_edge
    %34 = icmp eq %struct.alloc_change_s* %14, null
    br i1 %34, label %forget_changes.exit, label %.lr.ph.i
  
  .lr.ph.i:                                         ; preds = %33
    br label %35
  
  ; <label>:35                                      ; preds = %44, %.lr.ph.i
    %chp.01.i = phi %struct.alloc_change_s* [ %14, %.lr.ph.i ], [ %47, %44 ]
    %36 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %chp.01.i, i32 0, i32 1
    %37 = load i16*, i16** %36, align 4, !tbaa !50
    %38 = load i16, i16* %37, align 2, !tbaa !40
    %39 = zext i16 %38 to i32
    %40 = icmp ugt i16 %38, 16383
    br i1 %40, label %44, label %41
  
  ; <label>:41                                      ; preds = %35
    %42 = and i32 %39, 65533
    %43 = trunc i32 %42 to i16
    store i16 %43, i16* %37, align 4, !tbaa !54
    br label %44
  
  ; <label>:44                                      ; preds = %41, %35
    %45 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
    %46 = bitcast %struct.alloc_change_s* %chp.01.i to %struct.alloc_change_s**
    %47 = load %struct.alloc_change_s*, %struct.alloc_change_s** %46, align 4, !tbaa !61
    %sunkaddr15 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr16 = add i32 %sunkaddr15, 44
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to void (%struct.gs_memory_s*, i8*, i8*)**
    %48 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %sunkaddr17, align 4, !tbaa !23
    %49 = bitcast %struct.alloc_change_s* %chp.01.i to i8*
    tail call void %48(%struct.gs_memory_s* %45, i8* %49, i8* nonnull getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i32 0, i32 0)) #5
    %50 = icmp eq %struct.alloc_change_s* %47, null
    br i1 %50, label %forget_changes.exit, label %35
  
  forget_changes.exit:                              ; preds = %44, %33
    %sunkaddr18 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr19 = add i32 %sunkaddr18, 272
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to %struct.alloc_change_s**
    store %struct.alloc_change_s* null, %struct.alloc_change_s** %sunkaddr20, align 4, !tbaa !60
    %51 = tail call fastcc i32 @save_set_new(%struct.gs_ref_memory_s* nonnull %4, i32 signext 0)
    tail call void @file_forget_save(%struct.alloc_save_s* %6) #5
    tail call fastcc void @combine_space(%struct.gs_ref_memory_s* nonnull %4)
    %52 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 1, i32 0, i32 2
    %53 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %52, align 4, !tbaa !11
    %sunkaddr21 = ptrtoint %struct.gs_dual_memory_s* %2 to i32
    %sunkaddr22 = add i32 %sunkaddr21, 16
    %sunkaddr23 = inttoptr i32 %sunkaddr22 to %struct.gs_ref_memory_s**
    %54 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr23, align 4, !tbaa !9
    %55 = icmp eq %struct.gs_ref_memory_s* %53, %54
    br i1 %55, label %81, label %56
  
  ; <label>:56                                      ; preds = %forget_changes.exit
    %57 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %53, i32 0, i32 20
    %58 = load %struct.alloc_save_s*, %struct.alloc_save_s** %57, align 4, !tbaa !49
    %59 = icmp eq %struct.alloc_save_s* %58, null
    br i1 %59, label %81, label %60
  
  ; <label>:60                                      ; preds = %56
    %61 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %53, i32 0, i32 19
    %62 = load %struct.alloc_change_s*, %struct.alloc_change_s** %61, align 4, !tbaa !60
    %63 = icmp eq %struct.alloc_change_s* %62, null
    br i1 %63, label %forget_changes.exit3, label %.lr.ph.i1
  
  .lr.ph.i1:                                        ; preds = %60
    br label %64
  
  ; <label>:64                                      ; preds = %73, %.lr.ph.i1
    %chp.01.i2 = phi %struct.alloc_change_s* [ %62, %.lr.ph.i1 ], [ %76, %73 ]
    %65 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %chp.01.i2, i32 0, i32 1
    %66 = load i16*, i16** %65, align 4, !tbaa !50
    %67 = load i16, i16* %66, align 2, !tbaa !40
    %68 = zext i16 %67 to i32
    %69 = icmp ugt i16 %67, 16383
    br i1 %69, label %73, label %70
  
  ; <label>:70                                      ; preds = %64
    %71 = and i32 %68, 65533
    %72 = trunc i32 %71 to i16
    store i16 %72, i16* %66, align 4, !tbaa !54
    br label %73
  
  ; <label>:73                                      ; preds = %70, %64
    %74 = bitcast %struct.gs_ref_memory_s* %53 to %struct.gs_memory_s*
    %75 = bitcast %struct.alloc_change_s* %chp.01.i2 to %struct.alloc_change_s**
    %76 = load %struct.alloc_change_s*, %struct.alloc_change_s** %75, align 4, !tbaa !61
    %sunkaddr24 = ptrtoint %struct.gs_ref_memory_s* %53 to i32
    %sunkaddr25 = add i32 %sunkaddr24, 44
    %sunkaddr26 = inttoptr i32 %sunkaddr25 to void (%struct.gs_memory_s*, i8*, i8*)**
    %77 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %sunkaddr26, align 4, !tbaa !23
    %78 = bitcast %struct.alloc_change_s* %chp.01.i2 to i8*
    tail call void %77(%struct.gs_memory_s* %74, i8* %78, i8* nonnull getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i32 0, i32 0)) #5
    %79 = icmp eq %struct.alloc_change_s* %76, null
    br i1 %79, label %forget_changes.exit3, label %64
  
  forget_changes.exit3:                             ; preds = %73, %60
    %sunkaddr27 = ptrtoint %struct.gs_ref_memory_s* %53 to i32
    %sunkaddr28 = add i32 %sunkaddr27, 272
    %sunkaddr29 = inttoptr i32 %sunkaddr28 to %struct.alloc_change_s**
    store %struct.alloc_change_s* null, %struct.alloc_change_s** %sunkaddr29, align 4, !tbaa !60
    %80 = tail call fastcc i32 @save_set_new(%struct.gs_ref_memory_s* nonnull %53, i32 signext 0)
    tail call fastcc void @combine_space(%struct.gs_ref_memory_s* nonnull %53)
    br label %81
  
  ; <label>:81                                      ; preds = %forget_changes.exit3, %56, %forget_changes.exit
    %82 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 5
    store i32 -1, i32* %82, align 4, !tbaa !7
    %83 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 6
    store i32 0, i32* %83, align 4, !tbaa !8
    br label %.loopexit
  
  .loopexit:                                        ; preds = %31, %81
    ret void
  }
  
  declare void @file_forget_save(%struct.alloc_save_s*) #3
  
  ; Function Attrs: nounwind
  define internal fastcc void @combine_space(%struct.gs_ref_memory_s* %mem) unnamed_addr #1 {
    %1 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 20
    %2 = load %struct.alloc_save_s*, %struct.alloc_save_s** %1, align 4, !tbaa !49
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* %mem) #5
    %3 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 8
    %4 = load %struct.chunk_s*, %struct.chunk_s** %3, align 4, !tbaa !75
    %5 = icmp eq %struct.chunk_s* %4, null
    br i1 %5, label %._crit_edge, label %.lr.ph
  
  .lr.ph:                                           ; preds = %0
    br label %6
  
  ; <label>:6                                       ; preds = %.backedge, %.lr.ph
    %cp.02 = phi %struct.chunk_s* [ %4, %.lr.ph ], [ %8, %.backedge ]
    %7 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 9
    %8 = load %struct.chunk_s*, %struct.chunk_s** %7, align 4, !tbaa !76
    %9 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 10
    %10 = load %struct.chunk_s*, %struct.chunk_s** %9, align 4, !tbaa !77
    %11 = icmp eq %struct.chunk_s* %10, null
    br i1 %11, label %12, label %15
  
  ; <label>:12                                      ; preds = %6
    %13 = bitcast %struct.alloc_save_s* %2 to %struct.gs_ref_memory_s*
    tail call void @alloc_link_chunk(%struct.chunk_s* nonnull %cp.02, %struct.gs_ref_memory_s* %13) #5
    br label %.backedge
  
  .backedge:                                        ; preds = %26, %12
    %14 = icmp eq %struct.chunk_s* %8, null
    br i1 %14, label %._crit_edge, label %6
  
  ; <label>:15                                      ; preds = %6
    %16 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %10, i32 0, i32 11
    %17 = load i32, i32* %16, align 4, !tbaa !78
    %18 = add i32 %17, -1
    store i32 %18, i32* %16, align 4, !tbaa !78
    %sunkaddr = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr1 = add i32 %sunkaddr, 228
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to %struct.chunk_s**
    %19 = load %struct.chunk_s*, %struct.chunk_s** %sunkaddr2, align 4, !tbaa !22
    %20 = icmp eq %struct.chunk_s* %19, %cp.02
    br i1 %20, label %21, label %22
  
  ; <label>:21                                      ; preds = %15
    %sunkaddr3 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr4 = add i32 %sunkaddr3, 228
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to %struct.chunk_s**
    store %struct.chunk_s* %10, %struct.chunk_s** %sunkaddr5, align 4, !tbaa !22
    br label %22
  
  ; <label>:22                                      ; preds = %21, %15
    %sunkaddr6 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr7 = add i32 %sunkaddr6, 236
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to %struct.chunk_s**
    %23 = load %struct.chunk_s*, %struct.chunk_s** %sunkaddr8, align 4, !tbaa !79
    %24 = icmp eq %struct.chunk_s* %23, %cp.02
    br i1 %24, label %25, label %26
  
  ; <label>:25                                      ; preds = %22
    %sunkaddr9 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr10 = add i32 %sunkaddr9, 236
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to %struct.chunk_s**
    store %struct.chunk_s* %10, %struct.chunk_s** %sunkaddr11, align 4, !tbaa !79
    br label %26
  
  ; <label>:26                                      ; preds = %25, %22
    %27 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %10, i32 0, i32 2
    %28 = bitcast i8** %27 to %struct.obj_header_s**
    %29 = load %struct.obj_header_s*, %struct.obj_header_s** %28, align 4, !tbaa !57
    %30 = bitcast %struct.obj_header_s* %29 to i8*
    %31 = load i8, i8* %30, align 4
    %32 = and i8 %31, 127
    store i8 %32, i8* %30, align 4
    %33 = bitcast %struct.chunk_s* %cp.02 to %struct.chunk_head_s**
    %34 = load %struct.chunk_head_s*, %struct.chunk_head_s** %33, align 4, !tbaa !80
    %35 = getelementptr inbounds %struct.chunk_head_s, %struct.chunk_head_s* %34, i32 1
    %36 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %29, i32 1
    %37 = ptrtoint %struct.chunk_head_s* %35 to i32
    %38 = ptrtoint %struct.obj_header_s* %36 to i32
    %39 = sub i32 %37, %38
    %40 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %29, i32 0, i32 0, i32 0, i32 1
    store i32 %39, i32* %40, align 4, !tbaa !58
    %41 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %29, i32 0, i32 0, i32 0, i32 2, i32 0
    store %struct.gs_memory_struct_type_s* @st_bytes, %struct.gs_memory_struct_type_s** %41, align 4, !tbaa !37
    %42 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 2
    %43 = bitcast i8** %42 to i32*
    %44 = load i32, i32* %43, align 4, !tbaa !57
    %45 = bitcast i8** %27 to i32*
    store i32 %44, i32* %45, align 4, !tbaa !57
    %46 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 3
    %47 = bitcast %struct.obj_header_s** %46 to i32*
    %48 = load i32, i32* %47, align 4, !tbaa !81
    %49 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %10, i32 0, i32 3
    %50 = bitcast %struct.obj_header_s** %49 to i32*
    store i32 %48, i32* %50, align 4, !tbaa !81
    %51 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 4
    %52 = bitcast i8** %51 to i32*
    %53 = load i32, i32* %52, align 4, !tbaa !82
    %54 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %10, i32 0, i32 4
    %55 = bitcast i8** %54 to i32*
    store i32 %53, i32* %55, align 4, !tbaa !82
    %56 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 5
    %57 = bitcast i8** %56 to i32*
    %58 = load i32, i32* %57, align 4, !tbaa !83
    %59 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %10, i32 0, i32 5
    %60 = bitcast i8** %59 to i32*
    store i32 %58, i32* %60, align 4, !tbaa !83
    %61 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 12
    %62 = load i32, i32* %61, align 4, !tbaa !55
    %63 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %10, i32 0, i32 12
    %64 = load i32, i32* %63, align 4, !tbaa !55
    %65 = or i32 %64, %62
    store i32 %65, i32* %63, align 4, !tbaa !55
    %sunkaddr12 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr13 = add i32 %sunkaddr12, 80
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to %struct.gs_memory_s**
    %66 = load %struct.gs_memory_s*, %struct.gs_memory_s** %sunkaddr14, align 4, !tbaa !25
    %67 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %66, i32 0, i32 0, i32 11
    %68 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %67, align 4, !tbaa !23
    %69 = bitcast %struct.chunk_s* %cp.02 to i8*
    tail call void %68(%struct.gs_memory_s* %66, i8* %69, i8* nonnull getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i32 0, i32 0)) #5
    br label %.backedge
  
  ._crit_edge:                                      ; preds = %.backedge, %0
    %70 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 8
    %71 = bitcast %struct.chunk_s** %70 to i32*
    %72 = load i32, i32* %71, align 4, !tbaa !75
    %sunkaddr15 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr16 = add i32 %sunkaddr15, 128
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to i32*
    store i32 %72, i32* %sunkaddr17, align 4, !tbaa !75
    %73 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 9
    %74 = bitcast %struct.chunk_s** %73 to i32*
    %75 = load i32, i32* %74, align 4, !tbaa !69
    %76 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 9
    %77 = bitcast %struct.chunk_s** %76 to i32*
    store i32 %75, i32* %77, align 4, !tbaa !69
    %78 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 13
    %79 = load i32, i32* %78, align 4, !tbaa !84
    %80 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 13
    %81 = load i32, i32* %80, align 4, !tbaa !84
    %82 = add i32 %81, %79
    store i32 %82, i32* %80, align 4, !tbaa !84
    %83 = load i32, i32* %78, align 4, !tbaa !84
    %84 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 15
    %85 = load i32, i32* %84, align 4, !tbaa !85
    %86 = add i32 %85, %83
    store i32 %86, i32* %84, align 4, !tbaa !85
    %87 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 16, i32 0
    %88 = load i32, i32* %87, align 4, !tbaa !86
    %89 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 16, i32 0
    %90 = load i32, i32* %89, align 4, !tbaa !86
    %91 = add i32 %90, %88
    store i32 %91, i32* %89, align 4, !tbaa !86
    %92 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 16, i32 1
    %93 = load i32, i32* %92, align 4, !tbaa !87
    %94 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 16, i32 1
    %95 = load i32, i32* %94, align 4, !tbaa !87
    %96 = add i32 %95, %93
    store i32 %96, i32* %94, align 4, !tbaa !87
    %97 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 16, i32 2
    %98 = load i32, i32* %97, align 4, !tbaa !88
    %99 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 16, i32 2
    %100 = load i32, i32* %99, align 4, !tbaa !88
    %101 = add i32 %100, %98
    store i32 %101, i32* %99, align 4, !tbaa !88
    %102 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 20
    %103 = bitcast %struct.alloc_save_s** %102 to i32*
    %104 = load i32, i32* %103, align 4, !tbaa !49
    %sunkaddr18 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr19 = add i32 %sunkaddr18, 276
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to i32*
    store i32 %104, i32* %sunkaddr20, align 4, !tbaa !49
    %105 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 22
    %106 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 22
    %107 = bitcast %struct.gs_memory_status_s* %106 to i64*
    %108 = bitcast %struct.gs_memory_status_s* %105 to i64*
    %109 = load i64, i64* %107, align 4
    store i64 %109, i64* %108, align 4
    br label %110
  
  ; <label>:110                                     ; preds = %123, %._crit_edge
    %i.01 = phi i32 [ 0, %._crit_edge ], [ %124, %123 ]
    %111 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 23, i32 %i.01
    %112 = load %struct.obj_header_s*, %struct.obj_header_s** %111, align 4, !tbaa !37
    %113 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 23, i32 %i.01
    %114 = load %struct.obj_header_s*, %struct.obj_header_s** %113, align 4, !tbaa !37
    %115 = icmp eq %struct.obj_header_s* %112, null
    br i1 %115, label %123, label %116
  
  ; <label>:116                                     ; preds = %110
    %117 = icmp eq %struct.obj_header_s* %114, null
    br i1 %117, label %118, label %.preheader
  
  ; <label>:118                                     ; preds = %116
    store %struct.obj_header_s* %112, %struct.obj_header_s** %113, align 4, !tbaa !37
    br label %123
  
  .preheader:                                       ; preds = %116, %.preheader
    %list.0 = phi %struct.obj_header_s* [ %120, %.preheader ], [ %114, %116 ]
    %119 = bitcast %struct.obj_header_s* %list.0 to %struct.obj_header_s**
    %120 = load %struct.obj_header_s*, %struct.obj_header_s** %119, align 4, !tbaa !37
    %121 = icmp eq %struct.obj_header_s* %120, null
    br i1 %121, label %122, label %.preheader
  
  ; <label>:122                                     ; preds = %.preheader
    %sunkaddr21 = ptrtoint %struct.obj_header_s* %list.0 to i32
    %sunkaddr22 = inttoptr i32 %sunkaddr21 to %struct.obj_header_s**
    store %struct.obj_header_s* %112, %struct.obj_header_s** %sunkaddr22, align 4, !tbaa !37
    br label %123
  
  ; <label>:123                                     ; preds = %122, %118, %110
    %124 = add nuw nsw i32 %i.01, 1
    %exitcond = icmp eq i32 %124, 101
    br i1 %exitcond, label %125, label %110
  
  ; <label>:125                                     ; preds = %123
    %126 = bitcast %struct.gs_ref_memory_s* %mem to %struct.gs_memory_s*
    %127 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 0, i32 11
    %128 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %127, align 4, !tbaa !23
    %129 = bitcast %struct.alloc_save_s* %2 to i8*
    tail call void %128(%struct.gs_memory_s* %126, i8* %129, i8* nonnull getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i32 0, i32 0)) #5
    tail call void @alloc_open_chunk(%struct.gs_ref_memory_s* %mem) #5
    ret void
  }
  
  declare void @alloc_close_chunk(%struct.gs_ref_memory_s*) #3
  
  declare void @ialloc_reset(%struct.gs_ref_memory_s*) #3
  
  declare void @alloc_init_chunk(%struct.chunk_s*, i8*, i8*, i32 signext, %struct.chunk_s*) #3
  
  declare %struct.gs_memory_s* @name_memory() #3
  
  ; Function Attrs: nounwind
  define internal %struct.gs_ptr_procs_s* @save_enum_ptrs(i8* %vptr, i32 signext %size, i32 signext %index, i8** %pep) #1 {
    %cond = icmp eq i32 %index, 0
    br i1 %cond, label %5, label %1
  
  ; <label>:1                                       ; preds = %0
    %2 = load %struct.gs_ptr_procs_s* (i8*, i32, i32, i8**)*, %struct.gs_ptr_procs_s* (i8*, i32, i32, i8**)** getelementptr inbounds (%struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* @st_ref_memory, i32 0, i32 4), align 4, !tbaa !89
    %3 = add i32 %index, -1
    %4 = tail call %struct.gs_ptr_procs_s* %2(i8* %vptr, i32 signext %size, i32 signext %3, i8** %pep) #5
    br label %10
  
  ; <label>:5                                       ; preds = %0
    %6 = getelementptr inbounds i8, i8* %vptr, i32 712
    %7 = bitcast i8* %6 to i32*
    %8 = load i32, i32* %7, align 4, !tbaa !28
    %9 = bitcast i8** %pep to i32*
    store i32 %8, i32* %9, align 4, !tbaa !37
    br label %10
  
  ; <label>:10                                      ; preds = %5, %1
    %.0 = phi %struct.gs_ptr_procs_s* [ @ptr_struct_procs, %5 ], [ %4, %1 ]
    ret %struct.gs_ptr_procs_s* %.0
  }
  
  ; Function Attrs: nounwind
  define internal void @save_reloc_ptrs(i8* %vptr, i32 signext %size, %struct.gc_state_s* %gcst) #1 {
    %1 = load void (i8*, i32, %struct.gc_state_s*)*, void (i8*, i32, %struct.gc_state_s*)** getelementptr inbounds (%struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* @st_ref_memory, i32 0, i32 5), align 4, !tbaa !90
    tail call void %1(i8* %vptr, i32 signext %size, %struct.gc_state_s* %gcst) #5
    %2 = getelementptr inbounds i8, i8* %vptr, i32 712
    %3 = bitcast i8* %2 to i8**
    %4 = load i8*, i8** %3, align 4, !tbaa !28
    %5 = tail call i8* @gs_reloc_struct_ptr(i8* %4, %struct.gc_state_s* %gcst) #5
    store i8* %5, i8** %3, align 4, !tbaa !28
    ret void
  }
  
  declare i8* @gs_reloc_struct_ptr(i8*, %struct.gc_state_s*) #3
  
  ; Function Attrs: norecurse nounwind
  define internal void @change_clear_marks(i8* nocapture %vptr, i32 signext %size) #0 {
    %1 = getelementptr inbounds i8, i8* %vptr, i32 8
    %2 = bitcast i8* %1 to i16*
    %3 = load i16, i16* %2, align 4, !tbaa !40
    %4 = icmp ugt i16 %3, 16383
    %5 = zext i16 %3 to i32
    %storemerge.in.v = select i1 %4, i32 61439, i32 65534
    %storemerge.in = and i32 %5, %storemerge.in.v
    %storemerge = trunc i32 %storemerge.in to i16
    store i16 %storemerge, i16* %2, align 4, !tbaa !40
    ret void
  }
  
  ; Function Attrs: norecurse nounwind
  define internal %struct.gs_ptr_procs_s* @change_enum_ptrs(i8* %vptr, i32 signext %size, i32 signext %index, i8** nocapture %pep) #0 {
    switch i32 %index, label %20 [
      i32 0, label %1
      i32 1, label %5
      i32 2, label %18
    ]
  
  ; <label>:1                                       ; preds = %0
    %2 = bitcast i8* %vptr to i32*
    %3 = load i32, i32* %2, align 4, !tbaa !61
    %4 = bitcast i8** %pep to i32*
    store i32 %3, i32* %4, align 4, !tbaa !37
    br label %20
  
  ; <label>:5                                       ; preds = %0
    %6 = getelementptr inbounds i8, i8* %vptr, i32 16
    %7 = bitcast i8* %6 to i16*
    %8 = load i16, i16* %7, align 4, !tbaa !62
    %9 = sext i16 %8 to i32
    %10 = icmp sgt i16 %8, -1
    %11 = getelementptr inbounds i8, i8* %vptr, i32 4
    %12 = bitcast i8* %11 to i8**
    %13 = load i8*, i8** %12, align 4, !tbaa !50
    br i1 %10, label %14, label %17
  
  ; <label>:14                                      ; preds = %5
    %15 = sub nsw i32 0, %9
    %16 = getelementptr inbounds i8, i8* %13, i32 %15
    store i8* %16, i8** %pep, align 4, !tbaa !37
    br label %20
  
  ; <label>:17                                      ; preds = %5
    store i8* %13, i8** %pep, align 4, !tbaa !37
    br label %20
  
  ; <label>:18                                      ; preds = %0
    %19 = getelementptr inbounds i8, i8* %vptr, i32 8
    store i8* %19, i8** %pep, align 4, !tbaa !37
    br label %20
  
  ; <label>:20                                      ; preds = %18, %17, %14, %1, %0
    %.0 = phi %struct.gs_ptr_procs_s* [ @ptr_ref_procs, %18 ], [ @ptr_struct_procs, %14 ], [ @ptr_ref_procs, %17 ], [ @ptr_struct_procs, %1 ], [ null, %0 ]
    ret %struct.gs_ptr_procs_s* %.0
  }
  
  ; Function Attrs: nounwind
  define internal void @change_reloc_ptrs(i8* %vptr, i32 signext %size, %struct.gc_state_s* %gcst) #1 {
    %1 = bitcast i8* %vptr to i8**
    %2 = load i8*, i8** %1, align 4, !tbaa !61
    %3 = tail call i8* @gs_reloc_struct_ptr(i8* %2, %struct.gc_state_s* %gcst) #5
    store i8* %3, i8** %1, align 4, !tbaa !61
    %4 = getelementptr inbounds i8, i8* %vptr, i32 16
    %5 = bitcast i8* %4 to i16*
    %6 = load i16, i16* %5, align 4, !tbaa !62
    %7 = sext i16 %6 to i32
    switch i32 %7, label %13 [
      i32 -2, label %23
      i32 -1, label %8
    ]
  
  ; <label>:8                                       ; preds = %0
    %9 = getelementptr inbounds i8, i8* %vptr, i32 4
    %10 = bitcast i8* %9 to i16**
    %11 = load i16*, i16** %10, align 4, !tbaa !50
    %12 = tail call i16* @gs_reloc_ref_ptr(i16* %11, %struct.gc_state_s* %gcst) #5
    store i16* %12, i16** %10, align 4, !tbaa !50
    br label %23
  
  ; <label>:13                                      ; preds = %0
    %14 = getelementptr inbounds i8, i8* %vptr, i32 4
    %15 = bitcast i8* %14 to i8**
    %16 = load i8*, i8** %15, align 4, !tbaa !50
    %17 = sub nsw i32 0, %7
    %18 = getelementptr inbounds i8, i8* %16, i32 %17
    %19 = tail call i8* @gs_reloc_struct_ptr(i8* %18, %struct.gc_state_s* %gcst) #5
    %sunkaddr = ptrtoint i8* %vptr to i32
    %sunkaddr1 = add i32 %sunkaddr, 16
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i16*
    %20 = load i16, i16* %sunkaddr2, align 4, !tbaa !62
    %21 = sext i16 %20 to i32
    %22 = getelementptr inbounds i8, i8* %19, i32 %21
    store i8* %22, i8** %15, align 4, !tbaa !50
    br label %23
  
  ; <label>:23                                      ; preds = %13, %8, %0
    %24 = getelementptr inbounds i8, i8* %vptr, i32 8
    %25 = bitcast i8* %24 to i16*
    %26 = load i16, i16* %25, align 4, !tbaa !40
    %27 = zext i16 %26 to i32
    %28 = icmp ugt i16 %26, 16383
    br i1 %28, label %29, label %31
  
  ; <label>:29                                      ; preds = %23
    %30 = and i32 %27, 61439
    br label %37
  
  ; <label>:31                                      ; preds = %23
    %32 = bitcast i8* %24 to i16*
    %33 = bitcast i8* %4 to i16*
    tail call void @gs_reloc_refs(i16* %32, i16* nonnull %33, %struct.gc_state_s* %gcst) #5
    %34 = load i16, i16* %32, align 4, !tbaa !54
    %35 = zext i16 %34 to i32
    %36 = and i32 %35, 65534
    br label %37
  
  ; <label>:37                                      ; preds = %31, %29
    %storemerge.in = phi i32 [ %36, %31 ], [ %30, %29 ]
    %38 = bitcast i8* %24 to i16*
    %storemerge = trunc i32 %storemerge.in to i16
    store i16 %storemerge, i16* %38, align 4, !tbaa !40
    ret void
  }
  
  declare i16* @gs_reloc_ref_ptr(i16*, %struct.gc_state_s*) #3
  
  declare void @gs_reloc_refs(i16*, i16*, %struct.gc_state_s*) #3
  
  declare void @alloc_open_chunk(%struct.gs_ref_memory_s*) #3
  
  declare void @file_restore(%struct.alloc_save_s*, %struct.gs_memory_s*) #3
  
  declare void @font_restore(%struct.alloc_save_s*) #3
  
  declare void @name_restore(%struct.alloc_save_s*) #3
  
  declare void @alloc_free_chunk(%struct.chunk_s*, %struct.gs_ref_memory_s*) #3
  
  declare void @alloc_link_chunk(%struct.chunk_s*, %struct.gs_ref_memory_s*) #3
  
  attributes #0 = { norecurse nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #2 = { argmemonly nounwind "target-cpu"="mips32" }
  attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #4 = { norecurse nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #5 = { nounwind }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}
  !1 = !{!2, !6, i64 24}
  !2 = !{!"gs_dual_memory_s", !3, i64 0, !4, i64 4, !6, i64 20, !6, i64 24, !3, i64 28, !6, i64 32, !6, i64 36}
  !3 = !{!"any pointer", !4, i64 0}
  !4 = !{!"omnipotent char", !5, i64 0}
  !5 = !{!"Simple C/C++ TBAA"}
  !6 = !{!"int", !4, i64 0}
  !7 = !{!2, !6, i64 32}
  !8 = !{!2, !6, i64 36}
  !9 = !{!10, !3, i64 12}
  !10 = !{!"_ssn", !3, i64 0, !3, i64 4, !3, i64 8, !3, i64 12}
  !11 = !{!10, !3, i64 8}
  !12 = !{!13, !6, i64 268}
  !13 = !{!"gs_ref_memory_s", !14, i64 0, !3, i64 80, !6, i64 84, !6, i64 88, !3, i64 92, !6, i64 96, !15, i64 100, !16, i64 124, !3, i64 128, !3, i64 132, !17, i64 136, !3, i64 228, !19, i64 232, !16, i64 240, !16, i64 244, !16, i64 248, !20, i64 252, !3, i64 264, !6, i64 268, !3, i64 272, !3, i64 276, !3, i64 280, !21, i64 284, !4, i64 292}
  !14 = !{!"gs_memory_procs_s", !3, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !3, i64 20, !3, i64 24, !3, i64 28, !3, i64 32, !3, i64 36, !3, i64 40, !3, i64 44, !3, i64 48, !3, i64 52, !3, i64 56, !3, i64 60, !3, i64 64, !3, i64 68, !3, i64 72, !3, i64 76}
  !15 = !{!"gs_memory_gc_status_s", !16, i64 0, !16, i64 4, !3, i64 8, !6, i64 12, !6, i64 16, !16, i64 20}
  !16 = !{!"long", !4, i64 0}
  !17 = !{!"chunk_s", !3, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !3, i64 20, !3, i64 24, !3, i64 28, !3, i64 32, !3, i64 36, !3, i64 40, !6, i64 44, !6, i64 48, !3, i64 52, !18, i64 56, !3, i64 60, !3, i64 64, !6, i64 68, !3, i64 72, !3, i64 76, !3, i64 80, !3, i64 84, !3, i64 88}
  !18 = !{!"short", !4, i64 0}
  !19 = !{!"chunk_locator_s", !3, i64 0, !3, i64 4}
  !20 = !{!"lost_", !16, i64 0, !16, i64 4, !16, i64 8}
  !21 = !{!"gs_memory_status_s", !16, i64 0, !16, i64 4}
  !22 = !{!13, !3, i64 228}
  !23 = !{!24, !3, i64 44}
  !24 = !{!"gs_memory_s", !14, i64 0}
  !25 = !{!13, !3, i64 80}
  !26 = !{!27, !16, i64 708}
  !27 = !{!"alloc_save_s", !13, i64 0, !3, i64 696, !6, i64 700, !6, i64 704, !16, i64 708, !3, i64 712}
  !28 = !{!27, !3, i64 712}
  !29 = !{!27, !6, i64 700}
  !30 = !{!27, !16, i64 240}
  !31 = !{!27, !16, i64 244}
  !32 = !{!13, !16, i64 244}
  !33 = !{!13, !3, i64 156}
  !34 = !{!13, !3, i64 144}
  !35 = !{!24, !3, i64 8}
  !36 = !{i64 0, i64 4, !37, i64 4, i64 4, !37, i64 8, i64 4, !37, i64 12, i64 4, !37, i64 16, i64 4, !37, i64 20, i64 4, !37, i64 24, i64 4, !37, i64 28, i64 4, !37, i64 32, i64 4, !37, i64 36, i64 4, !37, i64 40, i64 4, !37, i64 44, i64 4, !37, i64 48, i64 4, !37, i64 52, i64 4, !37, i64 56, i64 4, !37, i64 60, i64 4, !37, i64 64, i64 4, !37, i64 68, i64 4, !37, i64 72, i64 4, !37, i64 76, i64 4, !37, i64 80, i64 4, !37, i64 84, i64 4, !38, i64 88, i64 4, !38, i64 92, i64 4, !37, i64 96, i64 4, !38, i64 100, i64 4, !39, i64 104, i64 4, !39, i64 108, i64 4, !37, i64 112, i64 4, !38, i64 116, i64 4, !38, i64 120, i64 4, !39, i64 124, i64 4, !39, i64 128, i64 4, !37, i64 132, i64 4, !37, i64 136, i64 4, !37, i64 140, i64 4, !37, i64 144, i64 4, !37, i64 148, i64 4, !37, i64 152, i64 4, !37, i64 156, i64 4, !37, i64 160, i64 4, !37, i64 164, i64 4, !37, i64 168, i64 4, !37, i64 172, i64 4, !37, i64 176, i64 4, !37, i64 180, i64 4, !38, i64 184, i64 4, !38, i64 188, i64 4, !37, i64 192, i64 2, !40, i64 196, i64 4, !37, i64 200, i64 4, !37, i64 204, i64 4, !38, i64 208, i64 4, !37, i64 212, i64 4, !37, i64 216, i64 4, !37, i64 220, i64 4, !37, i64 224, i64 4, !37, i64 228, i64 4, !37, i64 232, i64 4, !37, i64 236, i64 4, !37, i64 240, i64 4, !39, i64 244, i64 4, !39, i64 248, i64 4, !39, i64 252, i64 4, !39, i64 256, i64 4, !39, i64 260, i64 4, !39, i64 264, i64 4, !37, i64 268, i64 4, !38, i64 272, i64 4, !37, i64 276, i64 4, !37, i64 280, i64 4, !37, i64 284, i64 4, !39, i64 288, i64 4, !39, i64 292, i64 404, !41}
  !37 = !{!3, !3, i64 0}
  !38 = !{!6, !6, i64 0}
  !39 = !{!16, !16, i64 0}
  !40 = !{!18, !18, i64 0}
  !41 = !{!4, !4, i64 0}
  !42 = !{!24, !3, i64 72}
  !43 = !{!13, !3, i64 168}
  !44 = !{!13, !3, i64 172}
  !45 = !{i64 0, i64 4, !37, i64 4, i64 4, !37, i64 8, i64 4, !37, i64 12, i64 4, !37, i64 16, i64 4, !37, i64 20, i64 4, !37, i64 24, i64 4, !37, i64 28, i64 4, !37, i64 32, i64 4, !37, i64 36, i64 4, !37, i64 40, i64 4, !37, i64 44, i64 4, !38, i64 48, i64 4, !38, i64 52, i64 4, !37, i64 56, i64 2, !40, i64 60, i64 4, !37, i64 64, i64 4, !37, i64 68, i64 4, !38, i64 72, i64 4, !37, i64 76, i64 4, !37, i64 80, i64 4, !37, i64 84, i64 4, !37, i64 88, i64 4, !37}
  !46 = !{!27, !3, i64 696}
  !47 = !{!2, !3, i64 0}
  !48 = !{!27, !6, i64 704}
  !49 = !{!13, !3, i64 276}
  !50 = !{!51, !3, i64 4}
  !51 = !{!"alloc_change_s", !3, i64 0, !3, i64 4, !52, i64 8, !18, i64 16}
  !52 = !{!"ref_s", !53, i64 0, !4, i64 4}
  !53 = !{!"tas_s", !18, i64 0, !18, i64 2}
  !54 = !{!52, !18, i64 0}
  !55 = !{!17, !6, i64 48}
  !56 = !{!17, !3, i64 4}
  !57 = !{!17, !3, i64 8}
  !58 = !{!59, !6, i64 4}
  !59 = !{!"obj_header_data_s", !4, i64 0, !6, i64 4, !4, i64 8}
  !60 = !{!13, !3, i64 272}
  !61 = !{!51, !3, i64 0}
  !62 = !{!51, !18, i64 16}
  !63 = !{!17, !3, i64 28}
  !64 = !{!65, !3, i64 4}
  !65 = !{!"name_s", !18, i64 0, !6, i64 2, !6, i64 2, !6, i64 2, !3, i64 4, !3, i64 8}
  !66 = !{!24, !3, i64 76}
  !67 = !{!68, !3, i64 24}
  !68 = !{!"gs_memory_struct_type_s", !6, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !3, i64 20, !3, i64 24}
  !69 = !{!13, !3, i64 132}
  !70 = !{!17, !3, i64 32}
  !71 = !{!13, !6, i64 96}
  !72 = !{!2, !6, i64 20}
  !73 = !{!10, !3, i64 4}
  !74 = !{!27, !3, i64 272}
  !75 = !{!13, !3, i64 128}
  !76 = !{!17, !3, i64 36}
  !77 = !{!17, !3, i64 40}
  !78 = !{!17, !6, i64 44}
  !79 = !{!13, !3, i64 236}
  !80 = !{!17, !3, i64 0}
  !81 = !{!17, !3, i64 12}
  !82 = !{!17, !3, i64 16}
  !83 = !{!17, !3, i64 20}
  !84 = !{!13, !16, i64 240}
  !85 = !{!13, !16, i64 248}
  !86 = !{!13, !16, i64 252}
  !87 = !{!13, !16, i64 256}
  !88 = !{!13, !16, i64 260}
  !89 = !{!68, !3, i64 16}
  !90 = !{!68, !3, i64 20}

...
---
name:            alloc_save_init
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 8):
    liveins: %a0
    liveouts:
  
    %0 = COPY %a0
    SW %zero, %0, 24, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1, !tbaa !1)
    %1 = ADDiu %zero, -1
    SW killed %1, %0, 32, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.2, !tbaa !7)
    SW %zero, %0, 36, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.3, !tbaa !8)
    RetRA

...
--- |
  ; ModuleID = '/home/romi/didaktoriko/unison/unison-experiments/experiments/test-input/c/mediabench/mips_zip/build-mips/ghostscript/ghostscript.isave.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips--linux-gnu"
  
  %struct.gs_memory_struct_type_s = type { i32, i8*, %struct.struct_shared_procs_s*, void (i8*, i32)*, %struct.gs_ptr_procs_s* (i8*, i32, i32, i8**)*, void (i8*, i32, %struct.gc_state_s*)*, void (i8*)* }
  %struct.struct_shared_procs_s = type opaque
  %struct.gs_ptr_procs_s = type { void (i8*, %struct.gc_state_s*)*, i32 (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)* }
  %struct.gc_state_s = type opaque
  %struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i32, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i32, i32, [40 x i8] }
  %struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
  %struct.gs_dual_memory_s = type { %struct.gs_ref_memory_s*, %union.vm_spaces_s, i32, i32, i32 (%struct.gs_dual_memory_s*, i32)*, i32, i32 }
  %struct.gs_ref_memory_s = type { %struct.gs_memory_procs_s, %struct.gs_memory_s*, i32, i32, %struct.gs_ref_memory_s*, i32, %struct.gs_memory_gc_status_s, i32, %struct.chunk_s*, %struct.chunk_s*, %struct.chunk_s, %struct.chunk_s*, %struct.chunk_locator_s, i32, i32, i32, %struct.lost_, %struct.gs_gc_root_s*, i32, %struct.alloc_change_s*, %struct.alloc_save_s*, %struct.alloc_save_s*, %struct.gs_memory_status_s, [101 x %struct.obj_header_s*] }
  %struct.gs_memory_procs_s = type { i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i8*, i32, i8*)*, i32 (%struct.gs_memory_s*, i8*)*, %struct.gs_memory_struct_type_s* (%struct.gs_memory_s*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i8*, i32, i32, i8*)*, void (%struct.gs_memory_s*, i8*, i32, i8*)*, void (%struct.gs_memory_s*, %struct.gs_gc_root_s*, %struct.gs_ptr_procs_s*, i8**, i8*)*, void (%struct.gs_memory_s*, %struct.gs_gc_root_s*, i8*)*, void (%struct.gs_memory_s*, %struct.gs_memory_status_s*)*, void (%struct.gs_memory_s*, i32)* }
  %struct.gs_memory_s = type { %struct.gs_memory_procs_s }
  %struct.gs_memory_gc_status_s = type { i32, i32, i32*, i32, i32, i32 }
  %struct.chunk_s = type { %struct.chunk_head_s*, i8*, i8*, %struct.obj_header_s*, i8*, i8*, i8*, i8*, %struct.chunk_s*, %struct.chunk_s*, %struct.chunk_s*, i32, i32, i16*, i16, i8*, i8*, i32, i8*, i32*, i8*, i8*, i8* }
  %struct.chunk_head_s = type { i8*, [1 x i8*], %struct.obj_header_s }
  %struct.obj_header_s = type { %union._d }
  %union._d = type { %struct.obj_header_data_s, [4 x i8] }
  %struct.obj_header_data_s = type { %union._f, i32, %union._t }
  %union._f = type { %struct._l }
  %struct._l = type { i32 }
  %union._t = type { %struct.gs_memory_struct_type_s* }
  %struct.chunk_locator_s = type { %struct.gs_ref_memory_s*, %struct.chunk_s* }
  %struct.lost_ = type { i32, i32, i32 }
  %struct.gs_gc_root_s = type { %struct.gs_gc_root_s*, %struct.gs_ptr_procs_s*, i8** }
  %struct.alloc_change_s = type { %struct.alloc_change_s*, i16*, %struct.ref_s, i16 }
  %struct.ref_s = type { %struct.tas_s, %union.v }
  %struct.tas_s = type { i16, i16 }
  %union.v = type { i32 }
  %struct.alloc_save_s = type { %struct.gs_ref_memory_s, %struct.gs_dual_memory_s*, i32, i32, i32, i8* }
  %struct.gs_memory_status_s = type { i32, i32 }
  %union.vm_spaces_s = type { [4 x %struct.gs_ref_memory_s*] }
  %struct.name_s = type { i16, i16, i8*, %struct.ref_s* }
  
  @.str = private unnamed_addr constant [29 x i8] c"alloc_save_state(local save)\00", align 1
  @.str.1 = private unnamed_addr constant [30 x i8] c"alloc_save_state(local inner)\00", align 1
  @.str.2 = private unnamed_addr constant [30 x i8] c"alloc_save_state(global save)\00", align 1
  @.str.3 = private unnamed_addr constant [31 x i8] c"alloc_save_state(global inner)\00", align 1
  @st_alloc_change = internal global %struct.gs_memory_struct_type_s { i32 20, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i32 0, i32 0), %struct.struct_shared_procs_s* null, void (i8*, i32)* @change_clear_marks, %struct.gs_ptr_procs_s* (i8*, i32, i32, i8**)* @change_enum_ptrs, void (i8*, i32, %struct.gc_state_s*)* @change_reloc_ptrs, void (i8*)* null }, align 4
  @.str.4 = private unnamed_addr constant [18 x i8] c"alloc_save_change\00", align 1
  @gs_stderr = external global %struct._IO_FILE*, align 4
  @.str.5 = private unnamed_addr constant [8 x i8] c"isave.c\00", align 1
  @.str.6 = private unnamed_addr constant [53 x i8] c"Bad type %u for save!  pcont = 0x%lx, where = 0x%lx\0A\00", align 1
  @st_chunk = external global %struct.gs_memory_struct_type_s, align 4
  @.str.7 = private unnamed_addr constant [24 x i8] c"alloc_save_space(inner)\00", align 1
  @st_alloc_save = internal global %struct.gs_memory_struct_type_s { i32 716, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), %struct.struct_shared_procs_s* null, void (i8*, i32)* null, %struct.gs_ptr_procs_s* (i8*, i32, i32, i8**)* @save_enum_ptrs, void (i8*, i32, %struct.gc_state_s*)* @save_reloc_ptrs, void (i8*)* null }, align 4
  @.str.8 = private unnamed_addr constant [23 x i8] c"alloc_save_space(save)\00", align 1
  @.str.9 = private unnamed_addr constant [11 x i8] c"alloc_save\00", align 1
  @st_ref_memory = external global %struct.gs_memory_struct_type_s, align 4
  @ptr_struct_procs = external global %struct.gs_ptr_procs_s, align 4
  @.str.10 = private unnamed_addr constant [13 x i8] c"alloc_change\00", align 1
  @ptr_ref_procs = external global %struct.gs_ptr_procs_s, align 4
  @st_bytes = external global %struct.gs_memory_struct_type_s, align 4
  @.str.11 = private unnamed_addr constant [21 x i8] c"combine_space(inner)\00", align 1
  @.str.12 = private unnamed_addr constant [21 x i8] c"combine_space(saved)\00", align 1
  @.str.13 = private unnamed_addr constant [15 x i8] c"forget_changes\00", align 1
  @st_refs = external global %struct.gs_memory_struct_type_s, align 4
  
  ; Function Attrs: norecurse nounwind
  define void @alloc_save_init(%struct.gs_dual_memory_s* nocapture %dmem) #0 {
    %1 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 3
    store i32 0, i32* %1, align 4, !tbaa !1
    %2 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 5
    store i32 -1, i32* %2, align 4, !tbaa !7
    %3 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 6
    store i32 0, i32* %3, align 4, !tbaa !8
    ret void
  }
  
  ; Function Attrs: nounwind
  define i32 @alloc_save_state(%struct.gs_dual_memory_s* %dmem, i8* %cdata) #1 {
    %1 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 3
    %2 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %1, align 4, !tbaa !9
    %3 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 2
    %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %3, align 4, !tbaa !11
    %5 = tail call i32 @gs_next_ids(i32 signext 2) #5
    %6 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 3
    %7 = load i32, i32* %6, align 4, !tbaa !1
    %8 = icmp ne i32 %7, 0
    %9 = icmp eq %struct.gs_ref_memory_s* %4, %2
    %or.cond3 = or i1 %9, %8
    br i1 %or.cond3, label %.thread, label %10
  
  ; <label>:10                                      ; preds = %0
    %11 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %4, i32 0, i32 18
    %12 = load i32, i32* %11, align 4, !tbaa !12
    %13 = icmp eq i32 %12, 1
    br i1 %13, label %14, label %.thread
  
  ; <label>:14                                      ; preds = %10
    %15 = tail call fastcc %struct.alloc_save_s* @alloc_save_space(%struct.gs_ref_memory_s* nonnull %4, %struct.gs_dual_memory_s* nonnull %dmem)
    br label %.thread
  
  .thread:                                          ; preds = %14, %10, %0
    %16 = phi i1 [ true, %14 ], [ false, %10 ], [ false, %0 ]
    %17 = phi %struct.alloc_save_s* [ %15, %14 ], [ null, %10 ], [ null, %0 ]
    %18 = tail call fastcc %struct.alloc_save_s* @alloc_save_space(%struct.gs_ref_memory_s* %2, %struct.gs_dual_memory_s* nonnull %dmem)
    %19 = icmp eq %struct.alloc_save_s* %18, null
    %20 = icmp eq %struct.alloc_save_s* %17, null
    %or.cond = and i1 %16, %20
    %or.cond4 = or i1 %19, %or.cond
    br i1 %or.cond4, label %21, label %49
  
  ; <label>:21                                      ; preds = %.thread
    %22 = icmp eq %struct.alloc_save_s* %18, null
    br i1 %22, label %35, label %23
  
  ; <label>:23                                      ; preds = %21
    %24 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %2, i32 0, i32 11
    %25 = bitcast %struct.chunk_s** %24 to i8**
    %26 = load i8*, i8** %25, align 4, !tbaa !22
    %27 = bitcast %struct.gs_ref_memory_s* %2 to %struct.gs_memory_s*
    %28 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %2, i32 0, i32 0, i32 11
    %29 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %28, align 4, !tbaa !23
    %30 = bitcast %struct.alloc_save_s* %18 to i8*
    tail call void %29(%struct.gs_memory_s* %27, i8* %30, i8* nonnull getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i32 0, i32 0)) #5
    %31 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %2, i32 0, i32 1
    %32 = load %struct.gs_memory_s*, %struct.gs_memory_s** %31, align 4, !tbaa !25
    %33 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %32, i32 0, i32 0, i32 11
    %34 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %33, align 4, !tbaa !23
    tail call void %34(%struct.gs_memory_s* %32, i8* %26, i8* nonnull getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i32 0, i32 0)) #5
    br label %35
  
  ; <label>:35                                      ; preds = %23, %21
    %36 = icmp eq %struct.alloc_save_s* %17, null
    br i1 %36, label %85, label %37
  
  ; <label>:37                                      ; preds = %35
    %38 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %4, i32 0, i32 11
    %39 = bitcast %struct.chunk_s** %38 to i8**
    %40 = load i8*, i8** %39, align 4, !tbaa !22
    %41 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
    %42 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %4, i32 0, i32 0, i32 11
    %43 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %42, align 4, !tbaa !23
    %44 = bitcast %struct.alloc_save_s* %17 to i8*
    tail call void %43(%struct.gs_memory_s* %41, i8* %44, i8* nonnull getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i32 0, i32 0)) #5
    %45 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %4, i32 0, i32 1
    %46 = load %struct.gs_memory_s*, %struct.gs_memory_s** %45, align 4, !tbaa !25
    %47 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %46, i32 0, i32 0, i32 11
    %48 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %47, align 4, !tbaa !23
    tail call void %48(%struct.gs_memory_s* %46, i8* %40, i8* nonnull getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i32 0, i32 0)) #5
    br label %85
  
  ; <label>:49                                      ; preds = %.thread
    %50 = icmp eq %struct.alloc_save_s* %17, null
    br i1 %50, label %58, label %51
  
  ; <label>:51                                      ; preds = %49
    %52 = add i32 %5, 1
    %53 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %17, i32 0, i32 4
    store i32 %52, i32* %53, align 4, !tbaa !26
    %54 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %17, i32 0, i32 5
    store i8* null, i8** %54, align 4, !tbaa !28
    %55 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %17, i32 0, i32 2
    %56 = load i32, i32* %55, align 4, !tbaa !29
    %57 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %18, i32 0, i32 2
    store i32 %56, i32* %57, align 4, !tbaa !29
    store i32 0, i32* %55, align 4, !tbaa !29
    br label %58
  
  ; <label>:58                                      ; preds = %51, %49
    %59 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %18, i32 0, i32 4
    store i32 %5, i32* %59, align 4, !tbaa !26
    %60 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %18, i32 0, i32 5
    store i8* %cdata, i8** %60, align 4, !tbaa !28
    %sunkaddr = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr1 = add i32 %sunkaddr, 24
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i32*
    %61 = load i32, i32* %sunkaddr2, align 4, !tbaa !1
    %62 = icmp eq i32 %61, 0
    br i1 %62, label %80, label %63
  
  ; <label>:63                                      ; preds = %58
    %64 = bitcast %struct.alloc_save_s* %18 to %struct.gs_ref_memory_s*
    %65 = tail call fastcc i32 @save_set_new(%struct.gs_ref_memory_s* %64, i32 signext 0)
    %66 = icmp sgt i32 %65, 100000
    br i1 %66, label %67, label %80
  
  ; <label>:67                                      ; preds = %63
    tail call void @file_save() #5
    %68 = tail call fastcc %struct.alloc_save_s* @alloc_save_space(%struct.gs_ref_memory_s* %2, %struct.gs_dual_memory_s* nonnull %dmem)
    %69 = icmp eq %struct.alloc_save_s* %68, null
    br i1 %69, label %80, label %70
  
  ; <label>:70                                      ; preds = %67
    %71 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %68, i32 0, i32 4
    store i32 %5, i32* %71, align 4, !tbaa !26
    %72 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %68, i32 0, i32 5
    store i8* %cdata, i8** %72, align 4, !tbaa !28
    %sunkaddr3 = ptrtoint %struct.alloc_save_s* %18 to i32
    %sunkaddr4 = add i32 %sunkaddr3, 708
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to i32*
    store i32 0, i32* %sunkaddr5, align 4, !tbaa !26
    %sunkaddr6 = ptrtoint %struct.alloc_save_s* %18 to i32
    %sunkaddr7 = add i32 %sunkaddr6, 712
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to i8**
    store i8* null, i8** %sunkaddr8, align 4, !tbaa !28
    %73 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %18, i32 0, i32 0, i32 13
    %74 = load i32, i32* %73, align 4, !tbaa !30
    %75 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %18, i32 0, i32 0, i32 14
    %76 = load i32, i32* %75, align 4, !tbaa !31
    %77 = add i32 %76, %74
    %78 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %68, i32 0, i32 0, i32 14
    store i32 %77, i32* %78, align 4, !tbaa !31
    %79 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %2, i32 0, i32 14
    store i32 %77, i32* %79, align 4, !tbaa !32
    br label %80
  
  ; <label>:80                                      ; preds = %70, %67, %63, %58
    %sunkaddr9 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr10 = add i32 %sunkaddr9, 24
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to i32*
    %81 = load i32, i32* %sunkaddr11, align 4, !tbaa !1
    %82 = add nsw i32 %81, 1
    store i32 %82, i32* %sunkaddr11, align 4, !tbaa !1
    %83 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 6
    store i32 2, i32* %83, align 4, !tbaa !8
    %84 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 5
    store i32 2, i32* %84, align 4, !tbaa !7
    tail call void @file_save() #5
    br label %85
  
  ; <label>:85                                      ; preds = %80, %37, %35
    %.0 = phi i32 [ %5, %80 ], [ 0, %35 ], [ 0, %37 ]
    ret i32 %.0
  }
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.start(i64, i8* nocapture) #2
  
  declare i32 @gs_next_ids(i32 signext) #3
  
  ; Function Attrs: nounwind
  define internal fastcc %struct.alloc_save_s* @alloc_save_space(%struct.gs_ref_memory_s* %mem, %struct.gs_dual_memory_s* %dmem) unnamed_addr #1 {
    %save_mem = alloca %struct.gs_ref_memory_s, align 4
    %1 = bitcast %struct.gs_ref_memory_s* %save_mem to i8*
    call void @llvm.lifetime.start(i64 696, i8* %1)
    %2 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 10
    %3 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 10, i32 5
    %4 = bitcast i8** %3 to i32*
    %5 = load i32, i32* %4, align 4, !tbaa !33
    %6 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 10, i32 2
    %7 = bitcast i8** %6 to i32*
    %8 = load i32, i32* %7, align 4, !tbaa !34
    %9 = sub i32 %5, %8
    %10 = icmp ugt i32 %9, 24
    br i1 %10, label %11, label %19
  
  ; <label>:11                                      ; preds = %0
    %12 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 1
    %13 = load %struct.gs_memory_s*, %struct.gs_memory_s** %12, align 4, !tbaa !25
    %14 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %13, i32 0, i32 0, i32 2
    %15 = load i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)** %14, align 4, !tbaa !35
    %16 = tail call i8* %15(%struct.gs_memory_s* %13, %struct.gs_memory_struct_type_s* nonnull @st_chunk, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i32 0, i32 0)) #5
    %17 = bitcast i8* %16 to %struct.chunk_s*
    %18 = icmp eq i8* %16, null
    br i1 %18, label %73, label %19
  
  ; <label>:19                                      ; preds = %11, %0
    %inner.0 = phi %struct.chunk_s* [ %17, %11 ], [ null, %0 ]
    %20 = bitcast %struct.gs_ref_memory_s* %save_mem to i8*
    %21 = bitcast %struct.gs_ref_memory_s* %mem to i8*
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* %20, i8* %21, i32 696, i32 4, i1 false), !tbaa.struct !36
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* nonnull %mem) #5
    %22 = bitcast %struct.gs_ref_memory_s* %mem to %struct.gs_memory_s*
    %23 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 0, i32 18
    %24 = load void (%struct.gs_memory_s*, %struct.gs_memory_status_s*)*, void (%struct.gs_memory_s*, %struct.gs_memory_status_s*)** %23, align 4, !tbaa !42
    %25 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 22
    tail call void %24(%struct.gs_memory_s* %22, %struct.gs_memory_status_s* %25) #5
    tail call void @ialloc_reset(%struct.gs_ref_memory_s* nonnull %mem) #5
    %26 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 10, i32 8
    store %struct.chunk_s* null, %struct.chunk_s** %26, align 4, !tbaa !43
    %27 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 10, i32 9
    store %struct.chunk_s* null, %struct.chunk_s** %27, align 4, !tbaa !44
    %28 = icmp eq %struct.chunk_s* %inner.0, null
    br i1 %28, label %36, label %29
  
  ; <label>:29                                      ; preds = %19
    %sunkaddr = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr1 = add i32 %sunkaddr, 144
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i8**
    %30 = load i8*, i8** %sunkaddr2, align 4, !tbaa !34
    %sunkaddr3 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr4 = add i32 %sunkaddr3, 156
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to i8**
    %31 = load i8*, i8** %sunkaddr5, align 4, !tbaa !33
    %32 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 11
    %33 = load %struct.chunk_s*, %struct.chunk_s** %32, align 4, !tbaa !22
    tail call void @alloc_init_chunk(%struct.chunk_s* nonnull %2, i8* %30, i8* %31, i32 signext 1, %struct.chunk_s* %33) #5
    %34 = bitcast %struct.chunk_s* %inner.0 to i8*
    %35 = bitcast %struct.chunk_s* %2 to i8*
    tail call void @llvm.memcpy.p0i8.p0i8.i32(i8* %34, i8* %35, i32 92, i32 4, i1 false), !tbaa.struct !45
    store %struct.chunk_s* %inner.0, %struct.chunk_s** %32, align 4, !tbaa !22
    br label %38
  
  ; <label>:36                                      ; preds = %19
    %37 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 11
    store %struct.chunk_s* null, %struct.chunk_s** %37, align 4, !tbaa !22
    %sunkaddr6 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr7 = add i32 %sunkaddr6, 156
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to i8**
    store i8* null, i8** %sunkaddr8, align 4, !tbaa !33
    %sunkaddr9 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr10 = add i32 %sunkaddr9, 144
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to i8**
    store i8* null, i8** %sunkaddr11, align 4, !tbaa !34
    br label %38
  
  ; <label>:38                                      ; preds = %36, %29
    %inner.0.sink1 = phi %struct.chunk_s* [ null, %36 ], [ %inner.0, %29 ]
    %39 = bitcast %struct.gs_ref_memory_s* %mem to %struct.gs_memory_s*
    %40 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 9
    store %struct.chunk_s* %inner.0.sink1, %struct.chunk_s** %40, align 4
    %41 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 8
    store %struct.chunk_s* %inner.0.sink1, %struct.chunk_s** %41, align 4
    %42 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 0, i32 2
    %43 = load i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)** %42, align 4, !tbaa !35
    %44 = tail call i8* %43(%struct.gs_memory_s* nonnull %39, %struct.gs_memory_struct_type_s* nonnull @st_alloc_save, i8* nonnull getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #5
    %45 = icmp eq i8* %44, null
    br i1 %45, label %46, label %54
  
  ; <label>:46                                      ; preds = %38
    %47 = bitcast %struct.gs_ref_memory_s* %mem to i8*
    %48 = bitcast %struct.gs_ref_memory_s* %save_mem to i8*
    %49 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 1
    %50 = load %struct.gs_memory_s*, %struct.gs_memory_s** %49, align 4, !tbaa !25
    %51 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %50, i32 0, i32 0, i32 11
    %52 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %51, align 4, !tbaa !23
    %53 = bitcast %struct.chunk_s* %inner.0 to i8*
    tail call void %52(%struct.gs_memory_s* %50, i8* %53, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i32 0, i32 0)) #5
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull %47, i8* nonnull %48, i32 696, i32 4, i1 false), !tbaa.struct !36
    br label %73
  
  ; <label>:54                                      ; preds = %38
    %55 = bitcast %struct.gs_ref_memory_s* %mem to %struct.gs_memory_s*
    %56 = bitcast %struct.gs_ref_memory_s* %save_mem to i8*
    %57 = bitcast i8* %44 to %struct.alloc_save_s*
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull %44, i8* nonnull %56, i32 696, i32 4, i1 false), !tbaa.struct !36
    %58 = getelementptr inbounds i8, i8* %44, i32 696
    %59 = bitcast i8* %58 to %struct.gs_dual_memory_s**
    store %struct.gs_dual_memory_s* %dmem, %struct.gs_dual_memory_s** %59, align 4, !tbaa !46
    %60 = tail call %struct.gs_memory_s* @name_memory() #5
    %61 = icmp eq %struct.gs_memory_s* %60, %55
    %62 = zext i1 %61 to i32
    %63 = getelementptr inbounds i8, i8* %44, i32 700
    %64 = bitcast i8* %63 to i32*
    store i32 %62, i32* %64, align 4, !tbaa !29
    %65 = bitcast %struct.gs_dual_memory_s* %dmem to %struct.gs_ref_memory_s**
    %66 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %65, align 4, !tbaa !47
    %67 = icmp eq %struct.gs_ref_memory_s* %66, %mem
    %68 = zext i1 %67 to i32
    %69 = getelementptr inbounds i8, i8* %44, i32 704
    %70 = bitcast i8* %69 to i32*
    store i32 %68, i32* %70, align 4, !tbaa !48
    %71 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 20
    %72 = bitcast %struct.alloc_save_s** %71 to i8**
    store i8* %44, i8** %72, align 4, !tbaa !49
    br label %73
  
  ; <label>:73                                      ; preds = %54, %46, %11
    %.0 = phi %struct.alloc_save_s* [ null, %46 ], [ %57, %54 ], [ null, %11 ]
    %74 = bitcast %struct.gs_ref_memory_s* %save_mem to i8*
    call void @llvm.lifetime.end(i64 696, i8* %74)
    ret %struct.alloc_save_s* %.0
  }
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.end(i64, i8* nocapture) #2
  
  ; Function Attrs: norecurse nounwind
  define internal fastcc i32 @save_set_new(%struct.gs_ref_memory_s* nocapture readonly %mem, i32 signext %to_new) unnamed_addr #0 {
    %1 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 19
    %2 = icmp ne i32 %to_new, 0
    %3 = select i1 %2, i32 2, i32 0
    %chp.01.i = load %struct.alloc_change_s*, %struct.alloc_change_s** %1, align 4, !tbaa !37
    %4 = icmp eq %struct.alloc_change_s* %chp.01.i, null
    br i1 %4, label %save_set_new_changes.exit, label %.lr.ph.i
  
  .lr.ph.i:                                         ; preds = %0, %14
    %chp.02.i = phi %struct.alloc_change_s* [ %chp.0.i, %14 ], [ %chp.01.i, %0 ]
    %5 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %chp.02.i, i32 0, i32 1
    %6 = load i16*, i16** %5, align 4, !tbaa !50
    %7 = load i16, i16* %6, align 2, !tbaa !40
    %8 = zext i16 %7 to i32
    %9 = icmp ugt i16 %7, 16383
    br i1 %9, label %14, label %10
  
  ; <label>:10                                      ; preds = %.lr.ph.i
    %11 = and i32 %8, 65533
    %12 = or i32 %11, %3
    %13 = trunc i32 %12 to i16
    store i16 %13, i16* %6, align 4, !tbaa !54
    br label %14
  
  ; <label>:14                                      ; preds = %10, %.lr.ph.i
    %15 = bitcast %struct.alloc_change_s* %chp.02.i to %struct.alloc_change_s**
    %chp.0.i = load %struct.alloc_change_s*, %struct.alloc_change_s** %15, align 4, !tbaa !37
    %16 = icmp eq %struct.alloc_change_s* %chp.0.i, null
    br i1 %16, label %save_set_new_changes.exit, label %.lr.ph.i
  
  save_set_new_changes.exit:                        ; preds = %14, %0
    %17 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 8
    %cp.08 = load %struct.chunk_s*, %struct.chunk_s** %17, align 4, !tbaa !37
    %18 = icmp eq %struct.chunk_s* %cp.08, null
    br i1 %18, label %._crit_edge12, label %.lr.ph11
  
  .lr.ph11:                                         ; preds = %save_set_new_changes.exit
    br label %19
  
  ; <label>:19                                      ; preds = %70, %.lr.ph11
    %cp.010 = phi %struct.chunk_s* [ %cp.08, %.lr.ph11 ], [ %cp.0, %70 ]
    %scanned.09 = phi i32 [ 0, %.lr.ph11 ], [ %scanned.3, %70 ]
    %20 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.010, i32 0, i32 12
    %21 = load i32, i32* %20, align 4, !tbaa !55
    %22 = icmp eq i32 %21, 0
    br i1 %22, label %70, label %23
  
  ; <label>:23                                      ; preds = %19
    %24 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.010, i32 0, i32 1
    %25 = bitcast i8** %24 to %struct.obj_header_s**
    %26 = load %struct.obj_header_s*, %struct.obj_header_s** %25, align 4, !tbaa !56
    %27 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.010, i32 0, i32 2
    %28 = bitcast i8** %27 to %struct.obj_header_s**
    %29 = load %struct.obj_header_s*, %struct.obj_header_s** %28, align 4, !tbaa !57
    %30 = icmp ult %struct.obj_header_s* %26, %29
    br i1 %30, label %.lr.ph, label %._crit_edge
  
  .lr.ph:                                           ; preds = %23, %.loopexit
    %scanned.16 = phi i32 [ %scanned.2, %.loopexit ], [ %scanned.09, %23 ]
    %has_refs.05 = phi i32 [ %has_refs.1, %.loopexit ], [ 0, %23 ]
    %pre.04 = phi %struct.obj_header_s* [ %68, %.loopexit ], [ %26, %23 ]
    %31 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.04, i32 0, i32 0, i32 0, i32 1
    %32 = load i32, i32* %31, align 4, !tbaa !58
    %33 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.04, i32 0, i32 0, i32 0, i32 2, i32 0
    %34 = load %struct.gs_memory_struct_type_s*, %struct.gs_memory_struct_type_s** %33, align 4, !tbaa !37
    %35 = icmp eq %struct.gs_memory_struct_type_s* %34, @st_refs
    br i1 %35, label %36, label %.loopexit
  
  ; <label>:36                                      ; preds = %.lr.ph
    %37 = icmp eq i32 %to_new, 0
    %38 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.04, i32 1
    %39 = bitcast %struct.obj_header_s* %38 to i16*
    %40 = bitcast %struct.obj_header_s* %38 to i8*
    %41 = getelementptr inbounds i8, i8* %40, i32 %32
    br i1 %37, label %.preheader, label %.preheader1
  
  .preheader1:                                      ; preds = %45, %47, %36
    %prp.0 = phi i16* [ %39, %36 ], [ %46, %45 ], [ %51, %47 ]
    %42 = load i16, i16* %prp.0, align 2, !tbaa !40
    %43 = zext i16 %42 to i32
    %44 = icmp ugt i16 %42, 16383
    br i1 %44, label %45, label %47
  
  ; <label>:45                                      ; preds = %.preheader1
    %46 = getelementptr inbounds i16, i16* %prp.0, i32 1
    br label %.preheader1
  
  ; <label>:47                                      ; preds = %.preheader1
    %48 = bitcast i8* %41 to i16*
    %49 = or i32 %43, 2
    %50 = trunc i32 %49 to i16
    store i16 %50, i16* %prp.0, align 4, !tbaa !54
    %51 = getelementptr inbounds i16, i16* %prp.0, i32 4
    %52 = icmp ult i16* %51, %48
    br i1 %52, label %.preheader1, label %.loopexit
  
  .preheader:                                       ; preds = %56, %58, %36
    %prp.1 = phi i16* [ %39, %36 ], [ %57, %56 ], [ %62, %58 ]
    %53 = load i16, i16* %prp.1, align 2, !tbaa !40
    %54 = zext i16 %53 to i32
    %55 = icmp ugt i16 %53, 16383
    br i1 %55, label %56, label %58
  
  ; <label>:56                                      ; preds = %.preheader
    %57 = getelementptr inbounds i16, i16* %prp.1, i32 1
    br label %.preheader
  
  ; <label>:58                                      ; preds = %.preheader
    %59 = bitcast i8* %41 to i16*
    %60 = and i32 %54, 65533
    %61 = trunc i32 %60 to i16
    store i16 %61, i16* %prp.1, align 4, !tbaa !54
    %62 = getelementptr inbounds i16, i16* %prp.1, i32 4
    %63 = icmp ult i16* %62, %59
    br i1 %63, label %.preheader, label %.loopexit
  
  .loopexit:                                        ; preds = %47, %58, %.lr.ph
    %has_refs.1 = phi i32 [ %has_refs.05, %.lr.ph ], [ 1, %58 ], [ 1, %47 ]
    %.pn = phi i32 [ 16, %.lr.ph ], [ %32, %58 ], [ %32, %47 ]
    %scanned.2 = add i32 %.pn, %scanned.16
    %64 = bitcast %struct.obj_header_s* %pre.04 to i8*
    %65 = add i32 %32, 23
    %66 = and i32 %65, -8
    %67 = getelementptr inbounds i8, i8* %64, i32 %66
    %68 = bitcast i8* %67 to %struct.obj_header_s*
    %69 = icmp ult %struct.obj_header_s* %68, %29
    br i1 %69, label %.lr.ph, label %._crit_edge
  
  ._crit_edge:                                      ; preds = %.loopexit, %23
    %scanned.1.lcssa = phi i32 [ %scanned.09, %23 ], [ %scanned.2, %.loopexit ]
    %has_refs.0.lcssa = phi i32 [ 0, %23 ], [ %has_refs.1, %.loopexit ]
    %sunkaddr = ptrtoint %struct.chunk_s* %cp.010 to i32
    %sunkaddr1 = add i32 %sunkaddr, 48
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i32*
    store i32 %has_refs.0.lcssa, i32* %sunkaddr2, align 4, !tbaa !55
    br label %70
  
  ; <label>:70                                      ; preds = %._crit_edge, %19
    %scanned.3 = phi i32 [ %scanned.1.lcssa, %._crit_edge ], [ %scanned.09, %19 ]
    %71 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.010, i32 0, i32 9
    %cp.0 = load %struct.chunk_s*, %struct.chunk_s** %71, align 4, !tbaa !37
    %72 = icmp eq %struct.chunk_s* %cp.0, null
    br i1 %72, label %._crit_edge12, label %19
  
  ._crit_edge12:                                    ; preds = %70, %save_set_new_changes.exit
    %scanned.0.lcssa = phi i32 [ 0, %save_set_new_changes.exit ], [ %scanned.3, %70 ]
    ret i32 %scanned.0.lcssa
  }
  
  declare void @file_save() #3
  
  ; Function Attrs: nounwind
  define i32 @alloc_save_change(%struct.gs_dual_memory_s* nocapture readonly %dmem, %struct.ref_s* %pcont, i16* %where, i8* nocapture readnone %cname) #1 {
    %1 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 3
    %2 = load i32, i32* %1, align 4, !tbaa !1
    %3 = icmp eq i32 %2, 0
    br i1 %3, label %81, label %4
  
  ; <label>:4                                       ; preds = %0
    %5 = icmp eq %struct.ref_s* %pcont, null
    br i1 %5, label %6, label %8
  
  ; <label>:6                                       ; preds = %4
    %7 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 3
    br label %15
  
  ; <label>:8                                       ; preds = %4
    %9 = bitcast %struct.ref_s* %pcont to i16*
    %10 = load i16, i16* %9, align 4, !tbaa !54
    %11 = zext i16 %10 to i32
    %12 = lshr i32 %11, 2
    %13 = and i32 %12, 3
    %14 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 %13
    br label %15
  
  ; <label>:15                                      ; preds = %8, %6
    %.in = phi %struct.gs_ref_memory_s** [ %7, %6 ], [ %14, %8 ]
    %16 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %.in, align 4, !tbaa !37
    %17 = bitcast %struct.gs_ref_memory_s* %16 to %struct.gs_memory_s*
    %18 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %16, i32 0, i32 0, i32 2
    %19 = load i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)** %18, align 4, !tbaa !35
    %20 = tail call i8* %19(%struct.gs_memory_s* %17, %struct.gs_memory_struct_type_s* nonnull @st_alloc_change, i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i32 0, i32 0)) #5
    %21 = icmp eq i8* %20, null
    br i1 %21, label %81, label %22
  
  ; <label>:22                                      ; preds = %15
    %23 = icmp eq %struct.ref_s* %pcont, null
    %24 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %16, i32 0, i32 19
    %25 = bitcast %struct.alloc_change_s** %24 to i32*
    %26 = load i32, i32* %25, align 4, !tbaa !60
    %27 = bitcast i8* %20 to i32*
    store i32 %26, i32* %27, align 4, !tbaa !61
    %28 = getelementptr inbounds i8, i8* %20, i32 4
    %29 = bitcast i8* %28 to i16**
    store i16* %where, i16** %29, align 4, !tbaa !50
    br i1 %23, label %30, label %33
  
  ; <label>:30                                      ; preds = %22
    %31 = getelementptr inbounds i8, i8* %20, i32 16
    %32 = bitcast i8* %31 to i16*
    store i16 -2, i16* %32, align 4, !tbaa !62
    br label %64
  
  ; <label>:33                                      ; preds = %22
    %34 = bitcast %struct.ref_s* %pcont to i16*
    %35 = load i16, i16* %34, align 4, !tbaa !54
    %36 = zext i16 %35 to i32
    %37 = and i32 %36, 15360
    %38 = icmp eq i32 %37, 1024
    br i1 %38, label %41, label %39
  
  ; <label>:39                                      ; preds = %33
    %.mask = and i16 %35, -256
    %40 = icmp eq i16 %.mask, 512
    br i1 %40, label %41, label %44
  
  ; <label>:41                                      ; preds = %39, %33
    %42 = getelementptr inbounds i8, i8* %20, i32 16
    %43 = bitcast i8* %42 to i16*
    store i16 -1, i16* %43, align 4, !tbaa !62
    br label %64
  
  ; <label>:44                                      ; preds = %39
    %45 = and i32 %36, 15872
    %46 = icmp eq i32 %45, 2048
    br i1 %46, label %47, label %55
  
  ; <label>:47                                      ; preds = %44
    %48 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %pcont, i32 0, i32 1, i32 0
    %49 = load i32, i32* %48, align 4, !tbaa !37
    %50 = ptrtoint i16* %where to i32
    %51 = sub i32 %50, %49
    %52 = trunc i32 %51 to i16
    %53 = getelementptr inbounds i8, i8* %20, i32 16
    %54 = bitcast i8* %53 to i16*
    store i16 %52, i16* %54, align 4, !tbaa !62
    br label %64
  
  ; <label>:55                                      ; preds = %44
    %56 = bitcast %struct.ref_s* %pcont to i8*
    %57 = load %struct._IO_FILE*, %struct._IO_FILE** @gs_stderr, align 4, !tbaa !37
    tail call void @lprintf_file_and_line(%struct._IO_FILE* %57, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0), i32 signext 426) #5
    %58 = load %struct._IO_FILE*, %struct._IO_FILE** @gs_stderr, align 4, !tbaa !37
    %59 = load i8, i8* %56, align 4, !tbaa !41
    %60 = zext i8 %59 to i32
    %61 = ptrtoint %struct.ref_s* %pcont to i32
    %62 = ptrtoint i16* %where to i32
    %63 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %58, i8* nonnull getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i32 0, i32 0), i32 signext %60, i32 signext %61, i32 signext %62)
    tail call void @gs_exit(i32 signext 1) #5
    br label %64
  
  ; <label>:64                                      ; preds = %55, %47, %41, %30
    %65 = load i16, i16* %where, align 2, !tbaa !40
    %66 = icmp ugt i16 %65, 16383
    br i1 %66, label %67, label %68
  
  ; <label>:67                                      ; preds = %64
    %sunkaddr = ptrtoint i8* %20 to i32
    %sunkaddr1 = add i32 %sunkaddr, 8
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i16*
    store i16 %65, i16* %sunkaddr2, align 4, !tbaa !40
    br label %80
  
  ; <label>:68                                      ; preds = %64
    %69 = getelementptr inbounds i8, i8* %20, i32 12
    %70 = getelementptr inbounds i16, i16* %where, i32 2
    %71 = bitcast i16* %70 to i32*
    %72 = bitcast i8* %69 to i32*
    %73 = load i32, i32* %71, align 4
    store i32 %73, i32* %72, align 4
    %74 = bitcast i16* %where to i32*
    %75 = load i32, i32* %74, align 4
    %sunkaddr3 = ptrtoint i8* %20 to i32
    %sunkaddr4 = add i32 %sunkaddr3, 8
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to i32*
    store i32 %75, i32* %sunkaddr5, align 4
    %76 = load i16, i16* %where, align 4, !tbaa !54
    %77 = zext i16 %76 to i32
    %78 = or i32 %77, 2
    %79 = trunc i32 %78 to i16
    store i16 %79, i16* %where, align 4, !tbaa !54
    br label %80
  
  ; <label>:80                                      ; preds = %68, %67
    %sunkaddr6 = ptrtoint %struct.gs_ref_memory_s* %16 to i32
    %sunkaddr7 = add i32 %sunkaddr6, 272
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to i8**
    store i8* %20, i8** %sunkaddr8, align 4, !tbaa !60
    br label %81
  
  ; <label>:81                                      ; preds = %80, %15, %0
    %.0 = phi i32 [ 0, %80 ], [ 0, %0 ], [ -1, %15 ]
    ret i32 %.0
  }
  
  declare void @lprintf_file_and_line(%struct._IO_FILE*, i8*, i32 signext) #3
  
  ; Function Attrs: nounwind
  declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #1
  
  declare void @gs_exit(i32 signext) #3
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.memcpy.p0i8.p0i8.i32(i8* nocapture, i8* nocapture readonly, i32, i32, i1) #2
  
  ; Function Attrs: norecurse nounwind readonly
  define i32 @alloc_save_level(%struct.gs_dual_memory_s* nocapture readonly %dmem) #4 {
    %1 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 3
    %2 = load i32, i32* %1, align 4, !tbaa !1
    ret i32 %2
  }
  
  ; Function Attrs: norecurse nounwind readonly
  define %struct.alloc_save_s* @alloc_save_current(%struct.gs_dual_memory_s* nocapture readonly %dmem) #4 {
    %1 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 3
    %2 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %1, align 4, !tbaa !9
    %3 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %2, i32 0, i32 20
    %save.01 = load %struct.alloc_save_s*, %struct.alloc_save_s** %3, align 4, !tbaa !37
    %4 = icmp eq %struct.alloc_save_s* %save.01, null
    br i1 %4, label %.critedge, label %.lr.ph
  
  .lr.ph:                                           ; preds = %0, %8
    %save.02 = phi %struct.alloc_save_s* [ %save.0, %8 ], [ %save.01, %0 ]
    %5 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save.02, i32 0, i32 4
    %6 = load i32, i32* %5, align 4, !tbaa !26
    %7 = icmp eq i32 %6, 0
    br i1 %7, label %8, label %.critedge
  
  ; <label>:8                                       ; preds = %.lr.ph
    %9 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save.02, i32 0, i32 0, i32 20
    %save.0 = load %struct.alloc_save_s*, %struct.alloc_save_s** %9, align 4, !tbaa !37
    %10 = icmp eq %struct.alloc_save_s* %save.0, null
    br i1 %10, label %.critedge, label %.lr.ph
  
  .critedge:                                        ; preds = %.lr.ph, %8, %0
    %save.0.lcssa = phi %struct.alloc_save_s* [ null, %0 ], [ null, %8 ], [ %save.02, %.lr.ph ]
    ret %struct.alloc_save_s* %save.0.lcssa
  }
  
  ; Function Attrs: norecurse nounwind readonly
  define i32 @alloc_is_since_save(i8* readnone %vptr, %struct.alloc_save_s* readonly %save) #4 {
    %1 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 1
    %2 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %1, align 4, !tbaa !46
    %3 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 1, i32 0, i32 3
    %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %3, align 4, !tbaa !9
    %5 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %4, i32 0, i32 20
    %6 = load %struct.alloc_save_s*, %struct.alloc_save_s** %5, align 4, !tbaa !49
    %7 = icmp eq %struct.alloc_save_s* %6, null
    br i1 %7, label %.critedge, label %.preheader
  
  .preheader:                                       ; preds = %0, %._crit_edge
    %mem.0 = phi %struct.gs_ref_memory_s* [ %23, %._crit_edge ], [ %4, %0 ]
    %8 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem.0, i32 0, i32 8
    %cp.010 = load %struct.chunk_s*, %struct.chunk_s** %8, align 4, !tbaa !37
    %9 = icmp eq %struct.chunk_s* %cp.010, null
    br i1 %9, label %._crit_edge, label %.lr.ph12
  
  .lr.ph12:                                         ; preds = %.preheader, %17
    %cp.011 = phi %struct.chunk_s* [ %cp.0, %17 ], [ %cp.010, %.preheader ]
    %10 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011, i32 0, i32 1
    %11 = load i8*, i8** %10, align 4, !tbaa !56
    %12 = icmp ugt i8* %11, %vptr
    br i1 %12, label %17, label %13
  
  ; <label>:13                                      ; preds = %.lr.ph12
    %14 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011, i32 0, i32 7
    %15 = load i8*, i8** %14, align 4, !tbaa !63
    %16 = icmp ugt i8* %15, %vptr
    br i1 %16, label %.critedge, label %17
  
  ; <label>:17                                      ; preds = %13, %.lr.ph12
    %18 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011, i32 0, i32 9
    %cp.0 = load %struct.chunk_s*, %struct.chunk_s** %18, align 4, !tbaa !37
    %19 = icmp eq %struct.chunk_s* %cp.0, null
    br i1 %19, label %._crit_edge, label %.lr.ph12
  
  ._crit_edge:                                      ; preds = %17, %.preheader
    %20 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem.0, i32 0, i32 20
    %21 = load %struct.alloc_save_s*, %struct.alloc_save_s** %20, align 4, !tbaa !49
    %22 = icmp eq %struct.alloc_save_s* %21, %save
    %23 = bitcast %struct.alloc_save_s* %21 to %struct.gs_ref_memory_s*
    br i1 %22, label %24, label %.preheader
  
  ; <label>:24                                      ; preds = %._crit_edge
    %25 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 3
    %26 = load i32, i32* %25, align 4, !tbaa !1
    %27 = icmp eq i32 %26, 1
    br i1 %27, label %28, label %.critedge
  
  ; <label>:28                                      ; preds = %24
    %29 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 1, i32 0, i32 2
    %30 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %29, align 4, !tbaa !11
    %31 = icmp eq %struct.gs_ref_memory_s* %30, %4
    br i1 %31, label %.critedge, label %32
  
  ; <label>:32                                      ; preds = %28
    %33 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %30, i32 0, i32 8
    %cp1.06 = load %struct.chunk_s*, %struct.chunk_s** %33, align 4, !tbaa !37
    %34 = icmp eq %struct.chunk_s* %cp1.06, null
    br i1 %34, label %.critedge, label %.lr.ph
  
  .lr.ph:                                           ; preds = %32, %42
    %cp1.07 = phi %struct.chunk_s* [ %cp1.0, %42 ], [ %cp1.06, %32 ]
    %35 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07, i32 0, i32 1
    %36 = load i8*, i8** %35, align 4, !tbaa !56
    %37 = icmp ugt i8* %36, %vptr
    br i1 %37, label %42, label %38
  
  ; <label>:38                                      ; preds = %.lr.ph
    %39 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07, i32 0, i32 7
    %40 = load i8*, i8** %39, align 4, !tbaa !63
    %41 = icmp ugt i8* %40, %vptr
    br i1 %41, label %.critedge, label %42
  
  ; <label>:42                                      ; preds = %38, %.lr.ph
    %43 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07, i32 0, i32 9
    %cp1.0 = load %struct.chunk_s*, %struct.chunk_s** %43, align 4, !tbaa !37
    %44 = icmp eq %struct.chunk_s* %cp1.0, null
    br i1 %44, label %.critedge, label %.lr.ph
  
  .critedge:                                        ; preds = %13, %38, %42, %32, %28, %24, %0
    %.3 = phi i32 [ 1, %0 ], [ 0, %28 ], [ 0, %24 ], [ 0, %32 ], [ 0, %42 ], [ 1, %38 ], [ 1, %13 ]
    ret i32 %.3
  }
  
  ; Function Attrs: norecurse nounwind readonly
  define i32 @alloc_name_is_since_save(%struct.ref_s* nocapture readonly %pnref, %struct.alloc_save_s* readonly %save) #4 {
    %1 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 2
    %2 = load i32, i32* %1, align 4, !tbaa !29
    %3 = icmp eq i32 %2, 0
    br i1 %3, label %alloc_is_since_save.exit, label %4
  
  ; <label>:4                                       ; preds = %0
    %5 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %pnref, i32 0, i32 1
    %6 = bitcast %union.v* %5 to %struct.name_s**
    %7 = load %struct.name_s*, %struct.name_s** %6, align 4, !tbaa !37
    %8 = getelementptr inbounds %struct.name_s, %struct.name_s* %7, i32 0, i32 1
    %9 = load i16, i16* %8, align 2
    %10 = icmp slt i16 %9, 0
    br i1 %10, label %alloc_is_since_save.exit, label %11
  
  ; <label>:11                                      ; preds = %4
    %12 = getelementptr inbounds %struct.name_s, %struct.name_s* %7, i32 0, i32 2
    %13 = load i8*, i8** %12, align 4, !tbaa !64
    %14 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 1
    %15 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %14, align 4, !tbaa !46
    %16 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %15, i32 0, i32 1, i32 0, i32 3
    %17 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %16, align 4, !tbaa !9
    %18 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %17, i32 0, i32 20
    %19 = load %struct.alloc_save_s*, %struct.alloc_save_s** %18, align 4, !tbaa !49
    %20 = icmp eq %struct.alloc_save_s* %19, null
    br i1 %20, label %alloc_is_since_save.exit, label %.preheader.i
  
  .preheader.i:                                     ; preds = %11, %._crit_edge.i
    %mem.0.i = phi %struct.gs_ref_memory_s* [ %36, %._crit_edge.i ], [ %17, %11 ]
    %21 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem.0.i, i32 0, i32 8
    %cp.010.i = load %struct.chunk_s*, %struct.chunk_s** %21, align 4, !tbaa !37
    %22 = icmp eq %struct.chunk_s* %cp.010.i, null
    br i1 %22, label %._crit_edge.i, label %.lr.ph12.i
  
  .lr.ph12.i:                                       ; preds = %.preheader.i, %30
    %cp.011.i = phi %struct.chunk_s* [ %cp.0.i, %30 ], [ %cp.010.i, %.preheader.i ]
    %23 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011.i, i32 0, i32 1
    %24 = load i8*, i8** %23, align 4, !tbaa !56
    %25 = icmp ugt i8* %24, %13
    br i1 %25, label %30, label %26
  
  ; <label>:26                                      ; preds = %.lr.ph12.i
    %27 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011.i, i32 0, i32 7
    %28 = load i8*, i8** %27, align 4, !tbaa !63
    %29 = icmp ugt i8* %28, %13
    br i1 %29, label %alloc_is_since_save.exit, label %30
  
  ; <label>:30                                      ; preds = %26, %.lr.ph12.i
    %31 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011.i, i32 0, i32 9
    %cp.0.i = load %struct.chunk_s*, %struct.chunk_s** %31, align 4, !tbaa !37
    %32 = icmp eq %struct.chunk_s* %cp.0.i, null
    br i1 %32, label %._crit_edge.i, label %.lr.ph12.i
  
  ._crit_edge.i:                                    ; preds = %30, %.preheader.i
    %33 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem.0.i, i32 0, i32 20
    %34 = load %struct.alloc_save_s*, %struct.alloc_save_s** %33, align 4, !tbaa !49
    %35 = icmp eq %struct.alloc_save_s* %34, %save
    %36 = bitcast %struct.alloc_save_s* %34 to %struct.gs_ref_memory_s*
    br i1 %35, label %37, label %.preheader.i
  
  ; <label>:37                                      ; preds = %._crit_edge.i
    %38 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %15, i32 0, i32 3
    %39 = load i32, i32* %38, align 4, !tbaa !1
    %40 = icmp eq i32 %39, 1
    br i1 %40, label %41, label %alloc_is_since_save.exit
  
  ; <label>:41                                      ; preds = %37
    %42 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %15, i32 0, i32 1, i32 0, i32 2
    %43 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %42, align 4, !tbaa !11
    %44 = icmp eq %struct.gs_ref_memory_s* %43, %17
    br i1 %44, label %alloc_is_since_save.exit, label %45
  
  ; <label>:45                                      ; preds = %41
    %46 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %43, i32 0, i32 8
    %cp1.06.i = load %struct.chunk_s*, %struct.chunk_s** %46, align 4, !tbaa !37
    %47 = icmp eq %struct.chunk_s* %cp1.06.i, null
    br i1 %47, label %alloc_is_since_save.exit, label %.lr.ph.i
  
  .lr.ph.i:                                         ; preds = %45, %55
    %cp1.07.i = phi %struct.chunk_s* [ %cp1.0.i, %55 ], [ %cp1.06.i, %45 ]
    %48 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07.i, i32 0, i32 1
    %49 = load i8*, i8** %48, align 4, !tbaa !56
    %50 = icmp ugt i8* %49, %13
    br i1 %50, label %55, label %51
  
  ; <label>:51                                      ; preds = %.lr.ph.i
    %52 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07.i, i32 0, i32 7
    %53 = load i8*, i8** %52, align 4, !tbaa !63
    %54 = icmp ugt i8* %53, %13
    br i1 %54, label %alloc_is_since_save.exit, label %55
  
  ; <label>:55                                      ; preds = %51, %.lr.ph.i
    %56 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07.i, i32 0, i32 9
    %cp1.0.i = load %struct.chunk_s*, %struct.chunk_s** %56, align 4, !tbaa !37
    %57 = icmp eq %struct.chunk_s* %cp1.0.i, null
    br i1 %57, label %alloc_is_since_save.exit, label %.lr.ph.i
  
  alloc_is_since_save.exit:                         ; preds = %26, %51, %55, %45, %41, %37, %11, %4, %0
    %.0 = phi i32 [ 0, %0 ], [ 0, %4 ], [ 1, %11 ], [ 0, %41 ], [ 0, %37 ], [ 0, %45 ], [ 1, %51 ], [ 0, %55 ], [ 1, %26 ]
    ret i32 %.0
  }
  
  ; Function Attrs: nounwind
  define i32 @alloc_name_index_is_since_save(i32 signext %nidx, %struct.alloc_save_s* readonly %save) #1 {
    %1 = tail call %struct.name_s* @name_index_ptr(i32 signext %nidx) #5
    %2 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 2
    %3 = load i32, i32* %2, align 4, !tbaa !29
    %4 = icmp eq i32 %3, 0
    br i1 %4, label %alloc_name_is_since_save.exit, label %5
  
  ; <label>:5                                       ; preds = %0
    %6 = getelementptr inbounds %struct.name_s, %struct.name_s* %1, i32 0, i32 1
    %7 = load i16, i16* %6, align 2
    %8 = icmp slt i16 %7, 0
    br i1 %8, label %alloc_name_is_since_save.exit, label %9
  
  ; <label>:9                                       ; preds = %5
    %10 = getelementptr inbounds %struct.name_s, %struct.name_s* %1, i32 0, i32 2
    %11 = load i8*, i8** %10, align 4, !tbaa !64
    %12 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 1
    %13 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %12, align 4, !tbaa !46
    %14 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %13, i32 0, i32 1, i32 0, i32 3
    %15 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %14, align 4, !tbaa !9
    %16 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %15, i32 0, i32 20
    %17 = load %struct.alloc_save_s*, %struct.alloc_save_s** %16, align 4, !tbaa !49
    %18 = icmp eq %struct.alloc_save_s* %17, null
    br i1 %18, label %alloc_name_is_since_save.exit, label %.preheader.i.i
  
  .preheader.i.i:                                   ; preds = %9, %._crit_edge.i.i
    %mem.0.i.i = phi %struct.gs_ref_memory_s* [ %34, %._crit_edge.i.i ], [ %15, %9 ]
    %19 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem.0.i.i, i32 0, i32 8
    %cp.010.i.i = load %struct.chunk_s*, %struct.chunk_s** %19, align 4, !tbaa !37
    %20 = icmp eq %struct.chunk_s* %cp.010.i.i, null
    br i1 %20, label %._crit_edge.i.i, label %.lr.ph12.i.i
  
  .lr.ph12.i.i:                                     ; preds = %.preheader.i.i, %28
    %cp.011.i.i = phi %struct.chunk_s* [ %cp.0.i.i, %28 ], [ %cp.010.i.i, %.preheader.i.i ]
    %21 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011.i.i, i32 0, i32 1
    %22 = load i8*, i8** %21, align 4, !tbaa !56
    %23 = icmp ugt i8* %22, %11
    br i1 %23, label %28, label %24
  
  ; <label>:24                                      ; preds = %.lr.ph12.i.i
    %25 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011.i.i, i32 0, i32 7
    %26 = load i8*, i8** %25, align 4, !tbaa !63
    %27 = icmp ugt i8* %26, %11
    br i1 %27, label %alloc_name_is_since_save.exit, label %28
  
  ; <label>:28                                      ; preds = %24, %.lr.ph12.i.i
    %29 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011.i.i, i32 0, i32 9
    %cp.0.i.i = load %struct.chunk_s*, %struct.chunk_s** %29, align 4, !tbaa !37
    %30 = icmp eq %struct.chunk_s* %cp.0.i.i, null
    br i1 %30, label %._crit_edge.i.i, label %.lr.ph12.i.i
  
  ._crit_edge.i.i:                                  ; preds = %28, %.preheader.i.i
    %31 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem.0.i.i, i32 0, i32 20
    %32 = load %struct.alloc_save_s*, %struct.alloc_save_s** %31, align 4, !tbaa !49
    %33 = icmp eq %struct.alloc_save_s* %32, %save
    %34 = bitcast %struct.alloc_save_s* %32 to %struct.gs_ref_memory_s*
    br i1 %33, label %35, label %.preheader.i.i
  
  ; <label>:35                                      ; preds = %._crit_edge.i.i
    %36 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %13, i32 0, i32 3
    %37 = load i32, i32* %36, align 4, !tbaa !1
    %38 = icmp eq i32 %37, 1
    br i1 %38, label %39, label %alloc_name_is_since_save.exit
  
  ; <label>:39                                      ; preds = %35
    %40 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %13, i32 0, i32 1, i32 0, i32 2
    %41 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %40, align 4, !tbaa !11
    %42 = icmp eq %struct.gs_ref_memory_s* %41, %15
    br i1 %42, label %alloc_name_is_since_save.exit, label %43
  
  ; <label>:43                                      ; preds = %39
    %44 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %41, i32 0, i32 8
    %cp1.06.i.i = load %struct.chunk_s*, %struct.chunk_s** %44, align 4, !tbaa !37
    %45 = icmp eq %struct.chunk_s* %cp1.06.i.i, null
    br i1 %45, label %alloc_name_is_since_save.exit, label %.lr.ph.i.i
  
  .lr.ph.i.i:                                       ; preds = %43, %53
    %cp1.07.i.i = phi %struct.chunk_s* [ %cp1.0.i.i, %53 ], [ %cp1.06.i.i, %43 ]
    %46 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07.i.i, i32 0, i32 1
    %47 = load i8*, i8** %46, align 4, !tbaa !56
    %48 = icmp ugt i8* %47, %11
    br i1 %48, label %53, label %49
  
  ; <label>:49                                      ; preds = %.lr.ph.i.i
    %50 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07.i.i, i32 0, i32 7
    %51 = load i8*, i8** %50, align 4, !tbaa !63
    %52 = icmp ugt i8* %51, %11
    br i1 %52, label %alloc_name_is_since_save.exit, label %53
  
  ; <label>:53                                      ; preds = %49, %.lr.ph.i.i
    %54 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07.i.i, i32 0, i32 9
    %cp1.0.i.i = load %struct.chunk_s*, %struct.chunk_s** %54, align 4, !tbaa !37
    %55 = icmp eq %struct.chunk_s* %cp1.0.i.i, null
    br i1 %55, label %alloc_name_is_since_save.exit, label %.lr.ph.i.i
  
  alloc_name_is_since_save.exit:                    ; preds = %24, %49, %53, %43, %39, %35, %9, %5, %0
    %.0.i = phi i32 [ 0, %0 ], [ 0, %5 ], [ 1, %9 ], [ 0, %39 ], [ 0, %35 ], [ 0, %43 ], [ 0, %53 ], [ 1, %49 ], [ 1, %24 ]
    ret i32 %.0.i
  }
  
  declare %struct.name_s* @name_index_ptr(i32 signext) #3
  
  ; Function Attrs: norecurse nounwind readonly
  define i32 @alloc_any_names_since_save(%struct.alloc_save_s* nocapture readonly %save) #4 {
    %1 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 2
    %2 = load i32, i32* %1, align 4, !tbaa !29
    ret i32 %2
  }
  
  ; Function Attrs: norecurse nounwind readonly
  define %struct.alloc_save_s* @alloc_find_save(%struct.gs_dual_memory_s* nocapture readonly %dmem, i32 signext %sid) #4 {
    %1 = icmp eq i32 %sid, 0
    br i1 %1, label %.loopexit, label %.preheader
  
  .preheader:                                       ; preds = %0
    %2 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 3
    %3 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %2, align 4, !tbaa !9
    %4 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %3, i32 0, i32 20
    %sprev.01 = load %struct.alloc_save_s*, %struct.alloc_save_s** %4, align 4, !tbaa !37
    %5 = icmp eq %struct.alloc_save_s* %sprev.01, null
    br i1 %5, label %.loopexit, label %.lr.ph
  
  .lr.ph:                                           ; preds = %.preheader, %9
    %sprev.02 = phi %struct.alloc_save_s* [ %sprev.0, %9 ], [ %sprev.01, %.preheader ]
    %6 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %sprev.02, i32 0, i32 4
    %7 = load i32, i32* %6, align 4, !tbaa !26
    %8 = icmp eq i32 %7, %sid
    br i1 %8, label %.loopexit, label %9
  
  ; <label>:9                                       ; preds = %.lr.ph
    %10 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %sprev.02, i32 0, i32 0, i32 20
    %sprev.0 = load %struct.alloc_save_s*, %struct.alloc_save_s** %10, align 4, !tbaa !37
    %11 = icmp eq %struct.alloc_save_s* %sprev.0, null
    br i1 %11, label %.loopexit, label %.lr.ph
  
  .loopexit:                                        ; preds = %.lr.ph, %9, %.preheader, %0
    %.0 = phi %struct.alloc_save_s* [ null, %0 ], [ null, %.preheader ], [ %sprev.02, %.lr.ph ], [ null, %9 ]
    ret %struct.alloc_save_s* %.0
  }
  
  ; Function Attrs: norecurse nounwind readonly
  define i8* @alloc_save_client_data(%struct.alloc_save_s* nocapture readonly %save) #4 {
    %1 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 5
    %2 = load i8*, i8** %1, align 4, !tbaa !28
    ret i8* %2
  }
  
  ; Function Attrs: nounwind
  define i32 @alloc_restore_state_step(%struct.alloc_save_s* readonly %save) #1 {
    %saved.sroa.0.i15 = alloca %struct.gs_ref_memory_s, align 8
    %saved.sroa.0.i = alloca %struct.gs_ref_memory_s, align 8
    %1 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 1
    %2 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %1, align 4, !tbaa !46
    %3 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 1, i32 0, i32 3
    %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %3, align 4, !tbaa !9
    br label %5
  
  ; <label>:5                                       ; preds = %93, %0
    %6 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
    %sunkaddr = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr1 = add i32 %sunkaddr, 276
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to %struct.alloc_save_s**
    %7 = load %struct.alloc_save_s*, %struct.alloc_save_s** %sunkaddr2, align 4, !tbaa !49
    %8 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %7, i32 0, i32 4
    %9 = load i32, i32* %8, align 4, !tbaa !26
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* %4) #5
    %sunkaddr3 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr4 = add i32 %sunkaddr3, 76
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to void (%struct.gs_memory_s*, i32)**
    %10 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %sunkaddr5, align 4, !tbaa !66
    tail call void %10(%struct.gs_memory_s* %6, i32 signext 0) #5
    %sunkaddr6 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr7 = add i32 %sunkaddr6, 132
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to %struct.chunk_s**
    %cp.02.i = load %struct.chunk_s*, %struct.chunk_s** %sunkaddr8, align 4, !tbaa !37
    %11 = icmp eq %struct.chunk_s* %cp.02.i, null
    br i1 %11, label %restore_finalize.exit, label %.lr.ph5.i
  
  .lr.ph5.i:                                        ; preds = %5, %._crit_edge.i
    %cp.03.i = phi %struct.chunk_s* [ %cp.0.i, %._crit_edge.i ], [ %cp.02.i, %5 ]
    %12 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i, i32 0, i32 1
    %13 = bitcast i8** %12 to %struct.obj_header_s**
    %14 = load %struct.obj_header_s*, %struct.obj_header_s** %13, align 4, !tbaa !56
    %15 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i, i32 0, i32 2
    %16 = bitcast i8** %15 to %struct.obj_header_s**
    %17 = load %struct.obj_header_s*, %struct.obj_header_s** %16, align 4, !tbaa !57
    %18 = icmp ult %struct.obj_header_s* %14, %17
    br i1 %18, label %.lr.ph.i, label %._crit_edge.i
  
  .lr.ph.i:                                         ; preds = %.lr.ph5.i, %29
    %pre.01.i = phi %struct.obj_header_s* [ %34, %29 ], [ %14, %.lr.ph5.i ]
    %19 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i, i32 0, i32 0, i32 0, i32 1
    %20 = load i32, i32* %19, align 4, !tbaa !58
    %21 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i, i32 0, i32 0, i32 0, i32 2, i32 0
    %22 = load %struct.gs_memory_struct_type_s*, %struct.gs_memory_struct_type_s** %21, align 4, !tbaa !37
    %23 = getelementptr inbounds %struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* %22, i32 0, i32 6
    %24 = load void (i8*)*, void (i8*)** %23, align 4, !tbaa !67
    %25 = icmp eq void (i8*)* %24, null
    br i1 %25, label %29, label %26
  
  ; <label>:26                                      ; preds = %.lr.ph.i
    %27 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i, i32 1
    %28 = bitcast %struct.obj_header_s* %27 to i8*
    tail call void %24(i8* %28) #5
    br label %29
  
  ; <label>:29                                      ; preds = %26, %.lr.ph.i
    %30 = bitcast %struct.obj_header_s* %pre.01.i to i8*
    %31 = add i32 %20, 23
    %32 = and i32 %31, -8
    %33 = getelementptr inbounds i8, i8* %30, i32 %32
    %34 = bitcast i8* %33 to %struct.obj_header_s*
    %35 = icmp ult %struct.obj_header_s* %34, %17
    br i1 %35, label %.lr.ph.i, label %._crit_edge.i
  
  ._crit_edge.i:                                    ; preds = %29, %.lr.ph5.i
    %36 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i, i32 0, i32 8
    %cp.0.i = load %struct.chunk_s*, %struct.chunk_s** %36, align 4, !tbaa !37
    %37 = icmp eq %struct.chunk_s* %cp.0.i, null
    br i1 %37, label %restore_finalize.exit, label %.lr.ph5.i
  
  restore_finalize.exit:                            ; preds = %._crit_edge.i, %5
    %38 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
    %sunkaddr9 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr10 = add i32 %sunkaddr9, 76
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to void (%struct.gs_memory_s*, i32)**
    %39 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %sunkaddr11, align 4, !tbaa !66
    tail call void %39(%struct.gs_memory_s* %38, i32 signext 1) #5
    tail call void @file_restore(%struct.alloc_save_s* %7, %struct.gs_memory_s* %38) #5
    tail call void @font_restore(%struct.alloc_save_s* %7) #5
    %40 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %7, i32 0, i32 2
    %41 = load i32, i32* %40, align 4, !tbaa !29
    %42 = icmp eq i32 %41, 0
    br i1 %42, label %restore_resources.exit, label %43
  
  ; <label>:43                                      ; preds = %restore_finalize.exit
    tail call void @name_restore(%struct.alloc_save_s* nonnull %7) #5
    br label %restore_resources.exit
  
  restore_resources.exit:                           ; preds = %43, %restore_finalize.exit
    %44 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i to i8*
    %sunkaddr12 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr13 = add i32 %sunkaddr12, 276
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to %struct.alloc_save_s**
    %45 = load %struct.alloc_save_s*, %struct.alloc_save_s** %sunkaddr14, align 4, !tbaa !49
    call void @llvm.lifetime.start(i64 696, i8* %44)
    %sunkaddr15 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr16 = add i32 %sunkaddr15, 272
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to %struct.alloc_change_s**
    %cp.02.i1 = load %struct.alloc_change_s*, %struct.alloc_change_s** %sunkaddr17, align 4, !tbaa !37
    %46 = icmp eq %struct.alloc_change_s* %cp.02.i1, null
    br i1 %46, label %._crit_edge.i5, label %.lr.ph.i3
  
  .lr.ph.i3:                                        ; preds = %restore_resources.exit, %60
    %cp.03.i2 = phi %struct.alloc_change_s* [ %cp.0.i4, %60 ], [ %cp.02.i1, %restore_resources.exit ]
    %47 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %cp.03.i2, i32 0, i32 2
    %48 = bitcast %struct.ref_s* %47 to i16*
    %49 = load i16, i16* %48, align 4, !tbaa !40
    %50 = icmp ugt i16 %49, 16383
    br i1 %50, label %51, label %53
  
  ; <label>:51                                      ; preds = %.lr.ph.i3
    %sunkaddr18 = ptrtoint %struct.alloc_change_s* %cp.03.i2 to i32
    %sunkaddr19 = add i32 %sunkaddr18, 4
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to i16**
    %52 = load i16*, i16** %sunkaddr20, align 4, !tbaa !50
    store i16 %49, i16* %52, align 2, !tbaa !40
    br label %60
  
  ; <label>:53                                      ; preds = %.lr.ph.i3
    %sunkaddr21 = ptrtoint %struct.alloc_change_s* %cp.03.i2 to i32
    %sunkaddr22 = add i32 %sunkaddr21, 4
    %sunkaddr23 = inttoptr i32 %sunkaddr22 to %struct.ref_s**
    %54 = load %struct.ref_s*, %struct.ref_s** %sunkaddr23, align 4, !tbaa !50
    %55 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %cp.03.i2, i32 0, i32 2, i32 1, i32 0
    %56 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %54, i32 0, i32 1, i32 0
    %57 = load i32, i32* %55, align 4
    store i32 %57, i32* %56, align 4
    %sunkaddr24 = ptrtoint %struct.alloc_change_s* %cp.03.i2 to i32
    %sunkaddr25 = add i32 %sunkaddr24, 4
    %sunkaddr26 = inttoptr i32 %sunkaddr25 to i32**
    %58 = load i32*, i32** %sunkaddr26, align 4, !tbaa !50
    %sunkaddr27 = ptrtoint %struct.alloc_change_s* %cp.03.i2 to i32
    %sunkaddr28 = add i32 %sunkaddr27, 8
    %sunkaddr29 = inttoptr i32 %sunkaddr28 to i32*
    %59 = load i32, i32* %sunkaddr29, align 4
    store i32 %59, i32* %58, align 4
    br label %60
  
  ; <label>:60                                      ; preds = %53, %51
    %61 = bitcast %struct.alloc_change_s* %cp.03.i2 to %struct.alloc_change_s**
    %cp.0.i4 = load %struct.alloc_change_s*, %struct.alloc_change_s** %61, align 4, !tbaa !37
    %62 = icmp eq %struct.alloc_change_s* %cp.0.i4, null
    br i1 %62, label %._crit_edge.i5, label %.lr.ph.i3
  
  ._crit_edge.i5:                                   ; preds = %60, %restore_resources.exit
    %63 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i to i8*
    %64 = bitcast %struct.alloc_save_s* %45 to i8*
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* %63, i8* %64, i32 696, i32 4, i1 false) #5
    %65 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %45, i32 0, i32 1
    %66 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %65, align 4
    %67 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %45, i32 0, i32 3
    %68 = load i32, i32* %67, align 4
    %sunkaddr30 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr31 = add i32 %sunkaddr30, 132
    %sunkaddr32 = inttoptr i32 %sunkaddr31 to %struct.chunk_s**
    %69 = load %struct.chunk_s*, %struct.chunk_s** %sunkaddr32, align 4, !tbaa !69
    %70 = icmp eq %struct.chunk_s* %69, null
    br i1 %70, label %restore_free.exit, label %.lr.ph.i22
  
  .lr.ph.i22:                                       ; preds = %._crit_edge.i5, %.backedge.i
    %cp.01.i = phi %struct.chunk_s* [ %73, %.backedge.i ], [ %69, %._crit_edge.i5 ]
    %71 = bitcast %struct.gs_ref_memory_s* %4 to i8*
    %72 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i, i32 0, i32 8
    %73 = load %struct.chunk_s*, %struct.chunk_s** %72, align 4, !tbaa !70
    %74 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i, i32 0, i32 1
    %75 = load i8*, i8** %74, align 4, !tbaa !56
    %76 = getelementptr inbounds i8, i8* %75, i32 16
    %77 = icmp eq i8* %76, %71
    br i1 %77, label %.backedge.i, label %79
  
  .backedge.i:                                      ; preds = %79, %.lr.ph.i22
    %78 = icmp eq %struct.chunk_s* %73, null
    br i1 %78, label %restore_free.exit, label %.lr.ph.i22
  
  ; <label>:79                                      ; preds = %.lr.ph.i22
    tail call void @alloc_free_chunk(%struct.chunk_s* nonnull %cp.01.i, %struct.gs_ref_memory_s* %4) #5
    br label %.backedge.i
  
  restore_free.exit:                                ; preds = %.backedge.i, %._crit_edge.i5
    %80 = bitcast %struct.gs_ref_memory_s* %4 to i8*
    %81 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i to i8*
    %sunkaddr33 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr34 = add i32 %sunkaddr33, 268
    %sunkaddr35 = inttoptr i32 %sunkaddr34 to i32*
    %82 = load i32, i32* %sunkaddr35, align 4, !tbaa !12
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* %80, i8* %81, i32 696, i32 4, i1 false) #5
    store i32 %82, i32* %sunkaddr35, align 4, !tbaa !12
    tail call void @alloc_open_chunk(%struct.gs_ref_memory_s* %4) #5
    %83 = icmp eq i32 %68, 0
    br i1 %83, label %restore_space.exit, label %84
  
  ; <label>:84                                      ; preds = %restore_free.exit
    %85 = bitcast %struct.gs_dual_memory_s* %66 to %struct.gs_ref_memory_s**
    store %struct.gs_ref_memory_s* %4, %struct.gs_ref_memory_s** %85, align 4, !tbaa !47
    %sunkaddr36 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr37 = add i32 %sunkaddr36, 96
    %sunkaddr38 = inttoptr i32 %sunkaddr37 to i32*
    %86 = load i32, i32* %sunkaddr38, align 4, !tbaa !71
    %87 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %66, i32 0, i32 2
    store i32 %86, i32* %87, align 4, !tbaa !72
    br label %restore_space.exit
  
  restore_space.exit:                               ; preds = %84, %restore_free.exit
    %88 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i to i8*
    call void @llvm.lifetime.end(i64 696, i8* nonnull %88)
    %89 = icmp eq i32 %9, 0
    br i1 %89, label %93, label %.critedge
  
  .critedge:                                        ; preds = %restore_space.exit
    %90 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 3
    %91 = load i32, i32* %90, align 4, !tbaa !1
    %92 = add nsw i32 %91, -1
    store i32 %92, i32* %90, align 4, !tbaa !1
    br label %.loopexit
  
  ; <label>:93                                      ; preds = %restore_space.exit
    %94 = icmp eq %struct.alloc_save_s* %7, %save
    br i1 %94, label %.loopexit.loopexit, label %5
  
  .loopexit.loopexit:                               ; preds = %93
    %.phi.trans.insert = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 3
    %.pre = load i32, i32* %.phi.trans.insert, align 4, !tbaa !1
    br label %.loopexit
  
  .loopexit:                                        ; preds = %.loopexit.loopexit, %.critedge
    %95 = phi i32 [ %.pre, %.loopexit.loopexit ], [ %92, %.critedge ]
    %96 = phi %struct.alloc_save_s* [ %save, %.loopexit.loopexit ], [ %7, %.critedge ]
    %97 = icmp eq i32 %95, 0
    br i1 %97, label %98, label %197
  
  ; <label>:98                                      ; preds = %.loopexit
    %99 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 1, i32 0, i32 2
    %100 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %99, align 4, !tbaa !11
    %sunkaddr39 = ptrtoint %struct.gs_dual_memory_s* %2 to i32
    %sunkaddr40 = add i32 %sunkaddr39, 16
    %sunkaddr41 = inttoptr i32 %sunkaddr40 to %struct.gs_ref_memory_s**
    %101 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr41, align 4, !tbaa !9
    %102 = icmp eq %struct.gs_ref_memory_s* %100, %101
    br i1 %102, label %194, label %103
  
  ; <label>:103                                     ; preds = %98
    %104 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %100, i32 0, i32 20
    %105 = load %struct.alloc_save_s*, %struct.alloc_save_s** %104, align 4, !tbaa !49
    %106 = icmp eq %struct.alloc_save_s* %105, null
    br i1 %106, label %194, label %107
  
  ; <label>:107                                     ; preds = %103
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* nonnull %100) #5
    %108 = bitcast %struct.gs_ref_memory_s* %100 to %struct.gs_memory_s*
    %109 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %100, i32 0, i32 0, i32 19
    %110 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %109, align 4, !tbaa !66
    tail call void %110(%struct.gs_memory_s* %108, i32 signext 0) #5
    %111 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %100, i32 0, i32 9
    %cp.02.i6 = load %struct.chunk_s*, %struct.chunk_s** %111, align 4, !tbaa !37
    %112 = icmp eq %struct.chunk_s* %cp.02.i6, null
    br i1 %112, label %restore_finalize.exit13, label %.lr.ph5.i8
  
  .lr.ph5.i8:                                       ; preds = %107, %._crit_edge.i12
    %cp.03.i7 = phi %struct.chunk_s* [ %cp.0.i11, %._crit_edge.i12 ], [ %cp.02.i6, %107 ]
    %113 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i7, i32 0, i32 1
    %114 = bitcast i8** %113 to %struct.obj_header_s**
    %115 = load %struct.obj_header_s*, %struct.obj_header_s** %114, align 4, !tbaa !56
    %116 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i7, i32 0, i32 2
    %117 = bitcast i8** %116 to %struct.obj_header_s**
    %118 = load %struct.obj_header_s*, %struct.obj_header_s** %117, align 4, !tbaa !57
    %119 = icmp ult %struct.obj_header_s* %115, %118
    br i1 %119, label %.lr.ph.i10, label %._crit_edge.i12
  
  .lr.ph.i10:                                       ; preds = %.lr.ph5.i8, %130
    %pre.01.i9 = phi %struct.obj_header_s* [ %135, %130 ], [ %115, %.lr.ph5.i8 ]
    %120 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i9, i32 0, i32 0, i32 0, i32 1
    %121 = load i32, i32* %120, align 4, !tbaa !58
    %122 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i9, i32 0, i32 0, i32 0, i32 2, i32 0
    %123 = load %struct.gs_memory_struct_type_s*, %struct.gs_memory_struct_type_s** %122, align 4, !tbaa !37
    %124 = getelementptr inbounds %struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* %123, i32 0, i32 6
    %125 = load void (i8*)*, void (i8*)** %124, align 4, !tbaa !67
    %126 = icmp eq void (i8*)* %125, null
    br i1 %126, label %130, label %127
  
  ; <label>:127                                     ; preds = %.lr.ph.i10
    %128 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i9, i32 1
    %129 = bitcast %struct.obj_header_s* %128 to i8*
    tail call void %125(i8* %129) #5
    br label %130
  
  ; <label>:130                                     ; preds = %127, %.lr.ph.i10
    %131 = bitcast %struct.obj_header_s* %pre.01.i9 to i8*
    %132 = add i32 %121, 23
    %133 = and i32 %132, -8
    %134 = getelementptr inbounds i8, i8* %131, i32 %133
    %135 = bitcast i8* %134 to %struct.obj_header_s*
    %136 = icmp ult %struct.obj_header_s* %135, %118
    br i1 %136, label %.lr.ph.i10, label %._crit_edge.i12
  
  ._crit_edge.i12:                                  ; preds = %130, %.lr.ph5.i8
    %137 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i7, i32 0, i32 8
    %cp.0.i11 = load %struct.chunk_s*, %struct.chunk_s** %137, align 4, !tbaa !37
    %138 = icmp eq %struct.chunk_s* %cp.0.i11, null
    br i1 %138, label %restore_finalize.exit13, label %.lr.ph5.i8
  
  restore_finalize.exit13:                          ; preds = %._crit_edge.i12, %107
    %139 = bitcast %struct.gs_ref_memory_s* %100 to %struct.gs_memory_s*
    %sunkaddr42 = ptrtoint %struct.gs_ref_memory_s* %100 to i32
    %sunkaddr43 = add i32 %sunkaddr42, 76
    %sunkaddr44 = inttoptr i32 %sunkaddr43 to void (%struct.gs_memory_s*, i32)**
    %140 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %sunkaddr44, align 4, !tbaa !66
    tail call void %140(%struct.gs_memory_s* %139, i32 signext 1) #5
    %sunkaddr45 = ptrtoint %struct.gs_ref_memory_s* %100 to i32
    %sunkaddr46 = add i32 %sunkaddr45, 276
    %sunkaddr47 = inttoptr i32 %sunkaddr46 to %struct.alloc_save_s**
    %141 = load %struct.alloc_save_s*, %struct.alloc_save_s** %sunkaddr47, align 4, !tbaa !49
    tail call void @file_restore(%struct.alloc_save_s* %141, %struct.gs_memory_s* %139) #5
    tail call void @font_restore(%struct.alloc_save_s* %141) #5
    %142 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %141, i32 0, i32 2
    %143 = load i32, i32* %142, align 4, !tbaa !29
    %144 = icmp eq i32 %143, 0
    br i1 %144, label %restore_resources.exit14, label %145
  
  ; <label>:145                                     ; preds = %restore_finalize.exit13
    tail call void @name_restore(%struct.alloc_save_s* nonnull %141) #5
    br label %restore_resources.exit14
  
  restore_resources.exit14:                         ; preds = %145, %restore_finalize.exit13
    %sunkaddr48 = ptrtoint %struct.gs_ref_memory_s* %100 to i32
    %sunkaddr49 = add i32 %sunkaddr48, 276
    %sunkaddr50 = inttoptr i32 %sunkaddr49 to %struct.alloc_save_s**
    %146 = load %struct.alloc_save_s*, %struct.alloc_save_s** %sunkaddr50, align 4, !tbaa !49
    %147 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i15 to i8*
    call void @llvm.lifetime.start(i64 696, i8* %147)
    %148 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %100, i32 0, i32 19
    %cp.02.i16 = load %struct.alloc_change_s*, %struct.alloc_change_s** %148, align 4, !tbaa !37
    %149 = icmp eq %struct.alloc_change_s* %cp.02.i16, null
    br i1 %149, label %._crit_edge.i20, label %.lr.ph.i18
  
  .lr.ph.i18:                                       ; preds = %restore_resources.exit14, %163
    %cp.03.i17 = phi %struct.alloc_change_s* [ %cp.0.i19, %163 ], [ %cp.02.i16, %restore_resources.exit14 ]
    %150 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %cp.03.i17, i32 0, i32 2
    %151 = bitcast %struct.ref_s* %150 to i16*
    %152 = load i16, i16* %151, align 4, !tbaa !40
    %153 = icmp ugt i16 %152, 16383
    br i1 %153, label %154, label %156
  
  ; <label>:154                                     ; preds = %.lr.ph.i18
    %sunkaddr51 = ptrtoint %struct.alloc_change_s* %cp.03.i17 to i32
    %sunkaddr52 = add i32 %sunkaddr51, 4
    %sunkaddr53 = inttoptr i32 %sunkaddr52 to i16**
    %155 = load i16*, i16** %sunkaddr53, align 4, !tbaa !50
    store i16 %152, i16* %155, align 2, !tbaa !40
    br label %163
  
  ; <label>:156                                     ; preds = %.lr.ph.i18
    %sunkaddr54 = ptrtoint %struct.alloc_change_s* %cp.03.i17 to i32
    %sunkaddr55 = add i32 %sunkaddr54, 4
    %sunkaddr56 = inttoptr i32 %sunkaddr55 to %struct.ref_s**
    %157 = load %struct.ref_s*, %struct.ref_s** %sunkaddr56, align 4, !tbaa !50
    %158 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %cp.03.i17, i32 0, i32 2, i32 1, i32 0
    %159 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %157, i32 0, i32 1, i32 0
    %160 = load i32, i32* %158, align 4
    store i32 %160, i32* %159, align 4
    %sunkaddr57 = ptrtoint %struct.alloc_change_s* %cp.03.i17 to i32
    %sunkaddr58 = add i32 %sunkaddr57, 4
    %sunkaddr59 = inttoptr i32 %sunkaddr58 to i32**
    %161 = load i32*, i32** %sunkaddr59, align 4, !tbaa !50
    %sunkaddr60 = ptrtoint %struct.alloc_change_s* %cp.03.i17 to i32
    %sunkaddr61 = add i32 %sunkaddr60, 8
    %sunkaddr62 = inttoptr i32 %sunkaddr61 to i32*
    %162 = load i32, i32* %sunkaddr62, align 4
    store i32 %162, i32* %161, align 4
    br label %163
  
  ; <label>:163                                     ; preds = %156, %154
    %164 = bitcast %struct.alloc_change_s* %cp.03.i17 to %struct.alloc_change_s**
    %cp.0.i19 = load %struct.alloc_change_s*, %struct.alloc_change_s** %164, align 4, !tbaa !37
    %165 = icmp eq %struct.alloc_change_s* %cp.0.i19, null
    br i1 %165, label %._crit_edge.i20, label %.lr.ph.i18
  
  ._crit_edge.i20:                                  ; preds = %163, %restore_resources.exit14
    %166 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i15 to i8*
    %167 = bitcast %struct.alloc_save_s* %146 to i8*
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* %166, i8* %167, i32 696, i32 4, i1 false) #5
    %168 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %146, i32 0, i32 1
    %169 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %168, align 4
    %170 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %146, i32 0, i32 3
    %171 = load i32, i32* %170, align 4
    %sunkaddr63 = ptrtoint %struct.gs_ref_memory_s* %100 to i32
    %sunkaddr64 = add i32 %sunkaddr63, 132
    %sunkaddr65 = inttoptr i32 %sunkaddr64 to %struct.chunk_s**
    %172 = load %struct.chunk_s*, %struct.chunk_s** %sunkaddr65, align 4, !tbaa !69
    %173 = icmp eq %struct.chunk_s* %172, null
    br i1 %173, label %restore_free.exit28, label %.lr.ph.i24
  
  .lr.ph.i24:                                       ; preds = %._crit_edge.i20, %.backedge.i26
    %cp.01.i25 = phi %struct.chunk_s* [ %176, %.backedge.i26 ], [ %172, %._crit_edge.i20 ]
    %174 = bitcast %struct.gs_ref_memory_s* %100 to i8*
    %175 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i25, i32 0, i32 8
    %176 = load %struct.chunk_s*, %struct.chunk_s** %175, align 4, !tbaa !70
    %177 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i25, i32 0, i32 1
    %178 = load i8*, i8** %177, align 4, !tbaa !56
    %179 = getelementptr inbounds i8, i8* %178, i32 16
    %180 = icmp eq i8* %179, %174
    br i1 %180, label %.backedge.i26, label %182
  
  .backedge.i26:                                    ; preds = %182, %.lr.ph.i24
    %181 = icmp eq %struct.chunk_s* %176, null
    br i1 %181, label %restore_free.exit28, label %.lr.ph.i24
  
  ; <label>:182                                     ; preds = %.lr.ph.i24
    tail call void @alloc_free_chunk(%struct.chunk_s* nonnull %cp.01.i25, %struct.gs_ref_memory_s* %100) #5
    br label %.backedge.i26
  
  restore_free.exit28:                              ; preds = %.backedge.i26, %._crit_edge.i20
    %183 = bitcast %struct.gs_ref_memory_s* %100 to i8*
    %184 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i15 to i8*
    %185 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %100, i32 0, i32 18
    %186 = load i32, i32* %185, align 4, !tbaa !12
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* %183, i8* %184, i32 696, i32 4, i1 false) #5
    store i32 %186, i32* %185, align 4, !tbaa !12
    tail call void @alloc_open_chunk(%struct.gs_ref_memory_s* %100) #5
    %187 = icmp eq i32 %171, 0
    br i1 %187, label %restore_space.exit21, label %188
  
  ; <label>:188                                     ; preds = %restore_free.exit28
    %189 = bitcast %struct.gs_dual_memory_s* %169 to %struct.gs_ref_memory_s**
    store %struct.gs_ref_memory_s* %100, %struct.gs_ref_memory_s** %189, align 4, !tbaa !47
    %190 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %100, i32 0, i32 5
    %191 = load i32, i32* %190, align 4, !tbaa !71
    %192 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %169, i32 0, i32 2
    store i32 %191, i32* %192, align 4, !tbaa !72
    br label %restore_space.exit21
  
  restore_space.exit21:                             ; preds = %188, %restore_free.exit28
    %193 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i15 to i8*
    call void @llvm.lifetime.end(i64 696, i8* nonnull %193)
    br label %194
  
  ; <label>:194                                     ; preds = %restore_space.exit21, %103, %98
    %195 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 5
    store i32 -1, i32* %195, align 4, !tbaa !7
    %196 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 6
    store i32 0, i32* %196, align 4, !tbaa !8
    br label %199
  
  ; <label>:197                                     ; preds = %.loopexit
    %198 = tail call fastcc i32 @save_set_new(%struct.gs_ref_memory_s* nonnull %4, i32 signext 1)
    br label %199
  
  ; <label>:199                                     ; preds = %197, %194
    %200 = icmp eq %struct.alloc_save_s* %96, %save
    %201 = zext i1 %200 to i32
    ret i32 %201
  }
  
  ; Function Attrs: nounwind
  define void @alloc_restore_all(%struct.gs_dual_memory_s* %dmem) #1 {
    %empty_save = alloca %struct.alloc_save_s, align 4
    %1 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 3
    %2 = load i32, i32* %1, align 4, !tbaa !1
    %3 = icmp eq i32 %2, 0
    %4 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 3
    %5 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %4, align 4, !tbaa !9
    br i1 %3, label %._crit_edge, label %.lr.ph
  
  .lr.ph:                                           ; preds = %0, %.lr.ph
    %6 = phi %struct.gs_ref_memory_s* [ %12, %.lr.ph ], [ %5, %0 ]
    %7 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %6, i32 0, i32 20
    %8 = load %struct.alloc_save_s*, %struct.alloc_save_s** %7, align 4, !tbaa !49
    %9 = tail call i32 @alloc_restore_state_step(%struct.alloc_save_s* %8)
    %sunkaddr = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr1 = add i32 %sunkaddr, 24
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i32*
    %10 = load i32, i32* %sunkaddr2, align 4, !tbaa !1
    %11 = icmp eq i32 %10, 0
    %sunkaddr3 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr4 = add i32 %sunkaddr3, 16
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to %struct.gs_ref_memory_s**
    %12 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr5, align 4, !tbaa !9
    br i1 %11, label %._crit_edge, label %.lr.ph
  
  ._crit_edge:                                      ; preds = %.lr.ph, %0
    %.lcssa30 = phi %struct.gs_ref_memory_s* [ %5, %0 ], [ %12, %.lr.ph ]
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* %.lcssa30) #5
    %13 = bitcast %struct.gs_ref_memory_s* %.lcssa30 to %struct.gs_memory_s*
    %14 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %.lcssa30, i32 0, i32 0, i32 19
    %15 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %14, align 4, !tbaa !66
    tail call void %15(%struct.gs_memory_s* %13, i32 signext 0) #5
    %16 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %.lcssa30, i32 0, i32 9
    %cp.02.i = load %struct.chunk_s*, %struct.chunk_s** %16, align 4, !tbaa !37
    %17 = icmp eq %struct.chunk_s* %cp.02.i, null
    br i1 %17, label %restore_finalize.exit, label %.lr.ph5.i
  
  .lr.ph5.i:                                        ; preds = %._crit_edge, %._crit_edge.i
    %cp.03.i = phi %struct.chunk_s* [ %cp.0.i, %._crit_edge.i ], [ %cp.02.i, %._crit_edge ]
    %18 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i, i32 0, i32 1
    %19 = bitcast i8** %18 to %struct.obj_header_s**
    %20 = load %struct.obj_header_s*, %struct.obj_header_s** %19, align 4, !tbaa !56
    %21 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i, i32 0, i32 2
    %22 = bitcast i8** %21 to %struct.obj_header_s**
    %23 = load %struct.obj_header_s*, %struct.obj_header_s** %22, align 4, !tbaa !57
    %24 = icmp ult %struct.obj_header_s* %20, %23
    br i1 %24, label %.lr.ph.i, label %._crit_edge.i
  
  .lr.ph.i:                                         ; preds = %.lr.ph5.i, %35
    %pre.01.i = phi %struct.obj_header_s* [ %40, %35 ], [ %20, %.lr.ph5.i ]
    %25 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i, i32 0, i32 0, i32 0, i32 1
    %26 = load i32, i32* %25, align 4, !tbaa !58
    %27 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i, i32 0, i32 0, i32 0, i32 2, i32 0
    %28 = load %struct.gs_memory_struct_type_s*, %struct.gs_memory_struct_type_s** %27, align 4, !tbaa !37
    %29 = getelementptr inbounds %struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* %28, i32 0, i32 6
    %30 = load void (i8*)*, void (i8*)** %29, align 4, !tbaa !67
    %31 = icmp eq void (i8*)* %30, null
    br i1 %31, label %35, label %32
  
  ; <label>:32                                      ; preds = %.lr.ph.i
    %33 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i, i32 1
    %34 = bitcast %struct.obj_header_s* %33 to i8*
    tail call void %30(i8* %34) #5
    br label %35
  
  ; <label>:35                                      ; preds = %32, %.lr.ph.i
    %36 = bitcast %struct.obj_header_s* %pre.01.i to i8*
    %37 = add i32 %26, 23
    %38 = and i32 %37, -8
    %39 = getelementptr inbounds i8, i8* %36, i32 %38
    %40 = bitcast i8* %39 to %struct.obj_header_s*
    %41 = icmp ult %struct.obj_header_s* %40, %23
    br i1 %41, label %.lr.ph.i, label %._crit_edge.i
  
  ._crit_edge.i:                                    ; preds = %35, %.lr.ph5.i
    %42 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i, i32 0, i32 8
    %cp.0.i = load %struct.chunk_s*, %struct.chunk_s** %42, align 4, !tbaa !37
    %43 = icmp eq %struct.chunk_s* %cp.0.i, null
    br i1 %43, label %restore_finalize.exit, label %.lr.ph5.i
  
  restore_finalize.exit:                            ; preds = %._crit_edge.i, %._crit_edge
    %44 = bitcast %struct.gs_ref_memory_s* %.lcssa30 to %struct.gs_memory_s*
    %sunkaddr6 = ptrtoint %struct.gs_ref_memory_s* %.lcssa30 to i32
    %sunkaddr7 = add i32 %sunkaddr6, 76
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to void (%struct.gs_memory_s*, i32)**
    %45 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %sunkaddr8, align 4, !tbaa !66
    tail call void %45(%struct.gs_memory_s* %44, i32 signext 1) #5
    %46 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 2
    %47 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %46, align 4, !tbaa !11
    %sunkaddr9 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr10 = add i32 %sunkaddr9, 16
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to %struct.gs_ref_memory_s**
    %48 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr11, align 4, !tbaa !9
    %49 = icmp eq %struct.gs_ref_memory_s* %47, %48
    br i1 %49, label %88, label %50
  
  ; <label>:50                                      ; preds = %restore_finalize.exit
    %51 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %47, i32 0, i32 18
    %52 = load i32, i32* %51, align 4, !tbaa !12
    %53 = icmp eq i32 %52, 1
    br i1 %53, label %54, label %88
  
  ; <label>:54                                      ; preds = %50
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* nonnull %47) #5
    %55 = bitcast %struct.gs_ref_memory_s* %47 to %struct.gs_memory_s*
    %56 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %47, i32 0, i32 0, i32 19
    %57 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %56, align 4, !tbaa !66
    tail call void %57(%struct.gs_memory_s* %55, i32 signext 0) #5
    %58 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %47, i32 0, i32 9
    %cp.02.i2 = load %struct.chunk_s*, %struct.chunk_s** %58, align 4, !tbaa !37
    %59 = icmp eq %struct.chunk_s* %cp.02.i2, null
    br i1 %59, label %restore_finalize.exit9, label %.lr.ph5.i4
  
  .lr.ph5.i4:                                       ; preds = %54, %._crit_edge.i8
    %cp.03.i3 = phi %struct.chunk_s* [ %cp.0.i7, %._crit_edge.i8 ], [ %cp.02.i2, %54 ]
    %60 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i3, i32 0, i32 1
    %61 = bitcast i8** %60 to %struct.obj_header_s**
    %62 = load %struct.obj_header_s*, %struct.obj_header_s** %61, align 4, !tbaa !56
    %63 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i3, i32 0, i32 2
    %64 = bitcast i8** %63 to %struct.obj_header_s**
    %65 = load %struct.obj_header_s*, %struct.obj_header_s** %64, align 4, !tbaa !57
    %66 = icmp ult %struct.obj_header_s* %62, %65
    br i1 %66, label %.lr.ph.i6, label %._crit_edge.i8
  
  .lr.ph.i6:                                        ; preds = %.lr.ph5.i4, %77
    %pre.01.i5 = phi %struct.obj_header_s* [ %82, %77 ], [ %62, %.lr.ph5.i4 ]
    %67 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i5, i32 0, i32 0, i32 0, i32 1
    %68 = load i32, i32* %67, align 4, !tbaa !58
    %69 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i5, i32 0, i32 0, i32 0, i32 2, i32 0
    %70 = load %struct.gs_memory_struct_type_s*, %struct.gs_memory_struct_type_s** %69, align 4, !tbaa !37
    %71 = getelementptr inbounds %struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* %70, i32 0, i32 6
    %72 = load void (i8*)*, void (i8*)** %71, align 4, !tbaa !67
    %73 = icmp eq void (i8*)* %72, null
    br i1 %73, label %77, label %74
  
  ; <label>:74                                      ; preds = %.lr.ph.i6
    %75 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i5, i32 1
    %76 = bitcast %struct.obj_header_s* %75 to i8*
    tail call void %72(i8* %76) #5
    br label %77
  
  ; <label>:77                                      ; preds = %74, %.lr.ph.i6
    %78 = bitcast %struct.obj_header_s* %pre.01.i5 to i8*
    %79 = add i32 %68, 23
    %80 = and i32 %79, -8
    %81 = getelementptr inbounds i8, i8* %78, i32 %80
    %82 = bitcast i8* %81 to %struct.obj_header_s*
    %83 = icmp ult %struct.obj_header_s* %82, %65
    br i1 %83, label %.lr.ph.i6, label %._crit_edge.i8
  
  ._crit_edge.i8:                                   ; preds = %77, %.lr.ph5.i4
    %84 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i3, i32 0, i32 8
    %cp.0.i7 = load %struct.chunk_s*, %struct.chunk_s** %84, align 4, !tbaa !37
    %85 = icmp eq %struct.chunk_s* %cp.0.i7, null
    br i1 %85, label %restore_finalize.exit9, label %.lr.ph5.i4
  
  restore_finalize.exit9:                           ; preds = %._crit_edge.i8, %54
    %86 = bitcast %struct.gs_ref_memory_s* %47 to %struct.gs_memory_s*
    %sunkaddr12 = ptrtoint %struct.gs_ref_memory_s* %47 to i32
    %sunkaddr13 = add i32 %sunkaddr12, 76
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to void (%struct.gs_memory_s*, i32)**
    %87 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %sunkaddr14, align 4, !tbaa !66
    tail call void %87(%struct.gs_memory_s* %86, i32 signext 1) #5
    br label %88
  
  ; <label>:88                                      ; preds = %restore_finalize.exit9, %50, %restore_finalize.exit
    %89 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 1
    %90 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %89, align 4, !tbaa !73
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* %90) #5
    %91 = bitcast %struct.gs_ref_memory_s* %90 to %struct.gs_memory_s*
    %92 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %90, i32 0, i32 0, i32 19
    %93 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %92, align 4, !tbaa !66
    tail call void %93(%struct.gs_memory_s* %91, i32 signext 0) #5
    %94 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %90, i32 0, i32 9
    %cp.02.i10 = load %struct.chunk_s*, %struct.chunk_s** %94, align 4, !tbaa !37
    %95 = icmp eq %struct.chunk_s* %cp.02.i10, null
    br i1 %95, label %restore_finalize.exit17, label %.lr.ph5.i12
  
  .lr.ph5.i12:                                      ; preds = %88, %._crit_edge.i16
    %cp.03.i11 = phi %struct.chunk_s* [ %cp.0.i15, %._crit_edge.i16 ], [ %cp.02.i10, %88 ]
    %96 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i11, i32 0, i32 1
    %97 = bitcast i8** %96 to %struct.obj_header_s**
    %98 = load %struct.obj_header_s*, %struct.obj_header_s** %97, align 4, !tbaa !56
    %99 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i11, i32 0, i32 2
    %100 = bitcast i8** %99 to %struct.obj_header_s**
    %101 = load %struct.obj_header_s*, %struct.obj_header_s** %100, align 4, !tbaa !57
    %102 = icmp ult %struct.obj_header_s* %98, %101
    br i1 %102, label %.lr.ph.i14, label %._crit_edge.i16
  
  .lr.ph.i14:                                       ; preds = %.lr.ph5.i12, %113
    %pre.01.i13 = phi %struct.obj_header_s* [ %118, %113 ], [ %98, %.lr.ph5.i12 ]
    %103 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i13, i32 0, i32 0, i32 0, i32 1
    %104 = load i32, i32* %103, align 4, !tbaa !58
    %105 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i13, i32 0, i32 0, i32 0, i32 2, i32 0
    %106 = load %struct.gs_memory_struct_type_s*, %struct.gs_memory_struct_type_s** %105, align 4, !tbaa !37
    %107 = getelementptr inbounds %struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* %106, i32 0, i32 6
    %108 = load void (i8*)*, void (i8*)** %107, align 4, !tbaa !67
    %109 = icmp eq void (i8*)* %108, null
    br i1 %109, label %113, label %110
  
  ; <label>:110                                     ; preds = %.lr.ph.i14
    %111 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i13, i32 1
    %112 = bitcast %struct.obj_header_s* %111 to i8*
    tail call void %108(i8* %112) #5
    br label %113
  
  ; <label>:113                                     ; preds = %110, %.lr.ph.i14
    %114 = bitcast %struct.obj_header_s* %pre.01.i13 to i8*
    %115 = add i32 %104, 23
    %116 = and i32 %115, -8
    %117 = getelementptr inbounds i8, i8* %114, i32 %116
    %118 = bitcast i8* %117 to %struct.obj_header_s*
    %119 = icmp ult %struct.obj_header_s* %118, %101
    br i1 %119, label %.lr.ph.i14, label %._crit_edge.i16
  
  ._crit_edge.i16:                                  ; preds = %113, %.lr.ph5.i12
    %120 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i11, i32 0, i32 8
    %cp.0.i15 = load %struct.chunk_s*, %struct.chunk_s** %120, align 4, !tbaa !37
    %121 = icmp eq %struct.chunk_s* %cp.0.i15, null
    br i1 %121, label %restore_finalize.exit17, label %.lr.ph5.i12
  
  restore_finalize.exit17:                          ; preds = %._crit_edge.i16, %88
    %122 = bitcast %struct.gs_ref_memory_s* %90 to %struct.gs_memory_s*
    %sunkaddr15 = ptrtoint %struct.gs_ref_memory_s* %90 to i32
    %sunkaddr16 = add i32 %sunkaddr15, 76
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to void (%struct.gs_memory_s*, i32)**
    %123 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %sunkaddr17, align 4, !tbaa !66
    tail call void %123(%struct.gs_memory_s* %122, i32 signext 1) #5
    %124 = bitcast %struct.alloc_save_s* %empty_save to i8*
    call void @llvm.lifetime.start(i64 716, i8* %124) #5
    %125 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %empty_save, i32 0, i32 1
    store %struct.gs_dual_memory_s* %dmem, %struct.gs_dual_memory_s** %125, align 4, !tbaa !46
    %126 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %empty_save, i32 0, i32 2
    store i32 0, i32* %126, align 4, !tbaa !29
    call void @file_restore(%struct.alloc_save_s* nonnull %empty_save, %struct.gs_memory_s* null) #5
    call void @font_restore(%struct.alloc_save_s* nonnull %empty_save) #5
    %127 = load i32, i32* %126, align 4, !tbaa !29
    %128 = icmp eq i32 %127, 0
    br i1 %128, label %restore_resources.exit, label %129
  
  ; <label>:129                                     ; preds = %restore_finalize.exit17
    call void @name_restore(%struct.alloc_save_s* nonnull %empty_save) #5
    br label %restore_resources.exit
  
  restore_resources.exit:                           ; preds = %129, %restore_finalize.exit17
    %130 = bitcast %struct.alloc_save_s* %empty_save to i8*
    call void @llvm.lifetime.end(i64 716, i8* %130) #5
    %sunkaddr18 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr19 = add i32 %sunkaddr18, 16
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to %struct.gs_ref_memory_s**
    %131 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr20, align 4, !tbaa !9
    %132 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %131, i32 0, i32 9
    %133 = load %struct.chunk_s*, %struct.chunk_s** %132, align 4, !tbaa !69
    %134 = icmp eq %struct.chunk_s* %133, null
    br i1 %134, label %restore_free.exit, label %.lr.ph.i18
  
  .lr.ph.i18:                                       ; preds = %restore_resources.exit
    br label %135
  
  ; <label>:135                                     ; preds = %.backedge.i, %.lr.ph.i18
    %cp.01.i = phi %struct.chunk_s* [ %133, %.lr.ph.i18 ], [ %138, %.backedge.i ]
    %136 = bitcast %struct.gs_ref_memory_s* %131 to i8*
    %137 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i, i32 0, i32 8
    %138 = load %struct.chunk_s*, %struct.chunk_s** %137, align 4, !tbaa !70
    %139 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i, i32 0, i32 1
    %140 = load i8*, i8** %139, align 4, !tbaa !56
    %141 = getelementptr inbounds i8, i8* %140, i32 16
    %142 = icmp eq i8* %141, %136
    br i1 %142, label %.backedge.i, label %144
  
  .backedge.i:                                      ; preds = %144, %135
    %143 = icmp eq %struct.chunk_s* %138, null
    br i1 %143, label %restore_free.exit.loopexit, label %135
  
  ; <label>:144                                     ; preds = %135
    call void @alloc_free_chunk(%struct.chunk_s* nonnull %cp.01.i, %struct.gs_ref_memory_s* %131) #5
    br label %.backedge.i
  
  restore_free.exit.loopexit:                       ; preds = %.backedge.i
    %sunkaddr21 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr22 = add i32 %sunkaddr21, 16
    %sunkaddr23 = inttoptr i32 %sunkaddr22 to %struct.gs_ref_memory_s**
    %.pre = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr23, align 4, !tbaa !9
    br label %restore_free.exit
  
  restore_free.exit:                                ; preds = %restore_free.exit.loopexit, %restore_resources.exit
    %145 = phi %struct.gs_ref_memory_s* [ %.pre, %restore_free.exit.loopexit ], [ %131, %restore_resources.exit ]
    %sunkaddr24 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr25 = add i32 %sunkaddr24, 12
    %sunkaddr26 = inttoptr i32 %sunkaddr25 to %struct.gs_ref_memory_s**
    %146 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr26, align 4, !tbaa !11
    %147 = icmp eq %struct.gs_ref_memory_s* %146, %145
    br i1 %147, label %restore_free.exit24, label %148
  
  ; <label>:148                                     ; preds = %restore_free.exit
    %149 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %146, i32 0, i32 18
    %150 = load i32, i32* %149, align 4, !tbaa !12
    %151 = add nsw i32 %150, -1
    store i32 %151, i32* %149, align 4, !tbaa !12
    %152 = icmp eq i32 %151, 0
    br i1 %152, label %153, label %restore_free.exit24
  
  ; <label>:153                                     ; preds = %148
    %154 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %146, i32 0, i32 9
    %155 = load %struct.chunk_s*, %struct.chunk_s** %154, align 4, !tbaa !69
    %156 = icmp eq %struct.chunk_s* %155, null
    br i1 %156, label %restore_free.exit24, label %.lr.ph.i20
  
  .lr.ph.i20:                                       ; preds = %153
    br label %157
  
  ; <label>:157                                     ; preds = %.backedge.i22, %.lr.ph.i20
    %cp.01.i21 = phi %struct.chunk_s* [ %155, %.lr.ph.i20 ], [ %160, %.backedge.i22 ]
    %158 = bitcast %struct.gs_ref_memory_s* %146 to i8*
    %159 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i21, i32 0, i32 8
    %160 = load %struct.chunk_s*, %struct.chunk_s** %159, align 4, !tbaa !70
    %161 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i21, i32 0, i32 1
    %162 = load i8*, i8** %161, align 4, !tbaa !56
    %163 = getelementptr inbounds i8, i8* %162, i32 16
    %164 = icmp eq i8* %163, %158
    br i1 %164, label %.backedge.i22, label %166
  
  .backedge.i22:                                    ; preds = %166, %157
    %165 = icmp eq %struct.chunk_s* %160, null
    br i1 %165, label %restore_free.exit24, label %157
  
  ; <label>:166                                     ; preds = %157
    call void @alloc_free_chunk(%struct.chunk_s* nonnull %cp.01.i21, %struct.gs_ref_memory_s* %146) #5
    br label %.backedge.i22
  
  restore_free.exit24:                              ; preds = %.backedge.i22, %153, %148, %restore_free.exit
    %sunkaddr27 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr28 = add i32 %sunkaddr27, 8
    %sunkaddr29 = inttoptr i32 %sunkaddr28 to %struct.gs_ref_memory_s**
    %167 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr29, align 4, !tbaa !73
    %168 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %167, i32 0, i32 9
    %169 = load %struct.chunk_s*, %struct.chunk_s** %168, align 4, !tbaa !69
    %170 = icmp eq %struct.chunk_s* %169, null
    br i1 %170, label %restore_free.exit29, label %.lr.ph.i25
  
  .lr.ph.i25:                                       ; preds = %restore_free.exit24
    br label %171
  
  ; <label>:171                                     ; preds = %.backedge.i27, %.lr.ph.i25
    %cp.01.i26 = phi %struct.chunk_s* [ %169, %.lr.ph.i25 ], [ %174, %.backedge.i27 ]
    %172 = bitcast %struct.gs_ref_memory_s* %167 to i8*
    %173 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i26, i32 0, i32 8
    %174 = load %struct.chunk_s*, %struct.chunk_s** %173, align 4, !tbaa !70
    %175 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i26, i32 0, i32 1
    %176 = load i8*, i8** %175, align 4, !tbaa !56
    %177 = getelementptr inbounds i8, i8* %176, i32 16
    %178 = icmp eq i8* %177, %172
    br i1 %178, label %.backedge.i27, label %180
  
  .backedge.i27:                                    ; preds = %180, %171
    %179 = icmp eq %struct.chunk_s* %174, null
    br i1 %179, label %restore_free.exit29, label %171
  
  ; <label>:180                                     ; preds = %171
    call void @alloc_free_chunk(%struct.chunk_s* nonnull %cp.01.i26, %struct.gs_ref_memory_s* %167) #5
    br label %.backedge.i27
  
  restore_free.exit29:                              ; preds = %.backedge.i27, %restore_free.exit24
    ret void
  }
  
  ; Function Attrs: nounwind
  define void @alloc_forget_save(%struct.alloc_save_s* readonly %save) #1 {
    %1 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 1
    %2 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %1, align 4, !tbaa !46
    %3 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 1, i32 0, i32 3
    %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %3, align 4, !tbaa !9
    br label %5
  
  ; <label>:5                                       ; preds = %31, %0
    %sunkaddr = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr1 = add i32 %sunkaddr, 276
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to %struct.alloc_save_s**
    %6 = load %struct.alloc_save_s*, %struct.alloc_save_s** %sunkaddr2, align 4, !tbaa !49
    %7 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %6, i32 0, i32 4
    %8 = load i32, i32* %7, align 4, !tbaa !26
    %9 = icmp eq i32 %8, 0
    %sunkaddr3 = ptrtoint %struct.gs_dual_memory_s* %2 to i32
    %sunkaddr4 = add i32 %sunkaddr3, 24
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to i32*
    %.pre = load i32, i32* %sunkaddr5, align 4, !tbaa !1
    br i1 %9, label %._crit_edge, label %10
  
  ; <label>:10                                      ; preds = %5
    %11 = add nsw i32 %.pre, -1
    %sunkaddr6 = ptrtoint %struct.gs_dual_memory_s* %2 to i32
    %sunkaddr7 = add i32 %sunkaddr6, 24
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to i32*
    store i32 %11, i32* %sunkaddr8, align 4, !tbaa !1
    br label %._crit_edge
  
  ._crit_edge:                                      ; preds = %10, %5
    %12 = phi i32 [ %11, %10 ], [ %.pre, %5 ]
    %13 = icmp eq i32 %12, 0
    %sunkaddr9 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr10 = add i32 %sunkaddr9, 272
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to %struct.alloc_change_s**
    %14 = load %struct.alloc_change_s*, %struct.alloc_change_s** %sunkaddr11, align 4, !tbaa !60
    br i1 %13, label %33, label %15
  
  ; <label>:15                                      ; preds = %._crit_edge
    %16 = bitcast %struct.alloc_save_s* %6 to %struct.gs_ref_memory_s*
    %17 = tail call fastcc i32 @save_set_new(%struct.gs_ref_memory_s* %16, i32 signext 1)
    %18 = icmp eq %struct.alloc_change_s* %14, null
    br i1 %18, label %19, label %.preheader
  
  ; <label>:19                                      ; preds = %15
    %20 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %6, i32 0, i32 0, i32 19
    %21 = bitcast %struct.alloc_change_s** %20 to i32*
    %22 = load i32, i32* %21, align 4, !tbaa !74
    %sunkaddr12 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr13 = add i32 %sunkaddr12, 272
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to i32*
    store i32 %22, i32* %sunkaddr14, align 4, !tbaa !60
    br label %31
  
  .preheader:                                       ; preds = %15, %.preheader
    %chp.0 = phi %struct.alloc_change_s* [ %24, %.preheader ], [ %14, %15 ]
    %23 = bitcast %struct.alloc_change_s* %chp.0 to %struct.alloc_change_s**
    %24 = load %struct.alloc_change_s*, %struct.alloc_change_s** %23, align 4, !tbaa !61
    %25 = icmp eq %struct.alloc_change_s* %24, null
    br i1 %25, label %26, label %.preheader
  
  ; <label>:26                                      ; preds = %.preheader
    %27 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %6, i32 0, i32 0, i32 19
    %28 = bitcast %struct.alloc_change_s** %27 to i32*
    %29 = load i32, i32* %28, align 4, !tbaa !74
    %30 = bitcast %struct.alloc_change_s* %chp.0 to i32*
    store i32 %29, i32* %30, align 4, !tbaa !61
    br label %31
  
  ; <label>:31                                      ; preds = %26, %19
    tail call void @file_forget_save(%struct.alloc_save_s* nonnull %6) #5
    tail call fastcc void @combine_space(%struct.gs_ref_memory_s* %4)
    %32 = icmp eq %struct.alloc_save_s* %6, %save
    br i1 %32, label %.loopexit, label %5
  
  ; <label>:33                                      ; preds = %._crit_edge
    %34 = icmp eq %struct.alloc_change_s* %14, null
    br i1 %34, label %forget_changes.exit, label %.lr.ph.i
  
  .lr.ph.i:                                         ; preds = %33
    br label %35
  
  ; <label>:35                                      ; preds = %44, %.lr.ph.i
    %chp.01.i = phi %struct.alloc_change_s* [ %14, %.lr.ph.i ], [ %47, %44 ]
    %36 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %chp.01.i, i32 0, i32 1
    %37 = load i16*, i16** %36, align 4, !tbaa !50
    %38 = load i16, i16* %37, align 2, !tbaa !40
    %39 = zext i16 %38 to i32
    %40 = icmp ugt i16 %38, 16383
    br i1 %40, label %44, label %41
  
  ; <label>:41                                      ; preds = %35
    %42 = and i32 %39, 65533
    %43 = trunc i32 %42 to i16
    store i16 %43, i16* %37, align 4, !tbaa !54
    br label %44
  
  ; <label>:44                                      ; preds = %41, %35
    %45 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
    %46 = bitcast %struct.alloc_change_s* %chp.01.i to %struct.alloc_change_s**
    %47 = load %struct.alloc_change_s*, %struct.alloc_change_s** %46, align 4, !tbaa !61
    %sunkaddr15 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr16 = add i32 %sunkaddr15, 44
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to void (%struct.gs_memory_s*, i8*, i8*)**
    %48 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %sunkaddr17, align 4, !tbaa !23
    %49 = bitcast %struct.alloc_change_s* %chp.01.i to i8*
    tail call void %48(%struct.gs_memory_s* %45, i8* %49, i8* nonnull getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i32 0, i32 0)) #5
    %50 = icmp eq %struct.alloc_change_s* %47, null
    br i1 %50, label %forget_changes.exit, label %35
  
  forget_changes.exit:                              ; preds = %44, %33
    %sunkaddr18 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr19 = add i32 %sunkaddr18, 272
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to %struct.alloc_change_s**
    store %struct.alloc_change_s* null, %struct.alloc_change_s** %sunkaddr20, align 4, !tbaa !60
    %51 = tail call fastcc i32 @save_set_new(%struct.gs_ref_memory_s* nonnull %4, i32 signext 0)
    tail call void @file_forget_save(%struct.alloc_save_s* %6) #5
    tail call fastcc void @combine_space(%struct.gs_ref_memory_s* nonnull %4)
    %52 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 1, i32 0, i32 2
    %53 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %52, align 4, !tbaa !11
    %sunkaddr21 = ptrtoint %struct.gs_dual_memory_s* %2 to i32
    %sunkaddr22 = add i32 %sunkaddr21, 16
    %sunkaddr23 = inttoptr i32 %sunkaddr22 to %struct.gs_ref_memory_s**
    %54 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr23, align 4, !tbaa !9
    %55 = icmp eq %struct.gs_ref_memory_s* %53, %54
    br i1 %55, label %81, label %56
  
  ; <label>:56                                      ; preds = %forget_changes.exit
    %57 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %53, i32 0, i32 20
    %58 = load %struct.alloc_save_s*, %struct.alloc_save_s** %57, align 4, !tbaa !49
    %59 = icmp eq %struct.alloc_save_s* %58, null
    br i1 %59, label %81, label %60
  
  ; <label>:60                                      ; preds = %56
    %61 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %53, i32 0, i32 19
    %62 = load %struct.alloc_change_s*, %struct.alloc_change_s** %61, align 4, !tbaa !60
    %63 = icmp eq %struct.alloc_change_s* %62, null
    br i1 %63, label %forget_changes.exit3, label %.lr.ph.i1
  
  .lr.ph.i1:                                        ; preds = %60
    br label %64
  
  ; <label>:64                                      ; preds = %73, %.lr.ph.i1
    %chp.01.i2 = phi %struct.alloc_change_s* [ %62, %.lr.ph.i1 ], [ %76, %73 ]
    %65 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %chp.01.i2, i32 0, i32 1
    %66 = load i16*, i16** %65, align 4, !tbaa !50
    %67 = load i16, i16* %66, align 2, !tbaa !40
    %68 = zext i16 %67 to i32
    %69 = icmp ugt i16 %67, 16383
    br i1 %69, label %73, label %70
  
  ; <label>:70                                      ; preds = %64
    %71 = and i32 %68, 65533
    %72 = trunc i32 %71 to i16
    store i16 %72, i16* %66, align 4, !tbaa !54
    br label %73
  
  ; <label>:73                                      ; preds = %70, %64
    %74 = bitcast %struct.gs_ref_memory_s* %53 to %struct.gs_memory_s*
    %75 = bitcast %struct.alloc_change_s* %chp.01.i2 to %struct.alloc_change_s**
    %76 = load %struct.alloc_change_s*, %struct.alloc_change_s** %75, align 4, !tbaa !61
    %sunkaddr24 = ptrtoint %struct.gs_ref_memory_s* %53 to i32
    %sunkaddr25 = add i32 %sunkaddr24, 44
    %sunkaddr26 = inttoptr i32 %sunkaddr25 to void (%struct.gs_memory_s*, i8*, i8*)**
    %77 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %sunkaddr26, align 4, !tbaa !23
    %78 = bitcast %struct.alloc_change_s* %chp.01.i2 to i8*
    tail call void %77(%struct.gs_memory_s* %74, i8* %78, i8* nonnull getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i32 0, i32 0)) #5
    %79 = icmp eq %struct.alloc_change_s* %76, null
    br i1 %79, label %forget_changes.exit3, label %64
  
  forget_changes.exit3:                             ; preds = %73, %60
    %sunkaddr27 = ptrtoint %struct.gs_ref_memory_s* %53 to i32
    %sunkaddr28 = add i32 %sunkaddr27, 272
    %sunkaddr29 = inttoptr i32 %sunkaddr28 to %struct.alloc_change_s**
    store %struct.alloc_change_s* null, %struct.alloc_change_s** %sunkaddr29, align 4, !tbaa !60
    %80 = tail call fastcc i32 @save_set_new(%struct.gs_ref_memory_s* nonnull %53, i32 signext 0)
    tail call fastcc void @combine_space(%struct.gs_ref_memory_s* nonnull %53)
    br label %81
  
  ; <label>:81                                      ; preds = %forget_changes.exit3, %56, %forget_changes.exit
    %82 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 5
    store i32 -1, i32* %82, align 4, !tbaa !7
    %83 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 6
    store i32 0, i32* %83, align 4, !tbaa !8
    br label %.loopexit
  
  .loopexit:                                        ; preds = %31, %81
    ret void
  }
  
  declare void @file_forget_save(%struct.alloc_save_s*) #3
  
  ; Function Attrs: nounwind
  define internal fastcc void @combine_space(%struct.gs_ref_memory_s* %mem) unnamed_addr #1 {
    %1 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 20
    %2 = load %struct.alloc_save_s*, %struct.alloc_save_s** %1, align 4, !tbaa !49
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* %mem) #5
    %3 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 8
    %4 = load %struct.chunk_s*, %struct.chunk_s** %3, align 4, !tbaa !75
    %5 = icmp eq %struct.chunk_s* %4, null
    br i1 %5, label %._crit_edge, label %.lr.ph
  
  .lr.ph:                                           ; preds = %0
    br label %6
  
  ; <label>:6                                       ; preds = %.backedge, %.lr.ph
    %cp.02 = phi %struct.chunk_s* [ %4, %.lr.ph ], [ %8, %.backedge ]
    %7 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 9
    %8 = load %struct.chunk_s*, %struct.chunk_s** %7, align 4, !tbaa !76
    %9 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 10
    %10 = load %struct.chunk_s*, %struct.chunk_s** %9, align 4, !tbaa !77
    %11 = icmp eq %struct.chunk_s* %10, null
    br i1 %11, label %12, label %15
  
  ; <label>:12                                      ; preds = %6
    %13 = bitcast %struct.alloc_save_s* %2 to %struct.gs_ref_memory_s*
    tail call void @alloc_link_chunk(%struct.chunk_s* nonnull %cp.02, %struct.gs_ref_memory_s* %13) #5
    br label %.backedge
  
  .backedge:                                        ; preds = %26, %12
    %14 = icmp eq %struct.chunk_s* %8, null
    br i1 %14, label %._crit_edge, label %6
  
  ; <label>:15                                      ; preds = %6
    %16 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %10, i32 0, i32 11
    %17 = load i32, i32* %16, align 4, !tbaa !78
    %18 = add i32 %17, -1
    store i32 %18, i32* %16, align 4, !tbaa !78
    %sunkaddr = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr1 = add i32 %sunkaddr, 228
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to %struct.chunk_s**
    %19 = load %struct.chunk_s*, %struct.chunk_s** %sunkaddr2, align 4, !tbaa !22
    %20 = icmp eq %struct.chunk_s* %19, %cp.02
    br i1 %20, label %21, label %22
  
  ; <label>:21                                      ; preds = %15
    %sunkaddr3 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr4 = add i32 %sunkaddr3, 228
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to %struct.chunk_s**
    store %struct.chunk_s* %10, %struct.chunk_s** %sunkaddr5, align 4, !tbaa !22
    br label %22
  
  ; <label>:22                                      ; preds = %21, %15
    %sunkaddr6 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr7 = add i32 %sunkaddr6, 236
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to %struct.chunk_s**
    %23 = load %struct.chunk_s*, %struct.chunk_s** %sunkaddr8, align 4, !tbaa !79
    %24 = icmp eq %struct.chunk_s* %23, %cp.02
    br i1 %24, label %25, label %26
  
  ; <label>:25                                      ; preds = %22
    %sunkaddr9 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr10 = add i32 %sunkaddr9, 236
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to %struct.chunk_s**
    store %struct.chunk_s* %10, %struct.chunk_s** %sunkaddr11, align 4, !tbaa !79
    br label %26
  
  ; <label>:26                                      ; preds = %25, %22
    %27 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %10, i32 0, i32 2
    %28 = bitcast i8** %27 to %struct.obj_header_s**
    %29 = load %struct.obj_header_s*, %struct.obj_header_s** %28, align 4, !tbaa !57
    %30 = bitcast %struct.obj_header_s* %29 to i8*
    %31 = load i8, i8* %30, align 4
    %32 = and i8 %31, 127
    store i8 %32, i8* %30, align 4
    %33 = bitcast %struct.chunk_s* %cp.02 to %struct.chunk_head_s**
    %34 = load %struct.chunk_head_s*, %struct.chunk_head_s** %33, align 4, !tbaa !80
    %35 = getelementptr inbounds %struct.chunk_head_s, %struct.chunk_head_s* %34, i32 1
    %36 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %29, i32 1
    %37 = ptrtoint %struct.chunk_head_s* %35 to i32
    %38 = ptrtoint %struct.obj_header_s* %36 to i32
    %39 = sub i32 %37, %38
    %40 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %29, i32 0, i32 0, i32 0, i32 1
    store i32 %39, i32* %40, align 4, !tbaa !58
    %41 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %29, i32 0, i32 0, i32 0, i32 2, i32 0
    store %struct.gs_memory_struct_type_s* @st_bytes, %struct.gs_memory_struct_type_s** %41, align 4, !tbaa !37
    %42 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 2
    %43 = bitcast i8** %42 to i32*
    %44 = load i32, i32* %43, align 4, !tbaa !57
    %45 = bitcast i8** %27 to i32*
    store i32 %44, i32* %45, align 4, !tbaa !57
    %46 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 3
    %47 = bitcast %struct.obj_header_s** %46 to i32*
    %48 = load i32, i32* %47, align 4, !tbaa !81
    %49 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %10, i32 0, i32 3
    %50 = bitcast %struct.obj_header_s** %49 to i32*
    store i32 %48, i32* %50, align 4, !tbaa !81
    %51 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 4
    %52 = bitcast i8** %51 to i32*
    %53 = load i32, i32* %52, align 4, !tbaa !82
    %54 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %10, i32 0, i32 4
    %55 = bitcast i8** %54 to i32*
    store i32 %53, i32* %55, align 4, !tbaa !82
    %56 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 5
    %57 = bitcast i8** %56 to i32*
    %58 = load i32, i32* %57, align 4, !tbaa !83
    %59 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %10, i32 0, i32 5
    %60 = bitcast i8** %59 to i32*
    store i32 %58, i32* %60, align 4, !tbaa !83
    %61 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 12
    %62 = load i32, i32* %61, align 4, !tbaa !55
    %63 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %10, i32 0, i32 12
    %64 = load i32, i32* %63, align 4, !tbaa !55
    %65 = or i32 %64, %62
    store i32 %65, i32* %63, align 4, !tbaa !55
    %sunkaddr12 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr13 = add i32 %sunkaddr12, 80
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to %struct.gs_memory_s**
    %66 = load %struct.gs_memory_s*, %struct.gs_memory_s** %sunkaddr14, align 4, !tbaa !25
    %67 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %66, i32 0, i32 0, i32 11
    %68 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %67, align 4, !tbaa !23
    %69 = bitcast %struct.chunk_s* %cp.02 to i8*
    tail call void %68(%struct.gs_memory_s* %66, i8* %69, i8* nonnull getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i32 0, i32 0)) #5
    br label %.backedge
  
  ._crit_edge:                                      ; preds = %.backedge, %0
    %70 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 8
    %71 = bitcast %struct.chunk_s** %70 to i32*
    %72 = load i32, i32* %71, align 4, !tbaa !75
    %sunkaddr15 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr16 = add i32 %sunkaddr15, 128
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to i32*
    store i32 %72, i32* %sunkaddr17, align 4, !tbaa !75
    %73 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 9
    %74 = bitcast %struct.chunk_s** %73 to i32*
    %75 = load i32, i32* %74, align 4, !tbaa !69
    %76 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 9
    %77 = bitcast %struct.chunk_s** %76 to i32*
    store i32 %75, i32* %77, align 4, !tbaa !69
    %78 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 13
    %79 = load i32, i32* %78, align 4, !tbaa !84
    %80 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 13
    %81 = load i32, i32* %80, align 4, !tbaa !84
    %82 = add i32 %81, %79
    store i32 %82, i32* %80, align 4, !tbaa !84
    %83 = load i32, i32* %78, align 4, !tbaa !84
    %84 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 15
    %85 = load i32, i32* %84, align 4, !tbaa !85
    %86 = add i32 %85, %83
    store i32 %86, i32* %84, align 4, !tbaa !85
    %87 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 16, i32 0
    %88 = load i32, i32* %87, align 4, !tbaa !86
    %89 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 16, i32 0
    %90 = load i32, i32* %89, align 4, !tbaa !86
    %91 = add i32 %90, %88
    store i32 %91, i32* %89, align 4, !tbaa !86
    %92 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 16, i32 1
    %93 = load i32, i32* %92, align 4, !tbaa !87
    %94 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 16, i32 1
    %95 = load i32, i32* %94, align 4, !tbaa !87
    %96 = add i32 %95, %93
    store i32 %96, i32* %94, align 4, !tbaa !87
    %97 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 16, i32 2
    %98 = load i32, i32* %97, align 4, !tbaa !88
    %99 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 16, i32 2
    %100 = load i32, i32* %99, align 4, !tbaa !88
    %101 = add i32 %100, %98
    store i32 %101, i32* %99, align 4, !tbaa !88
    %102 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 20
    %103 = bitcast %struct.alloc_save_s** %102 to i32*
    %104 = load i32, i32* %103, align 4, !tbaa !49
    %sunkaddr18 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr19 = add i32 %sunkaddr18, 276
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to i32*
    store i32 %104, i32* %sunkaddr20, align 4, !tbaa !49
    %105 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 22
    %106 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 22
    %107 = bitcast %struct.gs_memory_status_s* %106 to i64*
    %108 = bitcast %struct.gs_memory_status_s* %105 to i64*
    %109 = load i64, i64* %107, align 4
    store i64 %109, i64* %108, align 4
    br label %110
  
  ; <label>:110                                     ; preds = %123, %._crit_edge
    %i.01 = phi i32 [ 0, %._crit_edge ], [ %124, %123 ]
    %111 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 23, i32 %i.01
    %112 = load %struct.obj_header_s*, %struct.obj_header_s** %111, align 4, !tbaa !37
    %113 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 23, i32 %i.01
    %114 = load %struct.obj_header_s*, %struct.obj_header_s** %113, align 4, !tbaa !37
    %115 = icmp eq %struct.obj_header_s* %112, null
    br i1 %115, label %123, label %116
  
  ; <label>:116                                     ; preds = %110
    %117 = icmp eq %struct.obj_header_s* %114, null
    br i1 %117, label %118, label %.preheader
  
  ; <label>:118                                     ; preds = %116
    store %struct.obj_header_s* %112, %struct.obj_header_s** %113, align 4, !tbaa !37
    br label %123
  
  .preheader:                                       ; preds = %116, %.preheader
    %list.0 = phi %struct.obj_header_s* [ %120, %.preheader ], [ %114, %116 ]
    %119 = bitcast %struct.obj_header_s* %list.0 to %struct.obj_header_s**
    %120 = load %struct.obj_header_s*, %struct.obj_header_s** %119, align 4, !tbaa !37
    %121 = icmp eq %struct.obj_header_s* %120, null
    br i1 %121, label %122, label %.preheader
  
  ; <label>:122                                     ; preds = %.preheader
    %sunkaddr21 = ptrtoint %struct.obj_header_s* %list.0 to i32
    %sunkaddr22 = inttoptr i32 %sunkaddr21 to %struct.obj_header_s**
    store %struct.obj_header_s* %112, %struct.obj_header_s** %sunkaddr22, align 4, !tbaa !37
    br label %123
  
  ; <label>:123                                     ; preds = %122, %118, %110
    %124 = add nuw nsw i32 %i.01, 1
    %exitcond = icmp eq i32 %124, 101
    br i1 %exitcond, label %125, label %110
  
  ; <label>:125                                     ; preds = %123
    %126 = bitcast %struct.gs_ref_memory_s* %mem to %struct.gs_memory_s*
    %127 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 0, i32 11
    %128 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %127, align 4, !tbaa !23
    %129 = bitcast %struct.alloc_save_s* %2 to i8*
    tail call void %128(%struct.gs_memory_s* %126, i8* %129, i8* nonnull getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i32 0, i32 0)) #5
    tail call void @alloc_open_chunk(%struct.gs_ref_memory_s* %mem) #5
    ret void
  }
  
  declare void @alloc_close_chunk(%struct.gs_ref_memory_s*) #3
  
  declare void @ialloc_reset(%struct.gs_ref_memory_s*) #3
  
  declare void @alloc_init_chunk(%struct.chunk_s*, i8*, i8*, i32 signext, %struct.chunk_s*) #3
  
  declare %struct.gs_memory_s* @name_memory() #3
  
  ; Function Attrs: nounwind
  define internal %struct.gs_ptr_procs_s* @save_enum_ptrs(i8* %vptr, i32 signext %size, i32 signext %index, i8** %pep) #1 {
    %cond = icmp eq i32 %index, 0
    br i1 %cond, label %5, label %1
  
  ; <label>:1                                       ; preds = %0
    %2 = load %struct.gs_ptr_procs_s* (i8*, i32, i32, i8**)*, %struct.gs_ptr_procs_s* (i8*, i32, i32, i8**)** getelementptr inbounds (%struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* @st_ref_memory, i32 0, i32 4), align 4, !tbaa !89
    %3 = add i32 %index, -1
    %4 = tail call %struct.gs_ptr_procs_s* %2(i8* %vptr, i32 signext %size, i32 signext %3, i8** %pep) #5
    br label %10
  
  ; <label>:5                                       ; preds = %0
    %6 = getelementptr inbounds i8, i8* %vptr, i32 712
    %7 = bitcast i8* %6 to i32*
    %8 = load i32, i32* %7, align 4, !tbaa !28
    %9 = bitcast i8** %pep to i32*
    store i32 %8, i32* %9, align 4, !tbaa !37
    br label %10
  
  ; <label>:10                                      ; preds = %5, %1
    %.0 = phi %struct.gs_ptr_procs_s* [ @ptr_struct_procs, %5 ], [ %4, %1 ]
    ret %struct.gs_ptr_procs_s* %.0
  }
  
  ; Function Attrs: nounwind
  define internal void @save_reloc_ptrs(i8* %vptr, i32 signext %size, %struct.gc_state_s* %gcst) #1 {
    %1 = load void (i8*, i32, %struct.gc_state_s*)*, void (i8*, i32, %struct.gc_state_s*)** getelementptr inbounds (%struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* @st_ref_memory, i32 0, i32 5), align 4, !tbaa !90
    tail call void %1(i8* %vptr, i32 signext %size, %struct.gc_state_s* %gcst) #5
    %2 = getelementptr inbounds i8, i8* %vptr, i32 712
    %3 = bitcast i8* %2 to i8**
    %4 = load i8*, i8** %3, align 4, !tbaa !28
    %5 = tail call i8* @gs_reloc_struct_ptr(i8* %4, %struct.gc_state_s* %gcst) #5
    store i8* %5, i8** %3, align 4, !tbaa !28
    ret void
  }
  
  declare i8* @gs_reloc_struct_ptr(i8*, %struct.gc_state_s*) #3
  
  ; Function Attrs: norecurse nounwind
  define internal void @change_clear_marks(i8* nocapture %vptr, i32 signext %size) #0 {
    %1 = getelementptr inbounds i8, i8* %vptr, i32 8
    %2 = bitcast i8* %1 to i16*
    %3 = load i16, i16* %2, align 4, !tbaa !40
    %4 = icmp ugt i16 %3, 16383
    %5 = zext i16 %3 to i32
    %storemerge.in.v = select i1 %4, i32 61439, i32 65534
    %storemerge.in = and i32 %5, %storemerge.in.v
    %storemerge = trunc i32 %storemerge.in to i16
    store i16 %storemerge, i16* %2, align 4, !tbaa !40
    ret void
  }
  
  ; Function Attrs: norecurse nounwind
  define internal %struct.gs_ptr_procs_s* @change_enum_ptrs(i8* %vptr, i32 signext %size, i32 signext %index, i8** nocapture %pep) #0 {
    switch i32 %index, label %20 [
      i32 0, label %1
      i32 1, label %5
      i32 2, label %18
    ]
  
  ; <label>:1                                       ; preds = %0
    %2 = bitcast i8* %vptr to i32*
    %3 = load i32, i32* %2, align 4, !tbaa !61
    %4 = bitcast i8** %pep to i32*
    store i32 %3, i32* %4, align 4, !tbaa !37
    br label %20
  
  ; <label>:5                                       ; preds = %0
    %6 = getelementptr inbounds i8, i8* %vptr, i32 16
    %7 = bitcast i8* %6 to i16*
    %8 = load i16, i16* %7, align 4, !tbaa !62
    %9 = sext i16 %8 to i32
    %10 = icmp sgt i16 %8, -1
    %11 = getelementptr inbounds i8, i8* %vptr, i32 4
    %12 = bitcast i8* %11 to i8**
    %13 = load i8*, i8** %12, align 4, !tbaa !50
    br i1 %10, label %14, label %17
  
  ; <label>:14                                      ; preds = %5
    %15 = sub nsw i32 0, %9
    %16 = getelementptr inbounds i8, i8* %13, i32 %15
    store i8* %16, i8** %pep, align 4, !tbaa !37
    br label %20
  
  ; <label>:17                                      ; preds = %5
    store i8* %13, i8** %pep, align 4, !tbaa !37
    br label %20
  
  ; <label>:18                                      ; preds = %0
    %19 = getelementptr inbounds i8, i8* %vptr, i32 8
    store i8* %19, i8** %pep, align 4, !tbaa !37
    br label %20
  
  ; <label>:20                                      ; preds = %18, %17, %14, %1, %0
    %.0 = phi %struct.gs_ptr_procs_s* [ @ptr_ref_procs, %18 ], [ @ptr_struct_procs, %14 ], [ @ptr_ref_procs, %17 ], [ @ptr_struct_procs, %1 ], [ null, %0 ]
    ret %struct.gs_ptr_procs_s* %.0
  }
  
  ; Function Attrs: nounwind
  define internal void @change_reloc_ptrs(i8* %vptr, i32 signext %size, %struct.gc_state_s* %gcst) #1 {
    %1 = bitcast i8* %vptr to i8**
    %2 = load i8*, i8** %1, align 4, !tbaa !61
    %3 = tail call i8* @gs_reloc_struct_ptr(i8* %2, %struct.gc_state_s* %gcst) #5
    store i8* %3, i8** %1, align 4, !tbaa !61
    %4 = getelementptr inbounds i8, i8* %vptr, i32 16
    %5 = bitcast i8* %4 to i16*
    %6 = load i16, i16* %5, align 4, !tbaa !62
    %7 = sext i16 %6 to i32
    switch i32 %7, label %13 [
      i32 -2, label %23
      i32 -1, label %8
    ]
  
  ; <label>:8                                       ; preds = %0
    %9 = getelementptr inbounds i8, i8* %vptr, i32 4
    %10 = bitcast i8* %9 to i16**
    %11 = load i16*, i16** %10, align 4, !tbaa !50
    %12 = tail call i16* @gs_reloc_ref_ptr(i16* %11, %struct.gc_state_s* %gcst) #5
    store i16* %12, i16** %10, align 4, !tbaa !50
    br label %23
  
  ; <label>:13                                      ; preds = %0
    %14 = getelementptr inbounds i8, i8* %vptr, i32 4
    %15 = bitcast i8* %14 to i8**
    %16 = load i8*, i8** %15, align 4, !tbaa !50
    %17 = sub nsw i32 0, %7
    %18 = getelementptr inbounds i8, i8* %16, i32 %17
    %19 = tail call i8* @gs_reloc_struct_ptr(i8* %18, %struct.gc_state_s* %gcst) #5
    %sunkaddr = ptrtoint i8* %vptr to i32
    %sunkaddr1 = add i32 %sunkaddr, 16
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i16*
    %20 = load i16, i16* %sunkaddr2, align 4, !tbaa !62
    %21 = sext i16 %20 to i32
    %22 = getelementptr inbounds i8, i8* %19, i32 %21
    store i8* %22, i8** %15, align 4, !tbaa !50
    br label %23
  
  ; <label>:23                                      ; preds = %13, %8, %0
    %24 = getelementptr inbounds i8, i8* %vptr, i32 8
    %25 = bitcast i8* %24 to i16*
    %26 = load i16, i16* %25, align 4, !tbaa !40
    %27 = zext i16 %26 to i32
    %28 = icmp ugt i16 %26, 16383
    br i1 %28, label %29, label %31
  
  ; <label>:29                                      ; preds = %23
    %30 = and i32 %27, 61439
    br label %37
  
  ; <label>:31                                      ; preds = %23
    %32 = bitcast i8* %24 to i16*
    %33 = bitcast i8* %4 to i16*
    tail call void @gs_reloc_refs(i16* %32, i16* nonnull %33, %struct.gc_state_s* %gcst) #5
    %34 = load i16, i16* %32, align 4, !tbaa !54
    %35 = zext i16 %34 to i32
    %36 = and i32 %35, 65534
    br label %37
  
  ; <label>:37                                      ; preds = %31, %29
    %storemerge.in = phi i32 [ %36, %31 ], [ %30, %29 ]
    %38 = bitcast i8* %24 to i16*
    %storemerge = trunc i32 %storemerge.in to i16
    store i16 %storemerge, i16* %38, align 4, !tbaa !40
    ret void
  }
  
  declare i16* @gs_reloc_ref_ptr(i16*, %struct.gc_state_s*) #3
  
  declare void @gs_reloc_refs(i16*, i16*, %struct.gc_state_s*) #3
  
  declare void @alloc_open_chunk(%struct.gs_ref_memory_s*) #3
  
  declare void @file_restore(%struct.alloc_save_s*, %struct.gs_memory_s*) #3
  
  declare void @font_restore(%struct.alloc_save_s*) #3
  
  declare void @name_restore(%struct.alloc_save_s*) #3
  
  declare void @alloc_free_chunk(%struct.chunk_s*, %struct.gs_ref_memory_s*) #3
  
  declare void @alloc_link_chunk(%struct.chunk_s*, %struct.gs_ref_memory_s*) #3
  
  attributes #0 = { norecurse nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #2 = { argmemonly nounwind "target-cpu"="mips32" }
  attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #4 = { norecurse nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #5 = { nounwind }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}
  !1 = !{!2, !6, i64 24}
  !2 = !{!"gs_dual_memory_s", !3, i64 0, !4, i64 4, !6, i64 20, !6, i64 24, !3, i64 28, !6, i64 32, !6, i64 36}
  !3 = !{!"any pointer", !4, i64 0}
  !4 = !{!"omnipotent char", !5, i64 0}
  !5 = !{!"Simple C/C++ TBAA"}
  !6 = !{!"int", !4, i64 0}
  !7 = !{!2, !6, i64 32}
  !8 = !{!2, !6, i64 36}
  !9 = !{!10, !3, i64 12}
  !10 = !{!"_ssn", !3, i64 0, !3, i64 4, !3, i64 8, !3, i64 12}
  !11 = !{!10, !3, i64 8}
  !12 = !{!13, !6, i64 268}
  !13 = !{!"gs_ref_memory_s", !14, i64 0, !3, i64 80, !6, i64 84, !6, i64 88, !3, i64 92, !6, i64 96, !15, i64 100, !16, i64 124, !3, i64 128, !3, i64 132, !17, i64 136, !3, i64 228, !19, i64 232, !16, i64 240, !16, i64 244, !16, i64 248, !20, i64 252, !3, i64 264, !6, i64 268, !3, i64 272, !3, i64 276, !3, i64 280, !21, i64 284, !4, i64 292}
  !14 = !{!"gs_memory_procs_s", !3, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !3, i64 20, !3, i64 24, !3, i64 28, !3, i64 32, !3, i64 36, !3, i64 40, !3, i64 44, !3, i64 48, !3, i64 52, !3, i64 56, !3, i64 60, !3, i64 64, !3, i64 68, !3, i64 72, !3, i64 76}
  !15 = !{!"gs_memory_gc_status_s", !16, i64 0, !16, i64 4, !3, i64 8, !6, i64 12, !6, i64 16, !16, i64 20}
  !16 = !{!"long", !4, i64 0}
  !17 = !{!"chunk_s", !3, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !3, i64 20, !3, i64 24, !3, i64 28, !3, i64 32, !3, i64 36, !3, i64 40, !6, i64 44, !6, i64 48, !3, i64 52, !18, i64 56, !3, i64 60, !3, i64 64, !6, i64 68, !3, i64 72, !3, i64 76, !3, i64 80, !3, i64 84, !3, i64 88}
  !18 = !{!"short", !4, i64 0}
  !19 = !{!"chunk_locator_s", !3, i64 0, !3, i64 4}
  !20 = !{!"lost_", !16, i64 0, !16, i64 4, !16, i64 8}
  !21 = !{!"gs_memory_status_s", !16, i64 0, !16, i64 4}
  !22 = !{!13, !3, i64 228}
  !23 = !{!24, !3, i64 44}
  !24 = !{!"gs_memory_s", !14, i64 0}
  !25 = !{!13, !3, i64 80}
  !26 = !{!27, !16, i64 708}
  !27 = !{!"alloc_save_s", !13, i64 0, !3, i64 696, !6, i64 700, !6, i64 704, !16, i64 708, !3, i64 712}
  !28 = !{!27, !3, i64 712}
  !29 = !{!27, !6, i64 700}
  !30 = !{!27, !16, i64 240}
  !31 = !{!27, !16, i64 244}
  !32 = !{!13, !16, i64 244}
  !33 = !{!13, !3, i64 156}
  !34 = !{!13, !3, i64 144}
  !35 = !{!24, !3, i64 8}
  !36 = !{i64 0, i64 4, !37, i64 4, i64 4, !37, i64 8, i64 4, !37, i64 12, i64 4, !37, i64 16, i64 4, !37, i64 20, i64 4, !37, i64 24, i64 4, !37, i64 28, i64 4, !37, i64 32, i64 4, !37, i64 36, i64 4, !37, i64 40, i64 4, !37, i64 44, i64 4, !37, i64 48, i64 4, !37, i64 52, i64 4, !37, i64 56, i64 4, !37, i64 60, i64 4, !37, i64 64, i64 4, !37, i64 68, i64 4, !37, i64 72, i64 4, !37, i64 76, i64 4, !37, i64 80, i64 4, !37, i64 84, i64 4, !38, i64 88, i64 4, !38, i64 92, i64 4, !37, i64 96, i64 4, !38, i64 100, i64 4, !39, i64 104, i64 4, !39, i64 108, i64 4, !37, i64 112, i64 4, !38, i64 116, i64 4, !38, i64 120, i64 4, !39, i64 124, i64 4, !39, i64 128, i64 4, !37, i64 132, i64 4, !37, i64 136, i64 4, !37, i64 140, i64 4, !37, i64 144, i64 4, !37, i64 148, i64 4, !37, i64 152, i64 4, !37, i64 156, i64 4, !37, i64 160, i64 4, !37, i64 164, i64 4, !37, i64 168, i64 4, !37, i64 172, i64 4, !37, i64 176, i64 4, !37, i64 180, i64 4, !38, i64 184, i64 4, !38, i64 188, i64 4, !37, i64 192, i64 2, !40, i64 196, i64 4, !37, i64 200, i64 4, !37, i64 204, i64 4, !38, i64 208, i64 4, !37, i64 212, i64 4, !37, i64 216, i64 4, !37, i64 220, i64 4, !37, i64 224, i64 4, !37, i64 228, i64 4, !37, i64 232, i64 4, !37, i64 236, i64 4, !37, i64 240, i64 4, !39, i64 244, i64 4, !39, i64 248, i64 4, !39, i64 252, i64 4, !39, i64 256, i64 4, !39, i64 260, i64 4, !39, i64 264, i64 4, !37, i64 268, i64 4, !38, i64 272, i64 4, !37, i64 276, i64 4, !37, i64 280, i64 4, !37, i64 284, i64 4, !39, i64 288, i64 4, !39, i64 292, i64 404, !41}
  !37 = !{!3, !3, i64 0}
  !38 = !{!6, !6, i64 0}
  !39 = !{!16, !16, i64 0}
  !40 = !{!18, !18, i64 0}
  !41 = !{!4, !4, i64 0}
  !42 = !{!24, !3, i64 72}
  !43 = !{!13, !3, i64 168}
  !44 = !{!13, !3, i64 172}
  !45 = !{i64 0, i64 4, !37, i64 4, i64 4, !37, i64 8, i64 4, !37, i64 12, i64 4, !37, i64 16, i64 4, !37, i64 20, i64 4, !37, i64 24, i64 4, !37, i64 28, i64 4, !37, i64 32, i64 4, !37, i64 36, i64 4, !37, i64 40, i64 4, !37, i64 44, i64 4, !38, i64 48, i64 4, !38, i64 52, i64 4, !37, i64 56, i64 2, !40, i64 60, i64 4, !37, i64 64, i64 4, !37, i64 68, i64 4, !38, i64 72, i64 4, !37, i64 76, i64 4, !37, i64 80, i64 4, !37, i64 84, i64 4, !37, i64 88, i64 4, !37}
  !46 = !{!27, !3, i64 696}
  !47 = !{!2, !3, i64 0}
  !48 = !{!27, !6, i64 704}
  !49 = !{!13, !3, i64 276}
  !50 = !{!51, !3, i64 4}
  !51 = !{!"alloc_change_s", !3, i64 0, !3, i64 4, !52, i64 8, !18, i64 16}
  !52 = !{!"ref_s", !53, i64 0, !4, i64 4}
  !53 = !{!"tas_s", !18, i64 0, !18, i64 2}
  !54 = !{!52, !18, i64 0}
  !55 = !{!17, !6, i64 48}
  !56 = !{!17, !3, i64 4}
  !57 = !{!17, !3, i64 8}
  !58 = !{!59, !6, i64 4}
  !59 = !{!"obj_header_data_s", !4, i64 0, !6, i64 4, !4, i64 8}
  !60 = !{!13, !3, i64 272}
  !61 = !{!51, !3, i64 0}
  !62 = !{!51, !18, i64 16}
  !63 = !{!17, !3, i64 28}
  !64 = !{!65, !3, i64 4}
  !65 = !{!"name_s", !18, i64 0, !6, i64 2, !6, i64 2, !6, i64 2, !3, i64 4, !3, i64 8}
  !66 = !{!24, !3, i64 76}
  !67 = !{!68, !3, i64 24}
  !68 = !{!"gs_memory_struct_type_s", !6, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !3, i64 20, !3, i64 24}
  !69 = !{!13, !3, i64 132}
  !70 = !{!17, !3, i64 32}
  !71 = !{!13, !6, i64 96}
  !72 = !{!2, !6, i64 20}
  !73 = !{!10, !3, i64 4}
  !74 = !{!27, !3, i64 272}
  !75 = !{!13, !3, i64 128}
  !76 = !{!17, !3, i64 36}
  !77 = !{!17, !3, i64 40}
  !78 = !{!17, !6, i64 44}
  !79 = !{!13, !3, i64 236}
  !80 = !{!17, !3, i64 0}
  !81 = !{!17, !3, i64 12}
  !82 = !{!17, !3, i64 16}
  !83 = !{!17, !3, i64 20}
  !84 = !{!13, !16, i64 240}
  !85 = !{!13, !16, i64 248}
  !86 = !{!13, !16, i64 252}
  !87 = !{!13, !16, i64 256}
  !88 = !{!13, !16, i64 260}
  !89 = !{!68, !3, i64 16}
  !90 = !{!68, !3, i64 20}

...
---
name:            alloc_save_state
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
  - { id: 2, class: gpr32 }
  - { id: 3, class: gpr32 }
  - { id: 4, class: gpr32 }
  - { id: 5, class: gpr32 }
  - { id: 6, class: gpr32 }
  - { id: 7, class: gpr32 }
  - { id: 8, class: gpr32 }
  - { id: 9, class: gpr32 }
  - { id: 10, class: gpr32 }
  - { id: 11, class: gpr32 }
  - { id: 12, class: gpr32 }
  - { id: 13, class: gpr32 }
  - { id: 14, class: gpr32 }
  - { id: 15, class: gpr32 }
  - { id: 16, class: gpr32 }
  - { id: 17, class: gpr32 }
  - { id: 18, class: gpr32 }
  - { id: 19, class: gpr32 }
  - { id: 20, class: gpr32 }
  - { id: 21, class: gpr32 }
  - { id: 22, class: gpr32 }
  - { id: 23, class: gpr32 }
  - { id: 24, class: gpr32 }
  - { id: 25, class: gpr32 }
  - { id: 26, class: gpr32 }
  - { id: 27, class: gpr32 }
  - { id: 28, class: gpr32 }
  - { id: 29, class: gpr32 }
  - { id: 30, class: gpr32 }
  - { id: 31, class: gpr32 }
  - { id: 32, class: gpr32 }
  - { id: 33, class: gpr32 }
  - { id: 34, class: gpr32 }
  - { id: 35, class: gpr32 }
  - { id: 36, class: gpr32 }
  - { id: 37, class: gpr32 }
  - { id: 38, class: gpr32 }
  - { id: 39, class: gpr32 }
  - { id: 40, class: gpr32 }
  - { id: 41, class: gpr32 }
  - { id: 42, class: gpr32 }
  - { id: 43, class: gpr32 }
  - { id: 44, class: gpr32 }
  - { id: 45, class: gpr32 }
  - { id: 46, class: gpr32 }
  - { id: 47, class: gpr32 }
  - { id: 48, class: gpr32 }
  - { id: 49, class: gpr32 }
  - { id: 50, class: gpr32 }
  - { id: 51, class: gpr32 }
  - { id: 52, class: gpr32 }
  - { id: 53, class: gpr32 }
  - { id: 54, class: gpr32 }
  - { id: 55, class: gpr32 }
  - { id: 56, class: gpr32 }
  - { id: 57, class: gpr32 }
  - { id: 58, class: gpr32 }
  - { id: 59, class: gpr32 }
  - { id: 60, class: gpr32 }
  - { id: 61, class: gpr32 }
  - { id: 62, class: gpr32 }
  - { id: 63, class: gpr32 }
  - { id: 64, class: gpr32 }
  - { id: 65, class: gpr32 }
  - { id: 66, class: gpr32 }
  - { id: 67, class: gpr32 }
  - { id: 68, class: gpr32 }
  - { id: 69, class: gpr32 }
  - { id: 70, class: gpr32 }
  - { id: 71, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%9' }
  - { reg: '%a1', virtual-reg: '%10' }
  - { reg: '%t9' }
  - { reg: '%v0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 81):
    successors: %bb.3..thread(25), %bb.16(75)
    liveins: %a0, %a1, %t9, %v0
  
    %11 = ADDu %v0, %t9
    %10 = COPY %a1
    %9 = COPY %a0
    %1 = LW %9, 12, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.3, !tbaa !11)
    %0 = LW %9, 16, <0x37109f0> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.1, !tbaa !9)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %15 = LW %11, target-flags(<unknown>) @gs_next_ids, <0x3710a20> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @gs_next_ids)
    %16 = ADDiu %zero, 2
    %a0 = COPY %16
    %gp = COPY %11
    %t9 = COPY %15
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %17 = COPY %v0
    %13 = ADDiu %zero, 0
    %12 = COPY %13
    BEQ %1, %0, %bb.3..thread, implicit-def dead %at
    B %bb.16, implicit-def dead %at
  
  bb.16 (%ir-block.0, freq 61):
    successors: %bb.3..thread(33), %bb.1(66)
  
    %14 = LW %9, 24, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.6, !tbaa !1)
    BNE %14, %zero, %bb.3..thread, implicit-def dead %at
    B %bb.1, implicit-def dead %at
  
  bb.1 (%ir-block.10, freq 40):
    successors: %bb.2(50), %bb.3..thread(50)
  
    %20 = LW %1, 268, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.11, !tbaa !12)
    %19 = ADDiu %zero, 0
    %18 = COPY %19
    %21 = ADDiu %zero, 1
    BNE killed %20, %21, %bb.3..thread, implicit-def dead %at
    B %bb.2, implicit-def dead %at
  
  bb.2 (%ir-block.14, freq 20):
    successors: %bb.3..thread(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %23 = LW %11, target-flags(<unknown>) @alloc_save_space, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %24 = ADDiu killed %23, target-flags(<unknown>) @alloc_save_space
    %a0 = COPY %1
    %a1 = COPY %9
    %t9 = COPY %24
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    %25 = COPY %v0
    %3 = COPY %25
  
  bb.3..thread (freq 81):
    successors: %bb.4(25), %bb.17..thread(75)
  
    %4 = PHI %12, %bb.0, %12, %bb.16, %18, %bb.1, %21, %bb.2
    %5 = PHI %13, %bb.0, %13, %bb.16, %19, %bb.1, %3, %bb.2
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %27 = LW %11, target-flags(<unknown>) @alloc_save_space, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %28 = ADDiu %27, target-flags(<unknown>) @alloc_save_space
    %a0 = COPY %0
    %a1 = COPY %9
    %t9 = COPY %28
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    %29 = COPY %v0
    %6 = COPY %29
    BEQ %29, %zero, %bb.4, implicit-def dead %at
    B %bb.17..thread, implicit-def dead %at
  
  bb.17..thread (freq 61):
    successors: %bb.4(33), %bb.8(66)
  
    %30 = SLTiu %5, 1
    %26 = AND %4, %30
    BEQ %26, %zero, %bb.8, implicit-def dead %at
    B %bb.4, implicit-def dead %at
  
  bb.4 (%ir-block.21, freq 40):
    successors: %bb.6(37), %bb.5(62)
  
    BEQ %6, %zero, %bb.6, implicit-def dead %at
    B %bb.5, implicit-def dead %at
  
  bb.5 (%ir-block.23, freq 25):
    successors: %bb.6(100)
  
    %52 = LW %0, 228, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.25, !tbaa !22)
    %53 = LW %0, 44, <0x37109f0> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.28, !tbaa !23)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %54 = LW %11, target-flags(<unknown>) @.str, <0x3710a20> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %55 = ADDiu killed %54, target-flags(<unknown>) @.str
    %a0 = COPY %0
    %a1 = COPY %6
    %a2 = COPY %55
    %t9 = COPY %53
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %56 = LW %0, 80, <0x370cf50> = !{!"unison-memory-partition", i32 3} :: (load 4 from %ir.31, !tbaa !25)
    %57 = LW %11, target-flags(<unknown>) @.str.1, <0x370d020> = !{!"unison-memory-partition", i32 4} :: (load 4 from got)
    %58 = LW %56, 44, <0x364e290> = !{!"unison-memory-partition", i32 5} :: (load 4 from %ir.33, !tbaa !23)
    %59 = ADDiu killed %57, target-flags(<unknown>) @.str.1
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %a0 = COPY %56
    %a1 = COPY %52
    %a2 = COPY %59
    %t9 = COPY %58
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
  
  bb.6 (%ir-block.35, freq 40):
    successors: %bb.15(37), %bb.7(62)
  
    %60 = ADDiu %zero, 0
    BEQ %5, %zero, %bb.15, implicit-def dead %at
    B %bb.7, implicit-def dead %at
  
  bb.7 (%ir-block.37, freq 25):
    successors: %bb.15(100)
  
    %62 = LW %1, 228, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.39, !tbaa !22)
    %63 = LW %1, 44, <0x37109f0> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.42, !tbaa !23)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %64 = LW %11, target-flags(<unknown>) @.str.2, <0x3710a20> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %65 = ADDiu killed %64, target-flags(<unknown>) @.str.2
    %a0 = COPY %1
    %a1 = COPY %5
    %a2 = COPY %65
    %t9 = COPY %63
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %66 = LW %1, 80, <0x370cf50> = !{!"unison-memory-partition", i32 3} :: (load 4 from %ir.45, !tbaa !25)
    %67 = LW %11, target-flags(<unknown>) @.str.3, <0x370d020> = !{!"unison-memory-partition", i32 4} :: (load 4 from got)
    %68 = LW %66, 44, <0x364e290> = !{!"unison-memory-partition", i32 5} :: (load 4 from %ir.47, !tbaa !23)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %69 = ADDiu killed %67, target-flags(<unknown>) @.str.3
    %a0 = COPY %66
    %a1 = COPY %62
    %a2 = COPY %69
    %t9 = COPY %68
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    B %bb.15, implicit-def dead %at
  
  bb.8 (%ir-block.49, freq 40):
    successors: %bb.10(37), %bb.9(62)
  
    %2 = COPY %17
    BEQ %5, %zero, %bb.10, implicit-def dead %at
    B %bb.9, implicit-def dead %at
  
  bb.9 (%ir-block.51, freq 25):
    successors: %bb.10(100)
  
    %31 = ADDiu %17, 1
    SW killed %31, %5, 708, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.53, !tbaa !26)
    SW %zero, %5, 712, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.54, !tbaa !28)
    %32 = LW %5, 700, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.55, !tbaa !29)
    SW killed %32, %6, 700, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.57, !tbaa !29)
    SW %zero, %5, 700, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.55, !tbaa !29)
  
  bb.10 (%ir-block.58, freq 40):
    successors: %bb.14(37), %bb.11(62)
  
    SW %2, %6, 708, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.59, !tbaa !26)
    SW %10, %6, 712, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.60, !tbaa !28)
    %33 = LW %9, 24, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr2, !tbaa !1)
    BEQ killed %33, %zero, %bb.14, implicit-def dead %at
    B %bb.11, implicit-def dead %at
  
  bb.11 (%ir-block.63, freq 25):
    successors: %bb.12(50), %bb.14(50)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %34 = LW %11, target-flags(<unknown>) @save_set_new, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %35 = ADDiu killed %34, target-flags(<unknown>) @save_set_new
    %36 = ADDiu %zero, 0
    %a0 = COPY %6
    %a1 = COPY %36
    %t9 = COPY %35
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    %37 = COPY %v0
    %38 = LUi 1
    %39 = ORi killed %38, 34465
    %40 = SLT %37, killed %39
    BNE killed %40, %zero, %bb.14, implicit-def dead %at
    B %bb.12, implicit-def dead %at
  
  bb.12 (%ir-block.67, freq 12):
    successors: %bb.14(37), %bb.13(62)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %41 = LW %11, target-flags(<unknown>) @file_save, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @file_save)
    %gp = COPY %11
    %t9 = COPY %41
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %43 = ADDiu %27, target-flags(<unknown>) @alloc_save_space
    %a0 = COPY %0
    %a1 = COPY %9
    %t9 = COPY %43
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    %44 = COPY %v0
    BEQ %44, %zero, %bb.14, implicit-def dead %at
    B %bb.13, implicit-def dead %at
  
  bb.13 (%ir-block.70, freq 7):
    successors: %bb.14(100)
  
    %7 = COPY %44
    SW %2, %7, 708, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.71, !tbaa !26)
    SW %10, %7, 712, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.72, !tbaa !28)
    SW %zero, %6, 708, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr5, !tbaa !26)
    SW %zero, %6, 712, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr8, !tbaa !28)
    %45 = LW %6, 240, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.73, !tbaa !30)
    %46 = LW %6, 244, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.75, !tbaa !31)
    %47 = ADDu killed %46, killed %45
    SW %47, %7, 244, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.78, !tbaa !31)
    SW %47, %0, 244, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.79, !tbaa !32)
  
  bb.14 (%ir-block.80, freq 40):
    successors: %bb.15(100)
  
    %48 = LW %9, 24, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr11, !tbaa !1)
    %49 = ADDiu killed %48, 1
    SW killed %49, %9, 24, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr11, !tbaa !1)
    %50 = ADDiu %zero, 2
    SW %50, %9, 36, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.83, !tbaa !8)
    SW %50, %9, 32, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.84, !tbaa !7)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %51 = LW %11, target-flags(<unknown>) @file_save, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @file_save)
    %gp = COPY %11
    %t9 = COPY %51
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
  
  bb.15 (%ir-block.85, freq 81):
    liveouts: %v0
  
    %8 = PHI %2, %bb.14, %60, %bb.6, %60, %bb.7
    %v0 = COPY %8
    RetRA implicit %v0

...
--- |
  ; ModuleID = '/home/romi/didaktoriko/unison/unison-experiments/experiments/test-input/c/mediabench/mips_zip/build-mips/ghostscript/ghostscript.isave.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips--linux-gnu"
  
  %struct.gs_memory_struct_type_s = type { i32, i8*, %struct.struct_shared_procs_s*, void (i8*, i32)*, %struct.gs_ptr_procs_s* (i8*, i32, i32, i8**)*, void (i8*, i32, %struct.gc_state_s*)*, void (i8*)* }
  %struct.struct_shared_procs_s = type opaque
  %struct.gs_ptr_procs_s = type { void (i8*, %struct.gc_state_s*)*, i32 (i8*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)* }
  %struct.gc_state_s = type opaque
  %struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i32, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i32, i32, [40 x i8] }
  %struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
  %struct.gs_dual_memory_s = type { %struct.gs_ref_memory_s*, %union.vm_spaces_s, i32, i32, i32 (%struct.gs_dual_memory_s*, i32)*, i32, i32 }
  %struct.gs_ref_memory_s = type { %struct.gs_memory_procs_s, %struct.gs_memory_s*, i32, i32, %struct.gs_ref_memory_s*, i32, %struct.gs_memory_gc_status_s, i32, %struct.chunk_s*, %struct.chunk_s*, %struct.chunk_s, %struct.chunk_s*, %struct.chunk_locator_s, i32, i32, i32, %struct.lost_, %struct.gs_gc_root_s*, i32, %struct.alloc_change_s*, %struct.alloc_save_s*, %struct.alloc_save_s*, %struct.gs_memory_status_s, [101 x %struct.obj_header_s*] }
  %struct.gs_memory_procs_s = type { i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i8*, i32, i8*)*, i32 (%struct.gs_memory_s*, i8*)*, %struct.gs_memory_struct_type_s* (%struct.gs_memory_s*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i8*, i32, i32, i8*)*, void (%struct.gs_memory_s*, i8*, i32, i8*)*, void (%struct.gs_memory_s*, %struct.gs_gc_root_s*, %struct.gs_ptr_procs_s*, i8**, i8*)*, void (%struct.gs_memory_s*, %struct.gs_gc_root_s*, i8*)*, void (%struct.gs_memory_s*, %struct.gs_memory_status_s*)*, void (%struct.gs_memory_s*, i32)* }
  %struct.gs_memory_s = type { %struct.gs_memory_procs_s }
  %struct.gs_memory_gc_status_s = type { i32, i32, i32*, i32, i32, i32 }
  %struct.chunk_s = type { %struct.chunk_head_s*, i8*, i8*, %struct.obj_header_s*, i8*, i8*, i8*, i8*, %struct.chunk_s*, %struct.chunk_s*, %struct.chunk_s*, i32, i32, i16*, i16, i8*, i8*, i32, i8*, i32*, i8*, i8*, i8* }
  %struct.chunk_head_s = type { i8*, [1 x i8*], %struct.obj_header_s }
  %struct.obj_header_s = type { %union._d }
  %union._d = type { %struct.obj_header_data_s, [4 x i8] }
  %struct.obj_header_data_s = type { %union._f, i32, %union._t }
  %union._f = type { %struct._l }
  %struct._l = type { i32 }
  %union._t = type { %struct.gs_memory_struct_type_s* }
  %struct.chunk_locator_s = type { %struct.gs_ref_memory_s*, %struct.chunk_s* }
  %struct.lost_ = type { i32, i32, i32 }
  %struct.gs_gc_root_s = type { %struct.gs_gc_root_s*, %struct.gs_ptr_procs_s*, i8** }
  %struct.alloc_change_s = type { %struct.alloc_change_s*, i16*, %struct.ref_s, i16 }
  %struct.ref_s = type { %struct.tas_s, %union.v }
  %struct.tas_s = type { i16, i16 }
  %union.v = type { i32 }
  %struct.alloc_save_s = type { %struct.gs_ref_memory_s, %struct.gs_dual_memory_s*, i32, i32, i32, i8* }
  %struct.gs_memory_status_s = type { i32, i32 }
  %union.vm_spaces_s = type { [4 x %struct.gs_ref_memory_s*] }
  %struct.name_s = type { i16, i16, i8*, %struct.ref_s* }
  
  @.str = private unnamed_addr constant [29 x i8] c"alloc_save_state(local save)\00", align 1
  @.str.1 = private unnamed_addr constant [30 x i8] c"alloc_save_state(local inner)\00", align 1
  @.str.2 = private unnamed_addr constant [30 x i8] c"alloc_save_state(global save)\00", align 1
  @.str.3 = private unnamed_addr constant [31 x i8] c"alloc_save_state(global inner)\00", align 1
  @st_alloc_change = internal global %struct.gs_memory_struct_type_s { i32 20, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i32 0, i32 0), %struct.struct_shared_procs_s* null, void (i8*, i32)* @change_clear_marks, %struct.gs_ptr_procs_s* (i8*, i32, i32, i8**)* @change_enum_ptrs, void (i8*, i32, %struct.gc_state_s*)* @change_reloc_ptrs, void (i8*)* null }, align 4
  @.str.4 = private unnamed_addr constant [18 x i8] c"alloc_save_change\00", align 1
  @gs_stderr = external global %struct._IO_FILE*, align 4
  @.str.5 = private unnamed_addr constant [8 x i8] c"isave.c\00", align 1
  @.str.6 = private unnamed_addr constant [53 x i8] c"Bad type %u for save!  pcont = 0x%lx, where = 0x%lx\0A\00", align 1
  @st_chunk = external global %struct.gs_memory_struct_type_s, align 4
  @.str.7 = private unnamed_addr constant [24 x i8] c"alloc_save_space(inner)\00", align 1
  @st_alloc_save = internal global %struct.gs_memory_struct_type_s { i32 716, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), %struct.struct_shared_procs_s* null, void (i8*, i32)* null, %struct.gs_ptr_procs_s* (i8*, i32, i32, i8**)* @save_enum_ptrs, void (i8*, i32, %struct.gc_state_s*)* @save_reloc_ptrs, void (i8*)* null }, align 4
  @.str.8 = private unnamed_addr constant [23 x i8] c"alloc_save_space(save)\00", align 1
  @.str.9 = private unnamed_addr constant [11 x i8] c"alloc_save\00", align 1
  @st_ref_memory = external global %struct.gs_memory_struct_type_s, align 4
  @ptr_struct_procs = external global %struct.gs_ptr_procs_s, align 4
  @.str.10 = private unnamed_addr constant [13 x i8] c"alloc_change\00", align 1
  @ptr_ref_procs = external global %struct.gs_ptr_procs_s, align 4
  @st_bytes = external global %struct.gs_memory_struct_type_s, align 4
  @.str.11 = private unnamed_addr constant [21 x i8] c"combine_space(inner)\00", align 1
  @.str.12 = private unnamed_addr constant [21 x i8] c"combine_space(saved)\00", align 1
  @.str.13 = private unnamed_addr constant [15 x i8] c"forget_changes\00", align 1
  @st_refs = external global %struct.gs_memory_struct_type_s, align 4
  
  ; Function Attrs: norecurse nounwind
  define void @alloc_save_init(%struct.gs_dual_memory_s* nocapture %dmem) #0 {
    %1 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 3
    store i32 0, i32* %1, align 4, !tbaa !1
    %2 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 5
    store i32 -1, i32* %2, align 4, !tbaa !7
    %3 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 6
    store i32 0, i32* %3, align 4, !tbaa !8
    ret void
  }
  
  ; Function Attrs: nounwind
  define i32 @alloc_save_state(%struct.gs_dual_memory_s* %dmem, i8* %cdata) #1 {
    %1 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 3
    %2 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %1, align 4, !tbaa !9
    %3 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 2
    %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %3, align 4, !tbaa !11
    %5 = tail call i32 @gs_next_ids(i32 signext 2) #5
    %6 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 3
    %7 = load i32, i32* %6, align 4, !tbaa !1
    %8 = icmp ne i32 %7, 0
    %9 = icmp eq %struct.gs_ref_memory_s* %4, %2
    %or.cond3 = or i1 %9, %8
    br i1 %or.cond3, label %.thread, label %10
  
  ; <label>:10                                      ; preds = %0
    %11 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %4, i32 0, i32 18
    %12 = load i32, i32* %11, align 4, !tbaa !12
    %13 = icmp eq i32 %12, 1
    br i1 %13, label %14, label %.thread
  
  ; <label>:14                                      ; preds = %10
    %15 = tail call fastcc %struct.alloc_save_s* @alloc_save_space(%struct.gs_ref_memory_s* nonnull %4, %struct.gs_dual_memory_s* nonnull %dmem)
    br label %.thread
  
  .thread:                                          ; preds = %14, %10, %0
    %16 = phi i1 [ true, %14 ], [ false, %10 ], [ false, %0 ]
    %17 = phi %struct.alloc_save_s* [ %15, %14 ], [ null, %10 ], [ null, %0 ]
    %18 = tail call fastcc %struct.alloc_save_s* @alloc_save_space(%struct.gs_ref_memory_s* %2, %struct.gs_dual_memory_s* nonnull %dmem)
    %19 = icmp eq %struct.alloc_save_s* %18, null
    %20 = icmp eq %struct.alloc_save_s* %17, null
    %or.cond = and i1 %16, %20
    %or.cond4 = or i1 %19, %or.cond
    br i1 %or.cond4, label %21, label %49
  
  ; <label>:21                                      ; preds = %.thread
    %22 = icmp eq %struct.alloc_save_s* %18, null
    br i1 %22, label %35, label %23
  
  ; <label>:23                                      ; preds = %21
    %24 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %2, i32 0, i32 11
    %25 = bitcast %struct.chunk_s** %24 to i8**
    %26 = load i8*, i8** %25, align 4, !tbaa !22
    %27 = bitcast %struct.gs_ref_memory_s* %2 to %struct.gs_memory_s*
    %28 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %2, i32 0, i32 0, i32 11
    %29 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %28, align 4, !tbaa !23
    %30 = bitcast %struct.alloc_save_s* %18 to i8*
    tail call void %29(%struct.gs_memory_s* %27, i8* %30, i8* nonnull getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i32 0, i32 0)) #5
    %31 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %2, i32 0, i32 1
    %32 = load %struct.gs_memory_s*, %struct.gs_memory_s** %31, align 4, !tbaa !25
    %33 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %32, i32 0, i32 0, i32 11
    %34 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %33, align 4, !tbaa !23
    tail call void %34(%struct.gs_memory_s* %32, i8* %26, i8* nonnull getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i32 0, i32 0)) #5
    br label %35
  
  ; <label>:35                                      ; preds = %23, %21
    %36 = icmp eq %struct.alloc_save_s* %17, null
    br i1 %36, label %85, label %37
  
  ; <label>:37                                      ; preds = %35
    %38 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %4, i32 0, i32 11
    %39 = bitcast %struct.chunk_s** %38 to i8**
    %40 = load i8*, i8** %39, align 4, !tbaa !22
    %41 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
    %42 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %4, i32 0, i32 0, i32 11
    %43 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %42, align 4, !tbaa !23
    %44 = bitcast %struct.alloc_save_s* %17 to i8*
    tail call void %43(%struct.gs_memory_s* %41, i8* %44, i8* nonnull getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i32 0, i32 0)) #5
    %45 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %4, i32 0, i32 1
    %46 = load %struct.gs_memory_s*, %struct.gs_memory_s** %45, align 4, !tbaa !25
    %47 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %46, i32 0, i32 0, i32 11
    %48 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %47, align 4, !tbaa !23
    tail call void %48(%struct.gs_memory_s* %46, i8* %40, i8* nonnull getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i32 0, i32 0)) #5
    br label %85
  
  ; <label>:49                                      ; preds = %.thread
    %50 = icmp eq %struct.alloc_save_s* %17, null
    br i1 %50, label %58, label %51
  
  ; <label>:51                                      ; preds = %49
    %52 = add i32 %5, 1
    %53 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %17, i32 0, i32 4
    store i32 %52, i32* %53, align 4, !tbaa !26
    %54 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %17, i32 0, i32 5
    store i8* null, i8** %54, align 4, !tbaa !28
    %55 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %17, i32 0, i32 2
    %56 = load i32, i32* %55, align 4, !tbaa !29
    %57 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %18, i32 0, i32 2
    store i32 %56, i32* %57, align 4, !tbaa !29
    store i32 0, i32* %55, align 4, !tbaa !29
    br label %58
  
  ; <label>:58                                      ; preds = %51, %49
    %59 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %18, i32 0, i32 4
    store i32 %5, i32* %59, align 4, !tbaa !26
    %60 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %18, i32 0, i32 5
    store i8* %cdata, i8** %60, align 4, !tbaa !28
    %sunkaddr = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr1 = add i32 %sunkaddr, 24
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i32*
    %61 = load i32, i32* %sunkaddr2, align 4, !tbaa !1
    %62 = icmp eq i32 %61, 0
    br i1 %62, label %80, label %63
  
  ; <label>:63                                      ; preds = %58
    %64 = bitcast %struct.alloc_save_s* %18 to %struct.gs_ref_memory_s*
    %65 = tail call fastcc i32 @save_set_new(%struct.gs_ref_memory_s* %64, i32 signext 0)
    %66 = icmp sgt i32 %65, 100000
    br i1 %66, label %67, label %80
  
  ; <label>:67                                      ; preds = %63
    tail call void @file_save() #5
    %68 = tail call fastcc %struct.alloc_save_s* @alloc_save_space(%struct.gs_ref_memory_s* %2, %struct.gs_dual_memory_s* nonnull %dmem)
    %69 = icmp eq %struct.alloc_save_s* %68, null
    br i1 %69, label %80, label %70
  
  ; <label>:70                                      ; preds = %67
    %71 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %68, i32 0, i32 4
    store i32 %5, i32* %71, align 4, !tbaa !26
    %72 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %68, i32 0, i32 5
    store i8* %cdata, i8** %72, align 4, !tbaa !28
    %sunkaddr3 = ptrtoint %struct.alloc_save_s* %18 to i32
    %sunkaddr4 = add i32 %sunkaddr3, 708
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to i32*
    store i32 0, i32* %sunkaddr5, align 4, !tbaa !26
    %sunkaddr6 = ptrtoint %struct.alloc_save_s* %18 to i32
    %sunkaddr7 = add i32 %sunkaddr6, 712
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to i8**
    store i8* null, i8** %sunkaddr8, align 4, !tbaa !28
    %73 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %18, i32 0, i32 0, i32 13
    %74 = load i32, i32* %73, align 4, !tbaa !30
    %75 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %18, i32 0, i32 0, i32 14
    %76 = load i32, i32* %75, align 4, !tbaa !31
    %77 = add i32 %76, %74
    %78 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %68, i32 0, i32 0, i32 14
    store i32 %77, i32* %78, align 4, !tbaa !31
    %79 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %2, i32 0, i32 14
    store i32 %77, i32* %79, align 4, !tbaa !32
    br label %80
  
  ; <label>:80                                      ; preds = %70, %67, %63, %58
    %sunkaddr9 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr10 = add i32 %sunkaddr9, 24
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to i32*
    %81 = load i32, i32* %sunkaddr11, align 4, !tbaa !1
    %82 = add nsw i32 %81, 1
    store i32 %82, i32* %sunkaddr11, align 4, !tbaa !1
    %83 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 6
    store i32 2, i32* %83, align 4, !tbaa !8
    %84 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 5
    store i32 2, i32* %84, align 4, !tbaa !7
    tail call void @file_save() #5
    br label %85
  
  ; <label>:85                                      ; preds = %80, %37, %35
    %.0 = phi i32 [ %5, %80 ], [ 0, %35 ], [ 0, %37 ]
    ret i32 %.0
  }
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.start(i64, i8* nocapture) #2
  
  declare i32 @gs_next_ids(i32 signext) #3
  
  ; Function Attrs: nounwind
  define internal fastcc %struct.alloc_save_s* @alloc_save_space(%struct.gs_ref_memory_s* %mem, %struct.gs_dual_memory_s* %dmem) unnamed_addr #1 {
    %save_mem = alloca %struct.gs_ref_memory_s, align 4
    %1 = bitcast %struct.gs_ref_memory_s* %save_mem to i8*
    call void @llvm.lifetime.start(i64 696, i8* %1)
    %2 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 10
    %3 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 10, i32 5
    %4 = bitcast i8** %3 to i32*
    %5 = load i32, i32* %4, align 4, !tbaa !33
    %6 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 10, i32 2
    %7 = bitcast i8** %6 to i32*
    %8 = load i32, i32* %7, align 4, !tbaa !34
    %9 = sub i32 %5, %8
    %10 = icmp ugt i32 %9, 24
    br i1 %10, label %11, label %19
  
  ; <label>:11                                      ; preds = %0
    %12 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 1
    %13 = load %struct.gs_memory_s*, %struct.gs_memory_s** %12, align 4, !tbaa !25
    %14 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %13, i32 0, i32 0, i32 2
    %15 = load i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)** %14, align 4, !tbaa !35
    %16 = tail call i8* %15(%struct.gs_memory_s* %13, %struct.gs_memory_struct_type_s* nonnull @st_chunk, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i32 0, i32 0)) #5
    %17 = bitcast i8* %16 to %struct.chunk_s*
    %18 = icmp eq i8* %16, null
    br i1 %18, label %73, label %19
  
  ; <label>:19                                      ; preds = %11, %0
    %inner.0 = phi %struct.chunk_s* [ %17, %11 ], [ null, %0 ]
    %20 = bitcast %struct.gs_ref_memory_s* %save_mem to i8*
    %21 = bitcast %struct.gs_ref_memory_s* %mem to i8*
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* %20, i8* %21, i32 696, i32 4, i1 false), !tbaa.struct !36
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* nonnull %mem) #5
    %22 = bitcast %struct.gs_ref_memory_s* %mem to %struct.gs_memory_s*
    %23 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 0, i32 18
    %24 = load void (%struct.gs_memory_s*, %struct.gs_memory_status_s*)*, void (%struct.gs_memory_s*, %struct.gs_memory_status_s*)** %23, align 4, !tbaa !42
    %25 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 22
    tail call void %24(%struct.gs_memory_s* %22, %struct.gs_memory_status_s* %25) #5
    tail call void @ialloc_reset(%struct.gs_ref_memory_s* nonnull %mem) #5
    %26 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 10, i32 8
    store %struct.chunk_s* null, %struct.chunk_s** %26, align 4, !tbaa !43
    %27 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 10, i32 9
    store %struct.chunk_s* null, %struct.chunk_s** %27, align 4, !tbaa !44
    %28 = icmp eq %struct.chunk_s* %inner.0, null
    br i1 %28, label %36, label %29
  
  ; <label>:29                                      ; preds = %19
    %sunkaddr = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr1 = add i32 %sunkaddr, 144
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i8**
    %30 = load i8*, i8** %sunkaddr2, align 4, !tbaa !34
    %sunkaddr3 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr4 = add i32 %sunkaddr3, 156
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to i8**
    %31 = load i8*, i8** %sunkaddr5, align 4, !tbaa !33
    %32 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 11
    %33 = load %struct.chunk_s*, %struct.chunk_s** %32, align 4, !tbaa !22
    tail call void @alloc_init_chunk(%struct.chunk_s* nonnull %2, i8* %30, i8* %31, i32 signext 1, %struct.chunk_s* %33) #5
    %34 = bitcast %struct.chunk_s* %inner.0 to i8*
    %35 = bitcast %struct.chunk_s* %2 to i8*
    tail call void @llvm.memcpy.p0i8.p0i8.i32(i8* %34, i8* %35, i32 92, i32 4, i1 false), !tbaa.struct !45
    store %struct.chunk_s* %inner.0, %struct.chunk_s** %32, align 4, !tbaa !22
    br label %38
  
  ; <label>:36                                      ; preds = %19
    %37 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 11
    store %struct.chunk_s* null, %struct.chunk_s** %37, align 4, !tbaa !22
    %sunkaddr6 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr7 = add i32 %sunkaddr6, 156
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to i8**
    store i8* null, i8** %sunkaddr8, align 4, !tbaa !33
    %sunkaddr9 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr10 = add i32 %sunkaddr9, 144
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to i8**
    store i8* null, i8** %sunkaddr11, align 4, !tbaa !34
    br label %38
  
  ; <label>:38                                      ; preds = %36, %29
    %inner.0.sink1 = phi %struct.chunk_s* [ null, %36 ], [ %inner.0, %29 ]
    %39 = bitcast %struct.gs_ref_memory_s* %mem to %struct.gs_memory_s*
    %40 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 9
    store %struct.chunk_s* %inner.0.sink1, %struct.chunk_s** %40, align 4
    %41 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 8
    store %struct.chunk_s* %inner.0.sink1, %struct.chunk_s** %41, align 4
    %42 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 0, i32 2
    %43 = load i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)** %42, align 4, !tbaa !35
    %44 = tail call i8* %43(%struct.gs_memory_s* nonnull %39, %struct.gs_memory_struct_type_s* nonnull @st_alloc_save, i8* nonnull getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0)) #5
    %45 = icmp eq i8* %44, null
    br i1 %45, label %46, label %54
  
  ; <label>:46                                      ; preds = %38
    %47 = bitcast %struct.gs_ref_memory_s* %mem to i8*
    %48 = bitcast %struct.gs_ref_memory_s* %save_mem to i8*
    %49 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 1
    %50 = load %struct.gs_memory_s*, %struct.gs_memory_s** %49, align 4, !tbaa !25
    %51 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %50, i32 0, i32 0, i32 11
    %52 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %51, align 4, !tbaa !23
    %53 = bitcast %struct.chunk_s* %inner.0 to i8*
    tail call void %52(%struct.gs_memory_s* %50, i8* %53, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i32 0, i32 0)) #5
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull %47, i8* nonnull %48, i32 696, i32 4, i1 false), !tbaa.struct !36
    br label %73
  
  ; <label>:54                                      ; preds = %38
    %55 = bitcast %struct.gs_ref_memory_s* %mem to %struct.gs_memory_s*
    %56 = bitcast %struct.gs_ref_memory_s* %save_mem to i8*
    %57 = bitcast i8* %44 to %struct.alloc_save_s*
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* nonnull %44, i8* nonnull %56, i32 696, i32 4, i1 false), !tbaa.struct !36
    %58 = getelementptr inbounds i8, i8* %44, i32 696
    %59 = bitcast i8* %58 to %struct.gs_dual_memory_s**
    store %struct.gs_dual_memory_s* %dmem, %struct.gs_dual_memory_s** %59, align 4, !tbaa !46
    %60 = tail call %struct.gs_memory_s* @name_memory() #5
    %61 = icmp eq %struct.gs_memory_s* %60, %55
    %62 = zext i1 %61 to i32
    %63 = getelementptr inbounds i8, i8* %44, i32 700
    %64 = bitcast i8* %63 to i32*
    store i32 %62, i32* %64, align 4, !tbaa !29
    %65 = bitcast %struct.gs_dual_memory_s* %dmem to %struct.gs_ref_memory_s**
    %66 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %65, align 4, !tbaa !47
    %67 = icmp eq %struct.gs_ref_memory_s* %66, %mem
    %68 = zext i1 %67 to i32
    %69 = getelementptr inbounds i8, i8* %44, i32 704
    %70 = bitcast i8* %69 to i32*
    store i32 %68, i32* %70, align 4, !tbaa !48
    %71 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 20
    %72 = bitcast %struct.alloc_save_s** %71 to i8**
    store i8* %44, i8** %72, align 4, !tbaa !49
    br label %73
  
  ; <label>:73                                      ; preds = %54, %46, %11
    %.0 = phi %struct.alloc_save_s* [ null, %46 ], [ %57, %54 ], [ null, %11 ]
    %74 = bitcast %struct.gs_ref_memory_s* %save_mem to i8*
    call void @llvm.lifetime.end(i64 696, i8* %74)
    ret %struct.alloc_save_s* %.0
  }
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.end(i64, i8* nocapture) #2
  
  ; Function Attrs: norecurse nounwind
  define internal fastcc i32 @save_set_new(%struct.gs_ref_memory_s* nocapture readonly %mem, i32 signext %to_new) unnamed_addr #0 {
    %1 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 19
    %2 = icmp ne i32 %to_new, 0
    %3 = select i1 %2, i32 2, i32 0
    %chp.01.i = load %struct.alloc_change_s*, %struct.alloc_change_s** %1, align 4, !tbaa !37
    %4 = icmp eq %struct.alloc_change_s* %chp.01.i, null
    br i1 %4, label %save_set_new_changes.exit, label %.lr.ph.i
  
  .lr.ph.i:                                         ; preds = %0, %14
    %chp.02.i = phi %struct.alloc_change_s* [ %chp.0.i, %14 ], [ %chp.01.i, %0 ]
    %5 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %chp.02.i, i32 0, i32 1
    %6 = load i16*, i16** %5, align 4, !tbaa !50
    %7 = load i16, i16* %6, align 2, !tbaa !40
    %8 = zext i16 %7 to i32
    %9 = icmp ugt i16 %7, 16383
    br i1 %9, label %14, label %10
  
  ; <label>:10                                      ; preds = %.lr.ph.i
    %11 = and i32 %8, 65533
    %12 = or i32 %11, %3
    %13 = trunc i32 %12 to i16
    store i16 %13, i16* %6, align 4, !tbaa !54
    br label %14
  
  ; <label>:14                                      ; preds = %10, %.lr.ph.i
    %15 = bitcast %struct.alloc_change_s* %chp.02.i to %struct.alloc_change_s**
    %chp.0.i = load %struct.alloc_change_s*, %struct.alloc_change_s** %15, align 4, !tbaa !37
    %16 = icmp eq %struct.alloc_change_s* %chp.0.i, null
    br i1 %16, label %save_set_new_changes.exit, label %.lr.ph.i
  
  save_set_new_changes.exit:                        ; preds = %14, %0
    %17 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 8
    %cp.08 = load %struct.chunk_s*, %struct.chunk_s** %17, align 4, !tbaa !37
    %18 = icmp eq %struct.chunk_s* %cp.08, null
    br i1 %18, label %._crit_edge12, label %.lr.ph11
  
  .lr.ph11:                                         ; preds = %save_set_new_changes.exit
    br label %19
  
  ; <label>:19                                      ; preds = %70, %.lr.ph11
    %cp.010 = phi %struct.chunk_s* [ %cp.08, %.lr.ph11 ], [ %cp.0, %70 ]
    %scanned.09 = phi i32 [ 0, %.lr.ph11 ], [ %scanned.3, %70 ]
    %20 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.010, i32 0, i32 12
    %21 = load i32, i32* %20, align 4, !tbaa !55
    %22 = icmp eq i32 %21, 0
    br i1 %22, label %70, label %23
  
  ; <label>:23                                      ; preds = %19
    %24 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.010, i32 0, i32 1
    %25 = bitcast i8** %24 to %struct.obj_header_s**
    %26 = load %struct.obj_header_s*, %struct.obj_header_s** %25, align 4, !tbaa !56
    %27 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.010, i32 0, i32 2
    %28 = bitcast i8** %27 to %struct.obj_header_s**
    %29 = load %struct.obj_header_s*, %struct.obj_header_s** %28, align 4, !tbaa !57
    %30 = icmp ult %struct.obj_header_s* %26, %29
    br i1 %30, label %.lr.ph, label %._crit_edge
  
  .lr.ph:                                           ; preds = %23, %.loopexit
    %scanned.16 = phi i32 [ %scanned.2, %.loopexit ], [ %scanned.09, %23 ]
    %has_refs.05 = phi i32 [ %has_refs.1, %.loopexit ], [ 0, %23 ]
    %pre.04 = phi %struct.obj_header_s* [ %68, %.loopexit ], [ %26, %23 ]
    %31 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.04, i32 0, i32 0, i32 0, i32 1
    %32 = load i32, i32* %31, align 4, !tbaa !58
    %33 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.04, i32 0, i32 0, i32 0, i32 2, i32 0
    %34 = load %struct.gs_memory_struct_type_s*, %struct.gs_memory_struct_type_s** %33, align 4, !tbaa !37
    %35 = icmp eq %struct.gs_memory_struct_type_s* %34, @st_refs
    br i1 %35, label %36, label %.loopexit
  
  ; <label>:36                                      ; preds = %.lr.ph
    %37 = icmp eq i32 %to_new, 0
    %38 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.04, i32 1
    %39 = bitcast %struct.obj_header_s* %38 to i16*
    %40 = bitcast %struct.obj_header_s* %38 to i8*
    %41 = getelementptr inbounds i8, i8* %40, i32 %32
    br i1 %37, label %.preheader, label %.preheader1
  
  .preheader1:                                      ; preds = %45, %47, %36
    %prp.0 = phi i16* [ %39, %36 ], [ %46, %45 ], [ %51, %47 ]
    %42 = load i16, i16* %prp.0, align 2, !tbaa !40
    %43 = zext i16 %42 to i32
    %44 = icmp ugt i16 %42, 16383
    br i1 %44, label %45, label %47
  
  ; <label>:45                                      ; preds = %.preheader1
    %46 = getelementptr inbounds i16, i16* %prp.0, i32 1
    br label %.preheader1
  
  ; <label>:47                                      ; preds = %.preheader1
    %48 = bitcast i8* %41 to i16*
    %49 = or i32 %43, 2
    %50 = trunc i32 %49 to i16
    store i16 %50, i16* %prp.0, align 4, !tbaa !54
    %51 = getelementptr inbounds i16, i16* %prp.0, i32 4
    %52 = icmp ult i16* %51, %48
    br i1 %52, label %.preheader1, label %.loopexit
  
  .preheader:                                       ; preds = %56, %58, %36
    %prp.1 = phi i16* [ %39, %36 ], [ %57, %56 ], [ %62, %58 ]
    %53 = load i16, i16* %prp.1, align 2, !tbaa !40
    %54 = zext i16 %53 to i32
    %55 = icmp ugt i16 %53, 16383
    br i1 %55, label %56, label %58
  
  ; <label>:56                                      ; preds = %.preheader
    %57 = getelementptr inbounds i16, i16* %prp.1, i32 1
    br label %.preheader
  
  ; <label>:58                                      ; preds = %.preheader
    %59 = bitcast i8* %41 to i16*
    %60 = and i32 %54, 65533
    %61 = trunc i32 %60 to i16
    store i16 %61, i16* %prp.1, align 4, !tbaa !54
    %62 = getelementptr inbounds i16, i16* %prp.1, i32 4
    %63 = icmp ult i16* %62, %59
    br i1 %63, label %.preheader, label %.loopexit
  
  .loopexit:                                        ; preds = %47, %58, %.lr.ph
    %has_refs.1 = phi i32 [ %has_refs.05, %.lr.ph ], [ 1, %58 ], [ 1, %47 ]
    %.pn = phi i32 [ 16, %.lr.ph ], [ %32, %58 ], [ %32, %47 ]
    %scanned.2 = add i32 %.pn, %scanned.16
    %64 = bitcast %struct.obj_header_s* %pre.04 to i8*
    %65 = add i32 %32, 23
    %66 = and i32 %65, -8
    %67 = getelementptr inbounds i8, i8* %64, i32 %66
    %68 = bitcast i8* %67 to %struct.obj_header_s*
    %69 = icmp ult %struct.obj_header_s* %68, %29
    br i1 %69, label %.lr.ph, label %._crit_edge
  
  ._crit_edge:                                      ; preds = %.loopexit, %23
    %scanned.1.lcssa = phi i32 [ %scanned.09, %23 ], [ %scanned.2, %.loopexit ]
    %has_refs.0.lcssa = phi i32 [ 0, %23 ], [ %has_refs.1, %.loopexit ]
    %sunkaddr = ptrtoint %struct.chunk_s* %cp.010 to i32
    %sunkaddr1 = add i32 %sunkaddr, 48
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i32*
    store i32 %has_refs.0.lcssa, i32* %sunkaddr2, align 4, !tbaa !55
    br label %70
  
  ; <label>:70                                      ; preds = %._crit_edge, %19
    %scanned.3 = phi i32 [ %scanned.1.lcssa, %._crit_edge ], [ %scanned.09, %19 ]
    %71 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.010, i32 0, i32 9
    %cp.0 = load %struct.chunk_s*, %struct.chunk_s** %71, align 4, !tbaa !37
    %72 = icmp eq %struct.chunk_s* %cp.0, null
    br i1 %72, label %._crit_edge12, label %19
  
  ._crit_edge12:                                    ; preds = %70, %save_set_new_changes.exit
    %scanned.0.lcssa = phi i32 [ 0, %save_set_new_changes.exit ], [ %scanned.3, %70 ]
    ret i32 %scanned.0.lcssa
  }
  
  declare void @file_save() #3
  
  ; Function Attrs: nounwind
  define i32 @alloc_save_change(%struct.gs_dual_memory_s* nocapture readonly %dmem, %struct.ref_s* %pcont, i16* %where, i8* nocapture readnone %cname) #1 {
    %1 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 3
    %2 = load i32, i32* %1, align 4, !tbaa !1
    %3 = icmp eq i32 %2, 0
    br i1 %3, label %81, label %4
  
  ; <label>:4                                       ; preds = %0
    %5 = icmp eq %struct.ref_s* %pcont, null
    br i1 %5, label %6, label %8
  
  ; <label>:6                                       ; preds = %4
    %7 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 3
    br label %15
  
  ; <label>:8                                       ; preds = %4
    %9 = bitcast %struct.ref_s* %pcont to i16*
    %10 = load i16, i16* %9, align 4, !tbaa !54
    %11 = zext i16 %10 to i32
    %12 = lshr i32 %11, 2
    %13 = and i32 %12, 3
    %14 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 %13
    br label %15
  
  ; <label>:15                                      ; preds = %8, %6
    %.in = phi %struct.gs_ref_memory_s** [ %7, %6 ], [ %14, %8 ]
    %16 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %.in, align 4, !tbaa !37
    %17 = bitcast %struct.gs_ref_memory_s* %16 to %struct.gs_memory_s*
    %18 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %16, i32 0, i32 0, i32 2
    %19 = load i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)** %18, align 4, !tbaa !35
    %20 = tail call i8* %19(%struct.gs_memory_s* %17, %struct.gs_memory_struct_type_s* nonnull @st_alloc_change, i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i32 0, i32 0)) #5
    %21 = icmp eq i8* %20, null
    br i1 %21, label %81, label %22
  
  ; <label>:22                                      ; preds = %15
    %23 = icmp eq %struct.ref_s* %pcont, null
    %24 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %16, i32 0, i32 19
    %25 = bitcast %struct.alloc_change_s** %24 to i32*
    %26 = load i32, i32* %25, align 4, !tbaa !60
    %27 = bitcast i8* %20 to i32*
    store i32 %26, i32* %27, align 4, !tbaa !61
    %28 = getelementptr inbounds i8, i8* %20, i32 4
    %29 = bitcast i8* %28 to i16**
    store i16* %where, i16** %29, align 4, !tbaa !50
    br i1 %23, label %30, label %33
  
  ; <label>:30                                      ; preds = %22
    %31 = getelementptr inbounds i8, i8* %20, i32 16
    %32 = bitcast i8* %31 to i16*
    store i16 -2, i16* %32, align 4, !tbaa !62
    br label %64
  
  ; <label>:33                                      ; preds = %22
    %34 = bitcast %struct.ref_s* %pcont to i16*
    %35 = load i16, i16* %34, align 4, !tbaa !54
    %36 = zext i16 %35 to i32
    %37 = and i32 %36, 15360
    %38 = icmp eq i32 %37, 1024
    br i1 %38, label %41, label %39
  
  ; <label>:39                                      ; preds = %33
    %.mask = and i16 %35, -256
    %40 = icmp eq i16 %.mask, 512
    br i1 %40, label %41, label %44
  
  ; <label>:41                                      ; preds = %39, %33
    %42 = getelementptr inbounds i8, i8* %20, i32 16
    %43 = bitcast i8* %42 to i16*
    store i16 -1, i16* %43, align 4, !tbaa !62
    br label %64
  
  ; <label>:44                                      ; preds = %39
    %45 = and i32 %36, 15872
    %46 = icmp eq i32 %45, 2048
    br i1 %46, label %47, label %55
  
  ; <label>:47                                      ; preds = %44
    %48 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %pcont, i32 0, i32 1, i32 0
    %49 = load i32, i32* %48, align 4, !tbaa !37
    %50 = ptrtoint i16* %where to i32
    %51 = sub i32 %50, %49
    %52 = trunc i32 %51 to i16
    %53 = getelementptr inbounds i8, i8* %20, i32 16
    %54 = bitcast i8* %53 to i16*
    store i16 %52, i16* %54, align 4, !tbaa !62
    br label %64
  
  ; <label>:55                                      ; preds = %44
    %56 = bitcast %struct.ref_s* %pcont to i8*
    %57 = load %struct._IO_FILE*, %struct._IO_FILE** @gs_stderr, align 4, !tbaa !37
    tail call void @lprintf_file_and_line(%struct._IO_FILE* %57, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0), i32 signext 426) #5
    %58 = load %struct._IO_FILE*, %struct._IO_FILE** @gs_stderr, align 4, !tbaa !37
    %59 = load i8, i8* %56, align 4, !tbaa !41
    %60 = zext i8 %59 to i32
    %61 = ptrtoint %struct.ref_s* %pcont to i32
    %62 = ptrtoint i16* %where to i32
    %63 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %58, i8* nonnull getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i32 0, i32 0), i32 signext %60, i32 signext %61, i32 signext %62)
    tail call void @gs_exit(i32 signext 1) #5
    br label %64
  
  ; <label>:64                                      ; preds = %55, %47, %41, %30
    %65 = load i16, i16* %where, align 2, !tbaa !40
    %66 = icmp ugt i16 %65, 16383
    br i1 %66, label %67, label %68
  
  ; <label>:67                                      ; preds = %64
    %sunkaddr = ptrtoint i8* %20 to i32
    %sunkaddr1 = add i32 %sunkaddr, 8
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i16*
    store i16 %65, i16* %sunkaddr2, align 4, !tbaa !40
    br label %80
  
  ; <label>:68                                      ; preds = %64
    %69 = getelementptr inbounds i8, i8* %20, i32 12
    %70 = getelementptr inbounds i16, i16* %where, i32 2
    %71 = bitcast i16* %70 to i32*
    %72 = bitcast i8* %69 to i32*
    %73 = load i32, i32* %71, align 4
    store i32 %73, i32* %72, align 4
    %74 = bitcast i16* %where to i32*
    %75 = load i32, i32* %74, align 4
    %sunkaddr3 = ptrtoint i8* %20 to i32
    %sunkaddr4 = add i32 %sunkaddr3, 8
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to i32*
    store i32 %75, i32* %sunkaddr5, align 4
    %76 = load i16, i16* %where, align 4, !tbaa !54
    %77 = zext i16 %76 to i32
    %78 = or i32 %77, 2
    %79 = trunc i32 %78 to i16
    store i16 %79, i16* %where, align 4, !tbaa !54
    br label %80
  
  ; <label>:80                                      ; preds = %68, %67
    %sunkaddr6 = ptrtoint %struct.gs_ref_memory_s* %16 to i32
    %sunkaddr7 = add i32 %sunkaddr6, 272
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to i8**
    store i8* %20, i8** %sunkaddr8, align 4, !tbaa !60
    br label %81
  
  ; <label>:81                                      ; preds = %80, %15, %0
    %.0 = phi i32 [ 0, %80 ], [ 0, %0 ], [ -1, %15 ]
    ret i32 %.0
  }
  
  declare void @lprintf_file_and_line(%struct._IO_FILE*, i8*, i32 signext) #3
  
  ; Function Attrs: nounwind
  declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) #1
  
  declare void @gs_exit(i32 signext) #3
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.memcpy.p0i8.p0i8.i32(i8* nocapture, i8* nocapture readonly, i32, i32, i1) #2
  
  ; Function Attrs: norecurse nounwind readonly
  define i32 @alloc_save_level(%struct.gs_dual_memory_s* nocapture readonly %dmem) #4 {
    %1 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 3
    %2 = load i32, i32* %1, align 4, !tbaa !1
    ret i32 %2
  }
  
  ; Function Attrs: norecurse nounwind readonly
  define %struct.alloc_save_s* @alloc_save_current(%struct.gs_dual_memory_s* nocapture readonly %dmem) #4 {
    %1 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 3
    %2 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %1, align 4, !tbaa !9
    %3 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %2, i32 0, i32 20
    %save.01 = load %struct.alloc_save_s*, %struct.alloc_save_s** %3, align 4, !tbaa !37
    %4 = icmp eq %struct.alloc_save_s* %save.01, null
    br i1 %4, label %.critedge, label %.lr.ph
  
  .lr.ph:                                           ; preds = %0, %8
    %save.02 = phi %struct.alloc_save_s* [ %save.0, %8 ], [ %save.01, %0 ]
    %5 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save.02, i32 0, i32 4
    %6 = load i32, i32* %5, align 4, !tbaa !26
    %7 = icmp eq i32 %6, 0
    br i1 %7, label %8, label %.critedge
  
  ; <label>:8                                       ; preds = %.lr.ph
    %9 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save.02, i32 0, i32 0, i32 20
    %save.0 = load %struct.alloc_save_s*, %struct.alloc_save_s** %9, align 4, !tbaa !37
    %10 = icmp eq %struct.alloc_save_s* %save.0, null
    br i1 %10, label %.critedge, label %.lr.ph
  
  .critedge:                                        ; preds = %.lr.ph, %8, %0
    %save.0.lcssa = phi %struct.alloc_save_s* [ null, %0 ], [ null, %8 ], [ %save.02, %.lr.ph ]
    ret %struct.alloc_save_s* %save.0.lcssa
  }
  
  ; Function Attrs: norecurse nounwind readonly
  define i32 @alloc_is_since_save(i8* readnone %vptr, %struct.alloc_save_s* readonly %save) #4 {
    %1 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 1
    %2 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %1, align 4, !tbaa !46
    %3 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 1, i32 0, i32 3
    %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %3, align 4, !tbaa !9
    %5 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %4, i32 0, i32 20
    %6 = load %struct.alloc_save_s*, %struct.alloc_save_s** %5, align 4, !tbaa !49
    %7 = icmp eq %struct.alloc_save_s* %6, null
    br i1 %7, label %.critedge, label %.preheader
  
  .preheader:                                       ; preds = %0, %._crit_edge
    %mem.0 = phi %struct.gs_ref_memory_s* [ %23, %._crit_edge ], [ %4, %0 ]
    %8 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem.0, i32 0, i32 8
    %cp.010 = load %struct.chunk_s*, %struct.chunk_s** %8, align 4, !tbaa !37
    %9 = icmp eq %struct.chunk_s* %cp.010, null
    br i1 %9, label %._crit_edge, label %.lr.ph12
  
  .lr.ph12:                                         ; preds = %.preheader, %17
    %cp.011 = phi %struct.chunk_s* [ %cp.0, %17 ], [ %cp.010, %.preheader ]
    %10 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011, i32 0, i32 1
    %11 = load i8*, i8** %10, align 4, !tbaa !56
    %12 = icmp ugt i8* %11, %vptr
    br i1 %12, label %17, label %13
  
  ; <label>:13                                      ; preds = %.lr.ph12
    %14 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011, i32 0, i32 7
    %15 = load i8*, i8** %14, align 4, !tbaa !63
    %16 = icmp ugt i8* %15, %vptr
    br i1 %16, label %.critedge, label %17
  
  ; <label>:17                                      ; preds = %13, %.lr.ph12
    %18 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011, i32 0, i32 9
    %cp.0 = load %struct.chunk_s*, %struct.chunk_s** %18, align 4, !tbaa !37
    %19 = icmp eq %struct.chunk_s* %cp.0, null
    br i1 %19, label %._crit_edge, label %.lr.ph12
  
  ._crit_edge:                                      ; preds = %17, %.preheader
    %20 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem.0, i32 0, i32 20
    %21 = load %struct.alloc_save_s*, %struct.alloc_save_s** %20, align 4, !tbaa !49
    %22 = icmp eq %struct.alloc_save_s* %21, %save
    %23 = bitcast %struct.alloc_save_s* %21 to %struct.gs_ref_memory_s*
    br i1 %22, label %24, label %.preheader
  
  ; <label>:24                                      ; preds = %._crit_edge
    %25 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 3
    %26 = load i32, i32* %25, align 4, !tbaa !1
    %27 = icmp eq i32 %26, 1
    br i1 %27, label %28, label %.critedge
  
  ; <label>:28                                      ; preds = %24
    %29 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 1, i32 0, i32 2
    %30 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %29, align 4, !tbaa !11
    %31 = icmp eq %struct.gs_ref_memory_s* %30, %4
    br i1 %31, label %.critedge, label %32
  
  ; <label>:32                                      ; preds = %28
    %33 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %30, i32 0, i32 8
    %cp1.06 = load %struct.chunk_s*, %struct.chunk_s** %33, align 4, !tbaa !37
    %34 = icmp eq %struct.chunk_s* %cp1.06, null
    br i1 %34, label %.critedge, label %.lr.ph
  
  .lr.ph:                                           ; preds = %32, %42
    %cp1.07 = phi %struct.chunk_s* [ %cp1.0, %42 ], [ %cp1.06, %32 ]
    %35 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07, i32 0, i32 1
    %36 = load i8*, i8** %35, align 4, !tbaa !56
    %37 = icmp ugt i8* %36, %vptr
    br i1 %37, label %42, label %38
  
  ; <label>:38                                      ; preds = %.lr.ph
    %39 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07, i32 0, i32 7
    %40 = load i8*, i8** %39, align 4, !tbaa !63
    %41 = icmp ugt i8* %40, %vptr
    br i1 %41, label %.critedge, label %42
  
  ; <label>:42                                      ; preds = %38, %.lr.ph
    %43 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07, i32 0, i32 9
    %cp1.0 = load %struct.chunk_s*, %struct.chunk_s** %43, align 4, !tbaa !37
    %44 = icmp eq %struct.chunk_s* %cp1.0, null
    br i1 %44, label %.critedge, label %.lr.ph
  
  .critedge:                                        ; preds = %13, %38, %42, %32, %28, %24, %0
    %.3 = phi i32 [ 1, %0 ], [ 0, %28 ], [ 0, %24 ], [ 0, %32 ], [ 0, %42 ], [ 1, %38 ], [ 1, %13 ]
    ret i32 %.3
  }
  
  ; Function Attrs: norecurse nounwind readonly
  define i32 @alloc_name_is_since_save(%struct.ref_s* nocapture readonly %pnref, %struct.alloc_save_s* readonly %save) #4 {
    %1 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 2
    %2 = load i32, i32* %1, align 4, !tbaa !29
    %3 = icmp eq i32 %2, 0
    br i1 %3, label %alloc_is_since_save.exit, label %4
  
  ; <label>:4                                       ; preds = %0
    %5 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %pnref, i32 0, i32 1
    %6 = bitcast %union.v* %5 to %struct.name_s**
    %7 = load %struct.name_s*, %struct.name_s** %6, align 4, !tbaa !37
    %8 = getelementptr inbounds %struct.name_s, %struct.name_s* %7, i32 0, i32 1
    %9 = load i16, i16* %8, align 2
    %10 = icmp slt i16 %9, 0
    br i1 %10, label %alloc_is_since_save.exit, label %11
  
  ; <label>:11                                      ; preds = %4
    %12 = getelementptr inbounds %struct.name_s, %struct.name_s* %7, i32 0, i32 2
    %13 = load i8*, i8** %12, align 4, !tbaa !64
    %14 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 1
    %15 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %14, align 4, !tbaa !46
    %16 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %15, i32 0, i32 1, i32 0, i32 3
    %17 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %16, align 4, !tbaa !9
    %18 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %17, i32 0, i32 20
    %19 = load %struct.alloc_save_s*, %struct.alloc_save_s** %18, align 4, !tbaa !49
    %20 = icmp eq %struct.alloc_save_s* %19, null
    br i1 %20, label %alloc_is_since_save.exit, label %.preheader.i
  
  .preheader.i:                                     ; preds = %11, %._crit_edge.i
    %mem.0.i = phi %struct.gs_ref_memory_s* [ %36, %._crit_edge.i ], [ %17, %11 ]
    %21 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem.0.i, i32 0, i32 8
    %cp.010.i = load %struct.chunk_s*, %struct.chunk_s** %21, align 4, !tbaa !37
    %22 = icmp eq %struct.chunk_s* %cp.010.i, null
    br i1 %22, label %._crit_edge.i, label %.lr.ph12.i
  
  .lr.ph12.i:                                       ; preds = %.preheader.i, %30
    %cp.011.i = phi %struct.chunk_s* [ %cp.0.i, %30 ], [ %cp.010.i, %.preheader.i ]
    %23 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011.i, i32 0, i32 1
    %24 = load i8*, i8** %23, align 4, !tbaa !56
    %25 = icmp ugt i8* %24, %13
    br i1 %25, label %30, label %26
  
  ; <label>:26                                      ; preds = %.lr.ph12.i
    %27 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011.i, i32 0, i32 7
    %28 = load i8*, i8** %27, align 4, !tbaa !63
    %29 = icmp ugt i8* %28, %13
    br i1 %29, label %alloc_is_since_save.exit, label %30
  
  ; <label>:30                                      ; preds = %26, %.lr.ph12.i
    %31 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011.i, i32 0, i32 9
    %cp.0.i = load %struct.chunk_s*, %struct.chunk_s** %31, align 4, !tbaa !37
    %32 = icmp eq %struct.chunk_s* %cp.0.i, null
    br i1 %32, label %._crit_edge.i, label %.lr.ph12.i
  
  ._crit_edge.i:                                    ; preds = %30, %.preheader.i
    %33 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem.0.i, i32 0, i32 20
    %34 = load %struct.alloc_save_s*, %struct.alloc_save_s** %33, align 4, !tbaa !49
    %35 = icmp eq %struct.alloc_save_s* %34, %save
    %36 = bitcast %struct.alloc_save_s* %34 to %struct.gs_ref_memory_s*
    br i1 %35, label %37, label %.preheader.i
  
  ; <label>:37                                      ; preds = %._crit_edge.i
    %38 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %15, i32 0, i32 3
    %39 = load i32, i32* %38, align 4, !tbaa !1
    %40 = icmp eq i32 %39, 1
    br i1 %40, label %41, label %alloc_is_since_save.exit
  
  ; <label>:41                                      ; preds = %37
    %42 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %15, i32 0, i32 1, i32 0, i32 2
    %43 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %42, align 4, !tbaa !11
    %44 = icmp eq %struct.gs_ref_memory_s* %43, %17
    br i1 %44, label %alloc_is_since_save.exit, label %45
  
  ; <label>:45                                      ; preds = %41
    %46 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %43, i32 0, i32 8
    %cp1.06.i = load %struct.chunk_s*, %struct.chunk_s** %46, align 4, !tbaa !37
    %47 = icmp eq %struct.chunk_s* %cp1.06.i, null
    br i1 %47, label %alloc_is_since_save.exit, label %.lr.ph.i
  
  .lr.ph.i:                                         ; preds = %45, %55
    %cp1.07.i = phi %struct.chunk_s* [ %cp1.0.i, %55 ], [ %cp1.06.i, %45 ]
    %48 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07.i, i32 0, i32 1
    %49 = load i8*, i8** %48, align 4, !tbaa !56
    %50 = icmp ugt i8* %49, %13
    br i1 %50, label %55, label %51
  
  ; <label>:51                                      ; preds = %.lr.ph.i
    %52 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07.i, i32 0, i32 7
    %53 = load i8*, i8** %52, align 4, !tbaa !63
    %54 = icmp ugt i8* %53, %13
    br i1 %54, label %alloc_is_since_save.exit, label %55
  
  ; <label>:55                                      ; preds = %51, %.lr.ph.i
    %56 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07.i, i32 0, i32 9
    %cp1.0.i = load %struct.chunk_s*, %struct.chunk_s** %56, align 4, !tbaa !37
    %57 = icmp eq %struct.chunk_s* %cp1.0.i, null
    br i1 %57, label %alloc_is_since_save.exit, label %.lr.ph.i
  
  alloc_is_since_save.exit:                         ; preds = %26, %51, %55, %45, %41, %37, %11, %4, %0
    %.0 = phi i32 [ 0, %0 ], [ 0, %4 ], [ 1, %11 ], [ 0, %41 ], [ 0, %37 ], [ 0, %45 ], [ 1, %51 ], [ 0, %55 ], [ 1, %26 ]
    ret i32 %.0
  }
  
  ; Function Attrs: nounwind
  define i32 @alloc_name_index_is_since_save(i32 signext %nidx, %struct.alloc_save_s* readonly %save) #1 {
    %1 = tail call %struct.name_s* @name_index_ptr(i32 signext %nidx) #5
    %2 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 2
    %3 = load i32, i32* %2, align 4, !tbaa !29
    %4 = icmp eq i32 %3, 0
    br i1 %4, label %alloc_name_is_since_save.exit, label %5
  
  ; <label>:5                                       ; preds = %0
    %6 = getelementptr inbounds %struct.name_s, %struct.name_s* %1, i32 0, i32 1
    %7 = load i16, i16* %6, align 2
    %8 = icmp slt i16 %7, 0
    br i1 %8, label %alloc_name_is_since_save.exit, label %9
  
  ; <label>:9                                       ; preds = %5
    %10 = getelementptr inbounds %struct.name_s, %struct.name_s* %1, i32 0, i32 2
    %11 = load i8*, i8** %10, align 4, !tbaa !64
    %12 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 1
    %13 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %12, align 4, !tbaa !46
    %14 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %13, i32 0, i32 1, i32 0, i32 3
    %15 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %14, align 4, !tbaa !9
    %16 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %15, i32 0, i32 20
    %17 = load %struct.alloc_save_s*, %struct.alloc_save_s** %16, align 4, !tbaa !49
    %18 = icmp eq %struct.alloc_save_s* %17, null
    br i1 %18, label %alloc_name_is_since_save.exit, label %.preheader.i.i
  
  .preheader.i.i:                                   ; preds = %9, %._crit_edge.i.i
    %mem.0.i.i = phi %struct.gs_ref_memory_s* [ %34, %._crit_edge.i.i ], [ %15, %9 ]
    %19 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem.0.i.i, i32 0, i32 8
    %cp.010.i.i = load %struct.chunk_s*, %struct.chunk_s** %19, align 4, !tbaa !37
    %20 = icmp eq %struct.chunk_s* %cp.010.i.i, null
    br i1 %20, label %._crit_edge.i.i, label %.lr.ph12.i.i
  
  .lr.ph12.i.i:                                     ; preds = %.preheader.i.i, %28
    %cp.011.i.i = phi %struct.chunk_s* [ %cp.0.i.i, %28 ], [ %cp.010.i.i, %.preheader.i.i ]
    %21 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011.i.i, i32 0, i32 1
    %22 = load i8*, i8** %21, align 4, !tbaa !56
    %23 = icmp ugt i8* %22, %11
    br i1 %23, label %28, label %24
  
  ; <label>:24                                      ; preds = %.lr.ph12.i.i
    %25 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011.i.i, i32 0, i32 7
    %26 = load i8*, i8** %25, align 4, !tbaa !63
    %27 = icmp ugt i8* %26, %11
    br i1 %27, label %alloc_name_is_since_save.exit, label %28
  
  ; <label>:28                                      ; preds = %24, %.lr.ph12.i.i
    %29 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.011.i.i, i32 0, i32 9
    %cp.0.i.i = load %struct.chunk_s*, %struct.chunk_s** %29, align 4, !tbaa !37
    %30 = icmp eq %struct.chunk_s* %cp.0.i.i, null
    br i1 %30, label %._crit_edge.i.i, label %.lr.ph12.i.i
  
  ._crit_edge.i.i:                                  ; preds = %28, %.preheader.i.i
    %31 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem.0.i.i, i32 0, i32 20
    %32 = load %struct.alloc_save_s*, %struct.alloc_save_s** %31, align 4, !tbaa !49
    %33 = icmp eq %struct.alloc_save_s* %32, %save
    %34 = bitcast %struct.alloc_save_s* %32 to %struct.gs_ref_memory_s*
    br i1 %33, label %35, label %.preheader.i.i
  
  ; <label>:35                                      ; preds = %._crit_edge.i.i
    %36 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %13, i32 0, i32 3
    %37 = load i32, i32* %36, align 4, !tbaa !1
    %38 = icmp eq i32 %37, 1
    br i1 %38, label %39, label %alloc_name_is_since_save.exit
  
  ; <label>:39                                      ; preds = %35
    %40 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %13, i32 0, i32 1, i32 0, i32 2
    %41 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %40, align 4, !tbaa !11
    %42 = icmp eq %struct.gs_ref_memory_s* %41, %15
    br i1 %42, label %alloc_name_is_since_save.exit, label %43
  
  ; <label>:43                                      ; preds = %39
    %44 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %41, i32 0, i32 8
    %cp1.06.i.i = load %struct.chunk_s*, %struct.chunk_s** %44, align 4, !tbaa !37
    %45 = icmp eq %struct.chunk_s* %cp1.06.i.i, null
    br i1 %45, label %alloc_name_is_since_save.exit, label %.lr.ph.i.i
  
  .lr.ph.i.i:                                       ; preds = %43, %53
    %cp1.07.i.i = phi %struct.chunk_s* [ %cp1.0.i.i, %53 ], [ %cp1.06.i.i, %43 ]
    %46 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07.i.i, i32 0, i32 1
    %47 = load i8*, i8** %46, align 4, !tbaa !56
    %48 = icmp ugt i8* %47, %11
    br i1 %48, label %53, label %49
  
  ; <label>:49                                      ; preds = %.lr.ph.i.i
    %50 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07.i.i, i32 0, i32 7
    %51 = load i8*, i8** %50, align 4, !tbaa !63
    %52 = icmp ugt i8* %51, %11
    br i1 %52, label %alloc_name_is_since_save.exit, label %53
  
  ; <label>:53                                      ; preds = %49, %.lr.ph.i.i
    %54 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp1.07.i.i, i32 0, i32 9
    %cp1.0.i.i = load %struct.chunk_s*, %struct.chunk_s** %54, align 4, !tbaa !37
    %55 = icmp eq %struct.chunk_s* %cp1.0.i.i, null
    br i1 %55, label %alloc_name_is_since_save.exit, label %.lr.ph.i.i
  
  alloc_name_is_since_save.exit:                    ; preds = %24, %49, %53, %43, %39, %35, %9, %5, %0
    %.0.i = phi i32 [ 0, %0 ], [ 0, %5 ], [ 1, %9 ], [ 0, %39 ], [ 0, %35 ], [ 0, %43 ], [ 0, %53 ], [ 1, %49 ], [ 1, %24 ]
    ret i32 %.0.i
  }
  
  declare %struct.name_s* @name_index_ptr(i32 signext) #3
  
  ; Function Attrs: norecurse nounwind readonly
  define i32 @alloc_any_names_since_save(%struct.alloc_save_s* nocapture readonly %save) #4 {
    %1 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 2
    %2 = load i32, i32* %1, align 4, !tbaa !29
    ret i32 %2
  }
  
  ; Function Attrs: norecurse nounwind readonly
  define %struct.alloc_save_s* @alloc_find_save(%struct.gs_dual_memory_s* nocapture readonly %dmem, i32 signext %sid) #4 {
    %1 = icmp eq i32 %sid, 0
    br i1 %1, label %.loopexit, label %.preheader
  
  .preheader:                                       ; preds = %0
    %2 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 3
    %3 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %2, align 4, !tbaa !9
    %4 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %3, i32 0, i32 20
    %sprev.01 = load %struct.alloc_save_s*, %struct.alloc_save_s** %4, align 4, !tbaa !37
    %5 = icmp eq %struct.alloc_save_s* %sprev.01, null
    br i1 %5, label %.loopexit, label %.lr.ph
  
  .lr.ph:                                           ; preds = %.preheader, %9
    %sprev.02 = phi %struct.alloc_save_s* [ %sprev.0, %9 ], [ %sprev.01, %.preheader ]
    %6 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %sprev.02, i32 0, i32 4
    %7 = load i32, i32* %6, align 4, !tbaa !26
    %8 = icmp eq i32 %7, %sid
    br i1 %8, label %.loopexit, label %9
  
  ; <label>:9                                       ; preds = %.lr.ph
    %10 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %sprev.02, i32 0, i32 0, i32 20
    %sprev.0 = load %struct.alloc_save_s*, %struct.alloc_save_s** %10, align 4, !tbaa !37
    %11 = icmp eq %struct.alloc_save_s* %sprev.0, null
    br i1 %11, label %.loopexit, label %.lr.ph
  
  .loopexit:                                        ; preds = %.lr.ph, %9, %.preheader, %0
    %.0 = phi %struct.alloc_save_s* [ null, %0 ], [ null, %.preheader ], [ %sprev.02, %.lr.ph ], [ null, %9 ]
    ret %struct.alloc_save_s* %.0
  }
  
  ; Function Attrs: norecurse nounwind readonly
  define i8* @alloc_save_client_data(%struct.alloc_save_s* nocapture readonly %save) #4 {
    %1 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 5
    %2 = load i8*, i8** %1, align 4, !tbaa !28
    ret i8* %2
  }
  
  ; Function Attrs: nounwind
  define i32 @alloc_restore_state_step(%struct.alloc_save_s* readonly %save) #1 {
    %saved.sroa.0.i15 = alloca %struct.gs_ref_memory_s, align 8
    %saved.sroa.0.i = alloca %struct.gs_ref_memory_s, align 8
    %1 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 1
    %2 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %1, align 4, !tbaa !46
    %3 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 1, i32 0, i32 3
    %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %3, align 4, !tbaa !9
    br label %5
  
  ; <label>:5                                       ; preds = %93, %0
    %6 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
    %sunkaddr = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr1 = add i32 %sunkaddr, 276
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to %struct.alloc_save_s**
    %7 = load %struct.alloc_save_s*, %struct.alloc_save_s** %sunkaddr2, align 4, !tbaa !49
    %8 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %7, i32 0, i32 4
    %9 = load i32, i32* %8, align 4, !tbaa !26
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* %4) #5
    %sunkaddr3 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr4 = add i32 %sunkaddr3, 76
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to void (%struct.gs_memory_s*, i32)**
    %10 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %sunkaddr5, align 4, !tbaa !66
    tail call void %10(%struct.gs_memory_s* %6, i32 signext 0) #5
    %sunkaddr6 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr7 = add i32 %sunkaddr6, 132
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to %struct.chunk_s**
    %cp.02.i = load %struct.chunk_s*, %struct.chunk_s** %sunkaddr8, align 4, !tbaa !37
    %11 = icmp eq %struct.chunk_s* %cp.02.i, null
    br i1 %11, label %restore_finalize.exit, label %.lr.ph5.i
  
  .lr.ph5.i:                                        ; preds = %5, %._crit_edge.i
    %cp.03.i = phi %struct.chunk_s* [ %cp.0.i, %._crit_edge.i ], [ %cp.02.i, %5 ]
    %12 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i, i32 0, i32 1
    %13 = bitcast i8** %12 to %struct.obj_header_s**
    %14 = load %struct.obj_header_s*, %struct.obj_header_s** %13, align 4, !tbaa !56
    %15 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i, i32 0, i32 2
    %16 = bitcast i8** %15 to %struct.obj_header_s**
    %17 = load %struct.obj_header_s*, %struct.obj_header_s** %16, align 4, !tbaa !57
    %18 = icmp ult %struct.obj_header_s* %14, %17
    br i1 %18, label %.lr.ph.i, label %._crit_edge.i
  
  .lr.ph.i:                                         ; preds = %.lr.ph5.i, %29
    %pre.01.i = phi %struct.obj_header_s* [ %34, %29 ], [ %14, %.lr.ph5.i ]
    %19 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i, i32 0, i32 0, i32 0, i32 1
    %20 = load i32, i32* %19, align 4, !tbaa !58
    %21 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i, i32 0, i32 0, i32 0, i32 2, i32 0
    %22 = load %struct.gs_memory_struct_type_s*, %struct.gs_memory_struct_type_s** %21, align 4, !tbaa !37
    %23 = getelementptr inbounds %struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* %22, i32 0, i32 6
    %24 = load void (i8*)*, void (i8*)** %23, align 4, !tbaa !67
    %25 = icmp eq void (i8*)* %24, null
    br i1 %25, label %29, label %26
  
  ; <label>:26                                      ; preds = %.lr.ph.i
    %27 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i, i32 1
    %28 = bitcast %struct.obj_header_s* %27 to i8*
    tail call void %24(i8* %28) #5
    br label %29
  
  ; <label>:29                                      ; preds = %26, %.lr.ph.i
    %30 = bitcast %struct.obj_header_s* %pre.01.i to i8*
    %31 = add i32 %20, 23
    %32 = and i32 %31, -8
    %33 = getelementptr inbounds i8, i8* %30, i32 %32
    %34 = bitcast i8* %33 to %struct.obj_header_s*
    %35 = icmp ult %struct.obj_header_s* %34, %17
    br i1 %35, label %.lr.ph.i, label %._crit_edge.i
  
  ._crit_edge.i:                                    ; preds = %29, %.lr.ph5.i
    %36 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i, i32 0, i32 8
    %cp.0.i = load %struct.chunk_s*, %struct.chunk_s** %36, align 4, !tbaa !37
    %37 = icmp eq %struct.chunk_s* %cp.0.i, null
    br i1 %37, label %restore_finalize.exit, label %.lr.ph5.i
  
  restore_finalize.exit:                            ; preds = %._crit_edge.i, %5
    %38 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
    %sunkaddr9 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr10 = add i32 %sunkaddr9, 76
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to void (%struct.gs_memory_s*, i32)**
    %39 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %sunkaddr11, align 4, !tbaa !66
    tail call void %39(%struct.gs_memory_s* %38, i32 signext 1) #5
    tail call void @file_restore(%struct.alloc_save_s* %7, %struct.gs_memory_s* %38) #5
    tail call void @font_restore(%struct.alloc_save_s* %7) #5
    %40 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %7, i32 0, i32 2
    %41 = load i32, i32* %40, align 4, !tbaa !29
    %42 = icmp eq i32 %41, 0
    br i1 %42, label %restore_resources.exit, label %43
  
  ; <label>:43                                      ; preds = %restore_finalize.exit
    tail call void @name_restore(%struct.alloc_save_s* nonnull %7) #5
    br label %restore_resources.exit
  
  restore_resources.exit:                           ; preds = %43, %restore_finalize.exit
    %44 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i to i8*
    %sunkaddr12 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr13 = add i32 %sunkaddr12, 276
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to %struct.alloc_save_s**
    %45 = load %struct.alloc_save_s*, %struct.alloc_save_s** %sunkaddr14, align 4, !tbaa !49
    call void @llvm.lifetime.start(i64 696, i8* %44)
    %sunkaddr15 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr16 = add i32 %sunkaddr15, 272
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to %struct.alloc_change_s**
    %cp.02.i1 = load %struct.alloc_change_s*, %struct.alloc_change_s** %sunkaddr17, align 4, !tbaa !37
    %46 = icmp eq %struct.alloc_change_s* %cp.02.i1, null
    br i1 %46, label %._crit_edge.i5, label %.lr.ph.i3
  
  .lr.ph.i3:                                        ; preds = %restore_resources.exit, %60
    %cp.03.i2 = phi %struct.alloc_change_s* [ %cp.0.i4, %60 ], [ %cp.02.i1, %restore_resources.exit ]
    %47 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %cp.03.i2, i32 0, i32 2
    %48 = bitcast %struct.ref_s* %47 to i16*
    %49 = load i16, i16* %48, align 4, !tbaa !40
    %50 = icmp ugt i16 %49, 16383
    br i1 %50, label %51, label %53
  
  ; <label>:51                                      ; preds = %.lr.ph.i3
    %sunkaddr18 = ptrtoint %struct.alloc_change_s* %cp.03.i2 to i32
    %sunkaddr19 = add i32 %sunkaddr18, 4
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to i16**
    %52 = load i16*, i16** %sunkaddr20, align 4, !tbaa !50
    store i16 %49, i16* %52, align 2, !tbaa !40
    br label %60
  
  ; <label>:53                                      ; preds = %.lr.ph.i3
    %sunkaddr21 = ptrtoint %struct.alloc_change_s* %cp.03.i2 to i32
    %sunkaddr22 = add i32 %sunkaddr21, 4
    %sunkaddr23 = inttoptr i32 %sunkaddr22 to %struct.ref_s**
    %54 = load %struct.ref_s*, %struct.ref_s** %sunkaddr23, align 4, !tbaa !50
    %55 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %cp.03.i2, i32 0, i32 2, i32 1, i32 0
    %56 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %54, i32 0, i32 1, i32 0
    %57 = load i32, i32* %55, align 4
    store i32 %57, i32* %56, align 4
    %sunkaddr24 = ptrtoint %struct.alloc_change_s* %cp.03.i2 to i32
    %sunkaddr25 = add i32 %sunkaddr24, 4
    %sunkaddr26 = inttoptr i32 %sunkaddr25 to i32**
    %58 = load i32*, i32** %sunkaddr26, align 4, !tbaa !50
    %sunkaddr27 = ptrtoint %struct.alloc_change_s* %cp.03.i2 to i32
    %sunkaddr28 = add i32 %sunkaddr27, 8
    %sunkaddr29 = inttoptr i32 %sunkaddr28 to i32*
    %59 = load i32, i32* %sunkaddr29, align 4
    store i32 %59, i32* %58, align 4
    br label %60
  
  ; <label>:60                                      ; preds = %53, %51
    %61 = bitcast %struct.alloc_change_s* %cp.03.i2 to %struct.alloc_change_s**
    %cp.0.i4 = load %struct.alloc_change_s*, %struct.alloc_change_s** %61, align 4, !tbaa !37
    %62 = icmp eq %struct.alloc_change_s* %cp.0.i4, null
    br i1 %62, label %._crit_edge.i5, label %.lr.ph.i3
  
  ._crit_edge.i5:                                   ; preds = %60, %restore_resources.exit
    %63 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i to i8*
    %64 = bitcast %struct.alloc_save_s* %45 to i8*
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* %63, i8* %64, i32 696, i32 4, i1 false) #5
    %65 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %45, i32 0, i32 1
    %66 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %65, align 4
    %67 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %45, i32 0, i32 3
    %68 = load i32, i32* %67, align 4
    %sunkaddr30 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr31 = add i32 %sunkaddr30, 132
    %sunkaddr32 = inttoptr i32 %sunkaddr31 to %struct.chunk_s**
    %69 = load %struct.chunk_s*, %struct.chunk_s** %sunkaddr32, align 4, !tbaa !69
    %70 = icmp eq %struct.chunk_s* %69, null
    br i1 %70, label %restore_free.exit, label %.lr.ph.i22
  
  .lr.ph.i22:                                       ; preds = %._crit_edge.i5, %.backedge.i
    %cp.01.i = phi %struct.chunk_s* [ %73, %.backedge.i ], [ %69, %._crit_edge.i5 ]
    %71 = bitcast %struct.gs_ref_memory_s* %4 to i8*
    %72 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i, i32 0, i32 8
    %73 = load %struct.chunk_s*, %struct.chunk_s** %72, align 4, !tbaa !70
    %74 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i, i32 0, i32 1
    %75 = load i8*, i8** %74, align 4, !tbaa !56
    %76 = getelementptr inbounds i8, i8* %75, i32 16
    %77 = icmp eq i8* %76, %71
    br i1 %77, label %.backedge.i, label %79
  
  .backedge.i:                                      ; preds = %79, %.lr.ph.i22
    %78 = icmp eq %struct.chunk_s* %73, null
    br i1 %78, label %restore_free.exit, label %.lr.ph.i22
  
  ; <label>:79                                      ; preds = %.lr.ph.i22
    tail call void @alloc_free_chunk(%struct.chunk_s* nonnull %cp.01.i, %struct.gs_ref_memory_s* %4) #5
    br label %.backedge.i
  
  restore_free.exit:                                ; preds = %.backedge.i, %._crit_edge.i5
    %80 = bitcast %struct.gs_ref_memory_s* %4 to i8*
    %81 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i to i8*
    %sunkaddr33 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr34 = add i32 %sunkaddr33, 268
    %sunkaddr35 = inttoptr i32 %sunkaddr34 to i32*
    %82 = load i32, i32* %sunkaddr35, align 4, !tbaa !12
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* %80, i8* %81, i32 696, i32 4, i1 false) #5
    store i32 %82, i32* %sunkaddr35, align 4, !tbaa !12
    tail call void @alloc_open_chunk(%struct.gs_ref_memory_s* %4) #5
    %83 = icmp eq i32 %68, 0
    br i1 %83, label %restore_space.exit, label %84
  
  ; <label>:84                                      ; preds = %restore_free.exit
    %85 = bitcast %struct.gs_dual_memory_s* %66 to %struct.gs_ref_memory_s**
    store %struct.gs_ref_memory_s* %4, %struct.gs_ref_memory_s** %85, align 4, !tbaa !47
    %sunkaddr36 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr37 = add i32 %sunkaddr36, 96
    %sunkaddr38 = inttoptr i32 %sunkaddr37 to i32*
    %86 = load i32, i32* %sunkaddr38, align 4, !tbaa !71
    %87 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %66, i32 0, i32 2
    store i32 %86, i32* %87, align 4, !tbaa !72
    br label %restore_space.exit
  
  restore_space.exit:                               ; preds = %84, %restore_free.exit
    %88 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i to i8*
    call void @llvm.lifetime.end(i64 696, i8* nonnull %88)
    %89 = icmp eq i32 %9, 0
    br i1 %89, label %93, label %.critedge
  
  .critedge:                                        ; preds = %restore_space.exit
    %90 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 3
    %91 = load i32, i32* %90, align 4, !tbaa !1
    %92 = add nsw i32 %91, -1
    store i32 %92, i32* %90, align 4, !tbaa !1
    br label %.loopexit
  
  ; <label>:93                                      ; preds = %restore_space.exit
    %94 = icmp eq %struct.alloc_save_s* %7, %save
    br i1 %94, label %.loopexit.loopexit, label %5
  
  .loopexit.loopexit:                               ; preds = %93
    %.phi.trans.insert = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 3
    %.pre = load i32, i32* %.phi.trans.insert, align 4, !tbaa !1
    br label %.loopexit
  
  .loopexit:                                        ; preds = %.loopexit.loopexit, %.critedge
    %95 = phi i32 [ %.pre, %.loopexit.loopexit ], [ %92, %.critedge ]
    %96 = phi %struct.alloc_save_s* [ %save, %.loopexit.loopexit ], [ %7, %.critedge ]
    %97 = icmp eq i32 %95, 0
    br i1 %97, label %98, label %197
  
  ; <label>:98                                      ; preds = %.loopexit
    %99 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 1, i32 0, i32 2
    %100 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %99, align 4, !tbaa !11
    %sunkaddr39 = ptrtoint %struct.gs_dual_memory_s* %2 to i32
    %sunkaddr40 = add i32 %sunkaddr39, 16
    %sunkaddr41 = inttoptr i32 %sunkaddr40 to %struct.gs_ref_memory_s**
    %101 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr41, align 4, !tbaa !9
    %102 = icmp eq %struct.gs_ref_memory_s* %100, %101
    br i1 %102, label %194, label %103
  
  ; <label>:103                                     ; preds = %98
    %104 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %100, i32 0, i32 20
    %105 = load %struct.alloc_save_s*, %struct.alloc_save_s** %104, align 4, !tbaa !49
    %106 = icmp eq %struct.alloc_save_s* %105, null
    br i1 %106, label %194, label %107
  
  ; <label>:107                                     ; preds = %103
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* nonnull %100) #5
    %108 = bitcast %struct.gs_ref_memory_s* %100 to %struct.gs_memory_s*
    %109 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %100, i32 0, i32 0, i32 19
    %110 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %109, align 4, !tbaa !66
    tail call void %110(%struct.gs_memory_s* %108, i32 signext 0) #5
    %111 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %100, i32 0, i32 9
    %cp.02.i6 = load %struct.chunk_s*, %struct.chunk_s** %111, align 4, !tbaa !37
    %112 = icmp eq %struct.chunk_s* %cp.02.i6, null
    br i1 %112, label %restore_finalize.exit13, label %.lr.ph5.i8
  
  .lr.ph5.i8:                                       ; preds = %107, %._crit_edge.i12
    %cp.03.i7 = phi %struct.chunk_s* [ %cp.0.i11, %._crit_edge.i12 ], [ %cp.02.i6, %107 ]
    %113 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i7, i32 0, i32 1
    %114 = bitcast i8** %113 to %struct.obj_header_s**
    %115 = load %struct.obj_header_s*, %struct.obj_header_s** %114, align 4, !tbaa !56
    %116 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i7, i32 0, i32 2
    %117 = bitcast i8** %116 to %struct.obj_header_s**
    %118 = load %struct.obj_header_s*, %struct.obj_header_s** %117, align 4, !tbaa !57
    %119 = icmp ult %struct.obj_header_s* %115, %118
    br i1 %119, label %.lr.ph.i10, label %._crit_edge.i12
  
  .lr.ph.i10:                                       ; preds = %.lr.ph5.i8, %130
    %pre.01.i9 = phi %struct.obj_header_s* [ %135, %130 ], [ %115, %.lr.ph5.i8 ]
    %120 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i9, i32 0, i32 0, i32 0, i32 1
    %121 = load i32, i32* %120, align 4, !tbaa !58
    %122 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i9, i32 0, i32 0, i32 0, i32 2, i32 0
    %123 = load %struct.gs_memory_struct_type_s*, %struct.gs_memory_struct_type_s** %122, align 4, !tbaa !37
    %124 = getelementptr inbounds %struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* %123, i32 0, i32 6
    %125 = load void (i8*)*, void (i8*)** %124, align 4, !tbaa !67
    %126 = icmp eq void (i8*)* %125, null
    br i1 %126, label %130, label %127
  
  ; <label>:127                                     ; preds = %.lr.ph.i10
    %128 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i9, i32 1
    %129 = bitcast %struct.obj_header_s* %128 to i8*
    tail call void %125(i8* %129) #5
    br label %130
  
  ; <label>:130                                     ; preds = %127, %.lr.ph.i10
    %131 = bitcast %struct.obj_header_s* %pre.01.i9 to i8*
    %132 = add i32 %121, 23
    %133 = and i32 %132, -8
    %134 = getelementptr inbounds i8, i8* %131, i32 %133
    %135 = bitcast i8* %134 to %struct.obj_header_s*
    %136 = icmp ult %struct.obj_header_s* %135, %118
    br i1 %136, label %.lr.ph.i10, label %._crit_edge.i12
  
  ._crit_edge.i12:                                  ; preds = %130, %.lr.ph5.i8
    %137 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i7, i32 0, i32 8
    %cp.0.i11 = load %struct.chunk_s*, %struct.chunk_s** %137, align 4, !tbaa !37
    %138 = icmp eq %struct.chunk_s* %cp.0.i11, null
    br i1 %138, label %restore_finalize.exit13, label %.lr.ph5.i8
  
  restore_finalize.exit13:                          ; preds = %._crit_edge.i12, %107
    %139 = bitcast %struct.gs_ref_memory_s* %100 to %struct.gs_memory_s*
    %sunkaddr42 = ptrtoint %struct.gs_ref_memory_s* %100 to i32
    %sunkaddr43 = add i32 %sunkaddr42, 76
    %sunkaddr44 = inttoptr i32 %sunkaddr43 to void (%struct.gs_memory_s*, i32)**
    %140 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %sunkaddr44, align 4, !tbaa !66
    tail call void %140(%struct.gs_memory_s* %139, i32 signext 1) #5
    %sunkaddr45 = ptrtoint %struct.gs_ref_memory_s* %100 to i32
    %sunkaddr46 = add i32 %sunkaddr45, 276
    %sunkaddr47 = inttoptr i32 %sunkaddr46 to %struct.alloc_save_s**
    %141 = load %struct.alloc_save_s*, %struct.alloc_save_s** %sunkaddr47, align 4, !tbaa !49
    tail call void @file_restore(%struct.alloc_save_s* %141, %struct.gs_memory_s* %139) #5
    tail call void @font_restore(%struct.alloc_save_s* %141) #5
    %142 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %141, i32 0, i32 2
    %143 = load i32, i32* %142, align 4, !tbaa !29
    %144 = icmp eq i32 %143, 0
    br i1 %144, label %restore_resources.exit14, label %145
  
  ; <label>:145                                     ; preds = %restore_finalize.exit13
    tail call void @name_restore(%struct.alloc_save_s* nonnull %141) #5
    br label %restore_resources.exit14
  
  restore_resources.exit14:                         ; preds = %145, %restore_finalize.exit13
    %sunkaddr48 = ptrtoint %struct.gs_ref_memory_s* %100 to i32
    %sunkaddr49 = add i32 %sunkaddr48, 276
    %sunkaddr50 = inttoptr i32 %sunkaddr49 to %struct.alloc_save_s**
    %146 = load %struct.alloc_save_s*, %struct.alloc_save_s** %sunkaddr50, align 4, !tbaa !49
    %147 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i15 to i8*
    call void @llvm.lifetime.start(i64 696, i8* %147)
    %148 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %100, i32 0, i32 19
    %cp.02.i16 = load %struct.alloc_change_s*, %struct.alloc_change_s** %148, align 4, !tbaa !37
    %149 = icmp eq %struct.alloc_change_s* %cp.02.i16, null
    br i1 %149, label %._crit_edge.i20, label %.lr.ph.i18
  
  .lr.ph.i18:                                       ; preds = %restore_resources.exit14, %163
    %cp.03.i17 = phi %struct.alloc_change_s* [ %cp.0.i19, %163 ], [ %cp.02.i16, %restore_resources.exit14 ]
    %150 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %cp.03.i17, i32 0, i32 2
    %151 = bitcast %struct.ref_s* %150 to i16*
    %152 = load i16, i16* %151, align 4, !tbaa !40
    %153 = icmp ugt i16 %152, 16383
    br i1 %153, label %154, label %156
  
  ; <label>:154                                     ; preds = %.lr.ph.i18
    %sunkaddr51 = ptrtoint %struct.alloc_change_s* %cp.03.i17 to i32
    %sunkaddr52 = add i32 %sunkaddr51, 4
    %sunkaddr53 = inttoptr i32 %sunkaddr52 to i16**
    %155 = load i16*, i16** %sunkaddr53, align 4, !tbaa !50
    store i16 %152, i16* %155, align 2, !tbaa !40
    br label %163
  
  ; <label>:156                                     ; preds = %.lr.ph.i18
    %sunkaddr54 = ptrtoint %struct.alloc_change_s* %cp.03.i17 to i32
    %sunkaddr55 = add i32 %sunkaddr54, 4
    %sunkaddr56 = inttoptr i32 %sunkaddr55 to %struct.ref_s**
    %157 = load %struct.ref_s*, %struct.ref_s** %sunkaddr56, align 4, !tbaa !50
    %158 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %cp.03.i17, i32 0, i32 2, i32 1, i32 0
    %159 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %157, i32 0, i32 1, i32 0
    %160 = load i32, i32* %158, align 4
    store i32 %160, i32* %159, align 4
    %sunkaddr57 = ptrtoint %struct.alloc_change_s* %cp.03.i17 to i32
    %sunkaddr58 = add i32 %sunkaddr57, 4
    %sunkaddr59 = inttoptr i32 %sunkaddr58 to i32**
    %161 = load i32*, i32** %sunkaddr59, align 4, !tbaa !50
    %sunkaddr60 = ptrtoint %struct.alloc_change_s* %cp.03.i17 to i32
    %sunkaddr61 = add i32 %sunkaddr60, 8
    %sunkaddr62 = inttoptr i32 %sunkaddr61 to i32*
    %162 = load i32, i32* %sunkaddr62, align 4
    store i32 %162, i32* %161, align 4
    br label %163
  
  ; <label>:163                                     ; preds = %156, %154
    %164 = bitcast %struct.alloc_change_s* %cp.03.i17 to %struct.alloc_change_s**
    %cp.0.i19 = load %struct.alloc_change_s*, %struct.alloc_change_s** %164, align 4, !tbaa !37
    %165 = icmp eq %struct.alloc_change_s* %cp.0.i19, null
    br i1 %165, label %._crit_edge.i20, label %.lr.ph.i18
  
  ._crit_edge.i20:                                  ; preds = %163, %restore_resources.exit14
    %166 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i15 to i8*
    %167 = bitcast %struct.alloc_save_s* %146 to i8*
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* %166, i8* %167, i32 696, i32 4, i1 false) #5
    %168 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %146, i32 0, i32 1
    %169 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %168, align 4
    %170 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %146, i32 0, i32 3
    %171 = load i32, i32* %170, align 4
    %sunkaddr63 = ptrtoint %struct.gs_ref_memory_s* %100 to i32
    %sunkaddr64 = add i32 %sunkaddr63, 132
    %sunkaddr65 = inttoptr i32 %sunkaddr64 to %struct.chunk_s**
    %172 = load %struct.chunk_s*, %struct.chunk_s** %sunkaddr65, align 4, !tbaa !69
    %173 = icmp eq %struct.chunk_s* %172, null
    br i1 %173, label %restore_free.exit28, label %.lr.ph.i24
  
  .lr.ph.i24:                                       ; preds = %._crit_edge.i20, %.backedge.i26
    %cp.01.i25 = phi %struct.chunk_s* [ %176, %.backedge.i26 ], [ %172, %._crit_edge.i20 ]
    %174 = bitcast %struct.gs_ref_memory_s* %100 to i8*
    %175 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i25, i32 0, i32 8
    %176 = load %struct.chunk_s*, %struct.chunk_s** %175, align 4, !tbaa !70
    %177 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i25, i32 0, i32 1
    %178 = load i8*, i8** %177, align 4, !tbaa !56
    %179 = getelementptr inbounds i8, i8* %178, i32 16
    %180 = icmp eq i8* %179, %174
    br i1 %180, label %.backedge.i26, label %182
  
  .backedge.i26:                                    ; preds = %182, %.lr.ph.i24
    %181 = icmp eq %struct.chunk_s* %176, null
    br i1 %181, label %restore_free.exit28, label %.lr.ph.i24
  
  ; <label>:182                                     ; preds = %.lr.ph.i24
    tail call void @alloc_free_chunk(%struct.chunk_s* nonnull %cp.01.i25, %struct.gs_ref_memory_s* %100) #5
    br label %.backedge.i26
  
  restore_free.exit28:                              ; preds = %.backedge.i26, %._crit_edge.i20
    %183 = bitcast %struct.gs_ref_memory_s* %100 to i8*
    %184 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i15 to i8*
    %185 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %100, i32 0, i32 18
    %186 = load i32, i32* %185, align 4, !tbaa !12
    call void @llvm.memcpy.p0i8.p0i8.i32(i8* %183, i8* %184, i32 696, i32 4, i1 false) #5
    store i32 %186, i32* %185, align 4, !tbaa !12
    tail call void @alloc_open_chunk(%struct.gs_ref_memory_s* %100) #5
    %187 = icmp eq i32 %171, 0
    br i1 %187, label %restore_space.exit21, label %188
  
  ; <label>:188                                     ; preds = %restore_free.exit28
    %189 = bitcast %struct.gs_dual_memory_s* %169 to %struct.gs_ref_memory_s**
    store %struct.gs_ref_memory_s* %100, %struct.gs_ref_memory_s** %189, align 4, !tbaa !47
    %190 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %100, i32 0, i32 5
    %191 = load i32, i32* %190, align 4, !tbaa !71
    %192 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %169, i32 0, i32 2
    store i32 %191, i32* %192, align 4, !tbaa !72
    br label %restore_space.exit21
  
  restore_space.exit21:                             ; preds = %188, %restore_free.exit28
    %193 = bitcast %struct.gs_ref_memory_s* %saved.sroa.0.i15 to i8*
    call void @llvm.lifetime.end(i64 696, i8* nonnull %193)
    br label %194
  
  ; <label>:194                                     ; preds = %restore_space.exit21, %103, %98
    %195 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 5
    store i32 -1, i32* %195, align 4, !tbaa !7
    %196 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 6
    store i32 0, i32* %196, align 4, !tbaa !8
    br label %199
  
  ; <label>:197                                     ; preds = %.loopexit
    %198 = tail call fastcc i32 @save_set_new(%struct.gs_ref_memory_s* nonnull %4, i32 signext 1)
    br label %199
  
  ; <label>:199                                     ; preds = %197, %194
    %200 = icmp eq %struct.alloc_save_s* %96, %save
    %201 = zext i1 %200 to i32
    ret i32 %201
  }
  
  ; Function Attrs: nounwind
  define void @alloc_restore_all(%struct.gs_dual_memory_s* %dmem) #1 {
    %empty_save = alloca %struct.alloc_save_s, align 4
    %1 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 3
    %2 = load i32, i32* %1, align 4, !tbaa !1
    %3 = icmp eq i32 %2, 0
    %4 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 3
    %5 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %4, align 4, !tbaa !9
    br i1 %3, label %._crit_edge, label %.lr.ph
  
  .lr.ph:                                           ; preds = %0, %.lr.ph
    %6 = phi %struct.gs_ref_memory_s* [ %12, %.lr.ph ], [ %5, %0 ]
    %7 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %6, i32 0, i32 20
    %8 = load %struct.alloc_save_s*, %struct.alloc_save_s** %7, align 4, !tbaa !49
    %9 = tail call i32 @alloc_restore_state_step(%struct.alloc_save_s* %8)
    %sunkaddr = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr1 = add i32 %sunkaddr, 24
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i32*
    %10 = load i32, i32* %sunkaddr2, align 4, !tbaa !1
    %11 = icmp eq i32 %10, 0
    %sunkaddr3 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr4 = add i32 %sunkaddr3, 16
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to %struct.gs_ref_memory_s**
    %12 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr5, align 4, !tbaa !9
    br i1 %11, label %._crit_edge, label %.lr.ph
  
  ._crit_edge:                                      ; preds = %.lr.ph, %0
    %.lcssa30 = phi %struct.gs_ref_memory_s* [ %5, %0 ], [ %12, %.lr.ph ]
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* %.lcssa30) #5
    %13 = bitcast %struct.gs_ref_memory_s* %.lcssa30 to %struct.gs_memory_s*
    %14 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %.lcssa30, i32 0, i32 0, i32 19
    %15 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %14, align 4, !tbaa !66
    tail call void %15(%struct.gs_memory_s* %13, i32 signext 0) #5
    %16 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %.lcssa30, i32 0, i32 9
    %cp.02.i = load %struct.chunk_s*, %struct.chunk_s** %16, align 4, !tbaa !37
    %17 = icmp eq %struct.chunk_s* %cp.02.i, null
    br i1 %17, label %restore_finalize.exit, label %.lr.ph5.i
  
  .lr.ph5.i:                                        ; preds = %._crit_edge, %._crit_edge.i
    %cp.03.i = phi %struct.chunk_s* [ %cp.0.i, %._crit_edge.i ], [ %cp.02.i, %._crit_edge ]
    %18 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i, i32 0, i32 1
    %19 = bitcast i8** %18 to %struct.obj_header_s**
    %20 = load %struct.obj_header_s*, %struct.obj_header_s** %19, align 4, !tbaa !56
    %21 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i, i32 0, i32 2
    %22 = bitcast i8** %21 to %struct.obj_header_s**
    %23 = load %struct.obj_header_s*, %struct.obj_header_s** %22, align 4, !tbaa !57
    %24 = icmp ult %struct.obj_header_s* %20, %23
    br i1 %24, label %.lr.ph.i, label %._crit_edge.i
  
  .lr.ph.i:                                         ; preds = %.lr.ph5.i, %35
    %pre.01.i = phi %struct.obj_header_s* [ %40, %35 ], [ %20, %.lr.ph5.i ]
    %25 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i, i32 0, i32 0, i32 0, i32 1
    %26 = load i32, i32* %25, align 4, !tbaa !58
    %27 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i, i32 0, i32 0, i32 0, i32 2, i32 0
    %28 = load %struct.gs_memory_struct_type_s*, %struct.gs_memory_struct_type_s** %27, align 4, !tbaa !37
    %29 = getelementptr inbounds %struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* %28, i32 0, i32 6
    %30 = load void (i8*)*, void (i8*)** %29, align 4, !tbaa !67
    %31 = icmp eq void (i8*)* %30, null
    br i1 %31, label %35, label %32
  
  ; <label>:32                                      ; preds = %.lr.ph.i
    %33 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i, i32 1
    %34 = bitcast %struct.obj_header_s* %33 to i8*
    tail call void %30(i8* %34) #5
    br label %35
  
  ; <label>:35                                      ; preds = %32, %.lr.ph.i
    %36 = bitcast %struct.obj_header_s* %pre.01.i to i8*
    %37 = add i32 %26, 23
    %38 = and i32 %37, -8
    %39 = getelementptr inbounds i8, i8* %36, i32 %38
    %40 = bitcast i8* %39 to %struct.obj_header_s*
    %41 = icmp ult %struct.obj_header_s* %40, %23
    br i1 %41, label %.lr.ph.i, label %._crit_edge.i
  
  ._crit_edge.i:                                    ; preds = %35, %.lr.ph5.i
    %42 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i, i32 0, i32 8
    %cp.0.i = load %struct.chunk_s*, %struct.chunk_s** %42, align 4, !tbaa !37
    %43 = icmp eq %struct.chunk_s* %cp.0.i, null
    br i1 %43, label %restore_finalize.exit, label %.lr.ph5.i
  
  restore_finalize.exit:                            ; preds = %._crit_edge.i, %._crit_edge
    %44 = bitcast %struct.gs_ref_memory_s* %.lcssa30 to %struct.gs_memory_s*
    %sunkaddr6 = ptrtoint %struct.gs_ref_memory_s* %.lcssa30 to i32
    %sunkaddr7 = add i32 %sunkaddr6, 76
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to void (%struct.gs_memory_s*, i32)**
    %45 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %sunkaddr8, align 4, !tbaa !66
    tail call void %45(%struct.gs_memory_s* %44, i32 signext 1) #5
    %46 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 2
    %47 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %46, align 4, !tbaa !11
    %sunkaddr9 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr10 = add i32 %sunkaddr9, 16
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to %struct.gs_ref_memory_s**
    %48 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr11, align 4, !tbaa !9
    %49 = icmp eq %struct.gs_ref_memory_s* %47, %48
    br i1 %49, label %88, label %50
  
  ; <label>:50                                      ; preds = %restore_finalize.exit
    %51 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %47, i32 0, i32 18
    %52 = load i32, i32* %51, align 4, !tbaa !12
    %53 = icmp eq i32 %52, 1
    br i1 %53, label %54, label %88
  
  ; <label>:54                                      ; preds = %50
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* nonnull %47) #5
    %55 = bitcast %struct.gs_ref_memory_s* %47 to %struct.gs_memory_s*
    %56 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %47, i32 0, i32 0, i32 19
    %57 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %56, align 4, !tbaa !66
    tail call void %57(%struct.gs_memory_s* %55, i32 signext 0) #5
    %58 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %47, i32 0, i32 9
    %cp.02.i2 = load %struct.chunk_s*, %struct.chunk_s** %58, align 4, !tbaa !37
    %59 = icmp eq %struct.chunk_s* %cp.02.i2, null
    br i1 %59, label %restore_finalize.exit9, label %.lr.ph5.i4
  
  .lr.ph5.i4:                                       ; preds = %54, %._crit_edge.i8
    %cp.03.i3 = phi %struct.chunk_s* [ %cp.0.i7, %._crit_edge.i8 ], [ %cp.02.i2, %54 ]
    %60 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i3, i32 0, i32 1
    %61 = bitcast i8** %60 to %struct.obj_header_s**
    %62 = load %struct.obj_header_s*, %struct.obj_header_s** %61, align 4, !tbaa !56
    %63 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i3, i32 0, i32 2
    %64 = bitcast i8** %63 to %struct.obj_header_s**
    %65 = load %struct.obj_header_s*, %struct.obj_header_s** %64, align 4, !tbaa !57
    %66 = icmp ult %struct.obj_header_s* %62, %65
    br i1 %66, label %.lr.ph.i6, label %._crit_edge.i8
  
  .lr.ph.i6:                                        ; preds = %.lr.ph5.i4, %77
    %pre.01.i5 = phi %struct.obj_header_s* [ %82, %77 ], [ %62, %.lr.ph5.i4 ]
    %67 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i5, i32 0, i32 0, i32 0, i32 1
    %68 = load i32, i32* %67, align 4, !tbaa !58
    %69 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i5, i32 0, i32 0, i32 0, i32 2, i32 0
    %70 = load %struct.gs_memory_struct_type_s*, %struct.gs_memory_struct_type_s** %69, align 4, !tbaa !37
    %71 = getelementptr inbounds %struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* %70, i32 0, i32 6
    %72 = load void (i8*)*, void (i8*)** %71, align 4, !tbaa !67
    %73 = icmp eq void (i8*)* %72, null
    br i1 %73, label %77, label %74
  
  ; <label>:74                                      ; preds = %.lr.ph.i6
    %75 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i5, i32 1
    %76 = bitcast %struct.obj_header_s* %75 to i8*
    tail call void %72(i8* %76) #5
    br label %77
  
  ; <label>:77                                      ; preds = %74, %.lr.ph.i6
    %78 = bitcast %struct.obj_header_s* %pre.01.i5 to i8*
    %79 = add i32 %68, 23
    %80 = and i32 %79, -8
    %81 = getelementptr inbounds i8, i8* %78, i32 %80
    %82 = bitcast i8* %81 to %struct.obj_header_s*
    %83 = icmp ult %struct.obj_header_s* %82, %65
    br i1 %83, label %.lr.ph.i6, label %._crit_edge.i8
  
  ._crit_edge.i8:                                   ; preds = %77, %.lr.ph5.i4
    %84 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i3, i32 0, i32 8
    %cp.0.i7 = load %struct.chunk_s*, %struct.chunk_s** %84, align 4, !tbaa !37
    %85 = icmp eq %struct.chunk_s* %cp.0.i7, null
    br i1 %85, label %restore_finalize.exit9, label %.lr.ph5.i4
  
  restore_finalize.exit9:                           ; preds = %._crit_edge.i8, %54
    %86 = bitcast %struct.gs_ref_memory_s* %47 to %struct.gs_memory_s*
    %sunkaddr12 = ptrtoint %struct.gs_ref_memory_s* %47 to i32
    %sunkaddr13 = add i32 %sunkaddr12, 76
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to void (%struct.gs_memory_s*, i32)**
    %87 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %sunkaddr14, align 4, !tbaa !66
    tail call void %87(%struct.gs_memory_s* %86, i32 signext 1) #5
    br label %88
  
  ; <label>:88                                      ; preds = %restore_finalize.exit9, %50, %restore_finalize.exit
    %89 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %dmem, i32 0, i32 1, i32 0, i32 1
    %90 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %89, align 4, !tbaa !73
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* %90) #5
    %91 = bitcast %struct.gs_ref_memory_s* %90 to %struct.gs_memory_s*
    %92 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %90, i32 0, i32 0, i32 19
    %93 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %92, align 4, !tbaa !66
    tail call void %93(%struct.gs_memory_s* %91, i32 signext 0) #5
    %94 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %90, i32 0, i32 9
    %cp.02.i10 = load %struct.chunk_s*, %struct.chunk_s** %94, align 4, !tbaa !37
    %95 = icmp eq %struct.chunk_s* %cp.02.i10, null
    br i1 %95, label %restore_finalize.exit17, label %.lr.ph5.i12
  
  .lr.ph5.i12:                                      ; preds = %88, %._crit_edge.i16
    %cp.03.i11 = phi %struct.chunk_s* [ %cp.0.i15, %._crit_edge.i16 ], [ %cp.02.i10, %88 ]
    %96 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i11, i32 0, i32 1
    %97 = bitcast i8** %96 to %struct.obj_header_s**
    %98 = load %struct.obj_header_s*, %struct.obj_header_s** %97, align 4, !tbaa !56
    %99 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i11, i32 0, i32 2
    %100 = bitcast i8** %99 to %struct.obj_header_s**
    %101 = load %struct.obj_header_s*, %struct.obj_header_s** %100, align 4, !tbaa !57
    %102 = icmp ult %struct.obj_header_s* %98, %101
    br i1 %102, label %.lr.ph.i14, label %._crit_edge.i16
  
  .lr.ph.i14:                                       ; preds = %.lr.ph5.i12, %113
    %pre.01.i13 = phi %struct.obj_header_s* [ %118, %113 ], [ %98, %.lr.ph5.i12 ]
    %103 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i13, i32 0, i32 0, i32 0, i32 1
    %104 = load i32, i32* %103, align 4, !tbaa !58
    %105 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i13, i32 0, i32 0, i32 0, i32 2, i32 0
    %106 = load %struct.gs_memory_struct_type_s*, %struct.gs_memory_struct_type_s** %105, align 4, !tbaa !37
    %107 = getelementptr inbounds %struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* %106, i32 0, i32 6
    %108 = load void (i8*)*, void (i8*)** %107, align 4, !tbaa !67
    %109 = icmp eq void (i8*)* %108, null
    br i1 %109, label %113, label %110
  
  ; <label>:110                                     ; preds = %.lr.ph.i14
    %111 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %pre.01.i13, i32 1
    %112 = bitcast %struct.obj_header_s* %111 to i8*
    tail call void %108(i8* %112) #5
    br label %113
  
  ; <label>:113                                     ; preds = %110, %.lr.ph.i14
    %114 = bitcast %struct.obj_header_s* %pre.01.i13 to i8*
    %115 = add i32 %104, 23
    %116 = and i32 %115, -8
    %117 = getelementptr inbounds i8, i8* %114, i32 %116
    %118 = bitcast i8* %117 to %struct.obj_header_s*
    %119 = icmp ult %struct.obj_header_s* %118, %101
    br i1 %119, label %.lr.ph.i14, label %._crit_edge.i16
  
  ._crit_edge.i16:                                  ; preds = %113, %.lr.ph5.i12
    %120 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.03.i11, i32 0, i32 8
    %cp.0.i15 = load %struct.chunk_s*, %struct.chunk_s** %120, align 4, !tbaa !37
    %121 = icmp eq %struct.chunk_s* %cp.0.i15, null
    br i1 %121, label %restore_finalize.exit17, label %.lr.ph5.i12
  
  restore_finalize.exit17:                          ; preds = %._crit_edge.i16, %88
    %122 = bitcast %struct.gs_ref_memory_s* %90 to %struct.gs_memory_s*
    %sunkaddr15 = ptrtoint %struct.gs_ref_memory_s* %90 to i32
    %sunkaddr16 = add i32 %sunkaddr15, 76
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to void (%struct.gs_memory_s*, i32)**
    %123 = load void (%struct.gs_memory_s*, i32)*, void (%struct.gs_memory_s*, i32)** %sunkaddr17, align 4, !tbaa !66
    tail call void %123(%struct.gs_memory_s* %122, i32 signext 1) #5
    %124 = bitcast %struct.alloc_save_s* %empty_save to i8*
    call void @llvm.lifetime.start(i64 716, i8* %124) #5
    %125 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %empty_save, i32 0, i32 1
    store %struct.gs_dual_memory_s* %dmem, %struct.gs_dual_memory_s** %125, align 4, !tbaa !46
    %126 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %empty_save, i32 0, i32 2
    store i32 0, i32* %126, align 4, !tbaa !29
    call void @file_restore(%struct.alloc_save_s* nonnull %empty_save, %struct.gs_memory_s* null) #5
    call void @font_restore(%struct.alloc_save_s* nonnull %empty_save) #5
    %127 = load i32, i32* %126, align 4, !tbaa !29
    %128 = icmp eq i32 %127, 0
    br i1 %128, label %restore_resources.exit, label %129
  
  ; <label>:129                                     ; preds = %restore_finalize.exit17
    call void @name_restore(%struct.alloc_save_s* nonnull %empty_save) #5
    br label %restore_resources.exit
  
  restore_resources.exit:                           ; preds = %129, %restore_finalize.exit17
    %130 = bitcast %struct.alloc_save_s* %empty_save to i8*
    call void @llvm.lifetime.end(i64 716, i8* %130) #5
    %sunkaddr18 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr19 = add i32 %sunkaddr18, 16
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to %struct.gs_ref_memory_s**
    %131 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr20, align 4, !tbaa !9
    %132 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %131, i32 0, i32 9
    %133 = load %struct.chunk_s*, %struct.chunk_s** %132, align 4, !tbaa !69
    %134 = icmp eq %struct.chunk_s* %133, null
    br i1 %134, label %restore_free.exit, label %.lr.ph.i18
  
  .lr.ph.i18:                                       ; preds = %restore_resources.exit
    br label %135
  
  ; <label>:135                                     ; preds = %.backedge.i, %.lr.ph.i18
    %cp.01.i = phi %struct.chunk_s* [ %133, %.lr.ph.i18 ], [ %138, %.backedge.i ]
    %136 = bitcast %struct.gs_ref_memory_s* %131 to i8*
    %137 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i, i32 0, i32 8
    %138 = load %struct.chunk_s*, %struct.chunk_s** %137, align 4, !tbaa !70
    %139 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i, i32 0, i32 1
    %140 = load i8*, i8** %139, align 4, !tbaa !56
    %141 = getelementptr inbounds i8, i8* %140, i32 16
    %142 = icmp eq i8* %141, %136
    br i1 %142, label %.backedge.i, label %144
  
  .backedge.i:                                      ; preds = %144, %135
    %143 = icmp eq %struct.chunk_s* %138, null
    br i1 %143, label %restore_free.exit.loopexit, label %135
  
  ; <label>:144                                     ; preds = %135
    call void @alloc_free_chunk(%struct.chunk_s* nonnull %cp.01.i, %struct.gs_ref_memory_s* %131) #5
    br label %.backedge.i
  
  restore_free.exit.loopexit:                       ; preds = %.backedge.i
    %sunkaddr21 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr22 = add i32 %sunkaddr21, 16
    %sunkaddr23 = inttoptr i32 %sunkaddr22 to %struct.gs_ref_memory_s**
    %.pre = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr23, align 4, !tbaa !9
    br label %restore_free.exit
  
  restore_free.exit:                                ; preds = %restore_free.exit.loopexit, %restore_resources.exit
    %145 = phi %struct.gs_ref_memory_s* [ %.pre, %restore_free.exit.loopexit ], [ %131, %restore_resources.exit ]
    %sunkaddr24 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr25 = add i32 %sunkaddr24, 12
    %sunkaddr26 = inttoptr i32 %sunkaddr25 to %struct.gs_ref_memory_s**
    %146 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr26, align 4, !tbaa !11
    %147 = icmp eq %struct.gs_ref_memory_s* %146, %145
    br i1 %147, label %restore_free.exit24, label %148
  
  ; <label>:148                                     ; preds = %restore_free.exit
    %149 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %146, i32 0, i32 18
    %150 = load i32, i32* %149, align 4, !tbaa !12
    %151 = add nsw i32 %150, -1
    store i32 %151, i32* %149, align 4, !tbaa !12
    %152 = icmp eq i32 %151, 0
    br i1 %152, label %153, label %restore_free.exit24
  
  ; <label>:153                                     ; preds = %148
    %154 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %146, i32 0, i32 9
    %155 = load %struct.chunk_s*, %struct.chunk_s** %154, align 4, !tbaa !69
    %156 = icmp eq %struct.chunk_s* %155, null
    br i1 %156, label %restore_free.exit24, label %.lr.ph.i20
  
  .lr.ph.i20:                                       ; preds = %153
    br label %157
  
  ; <label>:157                                     ; preds = %.backedge.i22, %.lr.ph.i20
    %cp.01.i21 = phi %struct.chunk_s* [ %155, %.lr.ph.i20 ], [ %160, %.backedge.i22 ]
    %158 = bitcast %struct.gs_ref_memory_s* %146 to i8*
    %159 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i21, i32 0, i32 8
    %160 = load %struct.chunk_s*, %struct.chunk_s** %159, align 4, !tbaa !70
    %161 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i21, i32 0, i32 1
    %162 = load i8*, i8** %161, align 4, !tbaa !56
    %163 = getelementptr inbounds i8, i8* %162, i32 16
    %164 = icmp eq i8* %163, %158
    br i1 %164, label %.backedge.i22, label %166
  
  .backedge.i22:                                    ; preds = %166, %157
    %165 = icmp eq %struct.chunk_s* %160, null
    br i1 %165, label %restore_free.exit24, label %157
  
  ; <label>:166                                     ; preds = %157
    call void @alloc_free_chunk(%struct.chunk_s* nonnull %cp.01.i21, %struct.gs_ref_memory_s* %146) #5
    br label %.backedge.i22
  
  restore_free.exit24:                              ; preds = %.backedge.i22, %153, %148, %restore_free.exit
    %sunkaddr27 = ptrtoint %struct.gs_dual_memory_s* %dmem to i32
    %sunkaddr28 = add i32 %sunkaddr27, 8
    %sunkaddr29 = inttoptr i32 %sunkaddr28 to %struct.gs_ref_memory_s**
    %167 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr29, align 4, !tbaa !73
    %168 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %167, i32 0, i32 9
    %169 = load %struct.chunk_s*, %struct.chunk_s** %168, align 4, !tbaa !69
    %170 = icmp eq %struct.chunk_s* %169, null
    br i1 %170, label %restore_free.exit29, label %.lr.ph.i25
  
  .lr.ph.i25:                                       ; preds = %restore_free.exit24
    br label %171
  
  ; <label>:171                                     ; preds = %.backedge.i27, %.lr.ph.i25
    %cp.01.i26 = phi %struct.chunk_s* [ %169, %.lr.ph.i25 ], [ %174, %.backedge.i27 ]
    %172 = bitcast %struct.gs_ref_memory_s* %167 to i8*
    %173 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i26, i32 0, i32 8
    %174 = load %struct.chunk_s*, %struct.chunk_s** %173, align 4, !tbaa !70
    %175 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.01.i26, i32 0, i32 1
    %176 = load i8*, i8** %175, align 4, !tbaa !56
    %177 = getelementptr inbounds i8, i8* %176, i32 16
    %178 = icmp eq i8* %177, %172
    br i1 %178, label %.backedge.i27, label %180
  
  .backedge.i27:                                    ; preds = %180, %171
    %179 = icmp eq %struct.chunk_s* %174, null
    br i1 %179, label %restore_free.exit29, label %171
  
  ; <label>:180                                     ; preds = %171
    call void @alloc_free_chunk(%struct.chunk_s* nonnull %cp.01.i26, %struct.gs_ref_memory_s* %167) #5
    br label %.backedge.i27
  
  restore_free.exit29:                              ; preds = %.backedge.i27, %restore_free.exit24
    ret void
  }
  
  ; Function Attrs: nounwind
  define void @alloc_forget_save(%struct.alloc_save_s* readonly %save) #1 {
    %1 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %save, i32 0, i32 1
    %2 = load %struct.gs_dual_memory_s*, %struct.gs_dual_memory_s** %1, align 4, !tbaa !46
    %3 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 1, i32 0, i32 3
    %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %3, align 4, !tbaa !9
    br label %5
  
  ; <label>:5                                       ; preds = %31, %0
    %sunkaddr = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr1 = add i32 %sunkaddr, 276
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to %struct.alloc_save_s**
    %6 = load %struct.alloc_save_s*, %struct.alloc_save_s** %sunkaddr2, align 4, !tbaa !49
    %7 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %6, i32 0, i32 4
    %8 = load i32, i32* %7, align 4, !tbaa !26
    %9 = icmp eq i32 %8, 0
    %sunkaddr3 = ptrtoint %struct.gs_dual_memory_s* %2 to i32
    %sunkaddr4 = add i32 %sunkaddr3, 24
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to i32*
    %.pre = load i32, i32* %sunkaddr5, align 4, !tbaa !1
    br i1 %9, label %._crit_edge, label %10
  
  ; <label>:10                                      ; preds = %5
    %11 = add nsw i32 %.pre, -1
    %sunkaddr6 = ptrtoint %struct.gs_dual_memory_s* %2 to i32
    %sunkaddr7 = add i32 %sunkaddr6, 24
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to i32*
    store i32 %11, i32* %sunkaddr8, align 4, !tbaa !1
    br label %._crit_edge
  
  ._crit_edge:                                      ; preds = %10, %5
    %12 = phi i32 [ %11, %10 ], [ %.pre, %5 ]
    %13 = icmp eq i32 %12, 0
    %sunkaddr9 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr10 = add i32 %sunkaddr9, 272
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to %struct.alloc_change_s**
    %14 = load %struct.alloc_change_s*, %struct.alloc_change_s** %sunkaddr11, align 4, !tbaa !60
    br i1 %13, label %33, label %15
  
  ; <label>:15                                      ; preds = %._crit_edge
    %16 = bitcast %struct.alloc_save_s* %6 to %struct.gs_ref_memory_s*
    %17 = tail call fastcc i32 @save_set_new(%struct.gs_ref_memory_s* %16, i32 signext 1)
    %18 = icmp eq %struct.alloc_change_s* %14, null
    br i1 %18, label %19, label %.preheader
  
  ; <label>:19                                      ; preds = %15
    %20 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %6, i32 0, i32 0, i32 19
    %21 = bitcast %struct.alloc_change_s** %20 to i32*
    %22 = load i32, i32* %21, align 4, !tbaa !74
    %sunkaddr12 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr13 = add i32 %sunkaddr12, 272
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to i32*
    store i32 %22, i32* %sunkaddr14, align 4, !tbaa !60
    br label %31
  
  .preheader:                                       ; preds = %15, %.preheader
    %chp.0 = phi %struct.alloc_change_s* [ %24, %.preheader ], [ %14, %15 ]
    %23 = bitcast %struct.alloc_change_s* %chp.0 to %struct.alloc_change_s**
    %24 = load %struct.alloc_change_s*, %struct.alloc_change_s** %23, align 4, !tbaa !61
    %25 = icmp eq %struct.alloc_change_s* %24, null
    br i1 %25, label %26, label %.preheader
  
  ; <label>:26                                      ; preds = %.preheader
    %27 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %6, i32 0, i32 0, i32 19
    %28 = bitcast %struct.alloc_change_s** %27 to i32*
    %29 = load i32, i32* %28, align 4, !tbaa !74
    %30 = bitcast %struct.alloc_change_s* %chp.0 to i32*
    store i32 %29, i32* %30, align 4, !tbaa !61
    br label %31
  
  ; <label>:31                                      ; preds = %26, %19
    tail call void @file_forget_save(%struct.alloc_save_s* nonnull %6) #5
    tail call fastcc void @combine_space(%struct.gs_ref_memory_s* %4)
    %32 = icmp eq %struct.alloc_save_s* %6, %save
    br i1 %32, label %.loopexit, label %5
  
  ; <label>:33                                      ; preds = %._crit_edge
    %34 = icmp eq %struct.alloc_change_s* %14, null
    br i1 %34, label %forget_changes.exit, label %.lr.ph.i
  
  .lr.ph.i:                                         ; preds = %33
    br label %35
  
  ; <label>:35                                      ; preds = %44, %.lr.ph.i
    %chp.01.i = phi %struct.alloc_change_s* [ %14, %.lr.ph.i ], [ %47, %44 ]
    %36 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %chp.01.i, i32 0, i32 1
    %37 = load i16*, i16** %36, align 4, !tbaa !50
    %38 = load i16, i16* %37, align 2, !tbaa !40
    %39 = zext i16 %38 to i32
    %40 = icmp ugt i16 %38, 16383
    br i1 %40, label %44, label %41
  
  ; <label>:41                                      ; preds = %35
    %42 = and i32 %39, 65533
    %43 = trunc i32 %42 to i16
    store i16 %43, i16* %37, align 4, !tbaa !54
    br label %44
  
  ; <label>:44                                      ; preds = %41, %35
    %45 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
    %46 = bitcast %struct.alloc_change_s* %chp.01.i to %struct.alloc_change_s**
    %47 = load %struct.alloc_change_s*, %struct.alloc_change_s** %46, align 4, !tbaa !61
    %sunkaddr15 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr16 = add i32 %sunkaddr15, 44
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to void (%struct.gs_memory_s*, i8*, i8*)**
    %48 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %sunkaddr17, align 4, !tbaa !23
    %49 = bitcast %struct.alloc_change_s* %chp.01.i to i8*
    tail call void %48(%struct.gs_memory_s* %45, i8* %49, i8* nonnull getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i32 0, i32 0)) #5
    %50 = icmp eq %struct.alloc_change_s* %47, null
    br i1 %50, label %forget_changes.exit, label %35
  
  forget_changes.exit:                              ; preds = %44, %33
    %sunkaddr18 = ptrtoint %struct.gs_ref_memory_s* %4 to i32
    %sunkaddr19 = add i32 %sunkaddr18, 272
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to %struct.alloc_change_s**
    store %struct.alloc_change_s* null, %struct.alloc_change_s** %sunkaddr20, align 4, !tbaa !60
    %51 = tail call fastcc i32 @save_set_new(%struct.gs_ref_memory_s* nonnull %4, i32 signext 0)
    tail call void @file_forget_save(%struct.alloc_save_s* %6) #5
    tail call fastcc void @combine_space(%struct.gs_ref_memory_s* nonnull %4)
    %52 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 1, i32 0, i32 2
    %53 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %52, align 4, !tbaa !11
    %sunkaddr21 = ptrtoint %struct.gs_dual_memory_s* %2 to i32
    %sunkaddr22 = add i32 %sunkaddr21, 16
    %sunkaddr23 = inttoptr i32 %sunkaddr22 to %struct.gs_ref_memory_s**
    %54 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %sunkaddr23, align 4, !tbaa !9
    %55 = icmp eq %struct.gs_ref_memory_s* %53, %54
    br i1 %55, label %81, label %56
  
  ; <label>:56                                      ; preds = %forget_changes.exit
    %57 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %53, i32 0, i32 20
    %58 = load %struct.alloc_save_s*, %struct.alloc_save_s** %57, align 4, !tbaa !49
    %59 = icmp eq %struct.alloc_save_s* %58, null
    br i1 %59, label %81, label %60
  
  ; <label>:60                                      ; preds = %56
    %61 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %53, i32 0, i32 19
    %62 = load %struct.alloc_change_s*, %struct.alloc_change_s** %61, align 4, !tbaa !60
    %63 = icmp eq %struct.alloc_change_s* %62, null
    br i1 %63, label %forget_changes.exit3, label %.lr.ph.i1
  
  .lr.ph.i1:                                        ; preds = %60
    br label %64
  
  ; <label>:64                                      ; preds = %73, %.lr.ph.i1
    %chp.01.i2 = phi %struct.alloc_change_s* [ %62, %.lr.ph.i1 ], [ %76, %73 ]
    %65 = getelementptr inbounds %struct.alloc_change_s, %struct.alloc_change_s* %chp.01.i2, i32 0, i32 1
    %66 = load i16*, i16** %65, align 4, !tbaa !50
    %67 = load i16, i16* %66, align 2, !tbaa !40
    %68 = zext i16 %67 to i32
    %69 = icmp ugt i16 %67, 16383
    br i1 %69, label %73, label %70
  
  ; <label>:70                                      ; preds = %64
    %71 = and i32 %68, 65533
    %72 = trunc i32 %71 to i16
    store i16 %72, i16* %66, align 4, !tbaa !54
    br label %73
  
  ; <label>:73                                      ; preds = %70, %64
    %74 = bitcast %struct.gs_ref_memory_s* %53 to %struct.gs_memory_s*
    %75 = bitcast %struct.alloc_change_s* %chp.01.i2 to %struct.alloc_change_s**
    %76 = load %struct.alloc_change_s*, %struct.alloc_change_s** %75, align 4, !tbaa !61
    %sunkaddr24 = ptrtoint %struct.gs_ref_memory_s* %53 to i32
    %sunkaddr25 = add i32 %sunkaddr24, 44
    %sunkaddr26 = inttoptr i32 %sunkaddr25 to void (%struct.gs_memory_s*, i8*, i8*)**
    %77 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %sunkaddr26, align 4, !tbaa !23
    %78 = bitcast %struct.alloc_change_s* %chp.01.i2 to i8*
    tail call void %77(%struct.gs_memory_s* %74, i8* %78, i8* nonnull getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i32 0, i32 0)) #5
    %79 = icmp eq %struct.alloc_change_s* %76, null
    br i1 %79, label %forget_changes.exit3, label %64
  
  forget_changes.exit3:                             ; preds = %73, %60
    %sunkaddr27 = ptrtoint %struct.gs_ref_memory_s* %53 to i32
    %sunkaddr28 = add i32 %sunkaddr27, 272
    %sunkaddr29 = inttoptr i32 %sunkaddr28 to %struct.alloc_change_s**
    store %struct.alloc_change_s* null, %struct.alloc_change_s** %sunkaddr29, align 4, !tbaa !60
    %80 = tail call fastcc i32 @save_set_new(%struct.gs_ref_memory_s* nonnull %53, i32 signext 0)
    tail call fastcc void @combine_space(%struct.gs_ref_memory_s* nonnull %53)
    br label %81
  
  ; <label>:81                                      ; preds = %forget_changes.exit3, %56, %forget_changes.exit
    %82 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 5
    store i32 -1, i32* %82, align 4, !tbaa !7
    %83 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %2, i32 0, i32 6
    store i32 0, i32* %83, align 4, !tbaa !8
    br label %.loopexit
  
  .loopexit:                                        ; preds = %31, %81
    ret void
  }
  
  declare void @file_forget_save(%struct.alloc_save_s*) #3
  
  ; Function Attrs: nounwind
  define internal fastcc void @combine_space(%struct.gs_ref_memory_s* %mem) unnamed_addr #1 {
    %1 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 20
    %2 = load %struct.alloc_save_s*, %struct.alloc_save_s** %1, align 4, !tbaa !49
    tail call void @alloc_close_chunk(%struct.gs_ref_memory_s* %mem) #5
    %3 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 8
    %4 = load %struct.chunk_s*, %struct.chunk_s** %3, align 4, !tbaa !75
    %5 = icmp eq %struct.chunk_s* %4, null
    br i1 %5, label %._crit_edge, label %.lr.ph
  
  .lr.ph:                                           ; preds = %0
    br label %6
  
  ; <label>:6                                       ; preds = %.backedge, %.lr.ph
    %cp.02 = phi %struct.chunk_s* [ %4, %.lr.ph ], [ %8, %.backedge ]
    %7 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 9
    %8 = load %struct.chunk_s*, %struct.chunk_s** %7, align 4, !tbaa !76
    %9 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 10
    %10 = load %struct.chunk_s*, %struct.chunk_s** %9, align 4, !tbaa !77
    %11 = icmp eq %struct.chunk_s* %10, null
    br i1 %11, label %12, label %15
  
  ; <label>:12                                      ; preds = %6
    %13 = bitcast %struct.alloc_save_s* %2 to %struct.gs_ref_memory_s*
    tail call void @alloc_link_chunk(%struct.chunk_s* nonnull %cp.02, %struct.gs_ref_memory_s* %13) #5
    br label %.backedge
  
  .backedge:                                        ; preds = %26, %12
    %14 = icmp eq %struct.chunk_s* %8, null
    br i1 %14, label %._crit_edge, label %6
  
  ; <label>:15                                      ; preds = %6
    %16 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %10, i32 0, i32 11
    %17 = load i32, i32* %16, align 4, !tbaa !78
    %18 = add i32 %17, -1
    store i32 %18, i32* %16, align 4, !tbaa !78
    %sunkaddr = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr1 = add i32 %sunkaddr, 228
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to %struct.chunk_s**
    %19 = load %struct.chunk_s*, %struct.chunk_s** %sunkaddr2, align 4, !tbaa !22
    %20 = icmp eq %struct.chunk_s* %19, %cp.02
    br i1 %20, label %21, label %22
  
  ; <label>:21                                      ; preds = %15
    %sunkaddr3 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr4 = add i32 %sunkaddr3, 228
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to %struct.chunk_s**
    store %struct.chunk_s* %10, %struct.chunk_s** %sunkaddr5, align 4, !tbaa !22
    br label %22
  
  ; <label>:22                                      ; preds = %21, %15
    %sunkaddr6 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr7 = add i32 %sunkaddr6, 236
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to %struct.chunk_s**
    %23 = load %struct.chunk_s*, %struct.chunk_s** %sunkaddr8, align 4, !tbaa !79
    %24 = icmp eq %struct.chunk_s* %23, %cp.02
    br i1 %24, label %25, label %26
  
  ; <label>:25                                      ; preds = %22
    %sunkaddr9 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr10 = add i32 %sunkaddr9, 236
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to %struct.chunk_s**
    store %struct.chunk_s* %10, %struct.chunk_s** %sunkaddr11, align 4, !tbaa !79
    br label %26
  
  ; <label>:26                                      ; preds = %25, %22
    %27 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %10, i32 0, i32 2
    %28 = bitcast i8** %27 to %struct.obj_header_s**
    %29 = load %struct.obj_header_s*, %struct.obj_header_s** %28, align 4, !tbaa !57
    %30 = bitcast %struct.obj_header_s* %29 to i8*
    %31 = load i8, i8* %30, align 4
    %32 = and i8 %31, 127
    store i8 %32, i8* %30, align 4
    %33 = bitcast %struct.chunk_s* %cp.02 to %struct.chunk_head_s**
    %34 = load %struct.chunk_head_s*, %struct.chunk_head_s** %33, align 4, !tbaa !80
    %35 = getelementptr inbounds %struct.chunk_head_s, %struct.chunk_head_s* %34, i32 1
    %36 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %29, i32 1
    %37 = ptrtoint %struct.chunk_head_s* %35 to i32
    %38 = ptrtoint %struct.obj_header_s* %36 to i32
    %39 = sub i32 %37, %38
    %40 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %29, i32 0, i32 0, i32 0, i32 1
    store i32 %39, i32* %40, align 4, !tbaa !58
    %41 = getelementptr inbounds %struct.obj_header_s, %struct.obj_header_s* %29, i32 0, i32 0, i32 0, i32 2, i32 0
    store %struct.gs_memory_struct_type_s* @st_bytes, %struct.gs_memory_struct_type_s** %41, align 4, !tbaa !37
    %42 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 2
    %43 = bitcast i8** %42 to i32*
    %44 = load i32, i32* %43, align 4, !tbaa !57
    %45 = bitcast i8** %27 to i32*
    store i32 %44, i32* %45, align 4, !tbaa !57
    %46 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 3
    %47 = bitcast %struct.obj_header_s** %46 to i32*
    %48 = load i32, i32* %47, align 4, !tbaa !81
    %49 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %10, i32 0, i32 3
    %50 = bitcast %struct.obj_header_s** %49 to i32*
    store i32 %48, i32* %50, align 4, !tbaa !81
    %51 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 4
    %52 = bitcast i8** %51 to i32*
    %53 = load i32, i32* %52, align 4, !tbaa !82
    %54 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %10, i32 0, i32 4
    %55 = bitcast i8** %54 to i32*
    store i32 %53, i32* %55, align 4, !tbaa !82
    %56 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 5
    %57 = bitcast i8** %56 to i32*
    %58 = load i32, i32* %57, align 4, !tbaa !83
    %59 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %10, i32 0, i32 5
    %60 = bitcast i8** %59 to i32*
    store i32 %58, i32* %60, align 4, !tbaa !83
    %61 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %cp.02, i32 0, i32 12
    %62 = load i32, i32* %61, align 4, !tbaa !55
    %63 = getelementptr inbounds %struct.chunk_s, %struct.chunk_s* %10, i32 0, i32 12
    %64 = load i32, i32* %63, align 4, !tbaa !55
    %65 = or i32 %64, %62
    store i32 %65, i32* %63, align 4, !tbaa !55
    %sunkaddr12 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr13 = add i32 %sunkaddr12, 80
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to %struct.gs_memory_s**
    %66 = load %struct.gs_memory_s*, %struct.gs_memory_s** %sunkaddr14, align 4, !tbaa !25
    %67 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %66, i32 0, i32 0, i32 11
    %68 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %67, align 4, !tbaa !23
    %69 = bitcast %struct.chunk_s* %cp.02 to i8*
    tail call void %68(%struct.gs_memory_s* %66, i8* %69, i8* nonnull getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i32 0, i32 0)) #5
    br label %.backedge
  
  ._crit_edge:                                      ; preds = %.backedge, %0
    %70 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 8
    %71 = bitcast %struct.chunk_s** %70 to i32*
    %72 = load i32, i32* %71, align 4, !tbaa !75
    %sunkaddr15 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr16 = add i32 %sunkaddr15, 128
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to i32*
    store i32 %72, i32* %sunkaddr17, align 4, !tbaa !75
    %73 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 9
    %74 = bitcast %struct.chunk_s** %73 to i32*
    %75 = load i32, i32* %74, align 4, !tbaa !69
    %76 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 9
    %77 = bitcast %struct.chunk_s** %76 to i32*
    store i32 %75, i32* %77, align 4, !tbaa !69
    %78 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 13
    %79 = load i32, i32* %78, align 4, !tbaa !84
    %80 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 13
    %81 = load i32, i32* %80, align 4, !tbaa !84
    %82 = add i32 %81, %79
    store i32 %82, i32* %80, align 4, !tbaa !84
    %83 = load i32, i32* %78, align 4, !tbaa !84
    %84 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 15
    %85 = load i32, i32* %84, align 4, !tbaa !85
    %86 = add i32 %85, %83
    store i32 %86, i32* %84, align 4, !tbaa !85
    %87 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 16, i32 0
    %88 = load i32, i32* %87, align 4, !tbaa !86
    %89 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 16, i32 0
    %90 = load i32, i32* %89, align 4, !tbaa !86
    %91 = add i32 %90, %88
    store i32 %91, i32* %89, align 4, !tbaa !86
    %92 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 16, i32 1
    %93 = load i32, i32* %92, align 4, !tbaa !87
    %94 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 16, i32 1
    %95 = load i32, i32* %94, align 4, !tbaa !87
    %96 = add i32 %95, %93
    store i32 %96, i32* %94, align 4, !tbaa !87
    %97 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 16, i32 2
    %98 = load i32, i32* %97, align 4, !tbaa !88
    %99 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 16, i32 2
    %100 = load i32, i32* %99, align 4, !tbaa !88
    %101 = add i32 %100, %98
    store i32 %101, i32* %99, align 4, !tbaa !88
    %102 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 20
    %103 = bitcast %struct.alloc_save_s** %102 to i32*
    %104 = load i32, i32* %103, align 4, !tbaa !49
    %sunkaddr18 = ptrtoint %struct.gs_ref_memory_s* %mem to i32
    %sunkaddr19 = add i32 %sunkaddr18, 276
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to i32*
    store i32 %104, i32* %sunkaddr20, align 4, !tbaa !49
    %105 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 22
    %106 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 22
    %107 = bitcast %struct.gs_memory_status_s* %106 to i64*
    %108 = bitcast %struct.gs_memory_status_s* %105 to i64*
    %109 = load i64, i64* %107, align 4
    store i64 %109, i64* %108, align 4
    br label %110
  
  ; <label>:110                                     ; preds = %123, %._crit_edge
    %i.01 = phi i32 [ 0, %._crit_edge ], [ %124, %123 ]
    %111 = getelementptr inbounds %struct.alloc_save_s, %struct.alloc_save_s* %2, i32 0, i32 0, i32 23, i32 %i.01
    %112 = load %struct.obj_header_s*, %struct.obj_header_s** %111, align 4, !tbaa !37
    %113 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 23, i32 %i.01
    %114 = load %struct.obj_header_s*, %struct.obj_header_s** %113, align 4, !tbaa !37
    %115 = icmp eq %struct.obj_header_s* %112, null
    br i1 %115, label %123, label %116
  
  ; <label>:116                                     ; preds = %110
    %117 = icmp eq %struct.obj_header_s* %114, null
    br i1 %117, label %118, label %.preheader
  
  ; <label>:118                                     ; preds = %116
    store %struct.obj_header_s* %112, %struct.obj_header_s** %113, align 4, !tbaa !37
    br label %123
  
  .preheader:                                       ; preds = %116, %.preheader
    %list.0 = phi %struct.obj_header_s* [ %120, %.preheader ], [ %114, %116 ]
    %119 = bitcast %struct.obj_header_s* %list.0 to %struct.obj_header_s**
    %120 = load %struct.obj_header_s*, %struct.obj_header_s** %119, align 4, !tbaa !37
    %121 = icmp eq %struct.obj_header_s* %120, null
    br i1 %121, label %122, label %.preheader
  
  ; <label>:122                                     ; preds = %.preheader
    %sunkaddr21 = ptrtoint %struct.obj_header_s* %list.0 to i32
    %sunkaddr22 = inttoptr i32 %sunkaddr21 to %struct.obj_header_s**
    store %struct.obj_header_s* %112, %struct.obj_header_s** %sunkaddr22, align 4, !tbaa !37
    br label %123
  
  ; <label>:123                                     ; preds = %122, %118, %110
    %124 = add nuw nsw i32 %i.01, 1
    %exitcond = icmp eq i32 %124, 101
    br i1 %exitcond, label %125, label %110
  
  ; <label>:125                                     ; preds = %123
    %126 = bitcast %struct.gs_ref_memory_s* %mem to %struct.gs_memory_s*
    %127 = getelementptr inbounds %struct.gs_ref_memory_s, %struct.gs_ref_memory_s* %mem, i32 0, i32 0, i32 11
    %128 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %127, align 4, !tbaa !23
    %129 = bitcast %struct.alloc_save_s* %2 to i8*
    tail call void %128(%struct.gs_memory_s* %126, i8* %129, i8* nonnull getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i32 0, i32 0)) #5
    tail call void @alloc_open_chunk(%struct.gs_ref_memory_s* %mem) #5
    ret void
  }
  
  declare void @alloc_close_chunk(%struct.gs_ref_memory_s*) #3
  
  declare void @ialloc_reset(%struct.gs_ref_memory_s*) #3
  
  declare void @alloc_init_chunk(%struct.chunk_s*, i8*, i8*, i32 signext, %struct.chunk_s*) #3
  
  declare %struct.gs_memory_s* @name_memory() #3
  
  ; Function Attrs: nounwind
  define internal %struct.gs_ptr_procs_s* @save_enum_ptrs(i8* %vptr, i32 signext %size, i32 signext %index, i8** %pep) #1 {
    %cond = icmp eq i32 %index, 0
    br i1 %cond, label %5, label %1
  
  ; <label>:1                                       ; preds = %0
    %2 = load %struct.gs_ptr_procs_s* (i8*, i32, i32, i8**)*, %struct.gs_ptr_procs_s* (i8*, i32, i32, i8**)** getelementptr inbounds (%struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* @st_ref_memory, i32 0, i32 4), align 4, !tbaa !89
    %3 = add i32 %index, -1
    %4 = tail call %struct.gs_ptr_procs_s* %2(i8* %vptr, i32 signext %size, i32 signext %3, i8** %pep) #5
    br label %10
  
  ; <label>:5                                       ; preds = %0
    %6 = getelementptr inbounds i8, i8* %vptr, i32 712
    %7 = bitcast i8* %6 to i32*
    %8 = load i32, i32* %7, align 4, !tbaa !28
    %9 = bitcast i8** %pep to i32*
    store i32 %8, i32* %9, align 4, !tbaa !37
    br label %10
  
  ; <label>:10                                      ; preds = %5, %1
    %.0 = phi %struct.gs_ptr_procs_s* [ @ptr_struct_procs, %5 ], [ %4, %1 ]
    ret %struct.gs_ptr_procs_s* %.0
  }
  
  ; Function Attrs: nounwind
  define internal void @save_reloc_ptrs(i8* %vptr, i32 signext %size, %struct.gc_state_s* %gcst) #1 {
    %1 = load void (i8*, i32, %struct.gc_state_s*)*, void (i8*, i32, %struct.gc_state_s*)** getelementptr inbounds (%struct.gs_memory_struct_type_s, %struct.gs_memory_struct_type_s* @st_ref_memory, i32 0, i32 5), align 4, !tbaa !90
    tail call void %1(i8* %vptr, i32 signext %size, %struct.gc_state_s* %gcst) #5
    %2 = getelementptr inbounds i8, i8* %vptr, i32 712
    %3 = bitcast i8* %2 to i8**
    %4 = load i8*, i8** %3, align 4, !tbaa !28
    %5 = tail call i8* @gs_reloc_struct_ptr(i8* %4, %struct.gc_state_s* %gcst) #5
    store i8* %5, i8** %3, align 4, !tbaa !28
    ret void
  }
  
  declare i8* @gs_reloc_struct_ptr(i8*, %struct.gc_state_s*) #3
  
  ; Function Attrs: norecurse nounwind
  define internal void @change_clear_marks(i8* nocapture %vptr, i32 signext %size) #0 {
    %1 = getelementptr inbounds i8, i8* %vptr, i32 8
    %2 = bitcast i8* %1 to i16*
    %3 = load i16, i16* %2, align 4, !tbaa !40
    %4 = icmp ugt i16 %3, 16383
    %5 = zext i16 %3 to i32
    %storemerge.in.v = select i1 %4, i32 61439, i32 65534
    %storemerge.in = and i32 %5, %storemerge.in.v
    %storemerge = trunc i32 %storemerge.in to i16
    store i16 %storemerge, i16* %2, align 4, !tbaa !40
    ret void
  }
  
  ; Function Attrs: norecurse nounwind
  define internal %struct.gs_ptr_procs_s* @change_enum_ptrs(i8* %vptr, i32 signext %size, i32 signext %index, i8** nocapture %pep) #0 {
    switch i32 %index, label %20 [
      i32 0, label %1
      i32 1, label %5
      i32 2, label %18
    ]
  
  ; <label>:1                                       ; preds = %0
    %2 = bitcast i8* %vptr to i32*
    %3 = load i32, i32* %2, align 4, !tbaa !61
    %4 = bitcast i8** %pep to i32*
    store i32 %3, i32* %4, align 4, !tbaa !37
    br label %20
  
  ; <label>:5                                       ; preds = %0
    %6 = getelementptr inbounds i8, i8* %vptr, i32 16
    %7 = bitcast i8* %6 to i16*
    %8 = load i16, i16* %7, align 4, !tbaa !62
    %9 = sext i16 %8 to i32
    %10 = icmp sgt i16 %8, -1
    %11 = getelementptr inbounds i8, i8* %vptr, i32 4
    %12 = bitcast i8* %11 to i8**
    %13 = load i8*, i8** %12, align 4, !tbaa !50
    br i1 %10, label %14, label %17
  
  ; <label>:14                                      ; preds = %5
    %15 = sub nsw i32 0, %9
    %16 = getelementptr inbounds i8, i8* %13, i32 %15
    store i8* %16, i8** %pep, align 4, !tbaa !37
    br label %20
  
  ; <label>:17                                      ; preds = %5
    store i8* %13, i8** %pep, align 4, !tbaa !37
    br label %20
  
  ; <label>:18                                      ; preds = %0
    %19 = getelementptr inbounds i8, i8* %vptr, i32 8
    store i8* %19, i8** %pep, align 4, !tbaa !37
    br label %20
  
  ; <label>:20                                      ; preds = %18, %17, %14, %1, %0
    %.0 = phi %struct.gs_ptr_procs_s* [ @ptr_ref_procs, %18 ], [ @ptr_struct_procs, %14 ], [ @ptr_ref_procs, %17 ], [ @ptr_struct_procs, %1 ], [ null, %0 ]
    ret %struct.gs_ptr_procs_s* %.0
  }
  
  ; Function Attrs: nounwind
  define internal void @change_reloc_ptrs(i8* %vptr, i32 signext %size, %struct.gc_state_s* %gcst) #1 {
    %1 = bitcast i8* %vptr to i8**
    %2 = load i8*, i8** %1, align 4, !tbaa !61
    %3 = tail call i8* @gs_reloc_struct_ptr(i8* %2, %struct.gc_state_s* %gcst) #5
    store i8* %3, i8** %1, align 4, !tbaa !61
    %4 = getelementptr inbounds i8, i8* %vptr, i32 16
    %5 = bitcast i8* %4 to i16*
    %6 = load i16, i16* %5, align 4, !tbaa !62
    %7 = sext i16 %6 to i32
    switch i32 %7, label %13 [
      i32 -2, label %23
      i32 -1, label %8
    ]
  
  ; <label>:8                                       ; preds = %0
    %9 = getelementptr inbounds i8, i8* %vptr, i32 4
    %10 = bitcast i8* %9 to i16**
    %11 = load i16*, i16** %10, align 4, !tbaa !50
    %12 = tail call i16* @gs_reloc_ref_ptr(i16* %11, %struct.gc_state_s* %gcst) #5
    store i16* %12, i16** %10, align 4, !tbaa !50
    br label %23
  
  ; <label>:13                                      ; preds = %0
    %14 = getelementptr inbounds i8, i8* %vptr, i32 4
    %15 = bitcast i8* %14 to i8**
    %16 = load i8*, i8** %15, align 4, !tbaa !50
    %17 = sub nsw i32 0, %7
    %18 = getelementptr inbounds i8, i8* %16, i32 %17
    %19 = tail call i8* @gs_reloc_struct_ptr(i8* %18, %struct.gc_state_s* %gcst) #5
    %sunkaddr = ptrtoint i8* %vptr to i32
    %sunkaddr1 = add i32 %sunkaddr, 16
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i16*
    %20 = load i16, i16* %sunkaddr2, align 4, !tbaa !62
    %21 = sext i16 %20 to i32
    %22 = getelementptr inbounds i8, i8* %19, i32 %21
    store i8* %22, i8** %15, align 4, !tbaa !50
    br label %23
  
  ; <label>:23                                      ; preds = %13, %8, %0
    %24 = getelementptr inbounds i8, i8* %vptr, i32 8
    %25 = bitcast i8* %24 to i16*
    %26 = load i16, i16* %25, align 4, !tbaa !40
    %27 = zext i16 %26 to i32
    %28 = icmp ugt i16 %26, 16383
    br i1 %28, label %29, label %31
  
  ; <label>:29                                      ; preds = %23
    %30 = and i32 %27, 61439
    br label %37
  
  ; <label>:31                                      ; preds = %23
    %32 = bitcast i8* %24 to i16*
    %33 = bitcast i8* %4 to i16*
    tail call void @gs_reloc_refs(i16* %32, i16* nonnull %33, %struct.gc_state_s* %gcst) #5
    %34 = load i16, i16* %32, align 4, !tbaa !54
    %35 = zext i16 %34 to i32
    %36 = and i32 %35, 65534
    br label %37
  
  ; <label>:37                                      ; preds = %31, %29
    %storemerge.in = phi i32 [ %36, %31 ], [ %30, %29 ]
    %38 = bitcast i8* %24 to i16*
    %storemerge = trunc i32 %storemerge.in to i16
    store i16 %storemerge, i16* %38, align 4, !tbaa !40
    ret void
  }
  
  declare i16* @gs_reloc_ref_ptr(i16*, %struct.gc_state_s*) #3
  
  declare void @gs_reloc_refs(i16*, i16*, %struct.gc_state_s*) #3
  
  declare void @alloc_open_chunk(%struct.gs_ref_memory_s*) #3
  
  declare void @file_restore(%struct.alloc_save_s*, %struct.gs_memory_s*) #3
  
  declare void @font_restore(%struct.alloc_save_s*) #3
  
  declare void @name_restore(%struct.alloc_save_s*) #3
  
  declare void @alloc_free_chunk(%struct.chunk_s*, %struct.gs_ref_memory_s*) #3
  
  declare void @alloc_link_chunk(%struct.chunk_s*, %struct.gs_ref_memory_s*) #3
  
  attributes #0 = { norecurse nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #2 = { argmemonly nounwind "target-cpu"="mips32" }
  attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #4 = { norecurse nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #5 = { nounwind }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}
  !1 = !{!2, !6, i64 24}
  !2 = !{!"gs_dual_memory_s", !3, i64 0, !4, i64 4, !6, i64 20, !6, i64 24, !3, i64 28, !6, i64 32, !6, i64 36}
  !3 = !{!"any pointer", !4, i64 0}
  !4 = !{!"omnipotent char", !5, i64 0}
  !5 = !{!"Simple C/C++ TBAA"}
  !6 = !{!"int", !4, i64 0}
  !7 = !{!2, !6, i64 32}
  !8 = !{!2, !6, i64 36}
  !9 = !{!10, !3, i64 12}
  !10 = !{!"_ssn", !3, i64 0, !3, i64 4, !3, i64 8, !3, i64 12}
  !11 = !{!10, !3, i64 8}
  !12 = !{!13, !6, i64 268}
  !13 = !{!"gs_ref_memory_s", !14, i64 0, !3, i64 80, !6, i64 84, !6, i64 88, !3, i64 92, !6, i64 96, !15, i64 100, !16, i64 124, !3, i64 128, !3, i64 132, !17, i64 136, !3, i64 228, !19, i64 232, !16, i64 240, !16, i64 244, !16, i64 248, !20, i64 252, !3, i64 264, !6, i64 268, !3, i64 272, !3, i64 276, !3, i64 280, !21, i64 284, !4, i64 292}
  !14 = !{!"gs_memory_procs_s", !3, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !3, i64 20, !3, i64 24, !3, i64 28, !3, i64 32, !3, i64 36, !3, i64 40, !3, i64 44, !3, i64 48, !3, i64 52, !3, i64 56, !3, i64 60, !3, i64 64, !3, i64 68, !3, i64 72, !3, i64 76}
  !15 = !{!"gs_memory_gc_status_s", !16, i64 0, !16, i64 4, !3, i64 8, !6, i64 12, !6, i64 16, !16, i64 20}
  !16 = !{!"long", !4, i64 0}
  !17 = !{!"chunk_s", !3, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !3, i64 20, !3, i64 24, !3, i64 28, !3, i64 32, !3, i64 36, !3, i64 40, !6, i64 44, !6, i64 48, !3, i64 52, !18, i64 56, !3, i64 60, !3, i64 64, !6, i64 68, !3, i64 72, !3, i64 76, !3, i64 80, !3, i64 84, !3, i64 88}
  !18 = !{!"short", !4, i64 0}
  !19 = !{!"chunk_locator_s", !3, i64 0, !3, i64 4}
  !20 = !{!"lost_", !16, i64 0, !16, i64 4, !16, i64 8}
  !21 = !{!"gs_memory_status_s", !16, i64 0, !16, i64 4}
  !22 = !{!13, !3, i64 228}
  !23 = !{!24, !3, i64 44}
  !24 = !{!"gs_memory_s", !14, i64 0}
  !25 = !{!13, !3, i64 80}
  !26 = !{!27, !16, i64 708}
  !27 = !{!"alloc_save_s", !13, i64 0, !3, i64 696, !6, i64 700, !6, i64 704, !16, i64 708, !3, i64 712}
  !28 = !{!27, !3, i64 712}
  !29 = !{!27, !6, i64 700}
  !30 = !{!27, !16, i64 240}
  !31 = !{!27, !16, i64 244}
  !32 = !{!13, !16, i64 244}
  !33 = !{!13, !3, i64 156}
  !34 = !{!13, !3, i64 144}
  !35 = !{!24, !3, i64 8}
  !36 = !{i64 0, i64 4, !37, i64 4, i64 4, !37, i64 8, i64 4, !37, i64 12, i64 4, !37, i64 16, i64 4, !37, i64 20, i64 4, !37, i64 24, i64 4, !37, i64 28, i64 4, !37, i64 32, i64 4, !37, i64 36, i64 4, !37, i64 40, i64 4, !37, i64 44, i64 4, !37, i64 48, i64 4, !37, i64 52, i64 4, !37, i64 56, i64 4, !37, i64 60, i64 4, !37, i64 64, i64 4, !37, i64 68, i64 4, !37, i64 72, i64 4, !37, i64 76, i64 4, !37, i64 80, i64 4, !37, i64 84, i64 4, !38, i64 88, i64 4, !38, i64 92, i64 4, !37, i64 96, i64 4, !38, i64 100, i64 4, !39, i64 104, i64 4, !39, i64 108, i64 4, !37, i64 112, i64 4, !38, i64 116, i64 4, !38, i64 120, i64 4, !39, i64 124, i64 4, !39, i64 128, i64 4, !37, i64 132, i64 4, !37, i64 136, i64 4, !37, i64 140, i64 4, !37, i64 144, i64 4, !37, i64 148, i64 4, !37, i64 152, i64 4, !37, i64 156, i64 4, !37, i64 160, i64 4, !37, i64 164, i64 4, !37, i64 168, i64 4, !37, i64 172, i64 4, !37, i64 176, i64 4, !37, i64 180, i64 4, !38, i64 184, i64 4, !38, i64 188, i64 4, !37, i64 192, i64 2, !40, i64 196, i64 4, !37, i64 200, i64 4, !37, i64 204, i64 4, !38, i64 208, i64 4, !37, i64 212, i64 4, !37, i64 216, i64 4, !37, i64 220, i64 4, !37, i64 224, i64 4, !37, i64 228, i64 4, !37, i64 232, i64 4, !37, i64 236, i64 4, !37, i64 240, i64 4, !39, i64 244, i64 4, !39, i64 248, i64 4, !39, i64 252, i64 4, !39, i64 256, i64 4, !39, i64 260, i64 4, !39, i64 264, i64 4, !37, i64 268, i64 4, !38, i64 272, i64 4, !37, i64 276, i64 4, !37, i64 280, i64 4, !37, i64 284, i64 4, !39, i64 288, i64 4, !39, i64 292, i64 404, !41}
  !37 = !{!3, !3, i64 0}
  !38 = !{!6, !6, i64 0}
  !39 = !{!16, !16, i64 0}
  !40 = !{!18, !18, i64 0}
  !41 = !{!4, !4, i64 0}
  !42 = !{!24, !3, i64 72}
  !43 = !{!13, !3, i64 168}
  !44 = !{!13, !3, i64 172}
  !45 = !{i64 0, i64 4, !37, i64 4, i64 4, !37, i64 8, i64 4, !37, i64 12, i64 4, !37, i64 16, i64 4, !37, i64 20, i64 4, !37, i64 24, i64 4, !37, i64 28, i64 4, !37, i64 32, i64 4, !37, i64 36, i64 4, !37, i64 40, i64 4, !37, i64 44, i64 4, !38, i64 48, i64 4, !38, i64 52, i64 4, !37, i64 56, i64 2, !40, i64 60, i64 4, !37, i64 64, i64 4, !37, i64 68, i64 4, !38, i64 72, i64 4, !37, i64 76, i64 4, !37, i64 80, i64 4, !37, i64 84, i64 4, !37, i64 88, i64 4, !37}
  !46 = !{!27, !3, i64 696}
  !47 = !{!2, !3, i64 0}
  !48 = !{!27, !6, i64 704}
  !49 = !{!13, !3, i64 276}
  !50 = !{!51, !3, i64 4}
  !51 = !{!"alloc_change_s", !3, i64 0, !3, i64 4, !52, i64 8, !18, i64 16}
  !52 = !{!"ref_s", !53, i64 0, !4, i64 4}
  !53 = !{!"tas_s", !18, i64 0, !18, i64 2}
  !54 = !{!52, !18, i64 0}
  !55 = !{!17, !6, i64 48}
  !56 = !{!17, !3, i64 4}
  !57 = !{!17, !3, i64 8}
  !58 = !{!59, !6, i64 4}
  !59 = !{!"obj_header_data_s", !4, i64 0, !6, i64 4, !4, i64 8}
  !60 = !{!13, !3, i64 272}
  !61 = !{!51, !3, i64 0}
  !62 = !{!51, !18, i64 16}
  !63 = !{!17, !3, i64 28}
  !64 = !{!65, !3, i64 4}
  !65 = !{!"name_s", !18, i64 0, !6, i64 2, !6, i64 2, !6, i64 2, !3, i64 4, !3, i64 8}
  !66 = !{!24, !3, i64 76}
  !67 = !{!68, !3, i64 24}
  !68 = !{!"gs_memory_struct_type_s", !6, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !3, i64 20, !3, i64 24}
  !69 = !{!13, !3, i64 132}
  !70 = !{!17, !3, i64 32}
  !71 = !{!13, !6, i64 96}
  !72 = !{!2, !6, i64 20}
  !73 = !{!10, !3, i64 4}
  !74 = !{!27, !3, i64 272}
  !75 = !{!13, !3, i64 128}
  !76 = !{!17, !3, i64 36}
  !77 = !{!17, !3, i64 40}
  !78 = !{!17, !6, i64 44}
  !79 = !{!13, !3, i64 236}
  !80 = !{!17, !3, i64 0}
  !81 = !{!17, !3, i64 12}
  !82 = !{!17, !3, i64 16}
  !83 = !{!17, !3, i64 20}
  !84 = !{!13, !16, i64 240}
  !85 = !{!13, !16, i64 248}
  !86 = !{!13, !16, i64 252}
  !87 = !{!13, !16, i64 256}
  !88 = !{!13, !16, i64 260}
  !89 = !{!68, !3, i64 16}
  !90 = !{!68, !3, i64 20}

...
---
name:            alloc_save_space
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
  - { id: 2, class: gpr32 }
  - { id: 3, class: gpr32 }
  - { id: 4, class: gpr32 }
  - { id: 5, class: gpr32 }
  - { id: 6, class: gpr32 }
  - { id: 7, class: gpr32 }
  - { id: 8, class: gpr32 }
  - { id: 9, class: gpr32 }
  - { id: 10, class: gpr32 }
  - { id: 11, class: gpr32 }
  - { id: 12, class: gpr32 }
  - { id: 13, class: gpr32 }
  - { id: 14, class: gpr32 }
  - { id: 15, class: gpr32 }
  - { id: 16, class: gpr32 }
  - { id: 17, class: gpr32 }
  - { id: 18, class: gpr32 }
  - { id: 19, class: gpr32 }
  - { id: 20, class: gpr32 }
  - { id: 21, class: gpr32 }
  - { id: 22, class: gpr32 }
  - { id: 23, class: gpr32 }
  - { id: 24, class: gpr32 }
  - { id: 25, class: gpr32 }
  - { id: 26, class: gpr32 }
  - { id: 27, class: gpr32 }
  - { id: 28, class: gpr32 }
  - { id: 29, class: gpr32 }
  - { id: 30, class: gpr32 }
  - { id: 31, class: gpr32 }
  - { id: 32, class: gpr32 }
  - { id: 33, class: gpr32 }
  - { id: 34, class: gpr32 }
  - { id: 35, class: gpr32 }
  - { id: 36, class: gpr32 }
  - { id: 37, class: gpr32 }
  - { id: 38, class: gpr32 }
  - { id: 39, class: gpr32 }
  - { id: 40, class: gpr32 }
  - { id: 41, class: gpr32 }
  - { id: 42, class: gpr32 }
  - { id: 43, class: gpr32 }
  - { id: 44, class: gpr32 }
  - { id: 45, class: gpr32 }
  - { id: 46, class: gpr32 }
  - { id: 47, class: gpr32 }
  - { id: 48, class: gpr32 }
  - { id: 49, class: gpr32 }
  - { id: 50, class: gpr32 }
  - { id: 51, class: gpr32 }
  - { id: 52, class: gpr32 }
  - { id: 53, class: gpr32 }
  - { id: 54, class: gpr32 }
  - { id: 55, class: gpr32 }
  - { id: 56, class: gpr32 }
  - { id: 57, class: gpr32 }
  - { id: 58, class: gpr32 }
  - { id: 59, class: gpr32 }
  - { id: 60, class: gpr32 }
  - { id: 61, class: gpr32 }
  - { id: 62, class: gpr32 }
  - { id: 63, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%7' }
  - { reg: '%a1', virtual-reg: '%8' }
  - { reg: '%t9' }
  - { reg: '%v0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    8
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
stack:           
  - { id: 0, name: save_mem, offset: 0, size: 696, alignment: 8 }
body:             |
  bb.0 (%ir-block.0, freq 26):
    successors: %bb.1(50), %bb.2(50)
    liveins: %a0, %a1, %t9, %v0
  
    %15 = ADDu %v0, %t9
    %8 = COPY %a1
    %7 = COPY %a0
    %10 = LW %7, 144, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.7, !tbaa !34)
    %11 = LW %7, 156, <0x37109f0> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.4, !tbaa !33)
    %12 = SUBu killed %11, killed %10
    %13 = SLTiu killed %12, 25
    %9 = ADDiu %zero, 0
    BNE killed %13, %zero, %bb.2, implicit-def dead %at
    B %bb.1, implicit-def dead %at
  
  bb.1 (%ir-block.11, freq 13):
    successors: %bb.8(37), %bb.2(62)
  
    %16 = LW %7, 80, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.12, !tbaa !25)
    %17 = LW %16, 8, <0x37109f0> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.14, !tbaa !35)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %18 = LW %15, target-flags(<unknown>) @.str.7, <0x3710a20> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %19 = ADDiu killed %18, target-flags(<unknown>) @.str.7
    %20 = LW %15, target-flags(<unknown>) @st_chunk, <0x370cf50> = !{!"unison-memory-partition", i32 3} :: (load 4 from got)
    %a0 = COPY %16
    %a1 = COPY %20
    %a2 = COPY %19
    %t9 = COPY %17
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %21 = COPY %v0
    %14 = ADDiu %zero, 0
    %1 = COPY %21
    BEQ %21, %zero, %bb.8, implicit-def dead %at
    B %bb.2, implicit-def dead %at
  
  bb.2 (%ir-block.19, freq 21):
    successors: %bb.4(37), %bb.3(62)
  
    %2 = PHI %9, %bb.0, %1, %bb.1
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %22 = LW %15, target-flags(<unknown>) $memcpy, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry $memcpy)
    %23 = ADDiu %zero, 696
    %24 = LEA_ADDiu %stack.0.save_mem, 0
    %a0 = COPY %24
    %a1 = COPY %7
    %a2 = COPY %23
    %gp = COPY %15
    %t9 = COPY %22
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %25 = LW %15, target-flags(<unknown>) @alloc_close_chunk, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @alloc_close_chunk)
    %a0 = COPY %7
    %gp = COPY %15
    %t9 = COPY %25
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %26 = ADDiu %7, 284
    %27 = LW %7, 72, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.23, !tbaa !42)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %a0 = COPY %7
    %a1 = COPY %26
    %t9 = COPY %27
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %28 = LW %15, target-flags(<unknown>) @ialloc_reset, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @ialloc_reset)
    %a0 = COPY %7
    %gp = COPY %15
    %t9 = COPY %28
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    SW %zero, %7, 168, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.26, !tbaa !43)
    SW %zero, %7, 172, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.27, !tbaa !44)
    BEQ %2, %zero, %bb.4, implicit-def dead %at
    B %bb.3, implicit-def dead %at
  
  bb.3 (%ir-block.29, freq 13):
    successors: %bb.5(100)
  
    %0 = ADDiu %7, 136
    %29 = LW %7, 156, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr5, !tbaa !33)
    %30 = LW %7, 144, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr2, !tbaa !34)
    %31 = LW %7, 228, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.32, !tbaa !22)
    ADJCALLSTACKDOWN 24, implicit-def dead %sp, implicit %sp
    %32 = COPY %sp
    SW killed %31, %32, 16, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into unknown)
    %33 = LW %15, target-flags(<unknown>) @alloc_init_chunk, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @alloc_init_chunk)
    %34 = ADDiu %zero, 1
    %a0 = COPY %0
    %a1 = COPY %30
    %a2 = COPY %29
    %a3 = COPY %34
    %gp = COPY %15
    %t9 = COPY %33
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 24, 0, implicit-def dead %sp, implicit %sp
    %35 = ADDiu %zero, 92
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %36 = LW %15, target-flags(<unknown>) $memcpy, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry $memcpy)
    %a0 = COPY %2
    %a1 = COPY %0
    %a2 = COPY %35
    %t9 = COPY %36
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    SW %2, %7, 228, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.32, !tbaa !22)
    B %bb.5, implicit-def dead %at
  
  bb.4 (%ir-block.36, freq 7):
    successors: %bb.5(100)
  
    SW %zero, %7, 228, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.37, !tbaa !22)
    SW %zero, %7, 156, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr8, !tbaa !33)
    SW %zero, %7, 144, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr11, !tbaa !34)
    %37 = ADDiu %zero, 0
  
  bb.5 (%ir-block.38, freq 21):
    successors: %bb.6(37), %bb.7(62)
  
    %3 = PHI %2, %bb.3, %37, %bb.4
    SW %3, %7, 132, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.40)
    SW %3, %7, 128, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.41)
    %38 = LW %7, 8, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.42, !tbaa !35)
    %39 = LW %15, target-flags(<unknown>) @st_alloc_save, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %40 = ADDiu killed %39, target-flags(<unknown>) @st_alloc_save
    %41 = LW %15, target-flags(<unknown>) @.str.8, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %42 = ADDiu killed %41, target-flags(<unknown>) @.str.8
    %a0 = COPY %7
    %a1 = COPY %40
    %a2 = COPY %42
    %t9 = COPY %38
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %43 = COPY %v0
    BNE %43, %zero, %bb.7, implicit-def dead %at
    B %bb.6, implicit-def dead %at
  
  bb.6 (%ir-block.46, freq 7):
    successors: %bb.8(100)
  
    %55 = LW %7, 80, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.49, !tbaa !25)
    %56 = LW %55, 44, <0x37109f0> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.51, !tbaa !23)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %57 = LW %15, target-flags(<unknown>) @.str.7, <0x3710a20> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %58 = ADDiu killed %57, target-flags(<unknown>) @.str.7
    %a0 = COPY %55
    %a1 = COPY %2
    %a2 = COPY %58
    %t9 = COPY %56
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %59 = ADDiu %zero, 696
    %60 = LEA_ADDiu %stack.0.save_mem, 0
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %61 = LW %15, target-flags(<unknown>) $memcpy, <0x370cf50> = !{!"unison-memory-partition", i32 3} :: (load 4 from call-entry $memcpy)
    %a0 = COPY %7
    %a1 = COPY %60
    %a2 = COPY %59
    %t9 = COPY %61
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %54 = ADDiu %zero, 0
    B %bb.8, implicit-def dead %at
  
  bb.7 (%ir-block.54, freq 13):
    successors: %bb.8(100)
  
    %4 = COPY %43
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %44 = LW %15, target-flags(<unknown>) $memcpy, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry $memcpy)
    %45 = ADDiu %zero, 696
    %46 = LEA_ADDiu %stack.0.save_mem, 0
    %a0 = COPY %4
    %a1 = COPY %46
    %a2 = COPY %45
    %t9 = COPY %44
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    SW %8, %4, 696, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.59, !tbaa !46)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %47 = LW %15, target-flags(<unknown>) @name_memory, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @name_memory)
    %gp = COPY %15
    %t9 = COPY %47
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %48 = COPY %v0
    %5 = COPY %4
    %49 = XOR %48, %7
    %50 = SLTiu killed %49, 1
    SW killed %50, %4, 700, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.64, !tbaa !29)
    %51 = LW %8, 0, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.65, !tbaa !47)
    %52 = XOR killed %51, %7
    %53 = SLTiu killed %52, 1
    SW killed %53, %4, 704, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.70, !tbaa !48)
    SW %4, %7, 276, <0x36c4ea0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.72, !tbaa !49)
  
  bb.8 (%ir-block.73, freq 26):
    liveouts: %v0
  
    %6 = PHI %14, %bb.1, %5, %bb.7, %54, %bb.6
    %v0 = COPY %6
    RetRA implicit %v0

...
