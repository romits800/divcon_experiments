--- |
  ; ModuleID = '/home/romi/didaktoriko/unison/unison-experiments/experiments/test-input/c/mediabench/mips_zip/build-mips/mesa/mesa.draw.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips--linux-gnu"
  
  %struct.gl_context = type { %struct.gl_shared_state*, %struct.api_function_table, %struct.api_function_table, %struct.api_function_table, %struct.gl_visual*, %struct.gl_frame_buffer*, %struct.dd_function_table, i8*, [16 x float], [16 x float], i8, i32, [32 x [16 x float]], [16 x float], i32, [32 x [16 x float]], [16 x float], i8, i32, [10 x [16 x float]], i32, i8, i8, i32, [16 x %struct.gl_attrib_node*], %struct.gl_accum_attrib, %struct.gl_colorbuffer_attrib, %struct.gl_current_attrib, %struct.gl_depthbuffer_attrib, %struct.gl_eval_attrib, %struct.gl_fog_attrib, %struct.gl_hint_attrib, %struct.gl_light_attrib, %struct.gl_line_attrib, %struct.gl_list_attrib, %struct.gl_pixel_attrib, %struct.gl_point_attrib, %struct.gl_polygon_attrib, [32 x i32], %struct.gl_scissor_attrib, %struct.gl_stencil_attrib, %struct.gl_texture_attrib, %struct.gl_transform_attrib, %struct.gl_viewport_attrib, i32, [16 x %struct.gl_attrib_node*], %struct.gl_array_attrib, %struct.gl_pixelstore_attrib, %struct.gl_pixelstore_attrib, %struct.gl_evaluators, %struct.gl_feedback, %struct.gl_selection, i32, i32, i32, i32, i32, i32, i32, i32, i8, float, float, float, i8, i8, i8, i8, i32, void (%struct.gl_context*, i32, i32)*, void (%struct.gl_context*, i32, i32, i32)*, void (%struct.gl_context*, i32, i32*, i32)*, void (%struct.gl_context*, i32, i32*, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)*, %struct.vertex_buffer*, %struct.pixel_buffer*, i8 }
  %struct.gl_shared_state = type { i32, [7000 x %union.node*], %struct.gl_texture_object* }
  %union.node = type opaque
  %struct.gl_texture_object = type { i32, i32, i32, float, [4 x i32], i32, i32, i32, i32, i32, [11 x %struct.gl_texture_image*], i8, %struct.gl_texture_object* }
  %struct.gl_texture_image = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8* }
  %struct.api_function_table = type { void (%struct.gl_context*, i32, float)*, void (%struct.gl_context*, i32, float)*, i8 (%struct.gl_context*, i32, i32*, i8*)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32, i32)*, void (%struct.gl_context*, i32, i32, float, float, float, float, %struct.gl_image*)*, void (%struct.gl_context*, float, float, float, float)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32, i32)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32, i32, i8*)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, float, float, float, float)*, void (%struct.gl_context*, float, float, float, float)*, void (%struct.gl_context*, double)*, void (%struct.gl_context*, float)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32, float*)*, void (%struct.gl_context*, float, float, float, float)*, void (%struct.gl_context*, i8, i8, i8, i8)*, void (%struct.gl_context*, i8, i8, i8, i8)*, void (%struct.gl_context*, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i8*)*, void (%struct.gl_context*, i32, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32, i32)*, void (%struct.gl_context*, i32, i32*)*, void (%struct.gl_context*, i32)*, {}*, void (%struct.gl_context*, double, double)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32, i32, i32)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32, i32, i32, i8*)*, void (%struct.gl_context*, i32, i32, i32, i32, i8*)*, {}*, void (%struct.gl_context*, i32, i8*)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*)*, void (%struct.gl_context*)*, void (%struct.gl_context*, float)*, void (%struct.gl_context*, float, float)*, void (%struct.gl_context*, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32, i32)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32, i32)*, void (%struct.gl_context*, i32, i32, float*)*, void (%struct.gl_context*)*, void (%struct.gl_context*)*, void (%struct.gl_context*, i32, float*)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, double, double, double, double, double, double)*, i32 (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32, i32*)*, void (%struct.gl_context*, i32, i8*)*, void (%struct.gl_context*, i32, double*)*, void (%struct.gl_context*, i32, double*)*, i32 (%struct.gl_context*)*, void (%struct.gl_context*, i32, float*)*, void (%struct.gl_context*, i32, i32*)*, i8* (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32, i32, float*)*, void (%struct.gl_context*, i32, i32, i32*)*, void (%struct.gl_context*, i32, i32, double*)*, void (%struct.gl_context*, i32, i32, float*)*, void (%struct.gl_context*, i32, i32, i32*)*, void (%struct.gl_context*, i32, i32, float*)*, void (%struct.gl_context*, i32, i32, i32*)*, void (%struct.gl_context*, i32, float*)*, void (%struct.gl_context*, i32, i32*)*, void (%struct.gl_context*, i32, i16*)*, void (%struct.gl_context*, i32, i8**)*, void (%struct.gl_context*, i8*)*, void (%struct.gl_context*, i32, i32*, float*)*, void (%struct.gl_context*, i32, i32, float*)*, void (%struct.gl_context*, i32, i32, i32*)*, void (%struct.gl_context*, i32, i32, double*)*, void (%struct.gl_context*, i32, i32, float*)*, void (%struct.gl_context*, i32, i32, i32*)*, void (%struct.gl_context*, i32, i32, i32, i32, i8*)*, void (%struct.gl_context*, i32, i32, i32, float*)*, void (%struct.gl_context*, i32, i32, i32, i32*)*, void (%struct.gl_context*, i32, i32, float*)*, void (%struct.gl_context*, i32, i32, i32*)*, void (%struct.gl_context*, i32, i32)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, float)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32, i32, i8*)*, void (%struct.gl_context*)*, void (%struct.gl_context*, i32, i32, i8*)*, i8 (%struct.gl_context*, i32)*, i8 (%struct.gl_context*, i32)*, i8 (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32, float*)*, void (%struct.gl_context*, i32, i32, float*, i32)*, void (%struct.gl_context*, i32, i16)*, void (%struct.gl_context*, float)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, float*)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32, float, float, i32, i32, float*, i8)*, void (%struct.gl_context*, i32, float, float, i32, i32, float, float, i32, i32, float*, i8)*, void (%struct.gl_context*, i32, float, float)*, void (%struct.gl_context*, i32, float, float, i32, float, float)*, void (%struct.gl_context*, i32, i32, float*)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, float*)*, void (%struct.gl_context*, i32, i32)*, void (%struct.gl_context*, float, float, float)*, void (%struct.gl_context*, float*)*, void (%struct.gl_context*, i32, i32, i8*)*, void (%struct.gl_context*, float)*, void (%struct.gl_context*, i32, i32, float*)*, void (%struct.gl_context*, i32, i32)*, void (%struct.gl_context*, i32, float)*, void (%struct.gl_context*, float, float)*, void (%struct.gl_context*, float)*, void (%struct.gl_context*, i32, i32)*, void (%struct.gl_context*, float, float)*, void (%struct.gl_context*, i8*)*, void (%struct.gl_context*)*, void (%struct.gl_context*)*, void (%struct.gl_context*)*, void (%struct.gl_context*)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, float, float, float, float)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32, i32, i32, i32, i32, i32, i8*)*, void (%struct.gl_context*, float, float, float, float)*, i32 (%struct.gl_context*, i32)*, void (%struct.gl_context*, float, float, float, float)*, void (%struct.gl_context*, float, float, float)*, void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32*)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32, i32, i32)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32, i32, i32)*, void (%struct.gl_context*, float, float, float, float)*, void (%struct.gl_context*, i32, i32, i32, i8*)*, void (%struct.gl_context*, i32, i32, float*)*, void (%struct.gl_context*, i32, i32, float*)*, void (%struct.gl_context*, i32, i32, i32, i32, i32, i32, i32, %struct.gl_image*)*, void (%struct.gl_context*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.gl_image*)*, void (%struct.gl_context*, i32, i32, i32, i32, i32, i32, %struct.gl_image*)*, void (%struct.gl_context*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.gl_image*)*, void (%struct.gl_context*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.gl_image*)*, void (%struct.gl_context*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.gl_image*)*, void (%struct.gl_context*, i32, i32, float*)*, void (%struct.gl_context*, float, float, float)*, void (%struct.gl_context*, float, float, float, float)*, void (%struct.gl_context*, i32, i32, i32, i8*)*, void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, float, float, float, float)*, void (%struct.gl_context*)* }
  %struct.gl_image = type { i32, i32, i32, i32, i32, i32, i8*, i8, i32 }
  %struct.gl_visual = type { i8, i8, float, float, float, float, i8, float, float, float, float, i32, i32, i32, i32, i8, i8 }
  %struct.gl_frame_buffer = type { %struct.gl_visual*, i32, i32, i16*, i8*, i16*, i8*, i8*, i8*, i32, i32, i32, i32 }
  %struct.dd_function_table = type { void (%struct.gl_context*)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i8, i8, i8, i8)*, void (%struct.gl_context*, i8, i32, i32, i32, i32)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i8, i8, i8, i8)*, i8 (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32*, i32*)*, void (%struct.gl_context*, i32, i32, i32, i8*, i8*, i8*, i8*, i8*)*, void (%struct.gl_context*, i32, i32, i32, i8*)*, void (%struct.gl_context*, i32, i32*, i32*, i8*, i8*, i8*, i8*, i8*)*, void (%struct.gl_context*, i32, i32*, i32*, i8*)*, void (%struct.gl_context*, i32, i32, i32, i32*, i8*)*, void (%struct.gl_context*, i32, i32, i32, i8*)*, void (%struct.gl_context*, i32, i32*, i32*, i32*, i8*)*, void (%struct.gl_context*, i32, i32*, i32*, i8*)*, void (%struct.gl_context*, i32, i32, i32, i32*)*, void (%struct.gl_context*, i32, i32, i32, i8*, i8*, i8*, i8*)*, void (%struct.gl_context*, i32, i32*, i32*, i32*, i8*)*, void (%struct.gl_context*, i32, i32*, i32*, i8*, i8*, i8*, i8*, i8*)*, void (%struct.gl_context*)*, void (%struct.gl_context*)*, i8 (%struct.gl_context*, i32)*, i8 (%struct.gl_context*, i8, i8, i8, i8)*, i8 (%struct.gl_context*, i32)*, {}*, void (%struct.gl_context*)*, void (%struct.gl_context*)*, void (%struct.gl_context*)*, i32 (%struct.gl_context*, i32, i32, i32, i16*, i8*)*, void (%struct.gl_context*, i32, i32*, i32*, i16*, i8*)*, void (%struct.gl_context*, i32, i32, i32, float*)*, void (%struct.gl_context*, i32, i32, i32, i16*)*, void (%struct.gl_context*, i32, i32)*, void (%struct.gl_context*, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)*, i8 (%struct.gl_context*, i32, i32, i32, i32, i32, i32, i8, i8*)*, i8 (%struct.gl_context*, i32, i32, float, float, float, float, %struct.gl_image*)*, void (%struct.gl_context*, i32)*, void (%struct.gl_context*)*, void (%struct.gl_context*, i32, float*)*, void (%struct.gl_context*, i32, i32, i32, i32, %struct.gl_texture_image*)*, void (%struct.gl_context*, i32, i32, i32, float*)*, void (%struct.gl_context*, i32, i32)*, void (%struct.gl_context*, i32)* }
  %struct.gl_accum_attrib = type { [4 x float] }
  %struct.gl_colorbuffer_attrib = type { i32, [4 x float], i32, i32, i8, i32, i8, i32, float, i8, i8, i32, i32, i32, [4 x float], i32, i8, i8, i8, i8 }
  %struct.gl_current_attrib = type { [4 x i32], i32, [3 x float], [4 x float], [4 x float], float, [4 x float], i32, [4 x float], i8, i8 }
  %struct.gl_depthbuffer_attrib = type { i32, float, i8, i8 }
  %struct.gl_eval_attrib = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, float, float, i32, i32, float, float, float, float }
  %struct.gl_fog_attrib = type { i8, [4 x float], float, float, float, float, i32 }
  %struct.gl_hint_attrib = type { i32, i32, i32, i32, i32 }
  %struct.gl_light_attrib = type { [8 x %struct.gl_light], %struct.gl_lightmodel, [2 x %struct.gl_material], i8, i32, i32, i32, i32, i8, %struct.gl_light*, i8, [4 x float] }
  %struct.gl_light = type { [4 x float], [4 x float], [4 x float], [4 x float], [4 x float], float, float, float, float, float, float, i8, %struct.gl_light*, [3 x float], [3 x float], [3 x float], [512 x [2 x float]], [3 x float], [3 x float], [3 x float], float, float }
  %struct.gl_lightmodel = type { [4 x float], i8, i8 }
  %struct.gl_material = type { [4 x float], [4 x float], [4 x float], [4 x float], float, float, float, float, [200 x float] }
  %struct.gl_line_attrib = type { i8, i8, i16, i32, float }
  %struct.gl_list_attrib = type { i32 }
  %struct.gl_pixel_attrib = type { i32, float, float, float, float, float, float, float, float, float, float, i32, i32, i8, i8, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i32], [256 x i32], [256 x float], [256 x float], [256 x float], [256 x float], [256 x float], [256 x float], [256 x float], [256 x float] }
  %struct.gl_point_attrib = type { i8, float }
  %struct.gl_polygon_attrib = type { i32, i32, i32, i8, i8, i32, i32, i8, i8, float, float, i8, i8, i8, i8 }
  %struct.gl_scissor_attrib = type { i8, i32, i32, i32, i32 }
  %struct.gl_stencil_attrib = type { i8, i32, i32, i32, i32, i8, i8, i8, i8 }
  %struct.gl_texture_attrib = type { i32, i32, [4 x float], i32, i32, i32, i32, i32, [4 x float], [4 x float], [4 x float], [4 x float], [4 x float], [4 x float], [4 x float], [4 x float], %struct.gl_texture_object*, %struct.gl_texture_object*, %struct.gl_texture_object*, %struct.gl_texture_object*, %struct.gl_texture_object*, %struct.gl_texture_object* }
  %struct.gl_transform_attrib = type { i32, [6 x [4 x float]], [6 x i8], i8, i8 }
  %struct.gl_viewport_attrib = type { i32, i32, i32, i32, float, float, float, float, float, float, float, float }
  %struct.gl_attrib_node = type { i32, i8*, %struct.gl_attrib_node* }
  %struct.gl_array_attrib = type { i32, i32, i32, i32, i8*, i8, i32, i32, i32, i8*, i8, i32, i32, i32, i32, i8*, i8, i32, i32, i32, i8*, i8, i32, i32, i32, i32, i8*, i8, i32, i32, i8*, i8 }
  %struct.gl_pixelstore_attrib = type { i32, i32, i32, i32, i32, i32, i8, i8 }
  %struct.gl_evaluators = type { %struct.gl_1d_map, %struct.gl_1d_map, %struct.gl_1d_map, %struct.gl_1d_map, %struct.gl_1d_map, %struct.gl_1d_map, %struct.gl_1d_map, %struct.gl_1d_map, %struct.gl_1d_map, %struct.gl_2d_map, %struct.gl_2d_map, %struct.gl_2d_map, %struct.gl_2d_map, %struct.gl_2d_map, %struct.gl_2d_map, %struct.gl_2d_map, %struct.gl_2d_map, %struct.gl_2d_map }
  %struct.gl_1d_map = type { i32, float, float, float*, i8 }
  %struct.gl_2d_map = type { i32, i32, float, float, float, float, float*, i8 }
  %struct.gl_feedback = type { i32, i32, float*, i32, i32 }
  %struct.gl_selection = type { i32*, i32, i32, i32, i32, [64 x i32], i8, float, float }
  %struct.vertex_buffer = type { [504 x [4 x float]], [504 x [4 x float]], [504 x [4 x float]], [504 x [3 x float]], [504 x [3 x float]], [504 x [4 x i32]], [504 x [4 x i32]], [4 x i32]*, [504 x i32], [504 x i32], i32*, [504 x i8], [504 x [4 x float]], [504 x i8], i8, i32, i32, i32, i8, [504 x i32], [504 x [2 x %struct.gl_material]], i8 }
  %struct.pixel_buffer = type { [3840 x i32], [3840 x i32], [3840 x i16], [3840 x i8], [3840 x i8], [3840 x i8], [3840 x i8], [3840 x i32], [3840 x float], [3840 x float], [3840 x float], [4 x i32], i32, i32, i8, i32 }
  
  @.str = private unnamed_addr constant [9 x i8] c"glVertex\00", align 1
  @.str.1 = private unnamed_addr constant [8 x i8] c"glBegin\00", align 1
  @.str.2 = private unnamed_addr constant [6 x i8] c"glEnd\00", align 1
  @switch.table.3 = private unnamed_addr constant [6 x i32] [i32 0, i32 1, i32 1, i32 0, i32 1, i32 0]
  
  ; Function Attrs: nounwind
  define void @gl_render_vb(%struct.gl_context* %ctx, i8 zeroext %alldone) #0 {
    %vlist = alloca [504 x i32], align 4
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %2 = load %struct.vertex_buffer*, %struct.vertex_buffer** %1, align 4, !tbaa !1
    %3 = bitcast [504 x i32]* %vlist to i8*
    call void @llvm.lifetime.start(i64 2016, i8* %3) #6
    %4 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 55
    %5 = load i32, i32* %4, align 4, !tbaa !37
    switch i32 %5, label %1466 [
      i32 0, label %6
      i32 1, label %13
      i32 3, label %41
      i32 2, label %185
      i32 4, label %339
      i32 5, label %388
      i32 6, label %671
      i32 7, label %839
      i32 8, label %895
      i32 9, label %1182
    ]
  
  ; <label>:6                                       ; preds = %0
    %7 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 69
    %8 = load void (%struct.gl_context*, i32, i32)*, void (%struct.gl_context*, i32, i32)** %7, align 4, !tbaa !38
    %9 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %10 = load i32, i32* %9, align 4, !tbaa !39
    %11 = add i32 %10, -1
    tail call void %8(%struct.gl_context* nonnull %ctx, i32 signext 0, i32 signext %11) #6
    store i32 0, i32* %9, align 4, !tbaa !39
    %12 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 14
    store i8 0, i8* %12, align 4, !tbaa !41
    br label %1467
  
  ; <label>:13                                      ; preds = %0
    %14 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 14
    %15 = load i8, i8* %14, align 4, !tbaa !41
    %16 = icmp eq i8 %15, 0
    %17 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %18 = load i32, i32* %17, align 4, !tbaa !39
    br i1 %16, label %.preheader, label %.preheader20
  
  .preheader20:                                     ; preds = %13
    %19 = icmp ugt i32 %18, 1
    br i1 %19, label %.lr.ph62, label %.loopexit
  
  .lr.ph62:                                         ; preds = %.preheader20
    br label %21
  
  .preheader:                                       ; preds = %13
    %20 = icmp ugt i32 %18, 1
    br i1 %20, label %.lr.ph, label %.loopexit
  
  .lr.ph:                                           ; preds = %.preheader
    br label %35
  
  ; <label>:21                                      ; preds = %31, %.lr.ph62
    %lsr.iv = phi i32 [ %lsr.iv.next, %31 ], [ 0, %.lr.ph62 ]
    %22 = bitcast %struct.vertex_buffer* %2 to i8*
    %23 = add i32 %lsr.iv, 1
    %uglygep1 = getelementptr i8, i8* %22, i32 %lsr.iv
    %scevgep2 = getelementptr i8, i8* %uglygep1, i32 65024
    %24 = load i8, i8* %scevgep2, align 1, !tbaa !42
    %uglygep = getelementptr i8, i8* %22, i32 %lsr.iv
    %scevgep = getelementptr i8, i8* %uglygep, i32 65025
    %25 = load i8, i8* %scevgep, align 1, !tbaa !42
    %26 = and i8 %25, %24
    %27 = icmp eq i8 %26, 0
    br i1 %27, label %30, label %28
  
  ; <label>:28                                      ; preds = %21
    %sunkaddr = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr71 = add i32 %sunkaddr, 55792
    %sunkaddr72 = inttoptr i32 %sunkaddr71 to void (%struct.gl_context*, i32, i32, i32)**
    %29 = load void (%struct.gl_context*, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32)** %sunkaddr72, align 4, !tbaa !43
    tail call void %29(%struct.gl_context* nonnull %ctx, i32 signext %lsr.iv, i32 signext %23, i32 signext %23) #6
    br label %31
  
  ; <label>:30                                      ; preds = %21
    tail call fastcc void @render_clipped_line(%struct.gl_context* nonnull %ctx, i32 signext %lsr.iv, i32 signext %23)
    br label %31
  
  ; <label>:31                                      ; preds = %30, %28
    %sunkaddr73 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr74 = add i32 %sunkaddr73, 55748
    %sunkaddr75 = inttoptr i32 %sunkaddr74 to i32*
    store i32 0, i32* %sunkaddr75, align 4, !tbaa !44
    %sunkaddr76 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr77 = add i32 %sunkaddr76, 65536
    %sunkaddr78 = inttoptr i32 %sunkaddr77 to i32*
    %32 = load i32, i32* %sunkaddr78, align 4, !tbaa !39
    %lsr.iv.next = add i32 %lsr.iv, 2
    %33 = add i32 %lsr.iv.next, 1
    %34 = icmp ult i32 %33, %32
    br i1 %34, label %21, label %.loopexit
  
  ; <label>:35                                      ; preds = %35, %.lr.ph
    %i1.060 = phi i32 [ 1, %.lr.ph ], [ %38, %35 ]
    %sunkaddr79 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr80 = add i32 %sunkaddr79, 55792
    %sunkaddr81 = inttoptr i32 %sunkaddr80 to void (%struct.gl_context*, i32, i32, i32)**
    %36 = load void (%struct.gl_context*, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32)** %sunkaddr81, align 4, !tbaa !43
    %37 = add nsw i32 %i1.060, -1
    tail call void %36(%struct.gl_context* nonnull %ctx, i32 signext %37, i32 signext %i1.060, i32 signext %i1.060) #6
    %sunkaddr82 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr83 = add i32 %sunkaddr82, 55748
    %sunkaddr84 = inttoptr i32 %sunkaddr83 to i32*
    store i32 0, i32* %sunkaddr84, align 4, !tbaa !44
    %38 = add i32 %i1.060, 2
    %sunkaddr85 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr86 = add i32 %sunkaddr85, 65536
    %sunkaddr87 = inttoptr i32 %sunkaddr86 to i32*
    %39 = load i32, i32* %sunkaddr87, align 4, !tbaa !39
    %40 = icmp ult i32 %38, %39
    br i1 %40, label %35, label %.loopexit
  
  .loopexit:                                        ; preds = %31, %35, %.preheader, %.preheader20
    %sunkaddr88 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr89 = add i32 %sunkaddr88, 65536
    %sunkaddr90 = inttoptr i32 %sunkaddr89 to i32*
    store i32 0, i32* %sunkaddr90, align 4, !tbaa !39
    %sunkaddr91 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr92 = add i32 %sunkaddr91, 65528
    %sunkaddr93 = inttoptr i32 %sunkaddr92 to i8*
    store i8 0, i8* %sunkaddr93, align 4, !tbaa !41
    br label %1467
  
  ; <label>:41                                      ; preds = %0
    %42 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 14
    %43 = load i8, i8* %42, align 4, !tbaa !41
    %44 = icmp eq i8 %43, 0
    %45 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %46 = load i32, i32* %45, align 4, !tbaa !39
    br i1 %44, label %.preheader22, label %.preheader24
  
  .preheader24:                                     ; preds = %41
    %47 = icmp ugt i32 %46, 1
    br i1 %47, label %.lr.ph66, label %.loopexit23
  
  .lr.ph66:                                         ; preds = %.preheader24
    br label %49
  
  .preheader22:                                     ; preds = %41
    %48 = icmp ugt i32 %46, 1
    br i1 %48, label %.lr.ph64, label %.loopexit23
  
  .lr.ph64:                                         ; preds = %.preheader22
    br label %63
  
  ; <label>:49                                      ; preds = %59, %.lr.ph66
    %lsr.iv3 = phi i32 [ %lsr.iv.next4, %59 ], [ 0, %.lr.ph66 ]
    %50 = bitcast %struct.vertex_buffer* %2 to i8*
    %51 = add i32 %lsr.iv3, 1
    %uglygep7 = getelementptr i8, i8* %50, i32 %lsr.iv3
    %scevgep8 = getelementptr i8, i8* %uglygep7, i32 65024
    %52 = load i8, i8* %scevgep8, align 1, !tbaa !42
    %uglygep5 = getelementptr i8, i8* %50, i32 %lsr.iv3
    %scevgep6 = getelementptr i8, i8* %uglygep5, i32 65025
    %53 = load i8, i8* %scevgep6, align 1, !tbaa !42
    %54 = and i8 %53, %52
    %55 = icmp eq i8 %54, 0
    br i1 %55, label %58, label %56
  
  ; <label>:56                                      ; preds = %49
    %sunkaddr94 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr95 = add i32 %sunkaddr94, 55792
    %sunkaddr96 = inttoptr i32 %sunkaddr95 to void (%struct.gl_context*, i32, i32, i32)**
    %57 = load void (%struct.gl_context*, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32)** %sunkaddr96, align 4, !tbaa !43
    tail call void %57(%struct.gl_context* %ctx, i32 signext %lsr.iv3, i32 signext %51, i32 signext %51) #6
    br label %59
  
  ; <label>:58                                      ; preds = %49
    tail call fastcc void @render_clipped_line(%struct.gl_context* %ctx, i32 signext %lsr.iv3, i32 signext %51)
    br label %59
  
  ; <label>:59                                      ; preds = %58, %56
    %sunkaddr97 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr98 = add i32 %sunkaddr97, 65536
    %sunkaddr99 = inttoptr i32 %sunkaddr98 to i32*
    %60 = load i32, i32* %sunkaddr99, align 4, !tbaa !39
    %lsr.iv.next4 = add i32 %lsr.iv3, 1
    %61 = add i32 %lsr.iv.next4, 1
    %62 = icmp ult i32 %61, %60
    br i1 %62, label %49, label %.loopexit23
  
  ; <label>:63                                      ; preds = %63, %.lr.ph64
    %i3.063 = phi i32 [ 1, %.lr.ph64 ], [ %66, %63 ]
    %sunkaddr100 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr101 = add i32 %sunkaddr100, 55792
    %sunkaddr102 = inttoptr i32 %sunkaddr101 to void (%struct.gl_context*, i32, i32, i32)**
    %64 = load void (%struct.gl_context*, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32)** %sunkaddr102, align 4, !tbaa !43
    %65 = add i32 %i3.063, -1
    tail call void %64(%struct.gl_context* nonnull %ctx, i32 signext %65, i32 signext %i3.063, i32 signext %i3.063) #6
    %66 = add i32 %i3.063, 1
    %sunkaddr103 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr104 = add i32 %sunkaddr103, 65536
    %sunkaddr105 = inttoptr i32 %sunkaddr104 to i32*
    %67 = load i32, i32* %sunkaddr105, align 4, !tbaa !39
    %68 = icmp ult i32 %66, %67
    br i1 %68, label %63, label %.loopexit23
  
  .loopexit23:                                      ; preds = %59, %63, %.preheader22, %.preheader24
    %69 = phi i32 [ %46, %.preheader24 ], [ %46, %.preheader22 ], [ %67, %63 ], [ %60, %59 ]
    %70 = icmp eq i8 %alldone, 0
    br i1 %70, label %71, label %1467
  
  ; <label>:71                                      ; preds = %.loopexit23
    %72 = add i32 %69, -1
    %73 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 %72
    %74 = bitcast [4 x float]* %73 to i32*
    %75 = load i32, i32* %74, align 4, !tbaa !45
    %76 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 0
    %77 = bitcast [4 x float]* %76 to i32*
    store i32 %75, i32* %77, align 4, !tbaa !45
    %78 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 %72, i32 1
    %79 = bitcast float* %78 to i32*
    %80 = load i32, i32* %79, align 4, !tbaa !45
    %81 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 0, i32 1
    %82 = bitcast float* %81 to i32*
    store i32 %80, i32* %82, align 4, !tbaa !45
    %83 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 %72, i32 2
    %84 = bitcast float* %83 to i32*
    %85 = load i32, i32* %84, align 4, !tbaa !45
    %86 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 0, i32 2
    %87 = bitcast float* %86 to i32*
    store i32 %85, i32* %87, align 4, !tbaa !45
    %88 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 %72, i32 3
    %89 = bitcast float* %88 to i32*
    %90 = load i32, i32* %89, align 4, !tbaa !45
    %91 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 0, i32 3
    %92 = bitcast float* %91 to i32*
    store i32 %90, i32* %92, align 4, !tbaa !45
    %93 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 %72
    %94 = bitcast [4 x float]* %93 to i32*
    %95 = load i32, i32* %94, align 4, !tbaa !45
    %96 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 0
    %97 = bitcast [4 x float]* %96 to i32*
    store i32 %95, i32* %97, align 4, !tbaa !45
    %98 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 %72, i32 1
    %99 = bitcast float* %98 to i32*
    %100 = load i32, i32* %99, align 4, !tbaa !45
    %101 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 0, i32 1
    %102 = bitcast float* %101 to i32*
    store i32 %100, i32* %102, align 4, !tbaa !45
    %103 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 %72, i32 2
    %104 = bitcast float* %103 to i32*
    %105 = load i32, i32* %104, align 4, !tbaa !45
    %106 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 0, i32 2
    %107 = bitcast float* %106 to i32*
    store i32 %105, i32* %107, align 4, !tbaa !45
    %108 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 %72, i32 3
    %109 = bitcast float* %108 to i32*
    %110 = load i32, i32* %109, align 4, !tbaa !45
    %111 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 0, i32 3
    %112 = bitcast float* %111 to i32*
    store i32 %110, i32* %112, align 4, !tbaa !45
    %113 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %72
    %114 = bitcast [3 x float]* %113 to i32*
    %115 = load i32, i32* %114, align 4, !tbaa !45
    %116 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 0
    %117 = bitcast [3 x float]* %116 to i32*
    store i32 %115, i32* %117, align 4, !tbaa !45
    %118 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %72, i32 1
    %119 = bitcast float* %118 to i32*
    %120 = load i32, i32* %119, align 4, !tbaa !45
    %121 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 0, i32 1
    %122 = bitcast float* %121 to i32*
    store i32 %120, i32* %122, align 4, !tbaa !45
    %123 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %72, i32 2
    %124 = bitcast float* %123 to i32*
    %125 = load i32, i32* %124, align 4, !tbaa !45
    %126 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 0, i32 2
    %127 = bitcast float* %126 to i32*
    store i32 %125, i32* %127, align 4, !tbaa !45
    %128 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %72, i32 0
    %129 = load i32, i32* %128, align 4, !tbaa !46
    %130 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 0, i32 0
    store i32 %129, i32* %130, align 4, !tbaa !46
    %131 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %72, i32 1
    %132 = load i32, i32* %131, align 4, !tbaa !46
    %133 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 0, i32 1
    store i32 %132, i32* %133, align 4, !tbaa !46
    %134 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %72, i32 2
    %135 = load i32, i32* %134, align 4, !tbaa !46
    %136 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 0, i32 2
    store i32 %135, i32* %136, align 4, !tbaa !46
    %137 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %72, i32 3
    %138 = load i32, i32* %137, align 4, !tbaa !46
    %139 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 0, i32 3
    store i32 %138, i32* %139, align 4, !tbaa !46
    %140 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 %72, i32 0
    %141 = load i32, i32* %140, align 4, !tbaa !46
    %142 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 0, i32 0
    store i32 %141, i32* %142, align 4, !tbaa !46
    %143 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 %72, i32 1
    %144 = load i32, i32* %143, align 4, !tbaa !46
    %145 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 0, i32 1
    store i32 %144, i32* %145, align 4, !tbaa !46
    %146 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 %72, i32 2
    %147 = load i32, i32* %146, align 4, !tbaa !46
    %148 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 0, i32 2
    store i32 %147, i32* %148, align 4, !tbaa !46
    %149 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 %72, i32 3
    %150 = load i32, i32* %149, align 4, !tbaa !46
    %151 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 0, i32 3
    store i32 %150, i32* %151, align 4, !tbaa !46
    %152 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %72
    %153 = bitcast [4 x float]* %152 to i32*
    %154 = load i32, i32* %153, align 4, !tbaa !45
    %155 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 0
    %156 = bitcast [4 x float]* %155 to i32*
    store i32 %154, i32* %156, align 4, !tbaa !45
    %157 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %72, i32 1
    %158 = bitcast float* %157 to i32*
    %159 = load i32, i32* %158, align 4, !tbaa !45
    %160 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 0, i32 1
    %161 = bitcast float* %160 to i32*
    store i32 %159, i32* %161, align 4, !tbaa !45
    %162 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %72, i32 2
    %163 = bitcast float* %162 to i32*
    %164 = load i32, i32* %163, align 4, !tbaa !45
    %165 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 0, i32 2
    %166 = bitcast float* %165 to i32*
    store i32 %164, i32* %166, align 4, !tbaa !45
    %167 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %72, i32 3
    %168 = bitcast float* %167 to i32*
    %169 = load i32, i32* %168, align 4, !tbaa !45
    %170 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 0, i32 3
    %171 = bitcast float* %170 to i32*
    store i32 %169, i32* %171, align 4, !tbaa !45
    %172 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 %72
    %173 = load i32, i32* %172, align 4, !tbaa !46
    %174 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 0
    store i32 %173, i32* %174, align 4, !tbaa !46
    %175 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 %72
    %176 = load i32, i32* %175, align 4, !tbaa !46
    %177 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 0
    store i32 %176, i32* %177, align 4, !tbaa !46
    %178 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 %72
    %179 = load i8, i8* %178, align 1, !tbaa !42
    %180 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 0
    store i8 %179, i8* %180, align 1, !tbaa !42
    %181 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 %72
    %182 = load i8, i8* %181, align 1, !tbaa !42
    %183 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 0
    store i8 %182, i8* %183, align 1, !tbaa !42
    %sunkaddr106 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr107 = add i32 %sunkaddr106, 65536
    %sunkaddr108 = inttoptr i32 %sunkaddr107 to i32*
    store i32 1, i32* %sunkaddr108, align 4, !tbaa !39
    %not. = icmp eq i8 %182, 0
    %184 = zext i1 %not. to i8
    %sunkaddr109 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr110 = add i32 %sunkaddr109, 65528
    %sunkaddr111 = inttoptr i32 %sunkaddr110 to i8*
    store i8 %184, i8* %sunkaddr111, align 4, !tbaa !41
    br label %1467
  
  ; <label>:185                                     ; preds = %0
    %186 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 15
    %187 = load i32, i32* %186, align 4, !tbaa !47
    %188 = icmp eq i32 %187, 0
    %. = select i1 %188, i32 1, i32 2
    %189 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %190 = load i32, i32* %189, align 4, !tbaa !39
    %191 = icmp ult i32 %., %190
    br i1 %191, label %.lr.ph68, label %._crit_edge
  
  .lr.ph68:                                         ; preds = %185
    br label %192
  
  ; <label>:192                                     ; preds = %202, %.lr.ph68
    %i4.067 = phi i32 [ %., %.lr.ph68 ], [ %203, %202 ]
    %193 = bitcast %struct.vertex_buffer* %2 to i8*
    %194 = add i32 %i4.067, -1
    %uglygep11 = getelementptr i8, i8* %193, i32 %i4.067
    %scevgep12 = getelementptr i8, i8* %uglygep11, i32 65023
    %195 = load i8, i8* %scevgep12, align 1, !tbaa !42
    %uglygep9 = getelementptr i8, i8* %193, i32 %i4.067
    %scevgep10 = getelementptr i8, i8* %uglygep9, i32 65024
    %196 = load i8, i8* %scevgep10, align 1, !tbaa !42
    %197 = and i8 %196, %195
    %198 = icmp eq i8 %197, 0
    br i1 %198, label %201, label %199
  
  ; <label>:199                                     ; preds = %192
    %sunkaddr112 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr113 = add i32 %sunkaddr112, 55792
    %sunkaddr114 = inttoptr i32 %sunkaddr113 to void (%struct.gl_context*, i32, i32, i32)**
    %200 = load void (%struct.gl_context*, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32)** %sunkaddr114, align 4, !tbaa !43
    tail call void %200(%struct.gl_context* %ctx, i32 signext %194, i32 signext %i4.067, i32 signext %i4.067) #6
    br label %202
  
  ; <label>:201                                     ; preds = %192
    tail call fastcc void @render_clipped_line(%struct.gl_context* %ctx, i32 signext %194, i32 signext %i4.067)
    br label %202
  
  ; <label>:202                                     ; preds = %201, %199
    %203 = add i32 %i4.067, 1
    %sunkaddr115 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr116 = add i32 %sunkaddr115, 65536
    %sunkaddr117 = inttoptr i32 %sunkaddr116 to i32*
    %204 = load i32, i32* %sunkaddr117, align 4, !tbaa !39
    %205 = icmp ult i32 %203, %204
    br i1 %205, label %192, label %._crit_edge
  
  ._crit_edge:                                      ; preds = %202, %185
    %.lcssa57 = phi i32 [ %190, %185 ], [ %204, %202 ]
    %206 = icmp eq i8 %alldone, 0
    br i1 %206, label %219, label %207
  
  ; <label>:207                                     ; preds = %._crit_edge
    %208 = add i32 %.lcssa57, -1
    %209 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 %208
    %210 = load i8, i8* %209, align 1, !tbaa !42
    %211 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 0
    %212 = load i8, i8* %211, align 4, !tbaa !42
    %213 = and i8 %212, %210
    %214 = icmp eq i8 %213, 0
    br i1 %214, label %218, label %215
  
  ; <label>:215                                     ; preds = %207
    %216 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 70
    %217 = load void (%struct.gl_context*, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32)** %216, align 4, !tbaa !43
    tail call void %217(%struct.gl_context* %ctx, i32 signext %208, i32 signext 0, i32 signext 0) #6
    br label %1467
  
  ; <label>:218                                     ; preds = %207
    tail call fastcc void @render_clipped_line(%struct.gl_context* %ctx, i32 signext %208, i32 signext 0)
    br label %1467
  
  ; <label>:219                                     ; preds = %._crit_edge
    %220 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479
    %221 = bitcast [4 x float]* %220 to i32*
    %222 = load i32, i32* %221, align 4, !tbaa !45
    %223 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1
    %224 = bitcast [4 x float]* %223 to i32*
    store i32 %222, i32* %224, align 4, !tbaa !45
    %225 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479, i32 1
    %226 = bitcast float* %225 to i32*
    %227 = load i32, i32* %226, align 4, !tbaa !45
    %228 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1, i32 1
    %229 = bitcast float* %228 to i32*
    store i32 %227, i32* %229, align 4, !tbaa !45
    %230 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479, i32 2
    %231 = bitcast float* %230 to i32*
    %232 = load i32, i32* %231, align 4, !tbaa !45
    %233 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1, i32 2
    %234 = bitcast float* %233 to i32*
    store i32 %232, i32* %234, align 4, !tbaa !45
    %235 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479, i32 3
    %236 = bitcast float* %235 to i32*
    %237 = load i32, i32* %236, align 4, !tbaa !45
    %238 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1, i32 3
    %239 = bitcast float* %238 to i32*
    store i32 %237, i32* %239, align 4, !tbaa !45
    %240 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479
    %241 = bitcast [4 x float]* %240 to i32*
    %242 = load i32, i32* %241, align 4, !tbaa !45
    %243 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1
    %244 = bitcast [4 x float]* %243 to i32*
    store i32 %242, i32* %244, align 4, !tbaa !45
    %245 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479, i32 1
    %246 = bitcast float* %245 to i32*
    %247 = load i32, i32* %246, align 4, !tbaa !45
    %248 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1, i32 1
    %249 = bitcast float* %248 to i32*
    store i32 %247, i32* %249, align 4, !tbaa !45
    %250 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479, i32 2
    %251 = bitcast float* %250 to i32*
    %252 = load i32, i32* %251, align 4, !tbaa !45
    %253 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1, i32 2
    %254 = bitcast float* %253 to i32*
    store i32 %252, i32* %254, align 4, !tbaa !45
    %255 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479, i32 3
    %256 = bitcast float* %255 to i32*
    %257 = load i32, i32* %256, align 4, !tbaa !45
    %258 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1, i32 3
    %259 = bitcast float* %258 to i32*
    store i32 %257, i32* %259, align 4, !tbaa !45
    %260 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 479
    %261 = bitcast [3 x float]* %260 to i32*
    %262 = load i32, i32* %261, align 4, !tbaa !45
    %263 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 1
    %264 = bitcast [3 x float]* %263 to i32*
    store i32 %262, i32* %264, align 4, !tbaa !45
    %265 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 479, i32 1
    %266 = bitcast float* %265 to i32*
    %267 = load i32, i32* %266, align 4, !tbaa !45
    %268 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 1, i32 1
    %269 = bitcast float* %268 to i32*
    store i32 %267, i32* %269, align 4, !tbaa !45
    %270 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 479, i32 2
    %271 = bitcast float* %270 to i32*
    %272 = load i32, i32* %271, align 4, !tbaa !45
    %273 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 1, i32 2
    %274 = bitcast float* %273 to i32*
    store i32 %272, i32* %274, align 4, !tbaa !45
    %275 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 0
    %276 = load i32, i32* %275, align 4, !tbaa !46
    %277 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 0
    store i32 %276, i32* %277, align 4, !tbaa !46
    %278 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 1
    %279 = load i32, i32* %278, align 4, !tbaa !46
    %280 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 1
    store i32 %279, i32* %280, align 4, !tbaa !46
    %281 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 2
    %282 = load i32, i32* %281, align 4, !tbaa !46
    %283 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 2
    store i32 %282, i32* %283, align 4, !tbaa !46
    %284 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 3
    %285 = load i32, i32* %284, align 4, !tbaa !46
    %286 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 3
    store i32 %285, i32* %286, align 4, !tbaa !46
    %287 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 0
    %288 = load i32, i32* %287, align 4, !tbaa !46
    %289 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 0
    store i32 %288, i32* %289, align 4, !tbaa !46
    %290 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 1
    %291 = load i32, i32* %290, align 4, !tbaa !46
    %292 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 1
    store i32 %291, i32* %292, align 4, !tbaa !46
    %293 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 2
    %294 = load i32, i32* %293, align 4, !tbaa !46
    %295 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 2
    store i32 %294, i32* %295, align 4, !tbaa !46
    %296 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 3
    %297 = load i32, i32* %296, align 4, !tbaa !46
    %298 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 3
    store i32 %297, i32* %298, align 4, !tbaa !46
    %299 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479
    %300 = bitcast [4 x float]* %299 to i32*
    %301 = load i32, i32* %300, align 4, !tbaa !45
    %302 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1
    %303 = bitcast [4 x float]* %302 to i32*
    store i32 %301, i32* %303, align 4, !tbaa !45
    %304 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479, i32 1
    %305 = bitcast float* %304 to i32*
    %306 = load i32, i32* %305, align 4, !tbaa !45
    %307 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1, i32 1
    %308 = bitcast float* %307 to i32*
    store i32 %306, i32* %308, align 4, !tbaa !45
    %309 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479, i32 2
    %310 = bitcast float* %309 to i32*
    %311 = load i32, i32* %310, align 4, !tbaa !45
    %312 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1, i32 2
    %313 = bitcast float* %312 to i32*
    store i32 %311, i32* %313, align 4, !tbaa !45
    %314 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479, i32 3
    %315 = bitcast float* %314 to i32*
    %316 = load i32, i32* %315, align 4, !tbaa !45
    %317 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1, i32 3
    %318 = bitcast float* %317 to i32*
    store i32 %316, i32* %318, align 4, !tbaa !45
    %319 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 479
    %320 = load i32, i32* %319, align 4, !tbaa !46
    %321 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 1
    store i32 %320, i32* %321, align 4, !tbaa !46
    %322 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 479
    %323 = load i32, i32* %322, align 4, !tbaa !46
    %324 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 1
    store i32 %323, i32* %324, align 4, !tbaa !46
    %325 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 479
    %326 = load i8, i8* %325, align 1, !tbaa !42
    %327 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 1
    store i8 %326, i8* %327, align 1, !tbaa !42
    %328 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 479
    %329 = load i8, i8* %328, align 1, !tbaa !42
    %330 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 1
    store i8 %329, i8* %330, align 1, !tbaa !42
    %sunkaddr118 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr119 = add i32 %sunkaddr118, 65536
    %sunkaddr120 = inttoptr i32 %sunkaddr119 to i32*
    store i32 2, i32* %sunkaddr120, align 4, !tbaa !39
    %331 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 0
    %332 = bitcast i8* %331 to i16*
    %333 = load i16, i16* %332, align 4
    %334 = icmp ult i16 %333, 256
    %335 = trunc i16 %333 to i8
    %336 = icmp eq i8 %335, 0
    %phitmp19 = zext i1 %336 to i8
    %337 = select i1 %334, i8 1, i8 %phitmp19
    %338 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 14
    store i8 %337, i8* %338, align 4, !tbaa !41
    br label %1467
  
  ; <label>:339                                     ; preds = %0
    %340 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 14
    %341 = load i8, i8* %340, align 4, !tbaa !41
    %342 = icmp eq i8 %341, 0
    br i1 %342, label %368, label %.preheader30
  
  .preheader30:                                     ; preds = %339
    %343 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %344 = load i32, i32* %343, align 4, !tbaa !39
    %345 = icmp ugt i32 %344, 2
    br i1 %345, label %.lr.ph75, label %.loopexit27
  
  .lr.ph75:                                         ; preds = %.preheader30
    br label %346
  
  ; <label>:346                                     ; preds = %364, %.lr.ph75
    %lsr.iv13 = phi i32 [ %lsr.iv.next14, %364 ], [ 0, %.lr.ph75 ]
    %347 = bitcast %struct.vertex_buffer* %2 to i8*
    %348 = add i32 %lsr.iv13, 2
    %uglygep19 = getelementptr i8, i8* %347, i32 %lsr.iv13
    %scevgep20 = getelementptr i8, i8* %uglygep19, i32 65024
    %349 = load i8, i8* %scevgep20, align 1, !tbaa !42
    %350 = add i32 %lsr.iv13, 1
    %uglygep17 = getelementptr i8, i8* %347, i32 %lsr.iv13
    %scevgep18 = getelementptr i8, i8* %uglygep17, i32 65025
    %351 = load i8, i8* %scevgep18, align 1, !tbaa !42
    %352 = and i8 %351, %349
    %uglygep15 = getelementptr i8, i8* %347, i32 %lsr.iv13
    %scevgep16 = getelementptr i8, i8* %uglygep15, i32 65026
    %353 = load i8, i8* %scevgep16, align 1, !tbaa !42
    %354 = and i8 %352, %353
    %355 = icmp eq i8 %354, 0
    br i1 %355, label %362, label %356
  
  ; <label>:356                                     ; preds = %346
    %sunkaddr121 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr122 = add i32 %sunkaddr121, 55764
    %sunkaddr123 = inttoptr i32 %sunkaddr122 to i8*
    %357 = load i8, i8* %sunkaddr123, align 4, !tbaa !48
    %358 = icmp eq i8 %357, 0
    br i1 %358, label %361, label %359
  
  ; <label>:359                                     ; preds = %356
    %sunkaddr124 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr125 = add i32 %sunkaddr124, 55804
    %sunkaddr126 = inttoptr i32 %sunkaddr125 to void (%struct.gl_context*, i32, i32, i32, i32)**
    %360 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %sunkaddr126, align 4, !tbaa !49
    call void %360(%struct.gl_context* nonnull %ctx, i32 signext %lsr.iv13, i32 signext %350, i32 signext %348, i32 signext %348) #6
    br label %364
  
  ; <label>:361                                     ; preds = %356
    call fastcc void @render_triangle(%struct.gl_context* nonnull %ctx, i32 signext %lsr.iv13, i32 signext %350, i32 signext %348, i32 signext %348, i32 signext 0)
    br label %364
  
  ; <label>:362                                     ; preds = %346
    %363 = bitcast [504 x i32]* %vlist to i32*
    store i32 %lsr.iv13, i32* %363, align 4, !tbaa !46
    %sunkaddr127 = ptrtoint [504 x i32]* %vlist to i32
    %sunkaddr128 = add i32 %sunkaddr127, 4
    %sunkaddr129 = inttoptr i32 %sunkaddr128 to i32*
    store i32 %350, i32* %sunkaddr129, align 4, !tbaa !46
    %sunkaddr130 = ptrtoint [504 x i32]* %vlist to i32
    %sunkaddr131 = add i32 %sunkaddr130, 8
    %sunkaddr132 = inttoptr i32 %sunkaddr131 to i32*
    store i32 %348, i32* %sunkaddr132, align 4, !tbaa !46
    call fastcc void @render_clipped_polygon(%struct.gl_context* %ctx, i32 signext 3, i32* %363, i32 signext 0)
    br label %364
  
  ; <label>:364                                     ; preds = %362, %361, %359
    %365 = load i32, i32* %343, align 4, !tbaa !39
    %lsr.iv.next14 = add i32 %lsr.iv13, 3
    %366 = add i32 %lsr.iv.next14, 2
    %367 = icmp ult i32 %366, %365
    br i1 %367, label %346, label %.loopexit27
  
  ; <label>:368                                     ; preds = %339
    %369 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 60
    %370 = load i8, i8* %369, align 4, !tbaa !48
    %371 = icmp eq i8 %370, 0
    %372 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %373 = load i32, i32* %372, align 4, !tbaa !39
    br i1 %371, label %.preheader26, label %.preheader28
  
  .preheader28:                                     ; preds = %368
    %374 = icmp ugt i32 %373, 2
    br i1 %374, label %.lr.ph73, label %.loopexit27
  
  .lr.ph73:                                         ; preds = %.preheader28
    br label %376
  
  .preheader26:                                     ; preds = %368
    %375 = icmp ugt i32 %373, 2
    br i1 %375, label %.lr.ph71, label %.loopexit27
  
  ; <label>:376                                     ; preds = %376, %.lr.ph73
    %i6.072 = phi i32 [ 2, %.lr.ph73 ], [ %380, %376 ]
    %sunkaddr133 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr134 = add i32 %sunkaddr133, 55804
    %sunkaddr135 = inttoptr i32 %sunkaddr134 to void (%struct.gl_context*, i32, i32, i32, i32)**
    %377 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %sunkaddr135, align 4, !tbaa !49
    %378 = add i32 %i6.072, -2
    %379 = add i32 %i6.072, -1
    tail call void %377(%struct.gl_context* nonnull %ctx, i32 signext %378, i32 signext %379, i32 signext %i6.072, i32 signext %i6.072) #6
    %380 = add i32 %i6.072, 3
    %381 = load i32, i32* %372, align 4, !tbaa !39
    %382 = icmp ult i32 %380, %381
    br i1 %382, label %376, label %.loopexit27
  
  .lr.ph71:                                         ; preds = %.preheader26, %.lr.ph71
    %i6.170 = phi i32 [ %385, %.lr.ph71 ], [ 2, %.preheader26 ]
    %383 = add i32 %i6.170, -2
    %384 = add i32 %i6.170, -1
    tail call fastcc void @render_triangle(%struct.gl_context* %ctx, i32 signext %383, i32 signext %384, i32 signext %i6.170, i32 signext %i6.170, i32 signext 0)
    %385 = add i32 %i6.170, 3
    %386 = load i32, i32* %372, align 4, !tbaa !39
    %387 = icmp ult i32 %385, %386
    br i1 %387, label %.lr.ph71, label %.loopexit27
  
  .loopexit27:                                      ; preds = %364, %376, %.lr.ph71, %.preheader26, %.preheader28, %.preheader30
    %.pre-phi = phi i32* [ %343, %.preheader30 ], [ %372, %.preheader28 ], [ %372, %.preheader26 ], [ %372, %.lr.ph71 ], [ %372, %376 ], [ %343, %364 ]
    store i32 0, i32* %.pre-phi, align 4, !tbaa !39
    %sunkaddr136 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr137 = add i32 %sunkaddr136, 65528
    %sunkaddr138 = inttoptr i32 %sunkaddr137 to i8*
    store i8 0, i8* %sunkaddr138, align 4, !tbaa !41
    br label %1467
  
  ; <label>:388                                     ; preds = %0
    %389 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 14
    %390 = load i8, i8* %389, align 4, !tbaa !41
    %391 = icmp eq i8 %390, 0
    br i1 %391, label %419, label %.preheader36
  
  .preheader36:                                     ; preds = %388
    %392 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %393 = load i32, i32* %392, align 4, !tbaa !39
    %394 = icmp ugt i32 %393, 2
    br i1 %394, label %.lr.ph81, label %.loopexit33
  
  .lr.ph81:                                         ; preds = %.preheader36
    br label %395
  
  ; <label>:395                                     ; preds = %415, %.lr.ph81
    %lsr.iv21 = phi i32 [ %lsr.iv.next22, %415 ], [ 0, %.lr.ph81 ]
    %396 = bitcast %struct.vertex_buffer* %2 to i8*
    %397 = add i32 %lsr.iv21, 2
    %uglygep27 = getelementptr i8, i8* %396, i32 %lsr.iv21
    %scevgep28 = getelementptr i8, i8* %uglygep27, i32 65024
    %398 = load i8, i8* %scevgep28, align 1, !tbaa !42
    %399 = add i32 %lsr.iv21, 1
    %uglygep25 = getelementptr i8, i8* %396, i32 %lsr.iv21
    %scevgep26 = getelementptr i8, i8* %uglygep25, i32 65025
    %400 = load i8, i8* %scevgep26, align 1, !tbaa !42
    %401 = and i8 %400, %398
    %uglygep23 = getelementptr i8, i8* %396, i32 %lsr.iv21
    %scevgep24 = getelementptr i8, i8* %uglygep23, i32 65026
    %402 = load i8, i8* %scevgep24, align 1, !tbaa !42
    %403 = and i8 %401, %402
    %404 = icmp eq i8 %403, 0
    br i1 %404, label %412, label %405
  
  ; <label>:405                                     ; preds = %395
    %sunkaddr139 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr140 = add i32 %sunkaddr139, 55764
    %sunkaddr141 = inttoptr i32 %sunkaddr140 to i8*
    %406 = load i8, i8* %sunkaddr141, align 4, !tbaa !48
    %407 = icmp eq i8 %406, 0
    br i1 %407, label %410, label %408
  
  ; <label>:408                                     ; preds = %405
    %sunkaddr142 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr143 = add i32 %sunkaddr142, 55804
    %sunkaddr144 = inttoptr i32 %sunkaddr143 to void (%struct.gl_context*, i32, i32, i32, i32)**
    %409 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %sunkaddr144, align 4, !tbaa !49
    call void %409(%struct.gl_context* nonnull %ctx, i32 signext %lsr.iv21, i32 signext %399, i32 signext %397, i32 signext %397) #6
    br label %415
  
  ; <label>:410                                     ; preds = %405
    %411 = and i32 %397, 1
    call fastcc void @render_triangle(%struct.gl_context* nonnull %ctx, i32 signext %lsr.iv21, i32 signext %399, i32 signext %397, i32 signext %397, i32 signext %411)
    br label %415
  
  ; <label>:412                                     ; preds = %395
    %413 = bitcast [504 x i32]* %vlist to i32*
    store i32 %lsr.iv21, i32* %413, align 4, !tbaa !46
    %sunkaddr145 = ptrtoint [504 x i32]* %vlist to i32
    %sunkaddr146 = add i32 %sunkaddr145, 4
    %sunkaddr147 = inttoptr i32 %sunkaddr146 to i32*
    store i32 %399, i32* %sunkaddr147, align 4, !tbaa !46
    %sunkaddr148 = ptrtoint [504 x i32]* %vlist to i32
    %sunkaddr149 = add i32 %sunkaddr148, 8
    %sunkaddr150 = inttoptr i32 %sunkaddr149 to i32*
    store i32 %397, i32* %sunkaddr150, align 4, !tbaa !46
    %414 = and i32 %397, 1
    call fastcc void @render_clipped_polygon(%struct.gl_context* %ctx, i32 signext 3, i32* %413, i32 signext %414)
    br label %415
  
  ; <label>:415                                     ; preds = %412, %410, %408
    %sunkaddr151 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr152 = add i32 %sunkaddr151, 65536
    %sunkaddr153 = inttoptr i32 %sunkaddr152 to i32*
    %416 = load i32, i32* %sunkaddr153, align 4, !tbaa !39
    %lsr.iv.next22 = add i32 %lsr.iv21, 1
    %417 = add i32 %lsr.iv.next22, 2
    %418 = icmp ult i32 %417, %416
    br i1 %418, label %395, label %.loopexit33
  
  ; <label>:419                                     ; preds = %388
    %420 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 60
    %421 = load i8, i8* %420, align 4, !tbaa !48
    %422 = icmp eq i8 %421, 0
    %423 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %424 = load i32, i32* %423, align 4, !tbaa !39
    br i1 %422, label %.preheader32, label %.preheader34
  
  .preheader34:                                     ; preds = %419
    %425 = icmp ugt i32 %424, 2
    br i1 %425, label %.lr.ph79, label %.loopexit33
  
  .lr.ph79:                                         ; preds = %.preheader34
    br label %427
  
  .preheader32:                                     ; preds = %419
    %426 = icmp ugt i32 %424, 2
    br i1 %426, label %.lr.ph77, label %.loopexit33
  
  ; <label>:427                                     ; preds = %427, %.lr.ph79
    %i8.078 = phi i32 [ 2, %.lr.ph79 ], [ %431, %427 ]
    %sunkaddr154 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr155 = add i32 %sunkaddr154, 55804
    %sunkaddr156 = inttoptr i32 %sunkaddr155 to void (%struct.gl_context*, i32, i32, i32, i32)**
    %428 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %sunkaddr156, align 4, !tbaa !49
    %429 = add i32 %i8.078, -2
    %430 = add i32 %i8.078, -1
    tail call void %428(%struct.gl_context* nonnull %ctx, i32 signext %429, i32 signext %430, i32 signext %i8.078, i32 signext %i8.078) #6
    %431 = add i32 %i8.078, 1
    %sunkaddr157 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr158 = add i32 %sunkaddr157, 65536
    %sunkaddr159 = inttoptr i32 %sunkaddr158 to i32*
    %432 = load i32, i32* %sunkaddr159, align 4, !tbaa !39
    %433 = icmp ult i32 %431, %432
    br i1 %433, label %427, label %.loopexit33
  
  .lr.ph77:                                         ; preds = %.preheader32, %.lr.ph77
    %i8.176 = phi i32 [ %437, %.lr.ph77 ], [ 2, %.preheader32 ]
    %434 = add i32 %i8.176, -2
    %435 = add i32 %i8.176, -1
    %436 = and i32 %i8.176, 1
    tail call fastcc void @render_triangle(%struct.gl_context* %ctx, i32 signext %434, i32 signext %435, i32 signext %i8.176, i32 signext %i8.176, i32 signext %436)
    %437 = add i32 %i8.176, 1
    %sunkaddr160 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr161 = add i32 %sunkaddr160, 65536
    %sunkaddr162 = inttoptr i32 %sunkaddr161 to i32*
    %438 = load i32, i32* %sunkaddr162, align 4, !tbaa !39
    %439 = icmp ult i32 %437, %438
    br i1 %439, label %.lr.ph77, label %.loopexit33
  
  .loopexit33:                                      ; preds = %415, %427, %.lr.ph77, %.preheader32, %.preheader34, %.preheader36
    %440 = icmp eq i8 %alldone, 0
    br i1 %440, label %441, label %1467
  
  ; <label>:441                                     ; preds = %.loopexit33
    %442 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 478
    %443 = bitcast [4 x float]* %442 to i32*
    %444 = load i32, i32* %443, align 4, !tbaa !45
    %445 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 0
    %446 = bitcast [4 x float]* %445 to i32*
    store i32 %444, i32* %446, align 4, !tbaa !45
    %447 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 478, i32 1
    %448 = bitcast float* %447 to i32*
    %449 = load i32, i32* %448, align 4, !tbaa !45
    %450 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 0, i32 1
    %451 = bitcast float* %450 to i32*
    store i32 %449, i32* %451, align 4, !tbaa !45
    %452 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 478, i32 2
    %453 = bitcast float* %452 to i32*
    %454 = load i32, i32* %453, align 4, !tbaa !45
    %455 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 0, i32 2
    %456 = bitcast float* %455 to i32*
    store i32 %454, i32* %456, align 4, !tbaa !45
    %457 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 478, i32 3
    %458 = bitcast float* %457 to i32*
    %459 = load i32, i32* %458, align 4, !tbaa !45
    %460 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 0, i32 3
    %461 = bitcast float* %460 to i32*
    store i32 %459, i32* %461, align 4, !tbaa !45
    %462 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 478
    %463 = bitcast [4 x float]* %462 to i32*
    %464 = load i32, i32* %463, align 4, !tbaa !45
    %465 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 0
    %466 = bitcast [4 x float]* %465 to i32*
    store i32 %464, i32* %466, align 4, !tbaa !45
    %467 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 478, i32 1
    %468 = bitcast float* %467 to i32*
    %469 = load i32, i32* %468, align 4, !tbaa !45
    %470 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 0, i32 1
    %471 = bitcast float* %470 to i32*
    store i32 %469, i32* %471, align 4, !tbaa !45
    %472 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 478, i32 2
    %473 = bitcast float* %472 to i32*
    %474 = load i32, i32* %473, align 4, !tbaa !45
    %475 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 0, i32 2
    %476 = bitcast float* %475 to i32*
    store i32 %474, i32* %476, align 4, !tbaa !45
    %477 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 478, i32 3
    %478 = bitcast float* %477 to i32*
    %479 = load i32, i32* %478, align 4, !tbaa !45
    %480 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 0, i32 3
    %481 = bitcast float* %480 to i32*
    store i32 %479, i32* %481, align 4, !tbaa !45
    %482 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 478
    %483 = bitcast [3 x float]* %482 to i32*
    %484 = load i32, i32* %483, align 4, !tbaa !45
    %485 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 0
    %486 = bitcast [3 x float]* %485 to i32*
    store i32 %484, i32* %486, align 4, !tbaa !45
    %487 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 478, i32 1
    %488 = bitcast float* %487 to i32*
    %489 = load i32, i32* %488, align 4, !tbaa !45
    %490 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 0, i32 1
    %491 = bitcast float* %490 to i32*
    store i32 %489, i32* %491, align 4, !tbaa !45
    %492 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 478, i32 2
    %493 = bitcast float* %492 to i32*
    %494 = load i32, i32* %493, align 4, !tbaa !45
    %495 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 0, i32 2
    %496 = bitcast float* %495 to i32*
    store i32 %494, i32* %496, align 4, !tbaa !45
    %497 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 478, i32 0
    %498 = load i32, i32* %497, align 4, !tbaa !46
    %499 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 0, i32 0
    store i32 %498, i32* %499, align 4, !tbaa !46
    %500 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 478, i32 1
    %501 = load i32, i32* %500, align 4, !tbaa !46
    %502 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 0, i32 1
    store i32 %501, i32* %502, align 4, !tbaa !46
    %503 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 478, i32 2
    %504 = load i32, i32* %503, align 4, !tbaa !46
    %505 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 0, i32 2
    store i32 %504, i32* %505, align 4, !tbaa !46
    %506 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 478, i32 3
    %507 = load i32, i32* %506, align 4, !tbaa !46
    %508 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 0, i32 3
    store i32 %507, i32* %508, align 4, !tbaa !46
    %509 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 478, i32 0
    %510 = load i32, i32* %509, align 4, !tbaa !46
    %511 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 0, i32 0
    store i32 %510, i32* %511, align 4, !tbaa !46
    %512 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 478, i32 1
    %513 = load i32, i32* %512, align 4, !tbaa !46
    %514 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 0, i32 1
    store i32 %513, i32* %514, align 4, !tbaa !46
    %515 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 478, i32 2
    %516 = load i32, i32* %515, align 4, !tbaa !46
    %517 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 0, i32 2
    store i32 %516, i32* %517, align 4, !tbaa !46
    %518 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 478, i32 3
    %519 = load i32, i32* %518, align 4, !tbaa !46
    %520 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 0, i32 3
    store i32 %519, i32* %520, align 4, !tbaa !46
    %521 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 478
    %522 = bitcast [4 x float]* %521 to i32*
    %523 = load i32, i32* %522, align 4, !tbaa !45
    %524 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 0
    %525 = bitcast [4 x float]* %524 to i32*
    store i32 %523, i32* %525, align 4, !tbaa !45
    %526 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 478, i32 1
    %527 = bitcast float* %526 to i32*
    %528 = load i32, i32* %527, align 4, !tbaa !45
    %529 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 0, i32 1
    %530 = bitcast float* %529 to i32*
    store i32 %528, i32* %530, align 4, !tbaa !45
    %531 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 478, i32 2
    %532 = bitcast float* %531 to i32*
    %533 = load i32, i32* %532, align 4, !tbaa !45
    %534 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 0, i32 2
    %535 = bitcast float* %534 to i32*
    store i32 %533, i32* %535, align 4, !tbaa !45
    %536 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 478, i32 3
    %537 = bitcast float* %536 to i32*
    %538 = load i32, i32* %537, align 4, !tbaa !45
    %539 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 0, i32 3
    %540 = bitcast float* %539 to i32*
    store i32 %538, i32* %540, align 4, !tbaa !45
    %541 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 478
    %542 = load i32, i32* %541, align 4, !tbaa !46
    %543 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 0
    store i32 %542, i32* %543, align 4, !tbaa !46
    %544 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 478
    %545 = load i32, i32* %544, align 4, !tbaa !46
    %546 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 0
    store i32 %545, i32* %546, align 4, !tbaa !46
    %547 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 478
    %548 = load i8, i8* %547, align 1, !tbaa !42
    %549 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 0
    store i8 %548, i8* %549, align 1, !tbaa !42
    %550 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 478
    %551 = load i8, i8* %550, align 1, !tbaa !42
    %552 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 0
    store i8 %551, i8* %552, align 1, !tbaa !42
    %553 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479
    %554 = bitcast [4 x float]* %553 to i32*
    %555 = load i32, i32* %554, align 4, !tbaa !45
    %556 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1
    %557 = bitcast [4 x float]* %556 to i32*
    store i32 %555, i32* %557, align 4, !tbaa !45
    %558 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479, i32 1
    %559 = bitcast float* %558 to i32*
    %560 = load i32, i32* %559, align 4, !tbaa !45
    %561 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1, i32 1
    %562 = bitcast float* %561 to i32*
    store i32 %560, i32* %562, align 4, !tbaa !45
    %563 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479, i32 2
    %564 = bitcast float* %563 to i32*
    %565 = load i32, i32* %564, align 4, !tbaa !45
    %566 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1, i32 2
    %567 = bitcast float* %566 to i32*
    store i32 %565, i32* %567, align 4, !tbaa !45
    %568 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479, i32 3
    %569 = bitcast float* %568 to i32*
    %570 = load i32, i32* %569, align 4, !tbaa !45
    %571 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1, i32 3
    %572 = bitcast float* %571 to i32*
    store i32 %570, i32* %572, align 4, !tbaa !45
    %573 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479
    %574 = bitcast [4 x float]* %573 to i32*
    %575 = load i32, i32* %574, align 4, !tbaa !45
    %576 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1
    %577 = bitcast [4 x float]* %576 to i32*
    store i32 %575, i32* %577, align 4, !tbaa !45
    %578 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479, i32 1
    %579 = bitcast float* %578 to i32*
    %580 = load i32, i32* %579, align 4, !tbaa !45
    %581 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1, i32 1
    %582 = bitcast float* %581 to i32*
    store i32 %580, i32* %582, align 4, !tbaa !45
    %583 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479, i32 2
    %584 = bitcast float* %583 to i32*
    %585 = load i32, i32* %584, align 4, !tbaa !45
    %586 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1, i32 2
    %587 = bitcast float* %586 to i32*
    store i32 %585, i32* %587, align 4, !tbaa !45
    %588 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479, i32 3
    %589 = bitcast float* %588 to i32*
    %590 = load i32, i32* %589, align 4, !tbaa !45
    %591 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1, i32 3
    %592 = bitcast float* %591 to i32*
    store i32 %590, i32* %592, align 4, !tbaa !45
    %593 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 479
    %594 = bitcast [3 x float]* %593 to i32*
    %595 = load i32, i32* %594, align 4, !tbaa !45
    %596 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 1
    %597 = bitcast [3 x float]* %596 to i32*
    store i32 %595, i32* %597, align 4, !tbaa !45
    %598 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 479, i32 1
    %599 = bitcast float* %598 to i32*
    %600 = load i32, i32* %599, align 4, !tbaa !45
    %601 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 1, i32 1
    %602 = bitcast float* %601 to i32*
    store i32 %600, i32* %602, align 4, !tbaa !45
    %603 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 479, i32 2
    %604 = bitcast float* %603 to i32*
    %605 = load i32, i32* %604, align 4, !tbaa !45
    %606 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 1, i32 2
    %607 = bitcast float* %606 to i32*
    store i32 %605, i32* %607, align 4, !tbaa !45
    %608 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 0
    %609 = load i32, i32* %608, align 4, !tbaa !46
    %610 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 0
    store i32 %609, i32* %610, align 4, !tbaa !46
    %611 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 1
    %612 = load i32, i32* %611, align 4, !tbaa !46
    %613 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 1
    store i32 %612, i32* %613, align 4, !tbaa !46
    %614 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 2
    %615 = load i32, i32* %614, align 4, !tbaa !46
    %616 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 2
    store i32 %615, i32* %616, align 4, !tbaa !46
    %617 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 3
    %618 = load i32, i32* %617, align 4, !tbaa !46
    %619 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 3
    store i32 %618, i32* %619, align 4, !tbaa !46
    %620 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 0
    %621 = load i32, i32* %620, align 4, !tbaa !46
    %622 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 0
    store i32 %621, i32* %622, align 4, !tbaa !46
    %623 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 1
    %624 = load i32, i32* %623, align 4, !tbaa !46
    %625 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 1
    store i32 %624, i32* %625, align 4, !tbaa !46
    %626 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 2
    %627 = load i32, i32* %626, align 4, !tbaa !46
    %628 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 2
    store i32 %627, i32* %628, align 4, !tbaa !46
    %629 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 3
    %630 = load i32, i32* %629, align 4, !tbaa !46
    %631 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 3
    store i32 %630, i32* %631, align 4, !tbaa !46
    %632 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479
    %633 = bitcast [4 x float]* %632 to i32*
    %634 = load i32, i32* %633, align 4, !tbaa !45
    %635 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1
    %636 = bitcast [4 x float]* %635 to i32*
    store i32 %634, i32* %636, align 4, !tbaa !45
    %637 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479, i32 1
    %638 = bitcast float* %637 to i32*
    %639 = load i32, i32* %638, align 4, !tbaa !45
    %640 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1, i32 1
    %641 = bitcast float* %640 to i32*
    store i32 %639, i32* %641, align 4, !tbaa !45
    %642 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479, i32 2
    %643 = bitcast float* %642 to i32*
    %644 = load i32, i32* %643, align 4, !tbaa !45
    %645 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1, i32 2
    %646 = bitcast float* %645 to i32*
    store i32 %644, i32* %646, align 4, !tbaa !45
    %647 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479, i32 3
    %648 = bitcast float* %647 to i32*
    %649 = load i32, i32* %648, align 4, !tbaa !45
    %650 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1, i32 3
    %651 = bitcast float* %650 to i32*
    store i32 %649, i32* %651, align 4, !tbaa !45
    %652 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 479
    %653 = load i32, i32* %652, align 4, !tbaa !46
    %654 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 1
    store i32 %653, i32* %654, align 4, !tbaa !46
    %655 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 479
    %656 = load i32, i32* %655, align 4, !tbaa !46
    %657 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 1
    store i32 %656, i32* %657, align 4, !tbaa !46
    %658 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 479
    %659 = load i8, i8* %658, align 1, !tbaa !42
    %660 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 1
    store i8 %659, i8* %660, align 1, !tbaa !42
    %661 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 479
    %662 = load i8, i8* %661, align 1, !tbaa !42
    %663 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 1
    store i8 %662, i8* %663, align 1, !tbaa !42
    %664 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    store i32 2, i32* %664, align 4, !tbaa !39
    %665 = bitcast i8* %552 to i16*
    %666 = load i16, i16* %665, align 4
    %667 = icmp ult i16 %666, 256
    %668 = trunc i16 %666 to i8
    %669 = icmp eq i8 %668, 0
    %phitmp18 = zext i1 %669 to i8
    %670 = select i1 %667, i8 1, i8 %phitmp18
    %sunkaddr163 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr164 = add i32 %sunkaddr163, 65528
    %sunkaddr165 = inttoptr i32 %sunkaddr164 to i8*
    store i8 %670, i8* %sunkaddr165, align 4, !tbaa !41
    br label %1467
  
  ; <label>:671                                     ; preds = %0
    %672 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 14
    %673 = load i8, i8* %672, align 4, !tbaa !41
    %674 = icmp eq i8 %673, 0
    br i1 %674, label %700, label %.preheader42
  
  .preheader42:                                     ; preds = %671
    %675 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %676 = load i32, i32* %675, align 4, !tbaa !39
    %677 = icmp ugt i32 %676, 2
    br i1 %677, label %.lr.ph87, label %.loopexit39
  
  .lr.ph87:                                         ; preds = %.preheader42
    br label %678
  
  ; <label>:678                                     ; preds = %696, %.lr.ph87
    %lsr.iv29 = phi i32 [ %lsr.iv.next30, %696 ], [ 65026, %.lr.ph87 ]
    %679 = bitcast %struct.vertex_buffer* %2 to i8*
    %680 = add i32 %lsr.iv29, -65024
    %sunkaddr166 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr167 = add i32 %sunkaddr166, 65024
    %sunkaddr168 = inttoptr i32 %sunkaddr167 to i8*
    %681 = load i8, i8* %sunkaddr168, align 4, !tbaa !42
    %682 = add i32 %lsr.iv29, -65025
    %uglygep32 = getelementptr i8, i8* %679, i32 %lsr.iv29
    %scevgep33 = getelementptr i8, i8* %uglygep32, i32 -1
    %683 = load i8, i8* %scevgep33, align 1, !tbaa !42
    %684 = and i8 %683, %681
    %uglygep31 = getelementptr i8, i8* %679, i32 %lsr.iv29
    %685 = load i8, i8* %uglygep31, align 1, !tbaa !42
    %686 = and i8 %684, %685
    %687 = icmp eq i8 %686, 0
    br i1 %687, label %694, label %688
  
  ; <label>:688                                     ; preds = %678
    %sunkaddr169 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr170 = add i32 %sunkaddr169, 55764
    %sunkaddr171 = inttoptr i32 %sunkaddr170 to i8*
    %689 = load i8, i8* %sunkaddr171, align 4, !tbaa !48
    %690 = icmp eq i8 %689, 0
    br i1 %690, label %693, label %691
  
  ; <label>:691                                     ; preds = %688
    %sunkaddr172 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr173 = add i32 %sunkaddr172, 55804
    %sunkaddr174 = inttoptr i32 %sunkaddr173 to void (%struct.gl_context*, i32, i32, i32, i32)**
    %692 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %sunkaddr174, align 4, !tbaa !49
    call void %692(%struct.gl_context* nonnull %ctx, i32 signext 0, i32 signext %682, i32 signext %680, i32 signext %680) #6
    br label %696
  
  ; <label>:693                                     ; preds = %688
    call fastcc void @render_triangle(%struct.gl_context* nonnull %ctx, i32 signext 0, i32 signext %682, i32 signext %680, i32 signext %680, i32 signext 0)
    br label %696
  
  ; <label>:694                                     ; preds = %678
    %695 = bitcast [504 x i32]* %vlist to i32*
    store i32 0, i32* %695, align 4, !tbaa !46
    %sunkaddr175 = ptrtoint [504 x i32]* %vlist to i32
    %sunkaddr176 = add i32 %sunkaddr175, 4
    %sunkaddr177 = inttoptr i32 %sunkaddr176 to i32*
    store i32 %682, i32* %sunkaddr177, align 4, !tbaa !46
    %sunkaddr178 = ptrtoint [504 x i32]* %vlist to i32
    %sunkaddr179 = add i32 %sunkaddr178, 8
    %sunkaddr180 = inttoptr i32 %sunkaddr179 to i32*
    store i32 %680, i32* %sunkaddr180, align 4, !tbaa !46
    call fastcc void @render_clipped_polygon(%struct.gl_context* %ctx, i32 signext 3, i32* %695, i32 signext 0)
    br label %696
  
  ; <label>:696                                     ; preds = %694, %693, %691
    %sunkaddr181 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr182 = add i32 %sunkaddr181, 65536
    %sunkaddr183 = inttoptr i32 %sunkaddr182 to i32*
    %697 = load i32, i32* %sunkaddr183, align 4, !tbaa !39
    %lsr.iv.next30 = add i32 %lsr.iv29, 1
    %698 = add i32 %lsr.iv.next30, -65024
    %699 = icmp ult i32 %698, %697
    br i1 %699, label %678, label %.loopexit39
  
  ; <label>:700                                     ; preds = %671
    %701 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 60
    %702 = load i8, i8* %701, align 4, !tbaa !48
    %703 = icmp eq i8 %702, 0
    %704 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %705 = load i32, i32* %704, align 4, !tbaa !39
    br i1 %703, label %.preheader38, label %.preheader40
  
  .preheader40:                                     ; preds = %700
    %706 = icmp ugt i32 %705, 2
    br i1 %706, label %.lr.ph85, label %.loopexit39
  
  .lr.ph85:                                         ; preds = %.preheader40
    br label %708
  
  .preheader38:                                     ; preds = %700
    %707 = icmp ugt i32 %705, 2
    br i1 %707, label %.lr.ph83, label %.loopexit39
  
  ; <label>:708                                     ; preds = %708, %.lr.ph85
    %i10.084 = phi i32 [ 2, %.lr.ph85 ], [ %711, %708 ]
    %sunkaddr184 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr185 = add i32 %sunkaddr184, 55804
    %sunkaddr186 = inttoptr i32 %sunkaddr185 to void (%struct.gl_context*, i32, i32, i32, i32)**
    %709 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %sunkaddr186, align 4, !tbaa !49
    %710 = add i32 %i10.084, -1
    tail call void %709(%struct.gl_context* nonnull %ctx, i32 signext 0, i32 signext %710, i32 signext %i10.084, i32 signext %i10.084) #6
    %711 = add i32 %i10.084, 1
    %sunkaddr187 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr188 = add i32 %sunkaddr187, 65536
    %sunkaddr189 = inttoptr i32 %sunkaddr188 to i32*
    %712 = load i32, i32* %sunkaddr189, align 4, !tbaa !39
    %713 = icmp ult i32 %711, %712
    br i1 %713, label %708, label %.loopexit39
  
  .lr.ph83:                                         ; preds = %.preheader38, %.lr.ph83
    %i10.182 = phi i32 [ %715, %.lr.ph83 ], [ 2, %.preheader38 ]
    %714 = add i32 %i10.182, -1
    tail call fastcc void @render_triangle(%struct.gl_context* %ctx, i32 signext 0, i32 signext %714, i32 signext %i10.182, i32 signext %i10.182, i32 signext 0)
    %715 = add i32 %i10.182, 1
    %sunkaddr190 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr191 = add i32 %sunkaddr190, 65536
    %sunkaddr192 = inttoptr i32 %sunkaddr191 to i32*
    %716 = load i32, i32* %sunkaddr192, align 4, !tbaa !39
    %717 = icmp ult i32 %715, %716
    br i1 %717, label %.lr.ph83, label %.loopexit39
  
  .loopexit39:                                      ; preds = %696, %708, %.lr.ph83, %.preheader38, %.preheader40, %.preheader42
    %718 = icmp eq i8 %alldone, 0
    br i1 %718, label %719, label %1467
  
  ; <label>:719                                     ; preds = %.loopexit39
    %720 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479
    %721 = bitcast [4 x float]* %720 to i32*
    %722 = load i32, i32* %721, align 4, !tbaa !45
    %723 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1
    %724 = bitcast [4 x float]* %723 to i32*
    store i32 %722, i32* %724, align 4, !tbaa !45
    %725 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479, i32 1
    %726 = bitcast float* %725 to i32*
    %727 = load i32, i32* %726, align 4, !tbaa !45
    %728 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1, i32 1
    %729 = bitcast float* %728 to i32*
    store i32 %727, i32* %729, align 4, !tbaa !45
    %730 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479, i32 2
    %731 = bitcast float* %730 to i32*
    %732 = load i32, i32* %731, align 4, !tbaa !45
    %733 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1, i32 2
    %734 = bitcast float* %733 to i32*
    store i32 %732, i32* %734, align 4, !tbaa !45
    %735 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479, i32 3
    %736 = bitcast float* %735 to i32*
    %737 = load i32, i32* %736, align 4, !tbaa !45
    %738 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1, i32 3
    %739 = bitcast float* %738 to i32*
    store i32 %737, i32* %739, align 4, !tbaa !45
    %740 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479
    %741 = bitcast [4 x float]* %740 to i32*
    %742 = load i32, i32* %741, align 4, !tbaa !45
    %743 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1
    %744 = bitcast [4 x float]* %743 to i32*
    store i32 %742, i32* %744, align 4, !tbaa !45
    %745 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479, i32 1
    %746 = bitcast float* %745 to i32*
    %747 = load i32, i32* %746, align 4, !tbaa !45
    %748 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1, i32 1
    %749 = bitcast float* %748 to i32*
    store i32 %747, i32* %749, align 4, !tbaa !45
    %750 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479, i32 2
    %751 = bitcast float* %750 to i32*
    %752 = load i32, i32* %751, align 4, !tbaa !45
    %753 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1, i32 2
    %754 = bitcast float* %753 to i32*
    store i32 %752, i32* %754, align 4, !tbaa !45
    %755 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479, i32 3
    %756 = bitcast float* %755 to i32*
    %757 = load i32, i32* %756, align 4, !tbaa !45
    %758 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1, i32 3
    %759 = bitcast float* %758 to i32*
    store i32 %757, i32* %759, align 4, !tbaa !45
    %760 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 479
    %761 = bitcast [3 x float]* %760 to i32*
    %762 = load i32, i32* %761, align 4, !tbaa !45
    %763 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 1
    %764 = bitcast [3 x float]* %763 to i32*
    store i32 %762, i32* %764, align 4, !tbaa !45
    %765 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 479, i32 1
    %766 = bitcast float* %765 to i32*
    %767 = load i32, i32* %766, align 4, !tbaa !45
    %768 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 1, i32 1
    %769 = bitcast float* %768 to i32*
    store i32 %767, i32* %769, align 4, !tbaa !45
    %770 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 479, i32 2
    %771 = bitcast float* %770 to i32*
    %772 = load i32, i32* %771, align 4, !tbaa !45
    %773 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 1, i32 2
    %774 = bitcast float* %773 to i32*
    store i32 %772, i32* %774, align 4, !tbaa !45
    %775 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 0
    %776 = load i32, i32* %775, align 4, !tbaa !46
    %777 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 0
    store i32 %776, i32* %777, align 4, !tbaa !46
    %778 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 1
    %779 = load i32, i32* %778, align 4, !tbaa !46
    %780 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 1
    store i32 %779, i32* %780, align 4, !tbaa !46
    %781 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 2
    %782 = load i32, i32* %781, align 4, !tbaa !46
    %783 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 2
    store i32 %782, i32* %783, align 4, !tbaa !46
    %784 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 3
    %785 = load i32, i32* %784, align 4, !tbaa !46
    %786 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 3
    store i32 %785, i32* %786, align 4, !tbaa !46
    %787 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 0
    %788 = load i32, i32* %787, align 4, !tbaa !46
    %789 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 0
    store i32 %788, i32* %789, align 4, !tbaa !46
    %790 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 1
    %791 = load i32, i32* %790, align 4, !tbaa !46
    %792 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 1
    store i32 %791, i32* %792, align 4, !tbaa !46
    %793 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 2
    %794 = load i32, i32* %793, align 4, !tbaa !46
    %795 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 2
    store i32 %794, i32* %795, align 4, !tbaa !46
    %796 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 3
    %797 = load i32, i32* %796, align 4, !tbaa !46
    %798 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 3
    store i32 %797, i32* %798, align 4, !tbaa !46
    %799 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479
    %800 = bitcast [4 x float]* %799 to i32*
    %801 = load i32, i32* %800, align 4, !tbaa !45
    %802 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1
    %803 = bitcast [4 x float]* %802 to i32*
    store i32 %801, i32* %803, align 4, !tbaa !45
    %804 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479, i32 1
    %805 = bitcast float* %804 to i32*
    %806 = load i32, i32* %805, align 4, !tbaa !45
    %807 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1, i32 1
    %808 = bitcast float* %807 to i32*
    store i32 %806, i32* %808, align 4, !tbaa !45
    %809 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479, i32 2
    %810 = bitcast float* %809 to i32*
    %811 = load i32, i32* %810, align 4, !tbaa !45
    %812 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1, i32 2
    %813 = bitcast float* %812 to i32*
    store i32 %811, i32* %813, align 4, !tbaa !45
    %814 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479, i32 3
    %815 = bitcast float* %814 to i32*
    %816 = load i32, i32* %815, align 4, !tbaa !45
    %817 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1, i32 3
    %818 = bitcast float* %817 to i32*
    store i32 %816, i32* %818, align 4, !tbaa !45
    %819 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 479
    %820 = load i32, i32* %819, align 4, !tbaa !46
    %821 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 1
    store i32 %820, i32* %821, align 4, !tbaa !46
    %822 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 479
    %823 = load i32, i32* %822, align 4, !tbaa !46
    %824 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 1
    store i32 %823, i32* %824, align 4, !tbaa !46
    %825 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 479
    %826 = load i8, i8* %825, align 1, !tbaa !42
    %827 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 1
    store i8 %826, i8* %827, align 1, !tbaa !42
    %828 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 479
    %829 = load i8, i8* %828, align 1, !tbaa !42
    %830 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 1
    store i8 %829, i8* %830, align 1, !tbaa !42
    %831 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    store i32 2, i32* %831, align 4, !tbaa !39
    %832 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 0
    %833 = bitcast i8* %832 to i16*
    %834 = load i16, i16* %833, align 4
    %835 = icmp ult i16 %834, 256
    %836 = trunc i16 %834 to i8
    %837 = icmp eq i8 %836, 0
    %phitmp17 = zext i1 %837 to i8
    %838 = select i1 %835, i8 1, i8 %phitmp17
    %sunkaddr193 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr194 = add i32 %sunkaddr193, 65528
    %sunkaddr195 = inttoptr i32 %sunkaddr194 to i8*
    store i8 %838, i8* %sunkaddr195, align 4, !tbaa !41
    br label %1467
  
  ; <label>:839                                     ; preds = %0
    %840 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 14
    %841 = load i8, i8* %840, align 4, !tbaa !41
    %842 = icmp eq i8 %841, 0
    br i1 %842, label %872, label %.preheader48
  
  .preheader48:                                     ; preds = %839
    %843 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %844 = load i32, i32* %843, align 4, !tbaa !39
    %845 = icmp ugt i32 %844, 3
    br i1 %845, label %.lr.ph93, label %.loopexit45
  
  .lr.ph93:                                         ; preds = %.preheader48
    br label %846
  
  ; <label>:846                                     ; preds = %868, %.lr.ph93
    %lsr.iv34 = phi i32 [ %lsr.iv.next35, %868 ], [ 0, %.lr.ph93 ]
    %847 = bitcast %struct.vertex_buffer* %2 to i8*
    %848 = add i32 %lsr.iv34, 3
    %uglygep42 = getelementptr i8, i8* %847, i32 %lsr.iv34
    %scevgep43 = getelementptr i8, i8* %uglygep42, i32 65024
    %849 = load i8, i8* %scevgep43, align 1, !tbaa !42
    %850 = add i32 %lsr.iv34, 1
    %uglygep40 = getelementptr i8, i8* %847, i32 %lsr.iv34
    %scevgep41 = getelementptr i8, i8* %uglygep40, i32 65025
    %851 = load i8, i8* %scevgep41, align 1, !tbaa !42
    %852 = and i8 %851, %849
    %853 = add i32 %lsr.iv34, 2
    %uglygep38 = getelementptr i8, i8* %847, i32 %lsr.iv34
    %scevgep39 = getelementptr i8, i8* %uglygep38, i32 65026
    %854 = load i8, i8* %scevgep39, align 1, !tbaa !42
    %855 = and i8 %852, %854
    %uglygep36 = getelementptr i8, i8* %847, i32 %lsr.iv34
    %scevgep37 = getelementptr i8, i8* %uglygep36, i32 65027
    %856 = load i8, i8* %scevgep37, align 1, !tbaa !42
    %857 = and i8 %855, %856
    %858 = icmp eq i8 %857, 0
    br i1 %858, label %866, label %859
  
  ; <label>:859                                     ; preds = %846
    %sunkaddr196 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr197 = add i32 %sunkaddr196, 55764
    %sunkaddr198 = inttoptr i32 %sunkaddr197 to i8*
    %860 = load i8, i8* %sunkaddr198, align 4, !tbaa !48
    %861 = icmp eq i8 %860, 0
    br i1 %861, label %865, label %862
  
  ; <label>:862                                     ; preds = %859
    %sunkaddr199 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr200 = add i32 %sunkaddr199, 55804
    %sunkaddr201 = inttoptr i32 %sunkaddr200 to void (%struct.gl_context*, i32, i32, i32, i32)**
    %863 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %sunkaddr201, align 4, !tbaa !49
    call void %863(%struct.gl_context* nonnull %ctx, i32 signext %lsr.iv34, i32 signext %850, i32 signext %848, i32 signext %848) #6
    %864 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %sunkaddr201, align 4, !tbaa !49
    call void %864(%struct.gl_context* nonnull %ctx, i32 signext %850, i32 signext %853, i32 signext %848, i32 signext %848) #6
    br label %868
  
  ; <label>:865                                     ; preds = %859
    call fastcc void @render_quad(%struct.gl_context* nonnull %ctx, i32 signext %lsr.iv34, i32 signext %850, i32 signext %853, i32 signext %848, i32 signext %848, i32 signext 0)
    br label %868
  
  ; <label>:866                                     ; preds = %846
    %867 = bitcast [504 x i32]* %vlist to i32*
    store i32 %lsr.iv34, i32* %867, align 4, !tbaa !46
    %sunkaddr202 = ptrtoint [504 x i32]* %vlist to i32
    %sunkaddr203 = add i32 %sunkaddr202, 4
    %sunkaddr204 = inttoptr i32 %sunkaddr203 to i32*
    store i32 %850, i32* %sunkaddr204, align 4, !tbaa !46
    %sunkaddr205 = ptrtoint [504 x i32]* %vlist to i32
    %sunkaddr206 = add i32 %sunkaddr205, 8
    %sunkaddr207 = inttoptr i32 %sunkaddr206 to i32*
    store i32 %853, i32* %sunkaddr207, align 4, !tbaa !46
    %sunkaddr208 = ptrtoint [504 x i32]* %vlist to i32
    %sunkaddr209 = add i32 %sunkaddr208, 12
    %sunkaddr210 = inttoptr i32 %sunkaddr209 to i32*
    store i32 %848, i32* %sunkaddr210, align 4, !tbaa !46
    call fastcc void @render_clipped_polygon(%struct.gl_context* %ctx, i32 signext 4, i32* %867, i32 signext 0)
    br label %868
  
  ; <label>:868                                     ; preds = %866, %865, %862
    %869 = load i32, i32* %843, align 4, !tbaa !39
    %lsr.iv.next35 = add i32 %lsr.iv34, 4
    %870 = add i32 %lsr.iv.next35, 3
    %871 = icmp ult i32 %870, %869
    br i1 %871, label %846, label %.loopexit45
  
  ; <label>:872                                     ; preds = %839
    %873 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 60
    %874 = load i8, i8* %873, align 4, !tbaa !48
    %875 = icmp eq i8 %874, 0
    %876 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %877 = load i32, i32* %876, align 4, !tbaa !39
    br i1 %875, label %.preheader44, label %.preheader46
  
  .preheader46:                                     ; preds = %872
    %878 = icmp ugt i32 %877, 3
    br i1 %878, label %.lr.ph91, label %.loopexit45
  
  .lr.ph91:                                         ; preds = %.preheader46
    br label %880
  
  .preheader44:                                     ; preds = %872
    %879 = icmp ugt i32 %877, 3
    br i1 %879, label %.lr.ph89, label %.loopexit45
  
  ; <label>:880                                     ; preds = %880, %.lr.ph91
    %i12.090 = phi i32 [ 3, %.lr.ph91 ], [ %886, %880 ]
    %sunkaddr211 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr212 = add i32 %sunkaddr211, 55804
    %sunkaddr213 = inttoptr i32 %sunkaddr212 to void (%struct.gl_context*, i32, i32, i32, i32)**
    %881 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %sunkaddr213, align 4, !tbaa !49
    %882 = add nsw i32 %i12.090, -3
    %883 = add nsw i32 %i12.090, -2
    tail call void %881(%struct.gl_context* nonnull %ctx, i32 signext %882, i32 signext %883, i32 signext %i12.090, i32 signext %i12.090) #6
    %884 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %sunkaddr213, align 4, !tbaa !49
    %885 = add nsw i32 %i12.090, -1
    tail call void %884(%struct.gl_context* nonnull %ctx, i32 signext %883, i32 signext %885, i32 signext %i12.090, i32 signext %i12.090) #6
    %886 = add i32 %i12.090, 4
    %887 = load i32, i32* %876, align 4, !tbaa !39
    %888 = icmp ult i32 %886, %887
    br i1 %888, label %880, label %.loopexit45
  
  .lr.ph89:                                         ; preds = %.preheader44, %.lr.ph89
    %i12.188 = phi i32 [ %892, %.lr.ph89 ], [ 3, %.preheader44 ]
    %889 = add nsw i32 %i12.188, -3
    %890 = add nsw i32 %i12.188, -2
    %891 = add nsw i32 %i12.188, -1
    tail call fastcc void @render_quad(%struct.gl_context* %ctx, i32 signext %889, i32 signext %890, i32 signext %891, i32 signext %i12.188, i32 signext %i12.188, i32 signext 0)
    %892 = add i32 %i12.188, 4
    %893 = load i32, i32* %876, align 4, !tbaa !39
    %894 = icmp ult i32 %892, %893
    br i1 %894, label %.lr.ph89, label %.loopexit45
  
  .loopexit45:                                      ; preds = %868, %880, %.lr.ph89, %.preheader44, %.preheader46, %.preheader48
    %.pre-phi119 = phi i32* [ %843, %.preheader48 ], [ %876, %.preheader46 ], [ %876, %.preheader44 ], [ %876, %.lr.ph89 ], [ %876, %880 ], [ %843, %868 ]
    store i32 0, i32* %.pre-phi119, align 4, !tbaa !39
    %sunkaddr214 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr215 = add i32 %sunkaddr214, 65528
    %sunkaddr216 = inttoptr i32 %sunkaddr215 to i8*
    store i8 0, i8* %sunkaddr216, align 4, !tbaa !41
    br label %1467
  
  ; <label>:895                                     ; preds = %0
    %896 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 14
    %897 = load i8, i8* %896, align 4, !tbaa !41
    %898 = icmp eq i8 %897, 0
    br i1 %898, label %928, label %.preheader54
  
  .preheader54:                                     ; preds = %895
    %899 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %900 = load i32, i32* %899, align 4, !tbaa !39
    %901 = icmp ugt i32 %900, 3
    br i1 %901, label %.lr.ph99, label %.loopexit51
  
  .lr.ph99:                                         ; preds = %.preheader54
    br label %902
  
  ; <label>:902                                     ; preds = %924, %.lr.ph99
    %lsr.iv44 = phi i32 [ %lsr.iv.next45, %924 ], [ 0, %.lr.ph99 ]
    %903 = bitcast %struct.vertex_buffer* %2 to i8*
    %904 = add i32 %lsr.iv44, 3
    %905 = add i32 %lsr.iv44, 1
    %uglygep52 = getelementptr i8, i8* %903, i32 %lsr.iv44
    %scevgep53 = getelementptr i8, i8* %uglygep52, i32 65025
    %906 = load i8, i8* %scevgep53, align 1, !tbaa !42
    %uglygep50 = getelementptr i8, i8* %903, i32 %lsr.iv44
    %scevgep51 = getelementptr i8, i8* %uglygep50, i32 65024
    %907 = load i8, i8* %scevgep51, align 1, !tbaa !42
    %908 = and i8 %907, %906
    %909 = add i32 %lsr.iv44, 2
    %uglygep48 = getelementptr i8, i8* %903, i32 %lsr.iv44
    %scevgep49 = getelementptr i8, i8* %uglygep48, i32 65026
    %910 = load i8, i8* %scevgep49, align 1, !tbaa !42
    %911 = and i8 %908, %910
    %uglygep46 = getelementptr i8, i8* %903, i32 %lsr.iv44
    %scevgep47 = getelementptr i8, i8* %uglygep46, i32 65027
    %912 = load i8, i8* %scevgep47, align 1, !tbaa !42
    %913 = and i8 %911, %912
    %914 = icmp eq i8 %913, 0
    br i1 %914, label %922, label %915
  
  ; <label>:915                                     ; preds = %902
    %sunkaddr217 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr218 = add i32 %sunkaddr217, 55764
    %sunkaddr219 = inttoptr i32 %sunkaddr218 to i8*
    %916 = load i8, i8* %sunkaddr219, align 4, !tbaa !48
    %917 = icmp eq i8 %916, 0
    br i1 %917, label %921, label %918
  
  ; <label>:918                                     ; preds = %915
    %sunkaddr220 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr221 = add i32 %sunkaddr220, 55804
    %sunkaddr222 = inttoptr i32 %sunkaddr221 to void (%struct.gl_context*, i32, i32, i32, i32)**
    %919 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %sunkaddr222, align 4, !tbaa !49
    call void %919(%struct.gl_context* nonnull %ctx, i32 signext %905, i32 signext %lsr.iv44, i32 signext %904, i32 signext %904) #6
    %920 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %sunkaddr222, align 4, !tbaa !49
    call void %920(%struct.gl_context* nonnull %ctx, i32 signext %lsr.iv44, i32 signext %909, i32 signext %904, i32 signext %904) #6
    br label %924
  
  ; <label>:921                                     ; preds = %915
    call fastcc void @render_quad(%struct.gl_context* nonnull %ctx, i32 signext %905, i32 signext %lsr.iv44, i32 signext %909, i32 signext %904, i32 signext %904, i32 signext 1)
    br label %924
  
  ; <label>:922                                     ; preds = %902
    %923 = bitcast [504 x i32]* %vlist to i32*
    store i32 %905, i32* %923, align 4, !tbaa !46
    %sunkaddr223 = ptrtoint [504 x i32]* %vlist to i32
    %sunkaddr224 = add i32 %sunkaddr223, 4
    %sunkaddr225 = inttoptr i32 %sunkaddr224 to i32*
    store i32 %lsr.iv44, i32* %sunkaddr225, align 4, !tbaa !46
    %sunkaddr226 = ptrtoint [504 x i32]* %vlist to i32
    %sunkaddr227 = add i32 %sunkaddr226, 8
    %sunkaddr228 = inttoptr i32 %sunkaddr227 to i32*
    store i32 %909, i32* %sunkaddr228, align 4, !tbaa !46
    %sunkaddr229 = ptrtoint [504 x i32]* %vlist to i32
    %sunkaddr230 = add i32 %sunkaddr229, 12
    %sunkaddr231 = inttoptr i32 %sunkaddr230 to i32*
    store i32 %904, i32* %sunkaddr231, align 4, !tbaa !46
    call fastcc void @render_clipped_polygon(%struct.gl_context* %ctx, i32 signext 4, i32* %923, i32 signext 1)
    br label %924
  
  ; <label>:924                                     ; preds = %922, %921, %918
    %sunkaddr232 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr233 = add i32 %sunkaddr232, 65536
    %sunkaddr234 = inttoptr i32 %sunkaddr233 to i32*
    %925 = load i32, i32* %sunkaddr234, align 4, !tbaa !39
    %lsr.iv.next45 = add i32 %lsr.iv44, 2
    %926 = add i32 %lsr.iv.next45, 3
    %927 = icmp ult i32 %926, %925
    br i1 %927, label %902, label %.loopexit51
  
  ; <label>:928                                     ; preds = %895
    %929 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 60
    %930 = load i8, i8* %929, align 4, !tbaa !48
    %931 = icmp eq i8 %930, 0
    %932 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %933 = load i32, i32* %932, align 4, !tbaa !39
    br i1 %931, label %.preheader50, label %.preheader52
  
  .preheader52:                                     ; preds = %928
    %934 = icmp ugt i32 %933, 3
    br i1 %934, label %.lr.ph97, label %.loopexit51
  
  .lr.ph97:                                         ; preds = %.preheader52
    br label %936
  
  .preheader50:                                     ; preds = %928
    %935 = icmp ugt i32 %933, 3
    br i1 %935, label %.lr.ph95, label %.loopexit51
  
  ; <label>:936                                     ; preds = %936, %.lr.ph97
    %i14.096 = phi i32 [ 3, %.lr.ph97 ], [ %942, %936 ]
    %sunkaddr235 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr236 = add i32 %sunkaddr235, 55804
    %sunkaddr237 = inttoptr i32 %sunkaddr236 to void (%struct.gl_context*, i32, i32, i32, i32)**
    %937 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %sunkaddr237, align 4, !tbaa !49
    %938 = add i32 %i14.096, -2
    %939 = add i32 %i14.096, -3
    tail call void %937(%struct.gl_context* nonnull %ctx, i32 signext %938, i32 signext %939, i32 signext %i14.096, i32 signext %i14.096) #6
    %940 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %sunkaddr237, align 4, !tbaa !49
    %941 = add i32 %i14.096, -1
    tail call void %940(%struct.gl_context* nonnull %ctx, i32 signext %939, i32 signext %941, i32 signext %i14.096, i32 signext %i14.096) #6
    %942 = add i32 %i14.096, 2
    %sunkaddr238 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr239 = add i32 %sunkaddr238, 65536
    %sunkaddr240 = inttoptr i32 %sunkaddr239 to i32*
    %943 = load i32, i32* %sunkaddr240, align 4, !tbaa !39
    %944 = icmp ult i32 %942, %943
    br i1 %944, label %936, label %.loopexit51
  
  .lr.ph95:                                         ; preds = %.preheader50, %.lr.ph95
    %i14.194 = phi i32 [ %948, %.lr.ph95 ], [ 3, %.preheader50 ]
    %945 = add i32 %i14.194, -2
    %946 = add i32 %i14.194, -3
    %947 = add i32 %i14.194, -1
    tail call fastcc void @render_quad(%struct.gl_context* %ctx, i32 signext %945, i32 signext %946, i32 signext %947, i32 signext %i14.194, i32 signext %i14.194, i32 signext 1)
    %948 = add i32 %i14.194, 2
    %sunkaddr241 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr242 = add i32 %sunkaddr241, 65536
    %sunkaddr243 = inttoptr i32 %sunkaddr242 to i32*
    %949 = load i32, i32* %sunkaddr243, align 4, !tbaa !39
    %950 = icmp ult i32 %948, %949
    br i1 %950, label %.lr.ph95, label %.loopexit51
  
  .loopexit51:                                      ; preds = %924, %936, %.lr.ph95, %.preheader50, %.preheader52, %.preheader54
    %951 = icmp eq i8 %alldone, 0
    br i1 %951, label %952, label %1467
  
  ; <label>:952                                     ; preds = %.loopexit51
    %953 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 478
    %954 = bitcast [4 x float]* %953 to i32*
    %955 = load i32, i32* %954, align 4, !tbaa !45
    %956 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 0
    %957 = bitcast [4 x float]* %956 to i32*
    store i32 %955, i32* %957, align 4, !tbaa !45
    %958 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 478, i32 1
    %959 = bitcast float* %958 to i32*
    %960 = load i32, i32* %959, align 4, !tbaa !45
    %961 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 0, i32 1
    %962 = bitcast float* %961 to i32*
    store i32 %960, i32* %962, align 4, !tbaa !45
    %963 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 478, i32 2
    %964 = bitcast float* %963 to i32*
    %965 = load i32, i32* %964, align 4, !tbaa !45
    %966 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 0, i32 2
    %967 = bitcast float* %966 to i32*
    store i32 %965, i32* %967, align 4, !tbaa !45
    %968 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 478, i32 3
    %969 = bitcast float* %968 to i32*
    %970 = load i32, i32* %969, align 4, !tbaa !45
    %971 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 0, i32 3
    %972 = bitcast float* %971 to i32*
    store i32 %970, i32* %972, align 4, !tbaa !45
    %973 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 478
    %974 = bitcast [4 x float]* %973 to i32*
    %975 = load i32, i32* %974, align 4, !tbaa !45
    %976 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 0
    %977 = bitcast [4 x float]* %976 to i32*
    store i32 %975, i32* %977, align 4, !tbaa !45
    %978 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 478, i32 1
    %979 = bitcast float* %978 to i32*
    %980 = load i32, i32* %979, align 4, !tbaa !45
    %981 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 0, i32 1
    %982 = bitcast float* %981 to i32*
    store i32 %980, i32* %982, align 4, !tbaa !45
    %983 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 478, i32 2
    %984 = bitcast float* %983 to i32*
    %985 = load i32, i32* %984, align 4, !tbaa !45
    %986 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 0, i32 2
    %987 = bitcast float* %986 to i32*
    store i32 %985, i32* %987, align 4, !tbaa !45
    %988 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 478, i32 3
    %989 = bitcast float* %988 to i32*
    %990 = load i32, i32* %989, align 4, !tbaa !45
    %991 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 0, i32 3
    %992 = bitcast float* %991 to i32*
    store i32 %990, i32* %992, align 4, !tbaa !45
    %993 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 478
    %994 = bitcast [3 x float]* %993 to i32*
    %995 = load i32, i32* %994, align 4, !tbaa !45
    %996 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 0
    %997 = bitcast [3 x float]* %996 to i32*
    store i32 %995, i32* %997, align 4, !tbaa !45
    %998 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 478, i32 1
    %999 = bitcast float* %998 to i32*
    %1000 = load i32, i32* %999, align 4, !tbaa !45
    %1001 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 0, i32 1
    %1002 = bitcast float* %1001 to i32*
    store i32 %1000, i32* %1002, align 4, !tbaa !45
    %1003 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 478, i32 2
    %1004 = bitcast float* %1003 to i32*
    %1005 = load i32, i32* %1004, align 4, !tbaa !45
    %1006 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 0, i32 2
    %1007 = bitcast float* %1006 to i32*
    store i32 %1005, i32* %1007, align 4, !tbaa !45
    %1008 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 478, i32 0
    %1009 = load i32, i32* %1008, align 4, !tbaa !46
    %1010 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 0, i32 0
    store i32 %1009, i32* %1010, align 4, !tbaa !46
    %1011 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 478, i32 1
    %1012 = load i32, i32* %1011, align 4, !tbaa !46
    %1013 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 0, i32 1
    store i32 %1012, i32* %1013, align 4, !tbaa !46
    %1014 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 478, i32 2
    %1015 = load i32, i32* %1014, align 4, !tbaa !46
    %1016 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 0, i32 2
    store i32 %1015, i32* %1016, align 4, !tbaa !46
    %1017 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 478, i32 3
    %1018 = load i32, i32* %1017, align 4, !tbaa !46
    %1019 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 0, i32 3
    store i32 %1018, i32* %1019, align 4, !tbaa !46
    %1020 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 478, i32 0
    %1021 = load i32, i32* %1020, align 4, !tbaa !46
    %1022 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 0, i32 0
    store i32 %1021, i32* %1022, align 4, !tbaa !46
    %1023 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 478, i32 1
    %1024 = load i32, i32* %1023, align 4, !tbaa !46
    %1025 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 0, i32 1
    store i32 %1024, i32* %1025, align 4, !tbaa !46
    %1026 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 478, i32 2
    %1027 = load i32, i32* %1026, align 4, !tbaa !46
    %1028 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 0, i32 2
    store i32 %1027, i32* %1028, align 4, !tbaa !46
    %1029 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 478, i32 3
    %1030 = load i32, i32* %1029, align 4, !tbaa !46
    %1031 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 0, i32 3
    store i32 %1030, i32* %1031, align 4, !tbaa !46
    %1032 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 478
    %1033 = bitcast [4 x float]* %1032 to i32*
    %1034 = load i32, i32* %1033, align 4, !tbaa !45
    %1035 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 0
    %1036 = bitcast [4 x float]* %1035 to i32*
    store i32 %1034, i32* %1036, align 4, !tbaa !45
    %1037 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 478, i32 1
    %1038 = bitcast float* %1037 to i32*
    %1039 = load i32, i32* %1038, align 4, !tbaa !45
    %1040 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 0, i32 1
    %1041 = bitcast float* %1040 to i32*
    store i32 %1039, i32* %1041, align 4, !tbaa !45
    %1042 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 478, i32 2
    %1043 = bitcast float* %1042 to i32*
    %1044 = load i32, i32* %1043, align 4, !tbaa !45
    %1045 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 0, i32 2
    %1046 = bitcast float* %1045 to i32*
    store i32 %1044, i32* %1046, align 4, !tbaa !45
    %1047 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 478, i32 3
    %1048 = bitcast float* %1047 to i32*
    %1049 = load i32, i32* %1048, align 4, !tbaa !45
    %1050 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 0, i32 3
    %1051 = bitcast float* %1050 to i32*
    store i32 %1049, i32* %1051, align 4, !tbaa !45
    %1052 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 478
    %1053 = load i32, i32* %1052, align 4, !tbaa !46
    %1054 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 0
    store i32 %1053, i32* %1054, align 4, !tbaa !46
    %1055 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 478
    %1056 = load i32, i32* %1055, align 4, !tbaa !46
    %1057 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 0
    store i32 %1056, i32* %1057, align 4, !tbaa !46
    %1058 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 478
    %1059 = load i8, i8* %1058, align 1, !tbaa !42
    %1060 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 0
    store i8 %1059, i8* %1060, align 1, !tbaa !42
    %1061 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 478
    %1062 = load i8, i8* %1061, align 1, !tbaa !42
    %1063 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 0
    store i8 %1062, i8* %1063, align 1, !tbaa !42
    %1064 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479
    %1065 = bitcast [4 x float]* %1064 to i32*
    %1066 = load i32, i32* %1065, align 4, !tbaa !45
    %1067 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1
    %1068 = bitcast [4 x float]* %1067 to i32*
    store i32 %1066, i32* %1068, align 4, !tbaa !45
    %1069 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479, i32 1
    %1070 = bitcast float* %1069 to i32*
    %1071 = load i32, i32* %1070, align 4, !tbaa !45
    %1072 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1, i32 1
    %1073 = bitcast float* %1072 to i32*
    store i32 %1071, i32* %1073, align 4, !tbaa !45
    %1074 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479, i32 2
    %1075 = bitcast float* %1074 to i32*
    %1076 = load i32, i32* %1075, align 4, !tbaa !45
    %1077 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1, i32 2
    %1078 = bitcast float* %1077 to i32*
    store i32 %1076, i32* %1078, align 4, !tbaa !45
    %1079 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479, i32 3
    %1080 = bitcast float* %1079 to i32*
    %1081 = load i32, i32* %1080, align 4, !tbaa !45
    %1082 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1, i32 3
    %1083 = bitcast float* %1082 to i32*
    store i32 %1081, i32* %1083, align 4, !tbaa !45
    %1084 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479
    %1085 = bitcast [4 x float]* %1084 to i32*
    %1086 = load i32, i32* %1085, align 4, !tbaa !45
    %1087 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1
    %1088 = bitcast [4 x float]* %1087 to i32*
    store i32 %1086, i32* %1088, align 4, !tbaa !45
    %1089 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479, i32 1
    %1090 = bitcast float* %1089 to i32*
    %1091 = load i32, i32* %1090, align 4, !tbaa !45
    %1092 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1, i32 1
    %1093 = bitcast float* %1092 to i32*
    store i32 %1091, i32* %1093, align 4, !tbaa !45
    %1094 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479, i32 2
    %1095 = bitcast float* %1094 to i32*
    %1096 = load i32, i32* %1095, align 4, !tbaa !45
    %1097 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1, i32 2
    %1098 = bitcast float* %1097 to i32*
    store i32 %1096, i32* %1098, align 4, !tbaa !45
    %1099 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479, i32 3
    %1100 = bitcast float* %1099 to i32*
    %1101 = load i32, i32* %1100, align 4, !tbaa !45
    %1102 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1, i32 3
    %1103 = bitcast float* %1102 to i32*
    store i32 %1101, i32* %1103, align 4, !tbaa !45
    %1104 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 479
    %1105 = bitcast [3 x float]* %1104 to i32*
    %1106 = load i32, i32* %1105, align 4, !tbaa !45
    %1107 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 1
    %1108 = bitcast [3 x float]* %1107 to i32*
    store i32 %1106, i32* %1108, align 4, !tbaa !45
    %1109 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 479, i32 1
    %1110 = bitcast float* %1109 to i32*
    %1111 = load i32, i32* %1110, align 4, !tbaa !45
    %1112 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 1, i32 1
    %1113 = bitcast float* %1112 to i32*
    store i32 %1111, i32* %1113, align 4, !tbaa !45
    %1114 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 479, i32 2
    %1115 = bitcast float* %1114 to i32*
    %1116 = load i32, i32* %1115, align 4, !tbaa !45
    %1117 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 1, i32 2
    %1118 = bitcast float* %1117 to i32*
    store i32 %1116, i32* %1118, align 4, !tbaa !45
    %1119 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 0
    %1120 = load i32, i32* %1119, align 4, !tbaa !46
    %1121 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 0
    store i32 %1120, i32* %1121, align 4, !tbaa !46
    %1122 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 1
    %1123 = load i32, i32* %1122, align 4, !tbaa !46
    %1124 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 1
    store i32 %1123, i32* %1124, align 4, !tbaa !46
    %1125 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 2
    %1126 = load i32, i32* %1125, align 4, !tbaa !46
    %1127 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 2
    store i32 %1126, i32* %1127, align 4, !tbaa !46
    %1128 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 3
    %1129 = load i32, i32* %1128, align 4, !tbaa !46
    %1130 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 3
    store i32 %1129, i32* %1130, align 4, !tbaa !46
    %1131 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 0
    %1132 = load i32, i32* %1131, align 4, !tbaa !46
    %1133 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 0
    store i32 %1132, i32* %1133, align 4, !tbaa !46
    %1134 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 1
    %1135 = load i32, i32* %1134, align 4, !tbaa !46
    %1136 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 1
    store i32 %1135, i32* %1136, align 4, !tbaa !46
    %1137 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 2
    %1138 = load i32, i32* %1137, align 4, !tbaa !46
    %1139 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 2
    store i32 %1138, i32* %1139, align 4, !tbaa !46
    %1140 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 3
    %1141 = load i32, i32* %1140, align 4, !tbaa !46
    %1142 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 3
    store i32 %1141, i32* %1142, align 4, !tbaa !46
    %1143 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479
    %1144 = bitcast [4 x float]* %1143 to i32*
    %1145 = load i32, i32* %1144, align 4, !tbaa !45
    %1146 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1
    %1147 = bitcast [4 x float]* %1146 to i32*
    store i32 %1145, i32* %1147, align 4, !tbaa !45
    %1148 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479, i32 1
    %1149 = bitcast float* %1148 to i32*
    %1150 = load i32, i32* %1149, align 4, !tbaa !45
    %1151 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1, i32 1
    %1152 = bitcast float* %1151 to i32*
    store i32 %1150, i32* %1152, align 4, !tbaa !45
    %1153 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479, i32 2
    %1154 = bitcast float* %1153 to i32*
    %1155 = load i32, i32* %1154, align 4, !tbaa !45
    %1156 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1, i32 2
    %1157 = bitcast float* %1156 to i32*
    store i32 %1155, i32* %1157, align 4, !tbaa !45
    %1158 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479, i32 3
    %1159 = bitcast float* %1158 to i32*
    %1160 = load i32, i32* %1159, align 4, !tbaa !45
    %1161 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1, i32 3
    %1162 = bitcast float* %1161 to i32*
    store i32 %1160, i32* %1162, align 4, !tbaa !45
    %1163 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 479
    %1164 = load i32, i32* %1163, align 4, !tbaa !46
    %1165 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 1
    store i32 %1164, i32* %1165, align 4, !tbaa !46
    %1166 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 479
    %1167 = load i32, i32* %1166, align 4, !tbaa !46
    %1168 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 1
    store i32 %1167, i32* %1168, align 4, !tbaa !46
    %1169 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 479
    %1170 = load i8, i8* %1169, align 1, !tbaa !42
    %1171 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 1
    store i8 %1170, i8* %1171, align 1, !tbaa !42
    %1172 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 479
    %1173 = load i8, i8* %1172, align 1, !tbaa !42
    %1174 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 1
    store i8 %1173, i8* %1174, align 1, !tbaa !42
    %1175 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    store i32 2, i32* %1175, align 4, !tbaa !39
    %1176 = bitcast i8* %1063 to i16*
    %1177 = load i16, i16* %1176, align 4
    %1178 = icmp ult i16 %1177, 256
    %1179 = trunc i16 %1177 to i8
    %1180 = icmp eq i8 %1179, 0
    %phitmp16 = zext i1 %1180 to i8
    %1181 = select i1 %1178, i8 1, i8 %phitmp16
    %sunkaddr244 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr245 = add i32 %sunkaddr244, 65528
    %sunkaddr246 = inttoptr i32 %sunkaddr245 to i8*
    store i8 %1181, i8* %sunkaddr246, align 4, !tbaa !41
    br label %1467
  
  ; <label>:1182                                    ; preds = %0
    %1183 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %1184 = load i32, i32* %1183, align 4, !tbaa !39
    %1185 = icmp ugt i32 %1184, 2
    br i1 %1185, label %.lr.ph101, label %render_polygon.exit
  
  .lr.ph101:                                        ; preds = %1182, %.lr.ph101
    %lsr.iv68 = phi [504 x i32]* [ %1187, %.lr.ph101 ], [ %vlist, %1182 ]
    %i15.0100 = phi i32 [ %1186, %.lr.ph101 ], [ 0, %1182 ]
    %lsr.iv6870 = bitcast [504 x i32]* %lsr.iv68 to i32*
    store i32 %i15.0100, i32* %lsr.iv6870, align 4, !tbaa !46
    %1186 = add i32 %i15.0100, 1
    %sunkaddr247 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr248 = add i32 %sunkaddr247, 65536
    %sunkaddr249 = inttoptr i32 %sunkaddr248 to i32*
    %.pr = load i32, i32* %sunkaddr249, align 4, !tbaa !39
    %scevgep69 = getelementptr [504 x i32], [504 x i32]* %lsr.iv68, i32 0, i32 1
    %1187 = bitcast i32* %scevgep69 to [504 x i32]*
    %1188 = icmp ult i32 %1186, %.pr
    br i1 %1188, label %.lr.ph101, label %._crit_edge102
  
  ._crit_edge102:                                   ; preds = %.lr.ph101
    %1189 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 14
    %1190 = load i8, i8* %1189, align 4, !tbaa !41
    %1191 = icmp eq i8 %1190, 0
    br i1 %1191, label %1194, label %1192
  
  ; <label>:1192                                    ; preds = %._crit_edge102
    %1193 = bitcast [504 x i32]* %vlist to i32*
    call fastcc void @render_clipped_polygon(%struct.gl_context* %ctx, i32 signext %.pr, i32* %1193, i32 signext 0)
    br label %render_polygon.exit
  
  ; <label>:1194                                    ; preds = %._crit_edge102
    %1195 = bitcast [504 x i32]* %vlist to i32*
    %1196 = load i32, i32* %1195, align 4, !tbaa !46
    %1197 = icmp eq i32 %.pr, 0
    br i1 %1197, label %render_polygon.exit, label %.lr.ph.i.i.preheader
  
  .lr.ph.i.i.preheader:                             ; preds = %1194
    %scevgep61 = getelementptr [504 x i32], [504 x i32]* %vlist, i32 0, i32 1
    %scevgep6162 = bitcast i32* %scevgep61 to [504 x i32]*
    br label %.lr.ph.i.i
  
  .lr.ph.i.i:                                       ; preds = %.lr.ph.i.i..lr.ph.i.i_crit_edge, %.lr.ph.i.i.preheader
    %lsr.iv66 = phi i32 [ %lsr.iv.next67, %.lr.ph.i.i..lr.ph.i.i_crit_edge ], [ 1, %.lr.ph.i.i.preheader ]
    %lsr.iv63 = phi [504 x i32]* [ %1215, %.lr.ph.i.i..lr.ph.i.i_crit_edge ], [ %scevgep6162, %.lr.ph.i.i.preheader ]
    %1198 = phi i32 [ %.pre118, %.lr.ph.i.i..lr.ph.i.i_crit_edge ], [ %1196, %.lr.ph.i.i.preheader ]
    %area.02.i.i = phi float [ %1213, %.lr.ph.i.i..lr.ph.i.i_crit_edge ], [ 0.000000e+00, %.lr.ph.i.i.preheader ]
    %1199 = icmp eq i32 %.pr, %lsr.iv66
    %tmp.i.i = select i1 %1199, i32 0, i32 %lsr.iv66
    %1200 = getelementptr inbounds [504 x i32], [504 x i32]* %vlist, i32 0, i32 %tmp.i.i
    %1201 = load i32, i32* %1200, align 4, !tbaa !46
    %1202 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %1198, i32 0
    %1203 = load float, float* %1202, align 4, !tbaa !45
    %1204 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %1198, i32 1
    %1205 = load float, float* %1204, align 4, !tbaa !45
    %1206 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %1201, i32 0
    %1207 = load float, float* %1206, align 4, !tbaa !45
    %1208 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %1201, i32 1
    %1209 = load float, float* %1208, align 4, !tbaa !45
    %1210 = fsub float %1203, %1207
    %1211 = fadd float %1205, %1209
    %1212 = fmul float %1210, %1211
    %1213 = fadd float %area.02.i.i, %1212
    br i1 %1199, label %polygon_area.exit.i, label %.lr.ph.i.i..lr.ph.i.i_crit_edge
  
  .lr.ph.i.i..lr.ph.i.i_crit_edge:                  ; preds = %.lr.ph.i.i
    %1214 = bitcast [504 x i32]* %lsr.iv63 to i32*
    %.pre118 = load i32, i32* %1214, align 4, !tbaa !46
    %scevgep64 = getelementptr [504 x i32], [504 x i32]* %lsr.iv63, i32 0, i32 1
    %1215 = bitcast i32* %scevgep64 to [504 x i32]*
    %lsr.iv.next67 = add nuw i32 %lsr.iv66, 1
    br label %.lr.ph.i.i
  
  polygon_area.exit.i:                              ; preds = %.lr.ph.i.i
    %phitmp.i.i = fmul float %1213, 5.000000e-01
    %1216 = fcmp oeq float %phitmp.i.i, 0.000000e+00
    br i1 %1216, label %render_polygon.exit, label %1217
  
  ; <label>:1217                                    ; preds = %polygon_area.exit.i
    %1218 = fcmp olt float %phitmp.i.i, 0.000000e+00
    %1219 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 0
    %1220 = load i32, i32* %1219, align 4, !tbaa !50
    %1221 = icmp eq i32 %1220, 2304
    %1222 = xor i1 %1218, %1221
    %1223 = zext i1 %1222 to i32
    %1224 = select i1 %1222, i32 2, i32 1
    %1225 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 6
    %1226 = load i32, i32* %1225, align 4, !tbaa !51
    %1227 = and i32 %1224, %1226
    %1228 = icmp eq i32 %1227, 0
    br i1 %1228, label %1229, label %render_polygon.exit
  
  ; <label>:1229                                    ; preds = %1217
    %1230 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 14
    %1231 = load i8, i8* %1230, align 1, !tbaa !52
    %1232 = icmp eq i8 %1231, 0
    br i1 %1232, label %1312, label %1233
  
  ; <label>:1233                                    ; preds = %1229
    %1234 = getelementptr inbounds [504 x i32], [504 x i32]* %vlist, i32 0, i32 1
    %1235 = load i32, i32* %1234, align 4, !tbaa !46
    %1236 = getelementptr inbounds [504 x i32], [504 x i32]* %vlist, i32 0, i32 2
    %1237 = load i32, i32* %1236, align 4, !tbaa !46
    %1238 = icmp eq i32 %.pr, 3
    %1239 = select i1 %1238, i32 0, i32 3
    %1240 = getelementptr inbounds [504 x i32], [504 x i32]* %vlist, i32 0, i32 %1239
    %1241 = load i32, i32* %1240, align 4, !tbaa !46
    %1242 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %1235, i32 0
    %1243 = load float, float* %1242, align 4, !tbaa !45
    %1244 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %1241, i32 0
    %1245 = load float, float* %1244, align 4, !tbaa !45
    %1246 = fsub float %1243, %1245
    %1247 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %1235, i32 1
    %1248 = load float, float* %1247, align 4, !tbaa !45
    %1249 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %1241, i32 1
    %1250 = load float, float* %1249, align 4, !tbaa !45
    %1251 = fsub float %1248, %1250
    %1252 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %1235, i32 2
    %1253 = load float, float* %1252, align 4, !tbaa !45
    %1254 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %1241, i32 2
    %1255 = load float, float* %1254, align 4, !tbaa !45
    %1256 = fsub float %1253, %1255
    %1257 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %1237, i32 0
    %1258 = load float, float* %1257, align 4, !tbaa !45
    %1259 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %1196, i32 0
    %1260 = load float, float* %1259, align 4, !tbaa !45
    %1261 = fsub float %1258, %1260
    %1262 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %1237, i32 1
    %1263 = load float, float* %1262, align 4, !tbaa !45
    %1264 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %1196, i32 1
    %1265 = load float, float* %1264, align 4, !tbaa !45
    %1266 = fsub float %1263, %1265
    %1267 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %1237, i32 2
    %1268 = load float, float* %1267, align 4, !tbaa !45
    %1269 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %1196, i32 2
    %1270 = load float, float* %1269, align 4, !tbaa !45
    %1271 = fsub float %1268, %1270
    %1272 = fmul float %1246, %1266
    %1273 = fmul float %1251, %1261
    %1274 = fsub float %1272, %1273
    %1275 = fcmp olt float %1274, 0x3F50624DE0000000
    %1276 = fcmp ogt float %1274, 0xBF50624DE0000000
    %or.cond.i.i = and i1 %1275, %1276
    br i1 %or.cond.i.i, label %offset_polygon.exit.i, label %1277
  
  ; <label>:1277                                    ; preds = %1233
    %1278 = fmul float %1256, %1261
    %1279 = fmul float %1246, %1271
    %1280 = fsub float %1278, %1279
    %1281 = fmul float %1251, %1271
    %1282 = fmul float %1256, %1266
    %1283 = fsub float %1281, %1282
    %1284 = fdiv float %1283, %1274
    %1285 = fdiv float %1280, %1274
    %1286 = fcmp olt float %1284, 0.000000e+00
    %1287 = fsub float -0.000000e+00, %1284
    %ac.0.i.i = select i1 %1286, float %1287, float %1284
    %1288 = fcmp olt float %1285, 0.000000e+00
    %1289 = fsub float -0.000000e+00, %1285
    %bc.0.i.i = select i1 %1288, float %1289, float %1285
    %1290 = fcmp ogt float %ac.0.i.i, %bc.0.i.i
    %1291 = select i1 %1290, float %ac.0.i.i, float %bc.0.i.i
    %1292 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 9
    %1293 = load float, float* %1292, align 4, !tbaa !53
    %1294 = fmul float %1291, %1293
    %1295 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 10
    %1296 = load float, float* %1295, align 4, !tbaa !54
    %1297 = fadd float %1294, %1296
    br label %offset_polygon.exit.i
  
  offset_polygon.exit.i:                            ; preds = %1277, %1233
    %offset.0.i.i = phi float [ %1297, %1277 ], [ 0.000000e+00, %1233 ]
    %1298 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 11
    %1299 = bitcast i8* %1298 to i32*
    %1300 = load i32, i32* %1299, align 4
    %1301 = icmp ugt i32 %1300, 16777215
    %1302 = select i1 %1301, float %offset.0.i.i, float 0.000000e+00
    %1303 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 63
    store float %1302, float* %1303, align 4, !tbaa !55
    %1304 = and i32 %1300, 16711680
    %1305 = icmp ne i32 %1304, 0
    %1306 = select i1 %1305, float %offset.0.i.i, float 0.000000e+00
    %1307 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 62
    store float %1306, float* %1307, align 4, !tbaa !56
    %1308 = and i32 %1300, 65280
    %1309 = icmp ne i32 %1308, 0
    %1310 = select i1 %1309, float %offset.0.i.i, float 0.000000e+00
    %1311 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 61
    store float %1310, float* %1311, align 4, !tbaa !57
    br label %1312
  
  ; <label>:1312                                    ; preds = %offset_polygon.exit.i, %1229
    %1313 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 1, i32 2
    %1314 = load i8, i8* %1313, align 1, !tbaa !58
    %1315 = icmp eq i8 %1314, 0
    br i1 %1315, label %1331, label %1316
  
  ; <label>:1316                                    ; preds = %1312
    br i1 %1222, label %1317, label %1326
  
  ; <label>:1317                                    ; preds = %1316
    %1318 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 3
    %1319 = load i8, i8* %1318, align 4, !tbaa !59
    %1320 = icmp eq i8 %1319, 0
    br i1 %1320, label %1326, label %1321
  
  ; <label>:1321                                    ; preds = %1317
    %1322 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 0
    %1323 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 7
    store [4 x i32]* %1322, [4 x i32]** %1323, align 4, !tbaa !60
    %1324 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 0
    %1325 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 10
    store i32* %1324, i32** %1325, align 4, !tbaa !61
    br label %1331
  
  ; <label>:1326                                    ; preds = %1317, %1316
    %1327 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 0
    %1328 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 7
    store [4 x i32]* %1327, [4 x i32]** %1328, align 4, !tbaa !60
    %1329 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 0
    %1330 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 10
    store i32* %1329, i32** %1330, align 4, !tbaa !61
    br label %1331
  
  ; <label>:1331                                    ; preds = %1326, %1321, %1312
    %1332 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 3
    %1333 = load i8, i8* %1332, align 4, !tbaa !62
    %1334 = icmp eq i8 %1333, 0
    br i1 %1334, label %1337, label %1335
  
  ; <label>:1335                                    ; preds = %1331
    %1336 = bitcast [504 x i32]* %vlist to i32*
    call fastcc void @unfilled_polygon(%struct.gl_context* nonnull %ctx, i32 signext %.pr, i32* nonnull %1336, i32 signext %1196, i32 signext %1223) #6
    br label %render_polygon.exit
  
  ; <label>:1337                                    ; preds = %1331
    %1338 = icmp ugt i32 %.pr, 2
    br i1 %1338, label %.lr.ph.i, label %render_polygon.exit
  
  .lr.ph.i:                                         ; preds = %1337
    %.phi.trans.insert = getelementptr inbounds [504 x i32], [504 x i32]* %vlist, i32 0, i32 1
    %.pre = load i32, i32* %.phi.trans.insert, align 4, !tbaa !46
    %1339 = add i32 %.pr, -2
    %scevgep56 = getelementptr [504 x i32], [504 x i32]* %vlist, i32 0, i32 2
    %scevgep5657 = bitcast i32* %scevgep56 to [504 x i32]*
    br label %1340
  
  ; <label>:1340                                    ; preds = %1340, %.lr.ph.i
    %lsr.iv58 = phi [504 x i32]* [ %1344, %1340 ], [ %scevgep5657, %.lr.ph.i ]
    %lsr.iv54 = phi i32 [ %lsr.iv.next55, %1340 ], [ %1339, %.lr.ph.i ]
    %1341 = phi i32 [ %.pre, %.lr.ph.i ], [ %1343, %1340 ]
    %lsr.iv5860 = bitcast [504 x i32]* %lsr.iv58 to i32*
    %sunkaddr250 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr251 = add i32 %sunkaddr250, 55804
    %sunkaddr252 = inttoptr i32 %sunkaddr251 to void (%struct.gl_context*, i32, i32, i32, i32)**
    %1342 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %sunkaddr252, align 4, !tbaa !49
    %1343 = load i32, i32* %lsr.iv5860, align 4, !tbaa !46
    tail call void %1342(%struct.gl_context* nonnull %ctx, i32 signext %1196, i32 signext %1341, i32 signext %1343, i32 signext %1196) #6
    %lsr.iv.next55 = add i32 %lsr.iv54, -1
    %scevgep59 = getelementptr [504 x i32], [504 x i32]* %lsr.iv58, i32 0, i32 1
    %1344 = bitcast i32* %scevgep59 to [504 x i32]*
    %exitcond.i = icmp eq i32 %lsr.iv.next55, 0
    br i1 %exitcond.i, label %render_polygon.exit, label %1340
  
  render_polygon.exit:                              ; preds = %1340, %1337, %1335, %1217, %polygon_area.exit.i, %1194, %1192, %1182
    %1345 = icmp eq i8 %alldone, 0
    br i1 %1345, label %1346, label %1467
  
  ; <label>:1346                                    ; preds = %render_polygon.exit
    %1347 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479
    %1348 = bitcast [4 x float]* %1347 to i32*
    %1349 = load i32, i32* %1348, align 4, !tbaa !45
    %1350 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1
    %1351 = bitcast [4 x float]* %1350 to i32*
    store i32 %1349, i32* %1351, align 4, !tbaa !45
    %1352 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479, i32 1
    %1353 = bitcast float* %1352 to i32*
    %1354 = load i32, i32* %1353, align 4, !tbaa !45
    %1355 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1, i32 1
    %1356 = bitcast float* %1355 to i32*
    store i32 %1354, i32* %1356, align 4, !tbaa !45
    %1357 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479, i32 2
    %1358 = bitcast float* %1357 to i32*
    %1359 = load i32, i32* %1358, align 4, !tbaa !45
    %1360 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1, i32 2
    %1361 = bitcast float* %1360 to i32*
    store i32 %1359, i32* %1361, align 4, !tbaa !45
    %1362 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 479, i32 3
    %1363 = bitcast float* %1362 to i32*
    %1364 = load i32, i32* %1363, align 4, !tbaa !45
    %1365 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 1, i32 3
    %1366 = bitcast float* %1365 to i32*
    store i32 %1364, i32* %1366, align 4, !tbaa !45
    %1367 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479
    %1368 = bitcast [4 x float]* %1367 to i32*
    %1369 = load i32, i32* %1368, align 4, !tbaa !45
    %1370 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1
    %1371 = bitcast [4 x float]* %1370 to i32*
    store i32 %1369, i32* %1371, align 4, !tbaa !45
    %1372 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479, i32 1
    %1373 = bitcast float* %1372 to i32*
    %1374 = load i32, i32* %1373, align 4, !tbaa !45
    %1375 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1, i32 1
    %1376 = bitcast float* %1375 to i32*
    store i32 %1374, i32* %1376, align 4, !tbaa !45
    %1377 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479, i32 2
    %1378 = bitcast float* %1377 to i32*
    %1379 = load i32, i32* %1378, align 4, !tbaa !45
    %1380 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1, i32 2
    %1381 = bitcast float* %1380 to i32*
    store i32 %1379, i32* %1381, align 4, !tbaa !45
    %1382 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 479, i32 3
    %1383 = bitcast float* %1382 to i32*
    %1384 = load i32, i32* %1383, align 4, !tbaa !45
    %1385 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 1, i32 3
    %1386 = bitcast float* %1385 to i32*
    store i32 %1384, i32* %1386, align 4, !tbaa !45
    %1387 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 479
    %1388 = bitcast [3 x float]* %1387 to i32*
    %1389 = load i32, i32* %1388, align 4, !tbaa !45
    %1390 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 1
    %1391 = bitcast [3 x float]* %1390 to i32*
    store i32 %1389, i32* %1391, align 4, !tbaa !45
    %1392 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 479, i32 1
    %1393 = bitcast float* %1392 to i32*
    %1394 = load i32, i32* %1393, align 4, !tbaa !45
    %1395 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 1, i32 1
    %1396 = bitcast float* %1395 to i32*
    store i32 %1394, i32* %1396, align 4, !tbaa !45
    %1397 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 479, i32 2
    %1398 = bitcast float* %1397 to i32*
    %1399 = load i32, i32* %1398, align 4, !tbaa !45
    %1400 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 1, i32 2
    %1401 = bitcast float* %1400 to i32*
    store i32 %1399, i32* %1401, align 4, !tbaa !45
    %1402 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 0
    %1403 = load i32, i32* %1402, align 4, !tbaa !46
    %1404 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 0
    store i32 %1403, i32* %1404, align 4, !tbaa !46
    %1405 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 1
    %1406 = load i32, i32* %1405, align 4, !tbaa !46
    %1407 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 1
    store i32 %1406, i32* %1407, align 4, !tbaa !46
    %1408 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 2
    %1409 = load i32, i32* %1408, align 4, !tbaa !46
    %1410 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 2
    store i32 %1409, i32* %1410, align 4, !tbaa !46
    %1411 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 479, i32 3
    %1412 = load i32, i32* %1411, align 4, !tbaa !46
    %1413 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 1, i32 3
    store i32 %1412, i32* %1413, align 4, !tbaa !46
    %1414 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 0
    %1415 = load i32, i32* %1414, align 4, !tbaa !46
    %1416 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 0
    store i32 %1415, i32* %1416, align 4, !tbaa !46
    %1417 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 1
    %1418 = load i32, i32* %1417, align 4, !tbaa !46
    %1419 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 1
    store i32 %1418, i32* %1419, align 4, !tbaa !46
    %1420 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 2
    %1421 = load i32, i32* %1420, align 4, !tbaa !46
    %1422 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 2
    store i32 %1421, i32* %1422, align 4, !tbaa !46
    %1423 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 479, i32 3
    %1424 = load i32, i32* %1423, align 4, !tbaa !46
    %1425 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 1, i32 3
    store i32 %1424, i32* %1425, align 4, !tbaa !46
    %1426 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479
    %1427 = bitcast [4 x float]* %1426 to i32*
    %1428 = load i32, i32* %1427, align 4, !tbaa !45
    %1429 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1
    %1430 = bitcast [4 x float]* %1429 to i32*
    store i32 %1428, i32* %1430, align 4, !tbaa !45
    %1431 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479, i32 1
    %1432 = bitcast float* %1431 to i32*
    %1433 = load i32, i32* %1432, align 4, !tbaa !45
    %1434 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1, i32 1
    %1435 = bitcast float* %1434 to i32*
    store i32 %1433, i32* %1435, align 4, !tbaa !45
    %1436 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479, i32 2
    %1437 = bitcast float* %1436 to i32*
    %1438 = load i32, i32* %1437, align 4, !tbaa !45
    %1439 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1, i32 2
    %1440 = bitcast float* %1439 to i32*
    store i32 %1438, i32* %1440, align 4, !tbaa !45
    %1441 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 479, i32 3
    %1442 = bitcast float* %1441 to i32*
    %1443 = load i32, i32* %1442, align 4, !tbaa !45
    %1444 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 1, i32 3
    %1445 = bitcast float* %1444 to i32*
    store i32 %1443, i32* %1445, align 4, !tbaa !45
    %1446 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 479
    %1447 = load i32, i32* %1446, align 4, !tbaa !46
    %1448 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 1
    store i32 %1447, i32* %1448, align 4, !tbaa !46
    %1449 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 479
    %1450 = load i32, i32* %1449, align 4, !tbaa !46
    %1451 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 1
    store i32 %1450, i32* %1451, align 4, !tbaa !46
    %1452 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 479
    %1453 = load i8, i8* %1452, align 1, !tbaa !42
    %1454 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 1
    store i8 %1453, i8* %1454, align 1, !tbaa !42
    %1455 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 479
    %1456 = load i8, i8* %1455, align 1, !tbaa !42
    %1457 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 1
    store i8 %1456, i8* %1457, align 1, !tbaa !42
    %sunkaddr253 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr254 = add i32 %sunkaddr253, 65536
    %sunkaddr255 = inttoptr i32 %sunkaddr254 to i32*
    store i32 2, i32* %sunkaddr255, align 4, !tbaa !39
    %1458 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 0
    %1459 = bitcast i8* %1458 to i16*
    %1460 = load i16, i16* %1459, align 4
    %1461 = icmp ult i16 %1460, 256
    %1462 = trunc i16 %1460 to i8
    %1463 = icmp eq i8 %1462, 0
    %phitmp = zext i1 %1463 to i8
    %1464 = select i1 %1461, i8 1, i8 %phitmp
    %1465 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 14
    store i8 %1464, i8* %1465, align 4, !tbaa !41
    br label %1467
  
  ; <label>:1466                                    ; preds = %0
    tail call void @abort() #7
    unreachable
  
  ; <label>:1467                                    ; preds = %1346, %render_polygon.exit, %952, %.loopexit51, %.loopexit45, %719, %.loopexit39, %441, %.loopexit33, %.loopexit27, %219, %218, %215, %71, %.loopexit23, %.loopexit, %6
    %1468 = bitcast [504 x i32]* %vlist to i8*
    %1469 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %1470 = load i32, i32* %1469, align 4, !tbaa !39
    %1471 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 15
    store i32 %1470, i32* %1471, align 4, !tbaa !47
    call void @llvm.lifetime.end(i64 2016, i8* %1468) #6
    ret void
  }
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.start(i64, i8* nocapture) #1
  
  ; Function Attrs: nounwind
  define internal fastcc void @render_clipped_line(%struct.gl_context* %ctx, i32 signext %v1, i32 signext %v2) unnamed_addr #0 {
    %1 = alloca i32, align 4
    %2 = alloca i32, align 4
    store i32 %v1, i32* %1, align 4, !tbaa !46
    store i32 %v2, i32* %2, align 4, !tbaa !46
    %3 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %4 = load %struct.vertex_buffer*, %struct.vertex_buffer** %3, align 4, !tbaa !1
    %5 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 17
    store i32 480, i32* %5, align 4, !tbaa !63
    %6 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 42, i32 3
    %7 = load i8, i8* %6, align 2, !tbaa !64
    %8 = icmp eq i8 %7, 0
    br i1 %8, label %166, label %9
  
  ; <label>:9                                       ; preds = %0
    %10 = load i32, i32* %1, align 4, !tbaa !46
    %11 = load i32, i32* %2, align 4, !tbaa !46
    %12 = call i32 @gl_userclip_line(%struct.gl_context* nonnull %ctx, i32* nonnull %1, i32* nonnull %2) #6
    %13 = icmp eq i32 %12, 0
    br i1 %13, label %.critedge, label %14
  
  ; <label>:14                                      ; preds = %9
    %15 = load i32, i32* %1, align 4, !tbaa !46
    %16 = icmp eq i32 %15, %10
    br i1 %16, label %90, label %17
  
  ; <label>:17                                      ; preds = %14
    %18 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 0
    %19 = load float, float* %18, align 4, !tbaa !45
    %20 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 1, i32 %15, i32 0
    %21 = load float, float* %20, align 4, !tbaa !45
    %22 = fmul float %19, %21
    %23 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 4
    %24 = load float, float* %23, align 4, !tbaa !45
    %25 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 1, i32 %15, i32 1
    %26 = load float, float* %25, align 4, !tbaa !45
    %27 = fmul float %24, %26
    %28 = fadd float %22, %27
    %29 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 8
    %30 = load float, float* %29, align 4, !tbaa !45
    %31 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 1, i32 %15, i32 2
    %32 = load float, float* %31, align 4, !tbaa !45
    %33 = fmul float %30, %32
    %34 = fadd float %28, %33
    %35 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 12
    %36 = load float, float* %35, align 4, !tbaa !45
    %37 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 1, i32 %15, i32 3
    %38 = load float, float* %37, align 4, !tbaa !45
    %39 = fmul float %36, %38
    %40 = fadd float %34, %39
    %41 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 2, i32 %15, i32 0
    store float %40, float* %41, align 4, !tbaa !45
    %42 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 1
    %43 = load float, float* %42, align 4, !tbaa !45
    %44 = fmul float %43, %21
    %45 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 5
    %46 = load float, float* %45, align 4, !tbaa !45
    %47 = fmul float %46, %26
    %48 = fadd float %44, %47
    %49 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 9
    %50 = load float, float* %49, align 4, !tbaa !45
    %51 = fmul float %50, %32
    %52 = fadd float %48, %51
    %53 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 13
    %54 = load float, float* %53, align 4, !tbaa !45
    %55 = fmul float %54, %38
    %56 = fadd float %52, %55
    %57 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 2, i32 %15, i32 1
    store float %56, float* %57, align 4, !tbaa !45
    %58 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 2
    %59 = load float, float* %58, align 4, !tbaa !45
    %60 = fmul float %59, %21
    %61 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 6
    %62 = load float, float* %61, align 4, !tbaa !45
    %63 = fmul float %62, %26
    %64 = fadd float %60, %63
    %65 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 10
    %66 = load float, float* %65, align 4, !tbaa !45
    %67 = fmul float %66, %32
    %68 = fadd float %64, %67
    %69 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 14
    %70 = load float, float* %69, align 4, !tbaa !45
    %71 = fmul float %70, %38
    %72 = fadd float %68, %71
    %73 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 2, i32 %15, i32 2
    store float %72, float* %73, align 4, !tbaa !45
    %74 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 3
    %75 = load float, float* %74, align 4, !tbaa !45
    %76 = fmul float %75, %21
    %77 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 7
    %78 = load float, float* %77, align 4, !tbaa !45
    %79 = fmul float %78, %26
    %80 = fadd float %76, %79
    %81 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 11
    %82 = load float, float* %81, align 4, !tbaa !45
    %83 = fmul float %82, %32
    %84 = fadd float %80, %83
    %85 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 15
    %86 = load float, float* %85, align 4, !tbaa !45
    %87 = fmul float %86, %38
    %88 = fadd float %84, %87
    %89 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 2, i32 %15, i32 3
    store float %88, float* %89, align 4, !tbaa !45
    br label %90
  
  ; <label>:90                                      ; preds = %17, %14
    %91 = load i32, i32* %2, align 4, !tbaa !46
    %92 = icmp eq i32 %91, %11
    br i1 %92, label %166, label %93
  
  ; <label>:93                                      ; preds = %90
    %94 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 0
    %95 = load float, float* %94, align 4, !tbaa !45
    %96 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 1, i32 %91, i32 0
    %97 = load float, float* %96, align 4, !tbaa !45
    %98 = fmul float %95, %97
    %99 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 4
    %100 = load float, float* %99, align 4, !tbaa !45
    %101 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 1, i32 %91, i32 1
    %102 = load float, float* %101, align 4, !tbaa !45
    %103 = fmul float %100, %102
    %104 = fadd float %98, %103
    %105 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 8
    %106 = load float, float* %105, align 4, !tbaa !45
    %107 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 1, i32 %91, i32 2
    %108 = load float, float* %107, align 4, !tbaa !45
    %109 = fmul float %106, %108
    %110 = fadd float %104, %109
    %111 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 12
    %112 = load float, float* %111, align 4, !tbaa !45
    %113 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 1, i32 %91, i32 3
    %114 = load float, float* %113, align 4, !tbaa !45
    %115 = fmul float %112, %114
    %116 = fadd float %110, %115
    %117 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 2, i32 %91, i32 0
    store float %116, float* %117, align 4, !tbaa !45
    %118 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 1
    %119 = load float, float* %118, align 4, !tbaa !45
    %120 = fmul float %119, %97
    %121 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 5
    %122 = load float, float* %121, align 4, !tbaa !45
    %123 = fmul float %122, %102
    %124 = fadd float %120, %123
    %125 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 9
    %126 = load float, float* %125, align 4, !tbaa !45
    %127 = fmul float %126, %108
    %128 = fadd float %124, %127
    %129 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 13
    %130 = load float, float* %129, align 4, !tbaa !45
    %131 = fmul float %130, %114
    %132 = fadd float %128, %131
    %133 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 2, i32 %91, i32 1
    store float %132, float* %133, align 4, !tbaa !45
    %134 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 2
    %135 = load float, float* %134, align 4, !tbaa !45
    %136 = fmul float %135, %97
    %137 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 6
    %138 = load float, float* %137, align 4, !tbaa !45
    %139 = fmul float %138, %102
    %140 = fadd float %136, %139
    %141 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 10
    %142 = load float, float* %141, align 4, !tbaa !45
    %143 = fmul float %142, %108
    %144 = fadd float %140, %143
    %145 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 14
    %146 = load float, float* %145, align 4, !tbaa !45
    %147 = fmul float %146, %114
    %148 = fadd float %144, %147
    %149 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 2, i32 %91, i32 2
    store float %148, float* %149, align 4, !tbaa !45
    %150 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 3
    %151 = load float, float* %150, align 4, !tbaa !45
    %152 = fmul float %151, %97
    %153 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 7
    %154 = load float, float* %153, align 4, !tbaa !45
    %155 = fmul float %154, %102
    %156 = fadd float %152, %155
    %157 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 11
    %158 = load float, float* %157, align 4, !tbaa !45
    %159 = fmul float %158, %108
    %160 = fadd float %156, %159
    %161 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 15
    %162 = load float, float* %161, align 4, !tbaa !45
    %163 = fmul float %162, %114
    %164 = fadd float %160, %163
    %165 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 2, i32 %91, i32 3
    store float %164, float* %165, align 4, !tbaa !45
    br label %166
  
  ; <label>:166                                     ; preds = %93, %90, %0
    %167 = call i32 @gl_viewclip_line(%struct.gl_context* nonnull %ctx, i32* nonnull %1, i32* nonnull %2) #6
    %168 = icmp eq i32 %167, 0
    br i1 %168, label %.critedge, label %169
  
  ; <label>:169                                     ; preds = %166
    %170 = load i32, i32* %1, align 4, !tbaa !46
    %171 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 2, i32 %170, i32 3
    %172 = load float, float* %171, align 4, !tbaa !45
    %173 = fdiv float 1.000000e+00, %172
    %174 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 2, i32 %170, i32 0
    %175 = load float, float* %174, align 4, !tbaa !45
    %176 = fmul float %175, %173
    %177 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 2, i32 %170, i32 1
    %178 = load float, float* %177, align 4, !tbaa !45
    %179 = fmul float %173, %178
    %180 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 2, i32 %170, i32 2
    %181 = load float, float* %180, align 4, !tbaa !45
    %182 = fmul float %173, %181
    %183 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 6
    %184 = load float, float* %183, align 4, !tbaa !65
    %185 = fmul float %176, %184
    %186 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 9
    %187 = load float, float* %186, align 4, !tbaa !66
    %188 = fadd float %185, %187
    %189 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 3, i32 %170, i32 0
    store float %188, float* %189, align 4, !tbaa !45
    %190 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 7
    %191 = load float, float* %190, align 4, !tbaa !67
    %192 = fmul float %179, %191
    %193 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 10
    %194 = load float, float* %193, align 4, !tbaa !68
    %195 = fadd float %192, %194
    %196 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 3, i32 %170, i32 1
    store float %195, float* %196, align 4, !tbaa !45
    %197 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 8
    %198 = load float, float* %197, align 4, !tbaa !69
    %199 = fmul float %182, %198
    %200 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 11
    %201 = load float, float* %200, align 4, !tbaa !70
    %202 = fadd float %199, %201
    %203 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 3, i32 %170, i32 2
    store float %202, float* %203, align 4, !tbaa !45
    %204 = load i32, i32* %2, align 4, !tbaa !46
    %205 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 2, i32 %204, i32 3
    %206 = load float, float* %205, align 4, !tbaa !45
    %207 = fdiv float 1.000000e+00, %206
    %208 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 2, i32 %204, i32 0
    %209 = load float, float* %208, align 4, !tbaa !45
    %210 = fmul float %209, %207
    %211 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 2, i32 %204, i32 1
    %212 = load float, float* %211, align 4, !tbaa !45
    %213 = fmul float %207, %212
    %214 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 2, i32 %204, i32 2
    %215 = load float, float* %214, align 4, !tbaa !45
    %216 = fmul float %207, %215
    %217 = load float, float* %183, align 4, !tbaa !65
    %218 = fmul float %210, %217
    %219 = load float, float* %186, align 4, !tbaa !66
    %220 = fadd float %218, %219
    %221 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 3, i32 %204, i32 0
    store float %220, float* %221, align 4, !tbaa !45
    %222 = load float, float* %190, align 4, !tbaa !67
    %223 = fmul float %213, %222
    %224 = load float, float* %193, align 4, !tbaa !68
    %225 = fadd float %223, %224
    %226 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 3, i32 %204, i32 1
    store float %225, float* %226, align 4, !tbaa !45
    %227 = load float, float* %197, align 4, !tbaa !69
    %228 = fmul float %216, %227
    %229 = load float, float* %200, align 4, !tbaa !70
    %230 = fadd float %228, %229
    %231 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 3, i32 %204, i32 2
    store float %230, float* %231, align 4, !tbaa !45
    %232 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 70
    %233 = load void (%struct.gl_context*, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32)** %232, align 4, !tbaa !43
    call void %233(%struct.gl_context* nonnull %ctx, i32 signext %170, i32 signext %204, i32 signext %v2) #6
    br label %.critedge
  
  .critedge:                                        ; preds = %169, %166, %9
    ret void
  }
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.end(i64, i8* nocapture) #1
  
  ; Function Attrs: nounwind
  define internal fastcc void @render_triangle(%struct.gl_context* %ctx, i32 signext %v0, i32 signext %v1, i32 signext %v2, i32 signext %pv, i32 signext %odd_flag) unnamed_addr #0 {
    %vlist = alloca [3 x i32], align 4
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %2 = load %struct.vertex_buffer*, %struct.vertex_buffer** %1, align 4, !tbaa !1
    %3 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v1, i32 0
    %4 = load float, float* %3, align 4, !tbaa !45
    %5 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v0, i32 0
    %6 = load float, float* %5, align 4, !tbaa !45
    %7 = fsub float %4, %6
    %8 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v1, i32 1
    %9 = load float, float* %8, align 4, !tbaa !45
    %10 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v0, i32 1
    %11 = load float, float* %10, align 4, !tbaa !45
    %12 = fsub float %9, %11
    %13 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v2, i32 0
    %14 = load float, float* %13, align 4, !tbaa !45
    %15 = fsub float %14, %6
    %16 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v2, i32 1
    %17 = load float, float* %16, align 4, !tbaa !45
    %18 = fsub float %17, %11
    %19 = fmul float %7, %18
    %20 = fmul float %12, %15
    %21 = fsub float %19, %20
    %22 = fcmp oeq float %21, 0.000000e+00
    br i1 %22, label %119, label %23
  
  ; <label>:23                                      ; preds = %0
    %24 = fcmp olt float %21, 0.000000e+00
    %25 = zext i1 %24 to i32
    %26 = xor i32 %25, %odd_flag
    %27 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 0
    %28 = load i32, i32* %27, align 4, !tbaa !50
    %29 = icmp eq i32 %28, 2304
    %30 = zext i1 %29 to i32
    %31 = xor i32 %26, %30
    %32 = add i32 %31, 1
    %33 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 6
    %34 = load i32, i32* %33, align 4, !tbaa !51
    %35 = and i32 %32, %34
    %36 = icmp eq i32 %35, 0
    br i1 %36, label %37, label %119
  
  ; <label>:37                                      ; preds = %23
    %38 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 14
    %39 = load i8, i8* %38, align 1, !tbaa !52
    %40 = icmp eq i8 %39, 0
    br i1 %40, label %87, label %41
  
  ; <label>:41                                      ; preds = %37
    %42 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v2, i32 2
    %43 = load float, float* %42, align 4, !tbaa !45
    %44 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v0, i32 2
    %45 = load float, float* %44, align 4, !tbaa !45
    %46 = fsub float %43, %45
    %47 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v1, i32 2
    %48 = load float, float* %47, align 4, !tbaa !45
    %49 = fsub float %48, %45
    %50 = fcmp olt float %21, 0x3F50624DE0000000
    %51 = fcmp ogt float %21, 0xBF50624DE0000000
    %or.cond.i = and i1 %50, %51
    br i1 %or.cond.i, label %offset_polygon.exit, label %52
  
  ; <label>:52                                      ; preds = %41
    %53 = fmul float %15, %49
    %54 = fmul float %7, %46
    %55 = fsub float %53, %54
    %56 = fmul float %12, %46
    %57 = fmul float %18, %49
    %58 = fsub float %56, %57
    %59 = fdiv float %58, %21
    %60 = fdiv float %55, %21
    %61 = fcmp olt float %59, 0.000000e+00
    %62 = fsub float -0.000000e+00, %59
    %ac.0.i = select i1 %61, float %62, float %59
    %63 = fcmp olt float %60, 0.000000e+00
    %64 = fsub float -0.000000e+00, %60
    %bc.0.i = select i1 %63, float %64, float %60
    %65 = fcmp ogt float %ac.0.i, %bc.0.i
    %66 = select i1 %65, float %ac.0.i, float %bc.0.i
    %67 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 9
    %68 = load float, float* %67, align 4, !tbaa !53
    %69 = fmul float %66, %68
    %70 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 10
    %71 = load float, float* %70, align 4, !tbaa !54
    %72 = fadd float %69, %71
    br label %offset_polygon.exit
  
  offset_polygon.exit:                              ; preds = %52, %41
    %offset.0.i = phi float [ %72, %52 ], [ 0.000000e+00, %41 ]
    %73 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 11
    %74 = bitcast i8* %73 to i32*
    %75 = load i32, i32* %74, align 4
    %76 = icmp ugt i32 %75, 16777215
    %77 = select i1 %76, float %offset.0.i, float 0.000000e+00
    %78 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 63
    store float %77, float* %78, align 4, !tbaa !55
    %79 = and i32 %75, 16711680
    %80 = icmp ne i32 %79, 0
    %81 = select i1 %80, float %offset.0.i, float 0.000000e+00
    %82 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 62
    store float %81, float* %82, align 4, !tbaa !56
    %83 = and i32 %75, 65280
    %84 = icmp ne i32 %83, 0
    %85 = select i1 %84, float %offset.0.i, float 0.000000e+00
    %86 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 61
    store float %85, float* %86, align 4, !tbaa !57
    br label %87
  
  ; <label>:87                                      ; preds = %offset_polygon.exit, %37
    %88 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 1, i32 2
    %89 = load i8, i8* %88, align 1, !tbaa !58
    %90 = icmp eq i8 %89, 0
    br i1 %90, label %107, label %91
  
  ; <label>:91                                      ; preds = %87
    %92 = icmp eq i32 %31, 1
    br i1 %92, label %93, label %102
  
  ; <label>:93                                      ; preds = %91
    %94 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 3
    %95 = load i8, i8* %94, align 4, !tbaa !59
    %96 = icmp eq i8 %95, 0
    br i1 %96, label %102, label %97
  
  ; <label>:97                                      ; preds = %93
    %98 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 0
    %99 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 7
    store [4 x i32]* %98, [4 x i32]** %99, align 4, !tbaa !60
    %100 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 0
    %101 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 10
    store i32* %100, i32** %101, align 4, !tbaa !61
    br label %107
  
  ; <label>:102                                     ; preds = %93, %91
    %103 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 0
    %104 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 7
    store [4 x i32]* %103, [4 x i32]** %104, align 4, !tbaa !60
    %105 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 0
    %106 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 10
    store i32* %105, i32** %106, align 4, !tbaa !61
    br label %107
  
  ; <label>:107                                     ; preds = %102, %97, %87
    %108 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 3
    %109 = load i8, i8* %108, align 4, !tbaa !62
    %110 = icmp eq i8 %109, 0
    br i1 %110, label %116, label %111
  
  ; <label>:111                                     ; preds = %107
    %112 = bitcast [3 x i32]* %vlist to i8*
    call void @llvm.lifetime.start(i64 12, i8* %112) #6
    %113 = bitcast [3 x i32]* %vlist to i32*
    store i32 %v0, i32* %113, align 4, !tbaa !46
    %114 = getelementptr inbounds [3 x i32], [3 x i32]* %vlist, i32 0, i32 1
    store i32 %v1, i32* %114, align 4, !tbaa !46
    %115 = getelementptr inbounds [3 x i32], [3 x i32]* %vlist, i32 0, i32 2
    store i32 %v2, i32* %115, align 4, !tbaa !46
    call fastcc void @unfilled_polygon(%struct.gl_context* nonnull %ctx, i32 signext 3, i32* %113, i32 signext %pv, i32 signext %31)
    call void @llvm.lifetime.end(i64 12, i8* %112) #6
    br label %119
  
  ; <label>:116                                     ; preds = %107
    %117 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 73
    %118 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %117, align 4, !tbaa !49
    tail call void %118(%struct.gl_context* nonnull %ctx, i32 signext %v0, i32 signext %v1, i32 signext %v2, i32 signext %pv) #6
    br label %119
  
  ; <label>:119                                     ; preds = %116, %111, %23, %0
    ret void
  }
  
  ; Function Attrs: nounwind
  define internal fastcc void @render_clipped_polygon(%struct.gl_context* %ctx, i32 signext %n, i32* %vlist, i32 signext %odd_flag) unnamed_addr #0 {
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %2 = load %struct.vertex_buffer*, %struct.vertex_buffer** %1, align 4, !tbaa !1
    %3 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 55
    %4 = load i32, i32* %3, align 4, !tbaa !37
    %5 = icmp eq i32 %4, 9
    %6 = add i32 %n, -1
    %7 = getelementptr inbounds i32, i32* %vlist, i32 %6
    %.in = select i1 %5, i32* %vlist, i32* %7
    %8 = load i32, i32* %.in, align 4, !tbaa !46
    %9 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 17
    store i32 480, i32* %9, align 4, !tbaa !63
    %10 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 42, i32 3
    %11 = load i8, i8* %10, align 2, !tbaa !64
    %12 = icmp eq i8 %11, 0
    br i1 %12, label %.loopexit, label %13
  
  ; <label>:13                                      ; preds = %0
    %14 = tail call i32 @gl_userclip_polygon(%struct.gl_context* nonnull %ctx, i32 signext %n, i32* %vlist) #6
    %15 = icmp ult i32 %14, 3
    br i1 %15, label %.critedge, label %.lr.ph16
  
  .lr.ph16:                                         ; preds = %13
    br label %16
  
  ; <label>:16                                      ; preds = %16, %.lr.ph16
    %lsr.iv12 = phi i32* [ %scevgep13, %16 ], [ %vlist, %.lr.ph16 ]
    %lsr.iv10 = phi i32 [ %lsr.iv.next11, %16 ], [ %14, %.lr.ph16 ]
    %17 = load i32, i32* %lsr.iv12, align 4, !tbaa !46
    %sunkaddr = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr14 = add i32 %sunkaddr, 4396
    %sunkaddr15 = inttoptr i32 %sunkaddr14 to float*
    %18 = load float, float* %sunkaddr15, align 4, !tbaa !45
    %19 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 %17, i32 0
    %20 = load float, float* %19, align 4, !tbaa !45
    %21 = fmul float %18, %20
    %sunkaddr16 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr17 = add i32 %sunkaddr16, 4412
    %sunkaddr18 = inttoptr i32 %sunkaddr17 to float*
    %22 = load float, float* %sunkaddr18, align 4, !tbaa !45
    %23 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 %17, i32 1
    %24 = load float, float* %23, align 4, !tbaa !45
    %25 = fmul float %22, %24
    %26 = fadd float %21, %25
    %sunkaddr19 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr20 = add i32 %sunkaddr19, 4428
    %sunkaddr21 = inttoptr i32 %sunkaddr20 to float*
    %27 = load float, float* %sunkaddr21, align 4, !tbaa !45
    %28 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 %17, i32 2
    %29 = load float, float* %28, align 4, !tbaa !45
    %30 = fmul float %27, %29
    %31 = fadd float %26, %30
    %sunkaddr22 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr23 = add i32 %sunkaddr22, 4444
    %sunkaddr24 = inttoptr i32 %sunkaddr23 to float*
    %32 = load float, float* %sunkaddr24, align 4, !tbaa !45
    %33 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 %17, i32 3
    %34 = load float, float* %33, align 4, !tbaa !45
    %35 = fmul float %32, %34
    %36 = fadd float %31, %35
    %37 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 %17, i32 0
    store float %36, float* %37, align 4, !tbaa !45
    %sunkaddr25 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr26 = add i32 %sunkaddr25, 4400
    %sunkaddr27 = inttoptr i32 %sunkaddr26 to float*
    %38 = load float, float* %sunkaddr27, align 4, !tbaa !45
    %39 = fmul float %38, %20
    %sunkaddr28 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr29 = add i32 %sunkaddr28, 4416
    %sunkaddr30 = inttoptr i32 %sunkaddr29 to float*
    %40 = load float, float* %sunkaddr30, align 4, !tbaa !45
    %41 = fmul float %40, %24
    %42 = fadd float %39, %41
    %sunkaddr31 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr32 = add i32 %sunkaddr31, 4432
    %sunkaddr33 = inttoptr i32 %sunkaddr32 to float*
    %43 = load float, float* %sunkaddr33, align 4, !tbaa !45
    %44 = fmul float %43, %29
    %45 = fadd float %42, %44
    %sunkaddr34 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr35 = add i32 %sunkaddr34, 4448
    %sunkaddr36 = inttoptr i32 %sunkaddr35 to float*
    %46 = load float, float* %sunkaddr36, align 4, !tbaa !45
    %47 = fmul float %46, %34
    %48 = fadd float %45, %47
    %49 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 %17, i32 1
    store float %48, float* %49, align 4, !tbaa !45
    %sunkaddr37 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr38 = add i32 %sunkaddr37, 4404
    %sunkaddr39 = inttoptr i32 %sunkaddr38 to float*
    %50 = load float, float* %sunkaddr39, align 4, !tbaa !45
    %51 = fmul float %50, %20
    %sunkaddr40 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr41 = add i32 %sunkaddr40, 4420
    %sunkaddr42 = inttoptr i32 %sunkaddr41 to float*
    %52 = load float, float* %sunkaddr42, align 4, !tbaa !45
    %53 = fmul float %52, %24
    %54 = fadd float %51, %53
    %sunkaddr43 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr44 = add i32 %sunkaddr43, 4436
    %sunkaddr45 = inttoptr i32 %sunkaddr44 to float*
    %55 = load float, float* %sunkaddr45, align 4, !tbaa !45
    %56 = fmul float %55, %29
    %57 = fadd float %54, %56
    %sunkaddr46 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr47 = add i32 %sunkaddr46, 4452
    %sunkaddr48 = inttoptr i32 %sunkaddr47 to float*
    %58 = load float, float* %sunkaddr48, align 4, !tbaa !45
    %59 = fmul float %58, %34
    %60 = fadd float %57, %59
    %61 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 %17, i32 2
    store float %60, float* %61, align 4, !tbaa !45
    %sunkaddr49 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr50 = add i32 %sunkaddr49, 4408
    %sunkaddr51 = inttoptr i32 %sunkaddr50 to float*
    %62 = load float, float* %sunkaddr51, align 4, !tbaa !45
    %63 = fmul float %62, %20
    %sunkaddr52 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr53 = add i32 %sunkaddr52, 4424
    %sunkaddr54 = inttoptr i32 %sunkaddr53 to float*
    %64 = load float, float* %sunkaddr54, align 4, !tbaa !45
    %65 = fmul float %64, %24
    %66 = fadd float %63, %65
    %sunkaddr55 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr56 = add i32 %sunkaddr55, 4440
    %sunkaddr57 = inttoptr i32 %sunkaddr56 to float*
    %67 = load float, float* %sunkaddr57, align 4, !tbaa !45
    %68 = fmul float %67, %29
    %69 = fadd float %66, %68
    %sunkaddr58 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr59 = add i32 %sunkaddr58, 4456
    %sunkaddr60 = inttoptr i32 %sunkaddr59 to float*
    %70 = load float, float* %sunkaddr60, align 4, !tbaa !45
    %71 = fmul float %70, %34
    %72 = fadd float %69, %71
    %73 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 %17, i32 3
    store float %72, float* %73, align 4, !tbaa !45
    %lsr.iv.next11 = add i32 %lsr.iv10, -1
    %scevgep13 = getelementptr i32, i32* %lsr.iv12, i32 1
    %exitcond18 = icmp eq i32 %lsr.iv.next11, 0
    br i1 %exitcond18, label %.loopexit, label %16
  
  .loopexit:                                        ; preds = %16, %0
    %.0 = phi i32 [ %n, %0 ], [ %14, %16 ]
    %74 = tail call i32 @gl_viewclip_polygon(%struct.gl_context* nonnull %ctx, i32 signext %.0, i32* %vlist) #6
    %75 = icmp ult i32 %74, 3
    br i1 %75, label %.critedge, label %.lr.ph14.preheader
  
  .lr.ph14.preheader:                               ; preds = %.loopexit
    %76 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 6
    %77 = load float, float* %76, align 4, !tbaa !65
    %78 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 9
    %79 = load float, float* %78, align 4, !tbaa !66
    %80 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 7
    %81 = load float, float* %80, align 4, !tbaa !67
    %82 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 10
    %83 = load float, float* %82, align 4, !tbaa !68
    %84 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 8
    %85 = load float, float* %84, align 4, !tbaa !69
    %86 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 11
    %87 = load float, float* %86, align 4, !tbaa !70
    br label %.lr.ph14
  
  .lr.ph14:                                         ; preds = %.lr.ph14, %.lr.ph14.preheader
    %lsr.iv8 = phi i32* [ %scevgep9, %.lr.ph14 ], [ %vlist, %.lr.ph14.preheader ]
    %lsr.iv6 = phi i32 [ %lsr.iv.next7, %.lr.ph14 ], [ %74, %.lr.ph14.preheader ]
    %88 = load i32, i32* %lsr.iv8, align 4, !tbaa !46
    %89 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 %88, i32 3
    %90 = load float, float* %89, align 4, !tbaa !45
    %91 = fdiv float 1.000000e+00, %90
    %92 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 %88, i32 0
    %93 = load float, float* %92, align 4, !tbaa !45
    %94 = fmul float %93, %91
    %95 = fmul float %77, %94
    %96 = fadd float %79, %95
    %97 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %88, i32 0
    store float %96, float* %97, align 4, !tbaa !45
    %98 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 %88, i32 1
    %99 = load float, float* %98, align 4, !tbaa !45
    %100 = fmul float %91, %99
    %101 = fmul float %81, %100
    %102 = fadd float %83, %101
    %103 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %88, i32 1
    store float %102, float* %103, align 4, !tbaa !45
    %104 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 %88, i32 2
    %105 = load float, float* %104, align 4, !tbaa !45
    %106 = fmul float %91, %105
    %107 = fmul float %85, %106
    %108 = fadd float %87, %107
    %109 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %88, i32 2
    store float %108, float* %109, align 4, !tbaa !45
    %lsr.iv.next7 = add i32 %lsr.iv6, -1
    %scevgep9 = getelementptr i32, i32* %lsr.iv8, i32 1
    %exitcond17 = icmp eq i32 %lsr.iv.next7, 0
    br i1 %exitcond17, label %.lr.ph.i.preheader, label %.lr.ph14
  
  .lr.ph.i.preheader:                               ; preds = %.lr.ph14
    %110 = add i32 %74, -1
    br label %.lr.ph.i
  
  .lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.i.preheader
    %lsr.iv4 = phi i32* [ %scevgep5, %.lr.ph.i ], [ %vlist, %.lr.ph.i.preheader ]
    %area.02.i = phi float [ %127, %.lr.ph.i ], [ 0.000000e+00, %.lr.ph.i.preheader ]
    %i.01.i = phi i32 [ %112, %.lr.ph.i ], [ 0, %.lr.ph.i.preheader ]
    %111 = load i32, i32* %lsr.iv4, align 4, !tbaa !46
    %112 = add nuw nsw i32 %i.01.i, 1
    %113 = icmp eq i32 %110, %i.01.i
    %tmp.i = select i1 %113, i32 0, i32 %112
    %114 = getelementptr inbounds i32, i32* %vlist, i32 %tmp.i
    %115 = load i32, i32* %114, align 4, !tbaa !46
    %116 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %111, i32 0
    %117 = load float, float* %116, align 4, !tbaa !45
    %118 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %111, i32 1
    %119 = load float, float* %118, align 4, !tbaa !45
    %120 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %115, i32 0
    %121 = load float, float* %120, align 4, !tbaa !45
    %122 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %115, i32 1
    %123 = load float, float* %122, align 4, !tbaa !45
    %124 = fsub float %117, %121
    %125 = fadd float %119, %123
    %126 = fmul float %124, %125
    %127 = fadd float %area.02.i, %126
    %scevgep5 = getelementptr i32, i32* %lsr.iv4, i32 1
    %.lr.ph.i.termcond = icmp eq i32 %74, %112
    br i1 %.lr.ph.i.termcond, label %polygon_area.exit, label %.lr.ph.i
  
  polygon_area.exit:                                ; preds = %.lr.ph.i
    %phitmp.i = fmul float %127, 5.000000e-01
    %128 = fcmp oeq float %phitmp.i, 0.000000e+00
    br i1 %128, label %.critedge, label %129
  
  ; <label>:129                                     ; preds = %polygon_area.exit
    %130 = fcmp olt float %phitmp.i, 0.000000e+00
    %131 = zext i1 %130 to i32
    %132 = xor i32 %131, %odd_flag
    %133 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 0
    %134 = load i32, i32* %133, align 4, !tbaa !50
    %135 = icmp eq i32 %134, 2304
    %136 = zext i1 %135 to i32
    %137 = xor i32 %132, %136
    %138 = add i32 %137, 1
    %139 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 6
    %140 = load i32, i32* %139, align 4, !tbaa !51
    %141 = and i32 %138, %140
    %142 = icmp eq i32 %141, 0
    br i1 %142, label %143, label %.critedge
  
  ; <label>:143                                     ; preds = %129
    %144 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 14
    %145 = load i8, i8* %144, align 1, !tbaa !52
    %146 = icmp eq i8 %145, 0
    br i1 %146, label %227, label %147
  
  ; <label>:147                                     ; preds = %143
    %148 = load i32, i32* %vlist, align 4, !tbaa !46
    %149 = getelementptr inbounds i32, i32* %vlist, i32 1
    %150 = load i32, i32* %149, align 4, !tbaa !46
    %151 = getelementptr inbounds i32, i32* %vlist, i32 2
    %152 = load i32, i32* %151, align 4, !tbaa !46
    %153 = icmp eq i32 %74, 3
    %154 = select i1 %153, i32 0, i32 3
    %155 = getelementptr inbounds i32, i32* %vlist, i32 %154
    %156 = load i32, i32* %155, align 4, !tbaa !46
    %157 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %150, i32 0
    %158 = load float, float* %157, align 4, !tbaa !45
    %159 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %156, i32 0
    %160 = load float, float* %159, align 4, !tbaa !45
    %161 = fsub float %158, %160
    %162 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %150, i32 1
    %163 = load float, float* %162, align 4, !tbaa !45
    %164 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %156, i32 1
    %165 = load float, float* %164, align 4, !tbaa !45
    %166 = fsub float %163, %165
    %167 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %150, i32 2
    %168 = load float, float* %167, align 4, !tbaa !45
    %169 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %156, i32 2
    %170 = load float, float* %169, align 4, !tbaa !45
    %171 = fsub float %168, %170
    %172 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %152, i32 0
    %173 = load float, float* %172, align 4, !tbaa !45
    %174 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %148, i32 0
    %175 = load float, float* %174, align 4, !tbaa !45
    %176 = fsub float %173, %175
    %177 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %152, i32 1
    %178 = load float, float* %177, align 4, !tbaa !45
    %179 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %148, i32 1
    %180 = load float, float* %179, align 4, !tbaa !45
    %181 = fsub float %178, %180
    %182 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %152, i32 2
    %183 = load float, float* %182, align 4, !tbaa !45
    %184 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %148, i32 2
    %185 = load float, float* %184, align 4, !tbaa !45
    %186 = fsub float %183, %185
    %187 = fmul float %161, %181
    %188 = fmul float %166, %176
    %189 = fsub float %187, %188
    %190 = fcmp olt float %189, 0x3F50624DE0000000
    %191 = fcmp ogt float %189, 0xBF50624DE0000000
    %or.cond.i = and i1 %190, %191
    br i1 %or.cond.i, label %offset_polygon.exit, label %192
  
  ; <label>:192                                     ; preds = %147
    %193 = fmul float %171, %176
    %194 = fmul float %161, %186
    %195 = fsub float %193, %194
    %196 = fmul float %166, %186
    %197 = fmul float %171, %181
    %198 = fsub float %196, %197
    %199 = fdiv float %198, %189
    %200 = fdiv float %195, %189
    %201 = fcmp olt float %199, 0.000000e+00
    %202 = fsub float -0.000000e+00, %199
    %ac.0.i = select i1 %201, float %202, float %199
    %203 = fcmp olt float %200, 0.000000e+00
    %204 = fsub float -0.000000e+00, %200
    %bc.0.i = select i1 %203, float %204, float %200
    %205 = fcmp ogt float %ac.0.i, %bc.0.i
    %206 = select i1 %205, float %ac.0.i, float %bc.0.i
    %207 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 9
    %208 = load float, float* %207, align 4, !tbaa !53
    %209 = fmul float %206, %208
    %210 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 10
    %211 = load float, float* %210, align 4, !tbaa !54
    %212 = fadd float %209, %211
    br label %offset_polygon.exit
  
  offset_polygon.exit:                              ; preds = %192, %147
    %offset.0.i = phi float [ %212, %192 ], [ 0.000000e+00, %147 ]
    %213 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 11
    %214 = bitcast i8* %213 to i32*
    %215 = load i32, i32* %214, align 4
    %216 = icmp ugt i32 %215, 16777215
    %217 = select i1 %216, float %offset.0.i, float 0.000000e+00
    %218 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 63
    store float %217, float* %218, align 4, !tbaa !55
    %219 = and i32 %215, 16711680
    %220 = icmp ne i32 %219, 0
    %221 = select i1 %220, float %offset.0.i, float 0.000000e+00
    %222 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 62
    store float %221, float* %222, align 4, !tbaa !56
    %223 = and i32 %215, 65280
    %224 = icmp ne i32 %223, 0
    %225 = select i1 %224, float %offset.0.i, float 0.000000e+00
    %226 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 61
    store float %225, float* %226, align 4, !tbaa !57
    br label %227
  
  ; <label>:227                                     ; preds = %offset_polygon.exit, %143
    %228 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 1, i32 2
    %229 = load i8, i8* %228, align 1, !tbaa !58
    %230 = icmp eq i8 %229, 0
    br i1 %230, label %247, label %231
  
  ; <label>:231                                     ; preds = %227
    %232 = icmp eq i32 %137, 1
    br i1 %232, label %233, label %242
  
  ; <label>:233                                     ; preds = %231
    %234 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 3
    %235 = load i8, i8* %234, align 4, !tbaa !59
    %236 = icmp eq i8 %235, 0
    br i1 %236, label %242, label %237
  
  ; <label>:237                                     ; preds = %233
    %238 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 0
    %239 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 7
    store [4 x i32]* %238, [4 x i32]** %239, align 4, !tbaa !60
    %240 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 0
    %241 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 10
    store i32* %240, i32** %241, align 4, !tbaa !61
    br label %247
  
  ; <label>:242                                     ; preds = %233, %231
    %243 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 0
    %244 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 7
    store [4 x i32]* %243, [4 x i32]** %244, align 4, !tbaa !60
    %245 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 0
    %246 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 10
    store i32* %245, i32** %246, align 4, !tbaa !61
    br label %247
  
  ; <label>:247                                     ; preds = %242, %237, %227
    %248 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 3
    %249 = load i8, i8* %248, align 4, !tbaa !62
    %250 = icmp eq i8 %249, 0
    br i1 %250, label %252, label %251
  
  ; <label>:251                                     ; preds = %247
    tail call fastcc void @unfilled_polygon(%struct.gl_context* nonnull %ctx, i32 signext %74, i32* %vlist, i32 signext %8, i32 signext %137)
    br label %.critedge
  
  ; <label>:252                                     ; preds = %247
    %253 = load i32, i32* %vlist, align 4, !tbaa !46
    %254 = icmp ugt i32 %74, 2
    br i1 %254, label %.lr.ph, label %.critedge
  
  .lr.ph:                                           ; preds = %252
    %255 = add i32 %74, -2
    %scevgep = getelementptr i32, i32* %vlist, i32 2
    br label %256
  
  ; <label>:256                                     ; preds = %256, %.lr.ph
    %lsr.iv1 = phi i32* [ %scevgep2, %256 ], [ %scevgep, %.lr.ph ]
    %lsr.iv = phi i32 [ %lsr.iv.next, %256 ], [ %255, %.lr.ph ]
    %sunkaddr61 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr62 = add i32 %sunkaddr61, 55804
    %sunkaddr63 = inttoptr i32 %sunkaddr62 to void (%struct.gl_context*, i32, i32, i32, i32)**
    %257 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %sunkaddr63, align 4, !tbaa !49
    %scevgep3 = getelementptr i32, i32* %lsr.iv1, i32 -1
    %258 = load i32, i32* %scevgep3, align 4, !tbaa !46
    %259 = load i32, i32* %lsr.iv1, align 4, !tbaa !46
    tail call void %257(%struct.gl_context* nonnull %ctx, i32 signext %253, i32 signext %258, i32 signext %259, i32 signext %8) #6
    %lsr.iv.next = add i32 %lsr.iv, -1
    %scevgep2 = getelementptr i32, i32* %lsr.iv1, i32 1
    %exitcond = icmp eq i32 %lsr.iv.next, 0
    br i1 %exitcond, label %.critedge, label %256
  
  .critedge:                                        ; preds = %256, %252, %251, %129, %polygon_area.exit, %.loopexit, %13
    ret void
  }
  
  ; Function Attrs: nounwind
  define internal fastcc void @render_quad(%struct.gl_context* %ctx, i32 signext %v0, i32 signext %v1, i32 signext %v2, i32 signext %v3, i32 signext %pv, i32 signext %odd_flag) unnamed_addr #0 {
    %vlist = alloca [4 x i32], align 4
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %2 = load %struct.vertex_buffer*, %struct.vertex_buffer** %1, align 4, !tbaa !1
    %3 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v2, i32 0
    %4 = load float, float* %3, align 4, !tbaa !45
    %5 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v0, i32 0
    %6 = load float, float* %5, align 4, !tbaa !45
    %7 = fsub float %4, %6
    %8 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v2, i32 1
    %9 = load float, float* %8, align 4, !tbaa !45
    %10 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v0, i32 1
    %11 = load float, float* %10, align 4, !tbaa !45
    %12 = fsub float %9, %11
    %13 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v3, i32 0
    %14 = load float, float* %13, align 4, !tbaa !45
    %15 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v1, i32 0
    %16 = load float, float* %15, align 4, !tbaa !45
    %17 = fsub float %14, %16
    %18 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v3, i32 1
    %19 = load float, float* %18, align 4, !tbaa !45
    %20 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v1, i32 1
    %21 = load float, float* %20, align 4, !tbaa !45
    %22 = fsub float %19, %21
    %23 = fmul float %7, %22
    %24 = fmul float %12, %17
    %25 = fsub float %23, %24
    %26 = fcmp oeq float %25, 0.000000e+00
    br i1 %26, label %127, label %27
  
  ; <label>:27                                      ; preds = %0
    %28 = fcmp olt float %25, 0.000000e+00
    %29 = zext i1 %28 to i32
    %30 = xor i32 %29, %odd_flag
    %31 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 0
    %32 = load i32, i32* %31, align 4, !tbaa !50
    %33 = icmp eq i32 %32, 2304
    %34 = zext i1 %33 to i32
    %35 = xor i32 %30, %34
    %36 = add i32 %35, 1
    %37 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 6
    %38 = load i32, i32* %37, align 4, !tbaa !51
    %39 = and i32 %36, %38
    %40 = icmp eq i32 %39, 0
    br i1 %40, label %41, label %127
  
  ; <label>:41                                      ; preds = %27
    %42 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 14
    %43 = load i8, i8* %42, align 1, !tbaa !52
    %44 = icmp eq i8 %43, 0
    br i1 %44, label %93, label %45
  
  ; <label>:45                                      ; preds = %41
    %46 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v2, i32 2
    %47 = load float, float* %46, align 4, !tbaa !45
    %48 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v0, i32 2
    %49 = load float, float* %48, align 4, !tbaa !45
    %50 = fsub float %47, %49
    %51 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v3, i32 2
    %52 = load float, float* %51, align 4, !tbaa !45
    %53 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 3, i32 %v1, i32 2
    %54 = load float, float* %53, align 4, !tbaa !45
    %55 = fsub float %52, %54
    %56 = fcmp olt float %25, 0x3F50624DE0000000
    %57 = fcmp ogt float %25, 0xBF50624DE0000000
    %or.cond.i = and i1 %56, %57
    br i1 %or.cond.i, label %offset_polygon.exit, label %58
  
  ; <label>:58                                      ; preds = %45
    %59 = fmul float %17, %50
    %60 = fmul float %7, %55
    %61 = fsub float %59, %60
    %62 = fmul float %12, %55
    %63 = fmul float %22, %50
    %64 = fsub float %62, %63
    %65 = fdiv float %64, %25
    %66 = fdiv float %61, %25
    %67 = fcmp olt float %65, 0.000000e+00
    %68 = fsub float -0.000000e+00, %65
    %ac.0.i = select i1 %67, float %68, float %65
    %69 = fcmp olt float %66, 0.000000e+00
    %70 = fsub float -0.000000e+00, %66
    %bc.0.i = select i1 %69, float %70, float %66
    %71 = fcmp ogt float %ac.0.i, %bc.0.i
    %72 = select i1 %71, float %ac.0.i, float %bc.0.i
    %73 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 9
    %74 = load float, float* %73, align 4, !tbaa !53
    %75 = fmul float %72, %74
    %76 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 10
    %77 = load float, float* %76, align 4, !tbaa !54
    %78 = fadd float %75, %77
    br label %offset_polygon.exit
  
  offset_polygon.exit:                              ; preds = %58, %45
    %offset.0.i = phi float [ %78, %58 ], [ 0.000000e+00, %45 ]
    %79 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 11
    %80 = bitcast i8* %79 to i32*
    %81 = load i32, i32* %80, align 4
    %82 = icmp ugt i32 %81, 16777215
    %83 = select i1 %82, float %offset.0.i, float 0.000000e+00
    %84 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 63
    store float %83, float* %84, align 4, !tbaa !55
    %85 = and i32 %81, 16711680
    %86 = icmp ne i32 %85, 0
    %87 = select i1 %86, float %offset.0.i, float 0.000000e+00
    %88 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 62
    store float %87, float* %88, align 4, !tbaa !56
    %89 = and i32 %81, 65280
    %90 = icmp ne i32 %89, 0
    %91 = select i1 %90, float %offset.0.i, float 0.000000e+00
    %92 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 61
    store float %91, float* %92, align 4, !tbaa !57
    br label %93
  
  ; <label>:93                                      ; preds = %offset_polygon.exit, %41
    %94 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 1, i32 2
    %95 = load i8, i8* %94, align 1, !tbaa !58
    %96 = icmp eq i8 %95, 0
    br i1 %96, label %113, label %97
  
  ; <label>:97                                      ; preds = %93
    %98 = icmp eq i32 %35, 1
    br i1 %98, label %99, label %108
  
  ; <label>:99                                      ; preds = %97
    %100 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 3
    %101 = load i8, i8* %100, align 4, !tbaa !59
    %102 = icmp eq i8 %101, 0
    br i1 %102, label %108, label %103
  
  ; <label>:103                                     ; preds = %99
    %104 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 0
    %105 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 7
    store [4 x i32]* %104, [4 x i32]** %105, align 4, !tbaa !60
    %106 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 0
    %107 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 10
    store i32* %106, i32** %107, align 4, !tbaa !61
    br label %113
  
  ; <label>:108                                     ; preds = %99, %97
    %109 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 0
    %110 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 7
    store [4 x i32]* %109, [4 x i32]** %110, align 4, !tbaa !60
    %111 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 0
    %112 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 10
    store i32* %111, i32** %112, align 4, !tbaa !61
    br label %113
  
  ; <label>:113                                     ; preds = %108, %103, %93
    %114 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 3
    %115 = load i8, i8* %114, align 4, !tbaa !62
    %116 = icmp eq i8 %115, 0
    br i1 %116, label %123, label %117
  
  ; <label>:117                                     ; preds = %113
    %118 = bitcast [4 x i32]* %vlist to i8*
    call void @llvm.lifetime.start(i64 16, i8* %118) #6
    %119 = bitcast [4 x i32]* %vlist to i32*
    store i32 %v0, i32* %119, align 4, !tbaa !46
    %120 = getelementptr inbounds [4 x i32], [4 x i32]* %vlist, i32 0, i32 1
    store i32 %v1, i32* %120, align 4, !tbaa !46
    %121 = getelementptr inbounds [4 x i32], [4 x i32]* %vlist, i32 0, i32 2
    store i32 %v2, i32* %121, align 4, !tbaa !46
    %122 = getelementptr inbounds [4 x i32], [4 x i32]* %vlist, i32 0, i32 3
    store i32 %v3, i32* %122, align 4, !tbaa !46
    call fastcc void @unfilled_polygon(%struct.gl_context* nonnull %ctx, i32 signext 4, i32* %119, i32 signext %pv, i32 signext %35)
    call void @llvm.lifetime.end(i64 16, i8* %118) #6
    br label %127
  
  ; <label>:123                                     ; preds = %113
    %124 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 73
    %125 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %124, align 4, !tbaa !49
    tail call void %125(%struct.gl_context* nonnull %ctx, i32 signext %v0, i32 signext %v1, i32 signext %v3, i32 signext %pv) #6
    %126 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %124, align 4, !tbaa !49
    tail call void %126(%struct.gl_context* nonnull %ctx, i32 signext %v1, i32 signext %v2, i32 signext %v3, i32 signext %pv) #6
    br label %127
  
  ; <label>:127                                     ; preds = %123, %117, %27, %0
    ret void
  }
  
  ; Function Attrs: noreturn nounwind
  declare void @abort() #2
  
  ; Function Attrs: nounwind
  define void @gl_transform_vb_part2(%struct.gl_context* %ctx, i8 zeroext %alldone) #0 {
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %2 = load %struct.vertex_buffer*, %struct.vertex_buffer** %1, align 4, !tbaa !1
    %3 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 3
    %4 = load i8, i8* %3, align 4, !tbaa !59
    %5 = icmp eq i8 %4, 0
    br i1 %5, label %.loopexit9, label %6
  
  ; <label>:6                                       ; preds = %0
    %7 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 4
    %8 = load %struct.gl_visual*, %struct.gl_visual** %7, align 4, !tbaa !71
    %9 = bitcast %struct.gl_visual* %8 to i8*
    %10 = load i8, i8* %9, align 4, !tbaa !72
    %11 = icmp eq i8 %10, 0
    %12 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 18
    %13 = load i8, i8* %12, align 4, !tbaa !74
    br i1 %11, label %48, label %14
  
  ; <label>:14                                      ; preds = %6
    %15 = icmp ne i8 %13, 0
    br i1 %15, label %16, label %31
  
  ; <label>:16                                      ; preds = %14
    %17 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 15
    %18 = load i32, i32* %17, align 4, !tbaa !47
    %19 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %20 = load i32, i32* %19, align 4, !tbaa !39
    %21 = icmp ugt i32 %18, %20
    br i1 %21, label %.loopexit9, label %.lr.ph22
  
  .lr.ph22:                                         ; preds = %16
    %22 = add i32 %18, 2772
    %scevgep54 = getelementptr %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %22, i32 0
    %scevgep5455 = bitcast float* %scevgep54 to %struct.vertex_buffer*
    %23 = mul i32 %18, 3
    %scevgep61 = getelementptr %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 1890, i32 %23
    %scevgep6162 = bitcast float* %scevgep61 to %struct.vertex_buffer*
    br label %24
  
  ; <label>:24                                      ; preds = %24, %.lr.ph22
    %lsr.iv63 = phi %struct.vertex_buffer* [ %29, %24 ], [ %scevgep6162, %.lr.ph22 ]
    %lsr.iv56 = phi %struct.vertex_buffer* [ %28, %24 ], [ %scevgep5455, %.lr.ph22 ]
    %i.020 = phi i32 [ %18, %.lr.ph22 ], [ %26, %24 ]
    %lsr.iv5666 = bitcast %struct.vertex_buffer* %lsr.iv56 to [4 x float]*
    %lsr.iv6365 = bitcast %struct.vertex_buffer* %lsr.iv63 to [3 x float]*
    %lsr.iv5658 = bitcast %struct.vertex_buffer* %lsr.iv56 to [4 x i32]*
    tail call fastcc void @update_material(%struct.gl_context* nonnull %ctx, i32 signext %i.020)
    %sunkaddr = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr69 = add i32 %sunkaddr, 55760
    %sunkaddr70 = inttoptr i32 %sunkaddr69 to i32*
    %25 = load i32, i32* %sunkaddr70, align 4, !tbaa !75
    %scevgep59 = getelementptr [4 x i32], [4 x i32]* %lsr.iv5658, i32 -504, i32 0
    %scevgep5960 = bitcast i32* %scevgep59 to [4 x i32]*
    %scevgep67 = getelementptr [4 x float], [4 x float]* %lsr.iv5666, i32 -2268, i32 0
    %scevgep6768 = bitcast float* %scevgep67 to [4 x float]*
    tail call void @gl_color_shade_vertices(%struct.gl_context* nonnull %ctx, i32 signext 1, [4 x float]* %scevgep6768, [3 x float]* %lsr.iv6365, i32 signext %25, [4 x i32]* %scevgep5960, [4 x i32]* %lsr.iv5658) #6
    %26 = add i32 %i.020, 1
    %sunkaddr71 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr72 = add i32 %sunkaddr71, 65536
    %sunkaddr73 = inttoptr i32 %sunkaddr72 to i32*
    %27 = load i32, i32* %sunkaddr73, align 4, !tbaa !39
    %scevgep57 = getelementptr %struct.vertex_buffer, %struct.vertex_buffer* %lsr.iv56, i32 0, i32 0, i32 1, i32 0
    %28 = bitcast float* %scevgep57 to %struct.vertex_buffer*
    %scevgep64 = getelementptr %struct.vertex_buffer, %struct.vertex_buffer* %lsr.iv63, i32 0, i32 0, i32 0, i32 3
    %29 = bitcast float* %scevgep64 to %struct.vertex_buffer*
    %30 = icmp ugt i32 %26, %27
    br i1 %30, label %.loopexit9, label %24
  
  ; <label>:31                                      ; preds = %14
    %32 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 10
    %33 = load i8, i8* %32, align 4, !tbaa !76
    %34 = icmp eq i8 %33, 0
    %35 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %36 = load i32, i32* %35, align 4, !tbaa !39
    %37 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 15
    %38 = load i32, i32* %37, align 4, !tbaa !47
    %39 = sub i32 %36, %38
    %40 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 %38
    %41 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %38
    %42 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 59
    %43 = load i32, i32* %42, align 4, !tbaa !75
    %44 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %38
    %45 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 %38
    br i1 %34, label %47, label %46
  
  ; <label>:46                                      ; preds = %31
    tail call void @gl_color_shade_vertices_fast(%struct.gl_context* nonnull %ctx, i32 signext %39, [4 x float]* %40, [3 x float]* %41, i32 signext %43, [4 x i32]* %44, [4 x i32]* %45) #6
    br label %.loopexit9
  
  ; <label>:47                                      ; preds = %31
    tail call void @gl_color_shade_vertices(%struct.gl_context* nonnull %ctx, i32 signext %39, [4 x float]* %40, [3 x float]* %41, i32 signext %43, [4 x i32]* %44, [4 x i32]* %45) #6
    br label %.loopexit9
  
  ; <label>:48                                      ; preds = %6
    %49 = icmp ne i8 %13, 0
    br i1 %49, label %50, label %67
  
  ; <label>:50                                      ; preds = %48
    %51 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 15
    %52 = load i32, i32* %51, align 4, !tbaa !47
    %53 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %54 = load i32, i32* %53, align 4, !tbaa !39
    %55 = icmp ugt i32 %52, %54
    br i1 %55, label %.loopexit9, label %.lr.ph19
  
  .lr.ph19:                                         ; preds = %50
    %56 = add i32 %52, 1
    %scevgep38 = getelementptr %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 3402, i32 %56
    %scevgep3839 = bitcast float* %scevgep38 to %struct.vertex_buffer*
    %57 = mul i32 %52, 3
    %scevgep44 = getelementptr %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 1890, i32 %57
    %scevgep4445 = bitcast float* %scevgep44 to %struct.vertex_buffer*
    %58 = add i32 %52, 504
    %scevgep49 = getelementptr %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %58, i32 0
    %scevgep4950 = bitcast float* %scevgep49 to %struct.vertex_buffer*
    br label %59
  
  ; <label>:59                                      ; preds = %59, %.lr.ph19
    %lsr.iv51 = phi %struct.vertex_buffer* [ %65, %59 ], [ %scevgep4950, %.lr.ph19 ]
    %lsr.iv46 = phi %struct.vertex_buffer* [ %64, %59 ], [ %scevgep4445, %.lr.ph19 ]
    %lsr.iv40 = phi %struct.vertex_buffer* [ %63, %59 ], [ %scevgep3839, %.lr.ph19 ]
    %i1.017 = phi i32 [ %52, %.lr.ph19 ], [ %61, %59 ]
    %lsr.iv5153 = bitcast %struct.vertex_buffer* %lsr.iv51 to [4 x float]*
    %lsr.iv4648 = bitcast %struct.vertex_buffer* %lsr.iv46 to [3 x float]*
    %lsr.iv4042 = bitcast %struct.vertex_buffer* %lsr.iv40 to i32*
    tail call fastcc void @update_material(%struct.gl_context* nonnull %ctx, i32 signext %i1.017)
    %sunkaddr74 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr75 = add i32 %sunkaddr74, 55760
    %sunkaddr76 = inttoptr i32 %sunkaddr75 to i32*
    %60 = load i32, i32* %sunkaddr76, align 4, !tbaa !75
    %scevgep43 = getelementptr i32, i32* %lsr.iv4042, i32 -504
    tail call void @gl_index_shade_vertices(%struct.gl_context* nonnull %ctx, i32 signext 1, [4 x float]* %lsr.iv5153, [3 x float]* %lsr.iv4648, i32 signext %60, i32* %scevgep43, i32* %lsr.iv4042) #6
    %61 = add i32 %i1.017, 1
    %sunkaddr77 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr78 = add i32 %sunkaddr77, 65536
    %sunkaddr79 = inttoptr i32 %sunkaddr78 to i32*
    %62 = load i32, i32* %sunkaddr79, align 4, !tbaa !39
    %scevgep41 = getelementptr %struct.vertex_buffer, %struct.vertex_buffer* %lsr.iv40, i32 0, i32 0, i32 0, i32 1
    %63 = bitcast float* %scevgep41 to %struct.vertex_buffer*
    %scevgep47 = getelementptr %struct.vertex_buffer, %struct.vertex_buffer* %lsr.iv46, i32 0, i32 0, i32 0, i32 3
    %64 = bitcast float* %scevgep47 to %struct.vertex_buffer*
    %scevgep52 = getelementptr %struct.vertex_buffer, %struct.vertex_buffer* %lsr.iv51, i32 0, i32 0, i32 1, i32 0
    %65 = bitcast float* %scevgep52 to %struct.vertex_buffer*
    %66 = icmp ugt i32 %61, %62
    br i1 %66, label %.loopexit9, label %59
  
  ; <label>:67                                      ; preds = %48
    %68 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %69 = load i32, i32* %68, align 4, !tbaa !39
    %70 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 15
    %71 = load i32, i32* %70, align 4, !tbaa !47
    %72 = sub i32 %69, %71
    %73 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 %71
    %74 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %71
    %75 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 59
    %76 = load i32, i32* %75, align 4, !tbaa !75
    %77 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 %71
    %78 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 %71
    tail call void @gl_index_shade_vertices(%struct.gl_context* nonnull %ctx, i32 signext %72, [4 x float]* %73, [3 x float]* %74, i32 signext %76, i32* %77, i32* %78) #6
    br label %.loopexit9
  
  .loopexit9:                                       ; preds = %24, %59, %67, %50, %47, %46, %16, %0
    %79 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 30, i32 0
    %80 = load i8, i8* %79, align 4, !tbaa !77
    %81 = icmp eq i8 %80, 0
    br i1 %81, label %120, label %82
  
  ; <label>:82                                      ; preds = %.loopexit9
    %83 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 31, i32 4
    %84 = load i32, i32* %83, align 4, !tbaa !78
    %85 = icmp eq i32 %84, 4354
    br i1 %85, label %120, label %86
  
  ; <label>:86                                      ; preds = %82
    %87 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 4
    %88 = load %struct.gl_visual*, %struct.gl_visual** %87, align 4, !tbaa !71
    %89 = bitcast %struct.gl_visual* %88 to i8*
    %90 = load i8, i8* %89, align 4, !tbaa !72
    %91 = icmp eq i8 %90, 0
    %92 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %93 = load i32, i32* %92, align 4, !tbaa !39
    %94 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 15
    %95 = load i32, i32* %94, align 4, !tbaa !47
    %96 = sub i32 %93, %95
    %97 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 %95
    br i1 %91, label %109, label %98
  
  ; <label>:98                                      ; preds = %86
    %99 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %95
    tail call void @gl_fog_color_vertices(%struct.gl_context* nonnull %ctx, i32 signext %96, [4 x float]* %97, [4 x i32]* %99) #6
    %100 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 59
    %101 = load i32, i32* %100, align 4, !tbaa !75
    %102 = icmp eq i32 %101, 0
    br i1 %102, label %120, label %103
  
  ; <label>:103                                     ; preds = %98
    %sunkaddr80 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr81 = add i32 %sunkaddr80, 65536
    %sunkaddr82 = inttoptr i32 %sunkaddr81 to i32*
    %104 = load i32, i32* %sunkaddr82, align 4, !tbaa !39
    %sunkaddr83 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr84 = add i32 %sunkaddr83, 65532
    %sunkaddr85 = inttoptr i32 %sunkaddr84 to i32*
    %105 = load i32, i32* %sunkaddr85, align 4, !tbaa !47
    %106 = sub i32 %104, %105
    %107 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 %105
    %108 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 6, i32 %105
    tail call void @gl_fog_color_vertices(%struct.gl_context* nonnull %ctx, i32 signext %106, [4 x float]* %107, [4 x i32]* %108) #6
    br label %120
  
  ; <label>:109                                     ; preds = %86
    %110 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 %95
    tail call void @gl_fog_index_vertices(%struct.gl_context* nonnull %ctx, i32 signext %96, [4 x float]* %97, i32* %110) #6
    %111 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 59
    %112 = load i32, i32* %111, align 4, !tbaa !75
    %113 = icmp eq i32 %112, 0
    br i1 %113, label %120, label %114
  
  ; <label>:114                                     ; preds = %109
    %sunkaddr86 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr87 = add i32 %sunkaddr86, 65536
    %sunkaddr88 = inttoptr i32 %sunkaddr87 to i32*
    %115 = load i32, i32* %sunkaddr88, align 4, !tbaa !39
    %sunkaddr89 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr90 = add i32 %sunkaddr89, 65532
    %sunkaddr91 = inttoptr i32 %sunkaddr90 to i32*
    %116 = load i32, i32* %sunkaddr91, align 4, !tbaa !47
    %117 = sub i32 %115, %116
    %118 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 %116
    %119 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 9, i32 %116
    tail call void @gl_fog_index_vertices(%struct.gl_context* nonnull %ctx, i32 signext %117, [4 x float]* %118, i32* %119) #6
    br label %120
  
  ; <label>:120                                     ; preds = %114, %109, %103, %98, %82, %.loopexit9
    %121 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 41, i32 0
    %122 = load i32, i32* %121, align 4, !tbaa !79
    %123 = icmp eq i32 %122, 0
    br i1 %123, label %124, label %128
  
  ; <label>:124                                     ; preds = %120
    %125 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 54
    %126 = load i32, i32* %125, align 4, !tbaa !80
    %127 = icmp eq i32 %126, 7169
    br i1 %127, label %128, label %154
  
  ; <label>:128                                     ; preds = %124, %120
    %129 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 41, i32 3
    %130 = load i32, i32* %129, align 4, !tbaa !81
    %131 = icmp eq i32 %130, 0
    br i1 %131, label %142, label %132
  
  ; <label>:132                                     ; preds = %128
    %133 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %134 = load i32, i32* %133, align 4, !tbaa !39
    %135 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 15
    %136 = load i32, i32* %135, align 4, !tbaa !47
    %137 = sub i32 %134, %136
    %138 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %136
    %139 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 %136
    %140 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %136
    %141 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %136
    tail call void @gl_texgen(%struct.gl_context* nonnull %ctx, i32 signext %137, [4 x float]* %138, [4 x float]* %139, [3 x float]* %140, [4 x float]* %141) #6
    br label %142
  
  ; <label>:142                                     ; preds = %132, %128
    %143 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 17
    %144 = load i8, i8* %143, align 4, !tbaa !82
    %145 = icmp eq i8 %144, 0
    br i1 %145, label %146, label %154
  
  ; <label>:146                                     ; preds = %142
    %147 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %148 = load i32, i32* %147, align 4, !tbaa !39
    %149 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 15
    %150 = load i32, i32* %149, align 4, !tbaa !47
    %151 = sub i32 %148, %150
    %152 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %150
    %153 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 16, i32 0
    tail call void @gl_xform_texcoords_4fv(i32 signext %151, [4 x float]* %152, float* %153) #6
    br label %154
  
  ; <label>:154                                     ; preds = %146, %142, %124
    %155 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 15
    %156 = load i32, i32* %155, align 4, !tbaa !47
    %157 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 13, i32 %156
    %158 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %159 = load i32, i32* %158, align 4, !tbaa !39
    %160 = sub i32 %159, %156
    tail call void @llvm.memset.p0i8.i32(i8* %157, i8 1, i32 %160, i32 1, i1 false)
    %161 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 42, i32 3
    %162 = load i8, i8* %161, align 2, !tbaa !64
    %163 = icmp eq i8 %162, 0
    br i1 %163, label %.loopexit8, label %.preheader
  
  .preheader:                                       ; preds = %154
    br label %164
  
  ; <label>:164                                     ; preds = %.loopexit, %.preheader
    %p.016 = phi i32 [ 0, %.preheader ], [ %202, %.loopexit ]
    %165 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 42, i32 2, i32 %p.016
    %166 = load i8, i8* %165, align 1, !tbaa !42
    %167 = icmp eq i8 %166, 0
    br i1 %167, label %.loopexit, label %168
  
  ; <label>:168                                     ; preds = %164
    %169 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 42, i32 1, i32 %p.016, i32 0
    %170 = load float, float* %169, align 4, !tbaa !45
    %171 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 42, i32 1, i32 %p.016, i32 1
    %172 = load float, float* %171, align 4, !tbaa !45
    %173 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 42, i32 1, i32 %p.016, i32 2
    %174 = load float, float* %173, align 4, !tbaa !45
    %175 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 42, i32 1, i32 %p.016, i32 3
    %176 = load float, float* %175, align 4, !tbaa !45
    %sunkaddr92 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr93 = add i32 %sunkaddr92, 65532
    %sunkaddr94 = inttoptr i32 %sunkaddr93 to i32*
    %177 = load i32, i32* %sunkaddr94, align 4, !tbaa !47
    %sunkaddr95 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr96 = add i32 %sunkaddr95, 65536
    %sunkaddr97 = inttoptr i32 %sunkaddr96 to i32*
    %178 = load i32, i32* %sunkaddr97, align 4, !tbaa !39
    %179 = icmp ult i32 %177, %178
    br i1 %179, label %.lr.ph15.preheader, label %.loopexit
  
  .lr.ph15.preheader:                               ; preds = %168
    %180 = shl i32 %177, 4
    %181 = add i32 %180, 8064
    br label %.lr.ph15
  
  .lr.ph15:                                         ; preds = %198, %.lr.ph15.preheader
    %lsr.iv25 = phi i32 [ %lsr.iv.next26, %198 ], [ %181, %.lr.ph15.preheader ]
    %182 = phi i32 [ %199, %198 ], [ %178, %.lr.ph15.preheader ]
    %i2.013 = phi i32 [ %200, %198 ], [ %177, %.lr.ph15.preheader ]
    %183 = bitcast %struct.vertex_buffer* %2 to i8*
    %uglygep36 = getelementptr i8, i8* %183, i32 %lsr.iv25
    %uglygep3637 = bitcast i8* %uglygep36 to float*
    %184 = load float, float* %uglygep3637, align 4, !tbaa !45
    %185 = fmul float %170, %184
    %uglygep33 = getelementptr i8, i8* %183, i32 %lsr.iv25
    %uglygep3334 = bitcast i8* %uglygep33 to float*
    %scevgep35 = getelementptr float, float* %uglygep3334, i32 1
    %186 = load float, float* %scevgep35, align 4, !tbaa !45
    %187 = fmul float %172, %186
    %188 = fadd float %185, %187
    %uglygep30 = getelementptr i8, i8* %183, i32 %lsr.iv25
    %uglygep3031 = bitcast i8* %uglygep30 to float*
    %scevgep32 = getelementptr float, float* %uglygep3031, i32 2
    %189 = load float, float* %scevgep32, align 4, !tbaa !45
    %190 = fmul float %174, %189
    %191 = fadd float %188, %190
    %uglygep27 = getelementptr i8, i8* %183, i32 %lsr.iv25
    %uglygep2728 = bitcast i8* %uglygep27 to float*
    %scevgep29 = getelementptr float, float* %uglygep2728, i32 3
    %192 = load float, float* %scevgep29, align 4, !tbaa !45
    %193 = fmul float %176, %192
    %194 = fadd float %191, %193
    %195 = fcmp olt float %194, 0.000000e+00
    br i1 %195, label %196, label %198
  
  ; <label>:196                                     ; preds = %.lr.ph15
    %197 = bitcast %struct.vertex_buffer* %2 to i8*
    %uglygep23 = getelementptr i8, i8* %197, i32 %i2.013
    %scevgep24 = getelementptr i8, i8* %uglygep23, i32 65024
    store i8 0, i8* %scevgep24, align 1, !tbaa !42
    %sunkaddr98 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr99 = add i32 %sunkaddr98, 65528
    %sunkaddr100 = inttoptr i32 %sunkaddr99 to i8*
    store i8 1, i8* %sunkaddr100, align 4, !tbaa !41
    %sunkaddr101 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr102 = add i32 %sunkaddr101, 65536
    %sunkaddr103 = inttoptr i32 %sunkaddr102 to i32*
    %.pre = load i32, i32* %sunkaddr103, align 4, !tbaa !39
    br label %198
  
  ; <label>:198                                     ; preds = %196, %.lr.ph15
    %199 = phi i32 [ %.pre, %196 ], [ %182, %.lr.ph15 ]
    %200 = add i32 %i2.013, 1
    %lsr.iv.next26 = add i32 %lsr.iv25, 16
    %201 = icmp ult i32 %200, %199
    br i1 %201, label %.lr.ph15, label %.loopexit
  
  .loopexit:                                        ; preds = %198, %168, %164
    %202 = add nuw nsw i32 %p.016, 1
    %exitcond24 = icmp eq i32 %202, 6
    br i1 %exitcond24, label %.loopexit8, label %164
  
  .loopexit8:                                       ; preds = %.loopexit, %154
    %sunkaddr104 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr105 = add i32 %sunkaddr104, 65536
    %sunkaddr106 = inttoptr i32 %sunkaddr105 to i32*
    %203 = load i32, i32* %sunkaddr106, align 4, !tbaa !39
    %sunkaddr107 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr108 = add i32 %sunkaddr107, 65532
    %sunkaddr109 = inttoptr i32 %sunkaddr108 to i32*
    %204 = load i32, i32* %sunkaddr109, align 4, !tbaa !47
    %205 = sub i32 %203, %204
    %206 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 2, i32 %204
    %207 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 0
    %208 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 %204
    tail call void @gl_xform_points_4fv(i32 signext %205, [4 x float]* %206, float* %207, [4 x float]* %208) #6
    %209 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 6
    %210 = load float, float* %209, align 4, !tbaa !65
    %211 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 9
    %212 = load float, float* %211, align 4, !tbaa !66
    %213 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 7
    %214 = load float, float* %213, align 4, !tbaa !67
    %215 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 10
    %216 = load float, float* %215, align 4, !tbaa !68
    %217 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 8
    %218 = load float, float* %217, align 4, !tbaa !69
    %219 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 11
    %220 = load float, float* %219, align 4, !tbaa !70
    %221 = load i32, i32* %sunkaddr109, align 4, !tbaa !47
    %222 = load i32, i32* %sunkaddr106, align 4, !tbaa !39
    %223 = icmp ult i32 %221, %222
    br i1 %223, label %.lr.ph, label %._crit_edge
  
  .lr.ph:                                           ; preds = %.loopexit8
    %224 = sub i32 %222, %221
    %225 = mul i32 %221, 3
    %226 = add i32 %225, 2
    %scevgep = getelementptr %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 1512, i32 %226
    %scevgep1 = bitcast float* %scevgep to %struct.vertex_buffer*
    %scevgep7 = getelementptr %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 4064, i32 0
    %scevgep78 = bitcast float* %scevgep7 to i8*
    %uglygep = getelementptr i8, i8* %scevgep78, i32 %221
    %uglygep9 = bitcast i8* %uglygep to %struct.vertex_buffer*
    %227 = add i32 %221, 1008
    %scevgep15 = getelementptr %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %227, i32 3
    %scevgep1516 = bitcast float* %scevgep15 to %struct.vertex_buffer*
    br label %228
  
  ; <label>:228                                     ; preds = %255, %.lr.ph
    %lsr.iv17 = phi %struct.vertex_buffer* [ %258, %255 ], [ %scevgep1516, %.lr.ph ]
    %lsr.iv10 = phi %struct.vertex_buffer* [ %257, %255 ], [ %uglygep9, %.lr.ph ]
    %lsr.iv2 = phi %struct.vertex_buffer* [ %256, %255 ], [ %scevgep1, %.lr.ph ]
    %lsr.iv = phi i32 [ %lsr.iv.next, %255 ], [ %224, %.lr.ph ]
    %lsr.iv1719 = bitcast %struct.vertex_buffer* %lsr.iv17 to float*
    %scevgep22 = getelementptr float, float* %lsr.iv1719, i32 -3
    %229 = load float, float* %scevgep22, align 4, !tbaa !45
    %scevgep21 = getelementptr float, float* %lsr.iv1719, i32 -2
    %230 = load float, float* %scevgep21, align 4, !tbaa !45
    %scevgep20 = getelementptr float, float* %lsr.iv1719, i32 -1
    %231 = load float, float* %scevgep20, align 4, !tbaa !45
    %232 = load float, float* %lsr.iv1719, align 4, !tbaa !45
    %233 = fcmp ogt float %229, %232
    br i1 %233, label %241, label %234
  
  ; <label>:234                                     ; preds = %228
    %235 = fsub float -0.000000e+00, %232
    %236 = fcmp olt float %229, %235
    %237 = fcmp ogt float %230, %232
    %or.cond = or i1 %236, %237
    %238 = fcmp olt float %230, %235
    %or.cond5 = or i1 %238, %or.cond
    %239 = fcmp ogt float %231, %232
    %or.cond6 = or i1 %239, %or.cond5
    %240 = fcmp olt float %231, %235
    %or.cond7 = or i1 %240, %or.cond6
    br i1 %or.cond7, label %241, label %243
  
  ; <label>:241                                     ; preds = %234, %228
    %242 = bitcast %struct.vertex_buffer* %lsr.iv10 to i8*
    store i8 0, i8* %242, align 1, !tbaa !42
    %sunkaddr110 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr111 = add i32 %sunkaddr110, 65528
    %sunkaddr112 = inttoptr i32 %sunkaddr111 to i8*
    store i8 1, i8* %sunkaddr112, align 4, !tbaa !41
    br label %255
  
  ; <label>:243                                     ; preds = %234
    %244 = bitcast %struct.vertex_buffer* %lsr.iv2 to float*
    %245 = fdiv float 1.000000e+00, %232
    %246 = fmul float %229, %245
    %247 = fmul float %210, %246
    %248 = fadd float %212, %247
    %scevgep6 = getelementptr float, float* %244, i32 -2
    store float %248, float* %scevgep6, align 4, !tbaa !45
    %249 = fmul float %230, %245
    %250 = fmul float %214, %249
    %251 = fadd float %216, %250
    %scevgep5 = getelementptr float, float* %244, i32 -1
    store float %251, float* %scevgep5, align 4, !tbaa !45
    %252 = fmul float %231, %245
    %253 = fmul float %218, %252
    %254 = fadd float %220, %253
    store float %254, float* %244, align 4, !tbaa !45
    br label %255
  
  ; <label>:255                                     ; preds = %243, %241
    %lsr.iv.next = add i32 %lsr.iv, -1
    %scevgep3 = getelementptr %struct.vertex_buffer, %struct.vertex_buffer* %lsr.iv2, i32 0, i32 0, i32 0, i32 3
    %256 = bitcast float* %scevgep3 to %struct.vertex_buffer*
    %scevgep11113 = bitcast %struct.vertex_buffer* %lsr.iv10 to float*
    %scevgep1112 = bitcast float* %scevgep11113 to i8*
    %uglygep13 = getelementptr i8, i8* %scevgep1112, i32 1
    %257 = bitcast i8* %uglygep13 to %struct.vertex_buffer*
    %scevgep18 = getelementptr %struct.vertex_buffer, %struct.vertex_buffer* %lsr.iv17, i32 0, i32 0, i32 1, i32 0
    %258 = bitcast float* %scevgep18 to %struct.vertex_buffer*
    %exitcond = icmp eq i32 %lsr.iv.next, 0
    br i1 %exitcond, label %._crit_edge, label %228
  
  ._crit_edge:                                      ; preds = %255, %.loopexit8
    ret void
  }
  
  ; Function Attrs: norecurse nounwind
  define internal fastcc void @update_material(%struct.gl_context* %ctx, i32 signext %i) unnamed_addr #3 {
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %2 = load %struct.vertex_buffer*, %struct.vertex_buffer** %1, align 4, !tbaa !1
    %3 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 19, i32 %i
    %4 = load i32, i32* %3, align 4, !tbaa !46
    %5 = icmp eq i32 %4, 0
    br i1 %5, label %255, label %6
  
  ; <label>:6                                       ; preds = %0
    %7 = and i32 %4, 1
    %8 = icmp eq i32 %7, 0
    br i1 %8, label %30, label %9
  
  ; <label>:9                                       ; preds = %6
    %10 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 0
    %11 = bitcast [4 x float]* %10 to i32*
    %12 = load i32, i32* %11, align 4, !tbaa !45
    %13 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2
    %14 = bitcast [2 x %struct.gl_material]* %13 to i32*
    store i32 %12, i32* %14, align 4, !tbaa !45
    %15 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 0, i32 1
    %16 = bitcast float* %15 to i32*
    %17 = load i32, i32* %16, align 4, !tbaa !45
    %18 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 0, i32 1
    %19 = bitcast float* %18 to i32*
    store i32 %17, i32* %19, align 4, !tbaa !45
    %20 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 0, i32 2
    %21 = bitcast float* %20 to i32*
    %22 = load i32, i32* %21, align 4, !tbaa !45
    %23 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 0, i32 2
    %24 = bitcast float* %23 to i32*
    store i32 %22, i32* %24, align 4, !tbaa !45
    %25 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 0, i32 3
    %26 = bitcast float* %25 to i32*
    %27 = load i32, i32* %26, align 4, !tbaa !45
    %28 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 0, i32 3
    %29 = bitcast float* %28 to i32*
    store i32 %27, i32* %29, align 4, !tbaa !45
    br label %30
  
  ; <label>:30                                      ; preds = %9, %6
    %31 = and i32 %4, 2
    %32 = icmp eq i32 %31, 0
    br i1 %32, label %54, label %33
  
  ; <label>:33                                      ; preds = %30
    %34 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 0
    %35 = bitcast [4 x float]* %34 to i32*
    %36 = load i32, i32* %35, align 4, !tbaa !45
    %37 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1
    %38 = bitcast %struct.gl_material* %37 to i32*
    store i32 %36, i32* %38, align 4, !tbaa !45
    %39 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 0, i32 1
    %40 = bitcast float* %39 to i32*
    %41 = load i32, i32* %40, align 4, !tbaa !45
    %42 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 0, i32 1
    %43 = bitcast float* %42 to i32*
    store i32 %41, i32* %43, align 4, !tbaa !45
    %44 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 0, i32 2
    %45 = bitcast float* %44 to i32*
    %46 = load i32, i32* %45, align 4, !tbaa !45
    %47 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 0, i32 2
    %48 = bitcast float* %47 to i32*
    store i32 %46, i32* %48, align 4, !tbaa !45
    %49 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 0, i32 3
    %50 = bitcast float* %49 to i32*
    %51 = load i32, i32* %50, align 4, !tbaa !45
    %52 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 0, i32 3
    %53 = bitcast float* %52 to i32*
    store i32 %51, i32* %53, align 4, !tbaa !45
    br label %54
  
  ; <label>:54                                      ; preds = %33, %30
    %55 = and i32 %4, 4
    %56 = icmp eq i32 %55, 0
    br i1 %56, label %78, label %57
  
  ; <label>:57                                      ; preds = %54
    %58 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 1
    %59 = bitcast [4 x float]* %58 to i32*
    %60 = load i32, i32* %59, align 4, !tbaa !45
    %61 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 1
    %62 = bitcast [4 x float]* %61 to i32*
    store i32 %60, i32* %62, align 4, !tbaa !45
    %63 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 1, i32 1
    %64 = bitcast float* %63 to i32*
    %65 = load i32, i32* %64, align 4, !tbaa !45
    %66 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 1, i32 1
    %67 = bitcast float* %66 to i32*
    store i32 %65, i32* %67, align 4, !tbaa !45
    %68 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 1, i32 2
    %69 = bitcast float* %68 to i32*
    %70 = load i32, i32* %69, align 4, !tbaa !45
    %71 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 1, i32 2
    %72 = bitcast float* %71 to i32*
    store i32 %70, i32* %72, align 4, !tbaa !45
    %73 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 1, i32 3
    %74 = bitcast float* %73 to i32*
    %75 = load i32, i32* %74, align 4, !tbaa !45
    %76 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 1, i32 3
    %77 = bitcast float* %76 to i32*
    store i32 %75, i32* %77, align 4, !tbaa !45
    br label %78
  
  ; <label>:78                                      ; preds = %57, %54
    %79 = and i32 %4, 8
    %80 = icmp eq i32 %79, 0
    br i1 %80, label %102, label %81
  
  ; <label>:81                                      ; preds = %78
    %82 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 1
    %83 = bitcast [4 x float]* %82 to i32*
    %84 = load i32, i32* %83, align 4, !tbaa !45
    %85 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 1
    %86 = bitcast [4 x float]* %85 to i32*
    store i32 %84, i32* %86, align 4, !tbaa !45
    %87 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 1, i32 1
    %88 = bitcast float* %87 to i32*
    %89 = load i32, i32* %88, align 4, !tbaa !45
    %90 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 1, i32 1
    %91 = bitcast float* %90 to i32*
    store i32 %89, i32* %91, align 4, !tbaa !45
    %92 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 1, i32 2
    %93 = bitcast float* %92 to i32*
    %94 = load i32, i32* %93, align 4, !tbaa !45
    %95 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 1, i32 2
    %96 = bitcast float* %95 to i32*
    store i32 %94, i32* %96, align 4, !tbaa !45
    %97 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 1, i32 3
    %98 = bitcast float* %97 to i32*
    %99 = load i32, i32* %98, align 4, !tbaa !45
    %100 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 1, i32 3
    %101 = bitcast float* %100 to i32*
    store i32 %99, i32* %101, align 4, !tbaa !45
    br label %102
  
  ; <label>:102                                     ; preds = %81, %78
    %103 = and i32 %4, 16
    %104 = icmp eq i32 %103, 0
    br i1 %104, label %126, label %105
  
  ; <label>:105                                     ; preds = %102
    %106 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 2
    %107 = bitcast [4 x float]* %106 to i32*
    %108 = load i32, i32* %107, align 4, !tbaa !45
    %109 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 2
    %110 = bitcast [4 x float]* %109 to i32*
    store i32 %108, i32* %110, align 4, !tbaa !45
    %111 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 2, i32 1
    %112 = bitcast float* %111 to i32*
    %113 = load i32, i32* %112, align 4, !tbaa !45
    %114 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 2, i32 1
    %115 = bitcast float* %114 to i32*
    store i32 %113, i32* %115, align 4, !tbaa !45
    %116 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 2, i32 2
    %117 = bitcast float* %116 to i32*
    %118 = load i32, i32* %117, align 4, !tbaa !45
    %119 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 2, i32 2
    %120 = bitcast float* %119 to i32*
    store i32 %118, i32* %120, align 4, !tbaa !45
    %121 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 2, i32 3
    %122 = bitcast float* %121 to i32*
    %123 = load i32, i32* %122, align 4, !tbaa !45
    %124 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 2, i32 3
    %125 = bitcast float* %124 to i32*
    store i32 %123, i32* %125, align 4, !tbaa !45
    br label %126
  
  ; <label>:126                                     ; preds = %105, %102
    %127 = and i32 %4, 32
    %128 = icmp eq i32 %127, 0
    br i1 %128, label %150, label %129
  
  ; <label>:129                                     ; preds = %126
    %130 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 2
    %131 = bitcast [4 x float]* %130 to i32*
    %132 = load i32, i32* %131, align 4, !tbaa !45
    %133 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 2
    %134 = bitcast [4 x float]* %133 to i32*
    store i32 %132, i32* %134, align 4, !tbaa !45
    %135 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 2, i32 1
    %136 = bitcast float* %135 to i32*
    %137 = load i32, i32* %136, align 4, !tbaa !45
    %138 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 2, i32 1
    %139 = bitcast float* %138 to i32*
    store i32 %137, i32* %139, align 4, !tbaa !45
    %140 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 2, i32 2
    %141 = bitcast float* %140 to i32*
    %142 = load i32, i32* %141, align 4, !tbaa !45
    %143 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 2, i32 2
    %144 = bitcast float* %143 to i32*
    store i32 %142, i32* %144, align 4, !tbaa !45
    %145 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 2, i32 3
    %146 = bitcast float* %145 to i32*
    %147 = load i32, i32* %146, align 4, !tbaa !45
    %148 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 2, i32 3
    %149 = bitcast float* %148 to i32*
    store i32 %147, i32* %149, align 4, !tbaa !45
    br label %150
  
  ; <label>:150                                     ; preds = %129, %126
    %151 = and i32 %4, 64
    %152 = icmp eq i32 %151, 0
    br i1 %152, label %174, label %153
  
  ; <label>:153                                     ; preds = %150
    %154 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 3
    %155 = bitcast [4 x float]* %154 to i32*
    %156 = load i32, i32* %155, align 4, !tbaa !45
    %157 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 3
    %158 = bitcast [4 x float]* %157 to i32*
    store i32 %156, i32* %158, align 4, !tbaa !45
    %159 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 3, i32 1
    %160 = bitcast float* %159 to i32*
    %161 = load i32, i32* %160, align 4, !tbaa !45
    %162 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 3, i32 1
    %163 = bitcast float* %162 to i32*
    store i32 %161, i32* %163, align 4, !tbaa !45
    %164 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 3, i32 2
    %165 = bitcast float* %164 to i32*
    %166 = load i32, i32* %165, align 4, !tbaa !45
    %167 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 3, i32 2
    %168 = bitcast float* %167 to i32*
    store i32 %166, i32* %168, align 4, !tbaa !45
    %169 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 3, i32 3
    %170 = bitcast float* %169 to i32*
    %171 = load i32, i32* %170, align 4, !tbaa !45
    %172 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 3, i32 3
    %173 = bitcast float* %172 to i32*
    store i32 %171, i32* %173, align 4, !tbaa !45
    br label %174
  
  ; <label>:174                                     ; preds = %153, %150
    %175 = and i32 %4, 128
    %176 = icmp eq i32 %175, 0
    br i1 %176, label %198, label %177
  
  ; <label>:177                                     ; preds = %174
    %178 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 3
    %179 = bitcast [4 x float]* %178 to i32*
    %180 = load i32, i32* %179, align 4, !tbaa !45
    %181 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 3
    %182 = bitcast [4 x float]* %181 to i32*
    store i32 %180, i32* %182, align 4, !tbaa !45
    %183 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 3, i32 1
    %184 = bitcast float* %183 to i32*
    %185 = load i32, i32* %184, align 4, !tbaa !45
    %186 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 3, i32 1
    %187 = bitcast float* %186 to i32*
    store i32 %185, i32* %187, align 4, !tbaa !45
    %188 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 3, i32 2
    %189 = bitcast float* %188 to i32*
    %190 = load i32, i32* %189, align 4, !tbaa !45
    %191 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 3, i32 2
    %192 = bitcast float* %191 to i32*
    store i32 %190, i32* %192, align 4, !tbaa !45
    %193 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 3, i32 3
    %194 = bitcast float* %193 to i32*
    %195 = load i32, i32* %194, align 4, !tbaa !45
    %196 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 3, i32 3
    %197 = bitcast float* %196 to i32*
    store i32 %195, i32* %197, align 4, !tbaa !45
    br label %198
  
  ; <label>:198                                     ; preds = %177, %174
    %199 = and i32 %4, 256
    %200 = icmp eq i32 %199, 0
    br i1 %200, label %207, label %201
  
  ; <label>:201                                     ; preds = %198
    %202 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 4
    %203 = bitcast float* %202 to i32*
    %204 = load i32, i32* %203, align 4, !tbaa !83
    %205 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 4
    %206 = bitcast float* %205 to i32*
    store i32 %204, i32* %206, align 4, !tbaa !83
    br label %207
  
  ; <label>:207                                     ; preds = %201, %198
    %208 = and i32 %4, 512
    %209 = icmp eq i32 %208, 0
    br i1 %209, label %216, label %210
  
  ; <label>:210                                     ; preds = %207
    %211 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 4
    %212 = bitcast float* %211 to i32*
    %213 = load i32, i32* %212, align 4, !tbaa !83
    %214 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 4
    %215 = bitcast float* %214 to i32*
    store i32 %213, i32* %215, align 4, !tbaa !83
    br label %216
  
  ; <label>:216                                     ; preds = %210, %207
    %217 = and i32 %4, 1024
    %218 = icmp eq i32 %217, 0
    br i1 %218, label %235, label %219
  
  ; <label>:219                                     ; preds = %216
    %220 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 5
    %221 = bitcast float* %220 to i32*
    %222 = load i32, i32* %221, align 4, !tbaa !85
    %223 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 5
    %224 = bitcast float* %223 to i32*
    store i32 %222, i32* %224, align 4, !tbaa !85
    %225 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 6
    %226 = bitcast float* %225 to i32*
    %227 = load i32, i32* %226, align 4, !tbaa !86
    %228 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 6
    %229 = bitcast float* %228 to i32*
    store i32 %227, i32* %229, align 4, !tbaa !86
    %230 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 0, i32 7
    %231 = bitcast float* %230 to i32*
    %232 = load i32, i32* %231, align 4, !tbaa !87
    %233 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 0, i32 7
    %234 = bitcast float* %233 to i32*
    store i32 %232, i32* %234, align 4, !tbaa !87
    br label %235
  
  ; <label>:235                                     ; preds = %219, %216
    %236 = and i32 %4, 2048
    %237 = icmp eq i32 %236, 0
    br i1 %237, label %254, label %238
  
  ; <label>:238                                     ; preds = %235
    %239 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 5
    %240 = bitcast float* %239 to i32*
    %241 = load i32, i32* %240, align 4, !tbaa !85
    %242 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 5
    %243 = bitcast float* %242 to i32*
    store i32 %241, i32* %243, align 4, !tbaa !85
    %244 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 6
    %245 = bitcast float* %244 to i32*
    %246 = load i32, i32* %245, align 4, !tbaa !86
    %247 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 6
    %248 = bitcast float* %247 to i32*
    store i32 %246, i32* %248, align 4, !tbaa !86
    %249 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 20, i32 %i, i32 1, i32 7
    %250 = bitcast float* %249 to i32*
    %251 = load i32, i32* %250, align 4, !tbaa !87
    %252 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 2, i32 1, i32 7
    %253 = bitcast float* %252 to i32*
    store i32 %251, i32* %253, align 4, !tbaa !87
    br label %254
  
  ; <label>:254                                     ; preds = %238, %235
    store i32 0, i32* %3, align 4, !tbaa !46
    br label %255
  
  ; <label>:255                                     ; preds = %254, %0
    ret void
  }
  
  declare void @gl_color_shade_vertices(%struct.gl_context*, i32 signext, [4 x float]*, [3 x float]*, i32 signext, [4 x i32]*, [4 x i32]*) #4
  
  declare void @gl_color_shade_vertices_fast(%struct.gl_context*, i32 signext, [4 x float]*, [3 x float]*, i32 signext, [4 x i32]*, [4 x i32]*) #4
  
  declare void @gl_index_shade_vertices(%struct.gl_context*, i32 signext, [4 x float]*, [3 x float]*, i32 signext, i32*, i32*) #4
  
  declare void @gl_fog_color_vertices(%struct.gl_context*, i32 signext, [4 x float]*, [4 x i32]*) #4
  
  declare void @gl_fog_index_vertices(%struct.gl_context*, i32 signext, [4 x float]*, i32*) #4
  
  declare void @gl_texgen(%struct.gl_context*, i32 signext, [4 x float]*, [4 x float]*, [3 x float]*, [4 x float]*) #4
  
  declare void @gl_xform_texcoords_4fv(i32 signext, [4 x float]*, float*) #4
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.memset.p0i8.i32(i8* nocapture, i8, i32, i32, i1) #1
  
  declare void @gl_xform_points_4fv(i32 signext, [4 x float]*, float*, [4 x float]*) #4
  
  ; Function Attrs: nounwind
  define void @gl_transform_vb_part1(%struct.gl_context* %ctx, i8 zeroext %alldone) #0 {
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %2 = load %struct.vertex_buffer*, %struct.vertex_buffer** %1, align 4, !tbaa !1
    %3 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %4 = load i32, i32* %3, align 4, !tbaa !39
    %5 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 15
    %6 = load i32, i32* %5, align 4, !tbaa !47
    %7 = sub i32 %4, %6
    %8 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 1, i32 %6
    %9 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 8, i32 0
    %10 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %6
    tail call void @gl_xform_points_4fv(i32 signext %7, [4 x float]* %8, float* %9, [4 x float]* %10) #6
    %11 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 64
    %12 = load i8, i8* %11, align 4, !tbaa !88
    %13 = icmp eq i8 %12, 0
    br i1 %13, label %22, label %14
  
  ; <label>:14                                      ; preds = %0
    %sunkaddr = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr1 = add i32 %sunkaddr, 65536
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i32*
    %15 = load i32, i32* %sunkaddr2, align 4, !tbaa !39
    %sunkaddr3 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr4 = add i32 %sunkaddr3, 65532
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to i32*
    %16 = load i32, i32* %sunkaddr5, align 4, !tbaa !47
    %17 = sub i32 %15, %16
    %18 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %16
    %19 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 0
    %20 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 42, i32 4
    %21 = load i8, i8* %20, align 1, !tbaa !89
    tail call void @gl_xform_normals_3fv(i32 signext %17, [3 x float]* %18, float* %19, [3 x float]* %18, i8 zeroext %21) #6
    br label %22
  
  ; <label>:22                                      ; preds = %14, %0
    tail call void @gl_transform_vb_part2(%struct.gl_context* nonnull %ctx, i8 zeroext undef)
    tail call void @gl_render_vb(%struct.gl_context* nonnull %ctx, i8 zeroext %alldone)
    ret void
  }
  
  declare void @gl_xform_normals_3fv(i32 signext, [3 x float]*, float*, [3 x float]*, i8 zeroext) #4
  
  ; Function Attrs: nounwind
  define void @gl_save_and_execute_vertex(%struct.gl_context* %ctx, float %x, float %y, float %z, float %w) #0 {
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %2 = load %struct.vertex_buffer*, %struct.vertex_buffer** %1, align 4, !tbaa !1
    %3 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %4 = load i32, i32* %3, align 4, !tbaa !39
    tail call void @gl_save_Vertex4f(%struct.gl_context* %ctx, float %x, float %y, float %z, float %w) #6
    %5 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 0
    store float %x, float* %5, align 4, !tbaa !45
    %6 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 1
    store float %y, float* %6, align 4, !tbaa !45
    %7 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 2
    store float %z, float* %7, align 4, !tbaa !45
    %8 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 3
    store float %w, float* %8, align 4, !tbaa !45
    %9 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 4
    %10 = load %struct.gl_visual*, %struct.gl_visual** %9, align 4, !tbaa !71
    %11 = bitcast %struct.gl_visual* %10 to i8*
    %12 = load i8, i8* %11, align 4, !tbaa !72
    %13 = icmp eq i8 %12, 0
    %14 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 3
    %15 = load i8, i8* %14, align 4, !tbaa !59
    br i1 %13, label %78, label %16
  
  ; <label>:16                                      ; preds = %0
    %17 = icmp ne i8 %15, 0
    br i1 %17, label %18, label %34
  
  ; <label>:18                                      ; preds = %16
    %19 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2
    %20 = bitcast [3 x float]* %19 to i32*
    %21 = load i32, i32* %20, align 4, !tbaa !45
    %22 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %4
    %23 = bitcast [3 x float]* %22 to i32*
    store i32 %21, i32* %23, align 4, !tbaa !45
    %24 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2, i32 1
    %25 = bitcast float* %24 to i32*
    %26 = load i32, i32* %25, align 4, !tbaa !45
    %27 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %4, i32 1
    %28 = bitcast float* %27 to i32*
    store i32 %26, i32* %28, align 4, !tbaa !45
    %29 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2, i32 2
    %30 = bitcast float* %29 to i32*
    %31 = load i32, i32* %30, align 4, !tbaa !45
    %32 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %4, i32 2
    %33 = bitcast float* %32 to i32*
    store i32 %31, i32* %33, align 4, !tbaa !45
    br label %53
  
  ; <label>:34                                      ; preds = %16
    %35 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 68
    %36 = load i32, i32* %35, align 4, !tbaa !90
    %37 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 0
    %38 = load i32, i32* %37, align 4, !tbaa !46
    %39 = shl i32 %38, %36
    %40 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 0
    store i32 %39, i32* %40, align 4, !tbaa !46
    %41 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 1
    %42 = load i32, i32* %41, align 4, !tbaa !46
    %43 = shl i32 %42, %36
    %44 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 1
    store i32 %43, i32* %44, align 4, !tbaa !46
    %45 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 2
    %46 = load i32, i32* %45, align 4, !tbaa !46
    %47 = shl i32 %46, %36
    %48 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 2
    store i32 %47, i32* %48, align 4, !tbaa !46
    %49 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 3
    %50 = load i32, i32* %49, align 4, !tbaa !46
    %51 = shl i32 %50, %36
    %52 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 3
    store i32 %51, i32* %52, align 4, !tbaa !46
    br label %53
  
  ; <label>:53                                      ; preds = %34, %18
    %54 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 41, i32 0
    %55 = load i32, i32* %54, align 4, !tbaa !79
    %56 = icmp eq i32 %55, 0
    br i1 %56, label %100, label %57
  
  ; <label>:57                                      ; preds = %53
    %58 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3
    %59 = bitcast [4 x float]* %58 to i32*
    %60 = load i32, i32* %59, align 4, !tbaa !45
    %61 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4
    %62 = bitcast [4 x float]* %61 to i32*
    store i32 %60, i32* %62, align 4, !tbaa !45
    %63 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3, i32 1
    %64 = bitcast float* %63 to i32*
    %65 = load i32, i32* %64, align 4, !tbaa !45
    %66 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4, i32 1
    %67 = bitcast float* %66 to i32*
    store i32 %65, i32* %67, align 4, !tbaa !45
    %68 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3, i32 2
    %69 = bitcast float* %68 to i32*
    %70 = load i32, i32* %69, align 4, !tbaa !45
    %71 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4, i32 2
    %72 = bitcast float* %71 to i32*
    store i32 %70, i32* %72, align 4, !tbaa !45
    %73 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3, i32 3
    %74 = bitcast float* %73 to i32*
    %75 = load i32, i32* %74, align 4, !tbaa !45
    %76 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4, i32 3
    %77 = bitcast float* %76 to i32*
    store i32 %75, i32* %77, align 4, !tbaa !45
    br label %100
  
  ; <label>:78                                      ; preds = %0
    %79 = icmp ne i8 %15, 0
    br i1 %79, label %80, label %96
  
  ; <label>:80                                      ; preds = %78
    %81 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2
    %82 = bitcast [3 x float]* %81 to i32*
    %83 = load i32, i32* %82, align 4, !tbaa !45
    %84 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %4
    %85 = bitcast [3 x float]* %84 to i32*
    store i32 %83, i32* %85, align 4, !tbaa !45
    %86 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2, i32 1
    %87 = bitcast float* %86 to i32*
    %88 = load i32, i32* %87, align 4, !tbaa !45
    %89 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %4, i32 1
    %90 = bitcast float* %89 to i32*
    store i32 %88, i32* %90, align 4, !tbaa !45
    %91 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2, i32 2
    %92 = bitcast float* %91 to i32*
    %93 = load i32, i32* %92, align 4, !tbaa !45
    %94 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %4, i32 2
    %95 = bitcast float* %94 to i32*
    store i32 %93, i32* %95, align 4, !tbaa !45
    br label %100
  
  ; <label>:96                                      ; preds = %78
    %97 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 1
    %98 = load i32, i32* %97, align 4, !tbaa !91
    %99 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 %4
    store i32 %98, i32* %99, align 4, !tbaa !46
    br label %100
  
  ; <label>:100                                     ; preds = %96, %80, %57, %53
    %101 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 10
    %102 = load i8, i8* %101, align 1, !tbaa !92
    %103 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 %4
    store i8 %102, i8* %103, align 1, !tbaa !42
    %104 = add i32 %4, 1
    %sunkaddr = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr1 = add i32 %sunkaddr, 65536
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i32*
    store i32 %104, i32* %sunkaddr2, align 4, !tbaa !39
    %105 = icmp eq i32 %104, 480
    br i1 %105, label %106, label %107
  
  ; <label>:106                                     ; preds = %100
    tail call void @gl_transform_vb_part1(%struct.gl_context* nonnull %ctx, i8 zeroext 0)
    br label %107
  
  ; <label>:107                                     ; preds = %106, %100
    ret void
  }
  
  declare void @gl_save_Vertex4f(%struct.gl_context*, float, float, float, float) #4
  
  ; Function Attrs: nounwind
  define void @gl_nop_vertex(%struct.gl_context* %ctx, float %x, float %y, float %z, float %w) #0 {
    tail call void @gl_error(%struct.gl_context* %ctx, i32 signext 1282, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0)) #6
    ret void
  }
  
  declare void @gl_error(%struct.gl_context*, i32 signext, i8*) #4
  
  ; Function Attrs: norecurse nounwind
  define void @gl_set_vertex_function(%struct.gl_context* nocapture %ctx) #3 {
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 54
    %2 = load i32, i32* %1, align 4, !tbaa !80
    %3 = icmp eq i32 %2, 7169
    br i1 %3, label %4, label %6
  
  ; <label>:4                                       ; preds = %0
    %5 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 3, i32 163
    store void (%struct.gl_context*, float, float, float, float)* @vertex_feedback, void (%struct.gl_context*, float, float, float, float)** %5, align 4, !tbaa !93
    br label %30
  
  ; <label>:6                                       ; preds = %0
    %7 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 4
    %8 = load %struct.gl_visual*, %struct.gl_visual** %7, align 4, !tbaa !71
    %9 = bitcast %struct.gl_visual* %8 to i8*
    %10 = load i8, i8* %9, align 4, !tbaa !72
    %11 = icmp eq i8 %10, 0
    %12 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 3
    %13 = load i8, i8* %12, align 4, !tbaa !59
    br i1 %11, label %26, label %14
  
  ; <label>:14                                      ; preds = %6
    %15 = icmp ne i8 %13, 0
    %16 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 41, i32 0
    %17 = load i32, i32* %16, align 4, !tbaa !79
    br i1 %15, label %18, label %22
  
  ; <label>:18                                      ; preds = %14
    %19 = icmp ne i32 %17, 0
    br i1 %19, label %20, label %21
  
  ; <label>:20                                      ; preds = %18
    %sunkaddr = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr1 = add i32 %sunkaddr, 2000
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to void (%struct.gl_context*, float, float, float, float)**
    store void (%struct.gl_context*, float, float, float, float)* @vertex_normal_texture, void (%struct.gl_context*, float, float, float, float)** %sunkaddr2, align 4, !tbaa !93
    br label %30
  
  ; <label>:21                                      ; preds = %18
    %sunkaddr3 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr4 = add i32 %sunkaddr3, 2000
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to void (%struct.gl_context*, float, float, float, float)**
    store void (%struct.gl_context*, float, float, float, float)* @vertex_normal, void (%struct.gl_context*, float, float, float, float)** %sunkaddr5, align 4, !tbaa !93
    br label %30
  
  ; <label>:22                                      ; preds = %14
    %23 = icmp ne i32 %17, 0
    br i1 %23, label %24, label %25
  
  ; <label>:24                                      ; preds = %22
    %sunkaddr6 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr7 = add i32 %sunkaddr6, 2000
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to void (%struct.gl_context*, float, float, float, float)**
    store void (%struct.gl_context*, float, float, float, float)* @vertex_texture, void (%struct.gl_context*, float, float, float, float)** %sunkaddr8, align 4, !tbaa !93
    br label %30
  
  ; <label>:25                                      ; preds = %22
    %sunkaddr9 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr10 = add i32 %sunkaddr9, 2000
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to void (%struct.gl_context*, float, float, float, float)**
    store void (%struct.gl_context*, float, float, float, float)* @vertex_color, void (%struct.gl_context*, float, float, float, float)** %sunkaddr11, align 4, !tbaa !93
    br label %30
  
  ; <label>:26                                      ; preds = %6
    %27 = icmp ne i8 %13, 0
    br i1 %27, label %28, label %29
  
  ; <label>:28                                      ; preds = %26
    %sunkaddr12 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr13 = add i32 %sunkaddr12, 2000
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to void (%struct.gl_context*, float, float, float, float)**
    store void (%struct.gl_context*, float, float, float, float)* @vertex_normal, void (%struct.gl_context*, float, float, float, float)** %sunkaddr14, align 4, !tbaa !93
    br label %30
  
  ; <label>:29                                      ; preds = %26
    %sunkaddr15 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr16 = add i32 %sunkaddr15, 2000
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to void (%struct.gl_context*, float, float, float, float)**
    store void (%struct.gl_context*, float, float, float, float)* @vertex_index, void (%struct.gl_context*, float, float, float, float)** %sunkaddr17, align 4, !tbaa !93
    br label %30
  
  ; <label>:30                                      ; preds = %29, %28, %25, %24, %21, %20, %4
    %31 = phi i32 [ ptrtoint (void (%struct.gl_context*, float, float, float, float)* @vertex_texture to i32), %24 ], [ ptrtoint (void (%struct.gl_context*, float, float, float, float)* @vertex_color to i32), %25 ], [ ptrtoint (void (%struct.gl_context*, float, float, float, float)* @vertex_normal_texture to i32), %20 ], [ ptrtoint (void (%struct.gl_context*, float, float, float, float)* @vertex_normal to i32), %21 ], [ ptrtoint (void (%struct.gl_context*, float, float, float, float)* @vertex_index to i32), %29 ], [ ptrtoint (void (%struct.gl_context*, float, float, float, float)* @vertex_normal to i32), %28 ], [ ptrtoint (void (%struct.gl_context*, float, float, float, float)* @vertex_feedback to i32), %4 ]
    %32 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 22
    %33 = load i8, i8* %32, align 1, !tbaa !94
    %34 = icmp eq i8 %33, 0
    br i1 %34, label %35, label %38
  
  ; <label>:35                                      ; preds = %30
    %36 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 1, i32 163
    %37 = bitcast void (%struct.gl_context*, float, float, float, float)** %36 to i32*
    store i32 %31, i32* %37, align 4, !tbaa !95
    br label %38
  
  ; <label>:38                                      ; preds = %35, %30
    ret void
  }
  
  ; Function Attrs: nounwind
  define internal void @vertex_feedback(%struct.gl_context* %ctx, float %x, float %y, float %z, float %w) #0 {
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %2 = load %struct.vertex_buffer*, %struct.vertex_buffer** %1, align 4, !tbaa !1
    %3 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %4 = load i32, i32* %3, align 4, !tbaa !39
    %5 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 68
    %6 = load i32, i32* %5, align 4, !tbaa !90
    %7 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 0
    store float %x, float* %7, align 4, !tbaa !45
    %8 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 1
    store float %y, float* %8, align 4, !tbaa !45
    %9 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 2
    store float %z, float* %9, align 4, !tbaa !45
    %10 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 3
    store float %w, float* %10, align 4, !tbaa !45
    %11 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 0
    %12 = load i32, i32* %11, align 4, !tbaa !46
    %13 = shl i32 %12, %6
    %14 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 0
    store i32 %13, i32* %14, align 4, !tbaa !46
    %15 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 1
    %16 = load i32, i32* %15, align 4, !tbaa !46
    %17 = shl i32 %16, %6
    %18 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 1
    store i32 %17, i32* %18, align 4, !tbaa !46
    %19 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 2
    %20 = load i32, i32* %19, align 4, !tbaa !46
    %21 = shl i32 %20, %6
    %22 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 2
    store i32 %21, i32* %22, align 4, !tbaa !46
    %23 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 3
    %24 = load i32, i32* %23, align 4, !tbaa !46
    %25 = shl i32 %24, %6
    %26 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 3
    store i32 %25, i32* %26, align 4, !tbaa !46
    %27 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 1
    %28 = load i32, i32* %27, align 4, !tbaa !91
    %29 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 %4
    store i32 %28, i32* %29, align 4, !tbaa !46
    %30 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2
    %31 = bitcast [3 x float]* %30 to i32*
    %32 = load i32, i32* %31, align 4, !tbaa !45
    %33 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %4
    %34 = bitcast [3 x float]* %33 to i32*
    store i32 %32, i32* %34, align 4, !tbaa !45
    %35 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2, i32 1
    %36 = bitcast float* %35 to i32*
    %37 = load i32, i32* %36, align 4, !tbaa !45
    %38 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %4, i32 1
    %39 = bitcast float* %38 to i32*
    store i32 %37, i32* %39, align 4, !tbaa !45
    %40 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2, i32 2
    %41 = bitcast float* %40 to i32*
    %42 = load i32, i32* %41, align 4, !tbaa !45
    %43 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %4, i32 2
    %44 = bitcast float* %43 to i32*
    store i32 %42, i32* %44, align 4, !tbaa !45
    %45 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3
    %46 = bitcast [4 x float]* %45 to i32*
    %47 = load i32, i32* %46, align 4, !tbaa !45
    %48 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4
    %49 = bitcast [4 x float]* %48 to i32*
    store i32 %47, i32* %49, align 4, !tbaa !45
    %50 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3, i32 1
    %51 = bitcast float* %50 to i32*
    %52 = load i32, i32* %51, align 4, !tbaa !45
    %53 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4, i32 1
    %54 = bitcast float* %53 to i32*
    store i32 %52, i32* %54, align 4, !tbaa !45
    %55 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3, i32 2
    %56 = bitcast float* %55 to i32*
    %57 = load i32, i32* %56, align 4, !tbaa !45
    %58 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4, i32 2
    %59 = bitcast float* %58 to i32*
    store i32 %57, i32* %59, align 4, !tbaa !45
    %60 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3, i32 3
    %61 = bitcast float* %60 to i32*
    %62 = load i32, i32* %61, align 4, !tbaa !45
    %63 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4, i32 3
    %64 = bitcast float* %63 to i32*
    store i32 %62, i32* %64, align 4, !tbaa !45
    %65 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 10
    %66 = load i8, i8* %65, align 1, !tbaa !92
    %67 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 %4
    store i8 %66, i8* %67, align 1, !tbaa !42
    %68 = add i32 %4, 1
    store i32 %68, i32* %3, align 4, !tbaa !39
    %69 = icmp eq i32 %68, 480
    br i1 %69, label %70, label %71
  
  ; <label>:70                                      ; preds = %0
    tail call void @gl_transform_vb_part1(%struct.gl_context* nonnull %ctx, i8 zeroext 0)
    br label %71
  
  ; <label>:71                                      ; preds = %70, %0
    ret void
  }
  
  ; Function Attrs: nounwind
  define internal void @vertex_normal_texture(%struct.gl_context* %ctx, float %x, float %y, float %z, float %w) #0 {
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %2 = load %struct.vertex_buffer*, %struct.vertex_buffer** %1, align 4, !tbaa !1
    %3 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %4 = load i32, i32* %3, align 4, !tbaa !39
    %5 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 0
    store float %x, float* %5, align 4, !tbaa !45
    %6 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 1
    store float %y, float* %6, align 4, !tbaa !45
    %7 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 2
    store float %z, float* %7, align 4, !tbaa !45
    %8 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 3
    store float %w, float* %8, align 4, !tbaa !45
    %9 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2
    %10 = bitcast [3 x float]* %9 to i32*
    %11 = load i32, i32* %10, align 4, !tbaa !45
    %12 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %4
    %13 = bitcast [3 x float]* %12 to i32*
    store i32 %11, i32* %13, align 4, !tbaa !45
    %14 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2, i32 1
    %15 = bitcast float* %14 to i32*
    %16 = load i32, i32* %15, align 4, !tbaa !45
    %17 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %4, i32 1
    %18 = bitcast float* %17 to i32*
    store i32 %16, i32* %18, align 4, !tbaa !45
    %19 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2, i32 2
    %20 = bitcast float* %19 to i32*
    %21 = load i32, i32* %20, align 4, !tbaa !45
    %22 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %4, i32 2
    %23 = bitcast float* %22 to i32*
    store i32 %21, i32* %23, align 4, !tbaa !45
    %24 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3
    %25 = bitcast [4 x float]* %24 to i32*
    %26 = load i32, i32* %25, align 4, !tbaa !45
    %27 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4
    %28 = bitcast [4 x float]* %27 to i32*
    store i32 %26, i32* %28, align 4, !tbaa !45
    %29 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3, i32 1
    %30 = bitcast float* %29 to i32*
    %31 = load i32, i32* %30, align 4, !tbaa !45
    %32 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4, i32 1
    %33 = bitcast float* %32 to i32*
    store i32 %31, i32* %33, align 4, !tbaa !45
    %34 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3, i32 2
    %35 = bitcast float* %34 to i32*
    %36 = load i32, i32* %35, align 4, !tbaa !45
    %37 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4, i32 2
    %38 = bitcast float* %37 to i32*
    store i32 %36, i32* %38, align 4, !tbaa !45
    %39 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3, i32 3
    %40 = bitcast float* %39 to i32*
    %41 = load i32, i32* %40, align 4, !tbaa !45
    %42 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4, i32 3
    %43 = bitcast float* %42 to i32*
    store i32 %41, i32* %43, align 4, !tbaa !45
    %44 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 10
    %45 = load i8, i8* %44, align 1, !tbaa !92
    %46 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 %4
    store i8 %45, i8* %46, align 1, !tbaa !42
    %47 = add i32 %4, 1
    store i32 %47, i32* %3, align 4, !tbaa !39
    %48 = icmp eq i32 %47, 480
    br i1 %48, label %49, label %50
  
  ; <label>:49                                      ; preds = %0
    tail call void @gl_transform_vb_part1(%struct.gl_context* nonnull %ctx, i8 zeroext 0)
    br label %50
  
  ; <label>:50                                      ; preds = %49, %0
    ret void
  }
  
  ; Function Attrs: nounwind
  define internal void @vertex_normal(%struct.gl_context* %ctx, float %x, float %y, float %z, float %w) #0 {
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %2 = load %struct.vertex_buffer*, %struct.vertex_buffer** %1, align 4, !tbaa !1
    %3 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %4 = load i32, i32* %3, align 4, !tbaa !39
    %5 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 0
    store float %x, float* %5, align 4, !tbaa !45
    %6 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 1
    store float %y, float* %6, align 4, !tbaa !45
    %7 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 2
    store float %z, float* %7, align 4, !tbaa !45
    %8 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 3
    store float %w, float* %8, align 4, !tbaa !45
    %9 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2
    %10 = bitcast [3 x float]* %9 to i32*
    %11 = load i32, i32* %10, align 4, !tbaa !45
    %12 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %4
    %13 = bitcast [3 x float]* %12 to i32*
    store i32 %11, i32* %13, align 4, !tbaa !45
    %14 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2, i32 1
    %15 = bitcast float* %14 to i32*
    %16 = load i32, i32* %15, align 4, !tbaa !45
    %17 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %4, i32 1
    %18 = bitcast float* %17 to i32*
    store i32 %16, i32* %18, align 4, !tbaa !45
    %19 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2, i32 2
    %20 = bitcast float* %19 to i32*
    %21 = load i32, i32* %20, align 4, !tbaa !45
    %22 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %4, i32 2
    %23 = bitcast float* %22 to i32*
    store i32 %21, i32* %23, align 4, !tbaa !45
    %24 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 10
    %25 = load i8, i8* %24, align 1, !tbaa !92
    %26 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 %4
    store i8 %25, i8* %26, align 1, !tbaa !42
    %27 = add i32 %4, 1
    store i32 %27, i32* %3, align 4, !tbaa !39
    %28 = icmp eq i32 %27, 480
    br i1 %28, label %29, label %30
  
  ; <label>:29                                      ; preds = %0
    tail call void @gl_transform_vb_part1(%struct.gl_context* nonnull %ctx, i8 zeroext 0)
    br label %30
  
  ; <label>:30                                      ; preds = %29, %0
    ret void
  }
  
  ; Function Attrs: nounwind
  define internal void @vertex_texture(%struct.gl_context* %ctx, float %x, float %y, float %z, float %w) #0 {
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %2 = load %struct.vertex_buffer*, %struct.vertex_buffer** %1, align 4, !tbaa !1
    %3 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %4 = load i32, i32* %3, align 4, !tbaa !39
    %5 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 68
    %6 = load i32, i32* %5, align 4, !tbaa !90
    %7 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 0
    store float %x, float* %7, align 4, !tbaa !45
    %8 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 1
    store float %y, float* %8, align 4, !tbaa !45
    %9 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 2
    store float %z, float* %9, align 4, !tbaa !45
    %10 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 3
    store float %w, float* %10, align 4, !tbaa !45
    %11 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 0
    %12 = load i32, i32* %11, align 4, !tbaa !46
    %13 = shl i32 %12, %6
    %14 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 0
    store i32 %13, i32* %14, align 4, !tbaa !46
    %15 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 1
    %16 = load i32, i32* %15, align 4, !tbaa !46
    %17 = shl i32 %16, %6
    %18 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 1
    store i32 %17, i32* %18, align 4, !tbaa !46
    %19 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 2
    %20 = load i32, i32* %19, align 4, !tbaa !46
    %21 = shl i32 %20, %6
    %22 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 2
    store i32 %21, i32* %22, align 4, !tbaa !46
    %23 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 3
    %24 = load i32, i32* %23, align 4, !tbaa !46
    %25 = shl i32 %24, %6
    %26 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 3
    store i32 %25, i32* %26, align 4, !tbaa !46
    %27 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3
    %28 = bitcast [4 x float]* %27 to i32*
    %29 = load i32, i32* %28, align 4, !tbaa !45
    %30 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4
    %31 = bitcast [4 x float]* %30 to i32*
    store i32 %29, i32* %31, align 4, !tbaa !45
    %32 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3, i32 1
    %33 = bitcast float* %32 to i32*
    %34 = load i32, i32* %33, align 4, !tbaa !45
    %35 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4, i32 1
    %36 = bitcast float* %35 to i32*
    store i32 %34, i32* %36, align 4, !tbaa !45
    %37 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3, i32 2
    %38 = bitcast float* %37 to i32*
    %39 = load i32, i32* %38, align 4, !tbaa !45
    %40 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4, i32 2
    %41 = bitcast float* %40 to i32*
    store i32 %39, i32* %41, align 4, !tbaa !45
    %42 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3, i32 3
    %43 = bitcast float* %42 to i32*
    %44 = load i32, i32* %43, align 4, !tbaa !45
    %45 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4, i32 3
    %46 = bitcast float* %45 to i32*
    store i32 %44, i32* %46, align 4, !tbaa !45
    %47 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 10
    %48 = load i8, i8* %47, align 1, !tbaa !92
    %49 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 %4
    store i8 %48, i8* %49, align 1, !tbaa !42
    %50 = add i32 %4, 1
    store i32 %50, i32* %3, align 4, !tbaa !39
    %51 = icmp eq i32 %50, 480
    br i1 %51, label %52, label %53
  
  ; <label>:52                                      ; preds = %0
    tail call void @gl_transform_vb_part1(%struct.gl_context* nonnull %ctx, i8 zeroext 0)
    br label %53
  
  ; <label>:53                                      ; preds = %52, %0
    ret void
  }
  
  ; Function Attrs: nounwind
  define internal void @vertex_color(%struct.gl_context* %ctx, float %x, float %y, float %z, float %w) #0 {
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %2 = load %struct.vertex_buffer*, %struct.vertex_buffer** %1, align 4, !tbaa !1
    %3 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %4 = load i32, i32* %3, align 4, !tbaa !39
    %5 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 68
    %6 = load i32, i32* %5, align 4, !tbaa !90
    %7 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 0
    store float %x, float* %7, align 4, !tbaa !45
    %8 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 1
    store float %y, float* %8, align 4, !tbaa !45
    %9 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 2
    store float %z, float* %9, align 4, !tbaa !45
    %10 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 3
    store float %w, float* %10, align 4, !tbaa !45
    %11 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 0
    %12 = load i32, i32* %11, align 4, !tbaa !46
    %13 = shl i32 %12, %6
    %14 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 0
    store i32 %13, i32* %14, align 4, !tbaa !46
    %15 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 1
    %16 = load i32, i32* %15, align 4, !tbaa !46
    %17 = shl i32 %16, %6
    %18 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 1
    store i32 %17, i32* %18, align 4, !tbaa !46
    %19 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 2
    %20 = load i32, i32* %19, align 4, !tbaa !46
    %21 = shl i32 %20, %6
    %22 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 2
    store i32 %21, i32* %22, align 4, !tbaa !46
    %23 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 3
    %24 = load i32, i32* %23, align 4, !tbaa !46
    %25 = shl i32 %24, %6
    %26 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 3
    store i32 %25, i32* %26, align 4, !tbaa !46
    %27 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 10
    %28 = load i8, i8* %27, align 1, !tbaa !92
    %29 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 %4
    store i8 %28, i8* %29, align 1, !tbaa !42
    %30 = add i32 %4, 1
    store i32 %30, i32* %3, align 4, !tbaa !39
    %31 = icmp eq i32 %30, 480
    br i1 %31, label %32, label %33
  
  ; <label>:32                                      ; preds = %0
    tail call void @gl_transform_vb_part1(%struct.gl_context* nonnull %ctx, i8 zeroext 0)
    br label %33
  
  ; <label>:33                                      ; preds = %32, %0
    ret void
  }
  
  ; Function Attrs: nounwind
  define internal void @vertex_index(%struct.gl_context* %ctx, float %x, float %y, float %z, float %w) #0 {
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %2 = load %struct.vertex_buffer*, %struct.vertex_buffer** %1, align 4, !tbaa !1
    %3 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %4 = load i32, i32* %3, align 4, !tbaa !39
    %5 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 0
    store float %x, float* %5, align 4, !tbaa !45
    %6 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 1
    store float %y, float* %6, align 4, !tbaa !45
    %7 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 2
    store float %z, float* %7, align 4, !tbaa !45
    %8 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 3
    store float %w, float* %8, align 4, !tbaa !45
    %9 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 1
    %10 = load i32, i32* %9, align 4, !tbaa !91
    %11 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 %4
    store i32 %10, i32* %11, align 4, !tbaa !46
    %12 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 10
    %13 = load i8, i8* %12, align 1, !tbaa !92
    %14 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 %4
    store i8 %13, i8* %14, align 1, !tbaa !42
    %15 = add i32 %4, 1
    store i32 %15, i32* %3, align 4, !tbaa !39
    %16 = icmp eq i32 %15, 480
    br i1 %16, label %17, label %18
  
  ; <label>:17                                      ; preds = %0
    tail call void @gl_transform_vb_part1(%struct.gl_context* nonnull %ctx, i8 zeroext 0)
    br label %18
  
  ; <label>:18                                      ; preds = %17, %0
    ret void
  }
  
  ; Function Attrs: nounwind
  define void @gl_eval_vertex(%struct.gl_context* %ctx, float* nocapture readonly %vertex, float* nocapture readonly %normal, i32* nocapture readonly %color, i32 signext %index, float* nocapture readonly %texcoord) #0 {
    %fcolor = alloca [4 x float], align 4
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %2 = load %struct.vertex_buffer*, %struct.vertex_buffer** %1, align 4, !tbaa !1
    %3 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    %4 = load i32, i32* %3, align 4, !tbaa !39
    %5 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 68
    %6 = load i32, i32* %5, align 4, !tbaa !90
    %7 = bitcast float* %vertex to i32*
    %8 = load i32, i32* %7, align 4, !tbaa !45
    %9 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4
    %10 = bitcast [4 x float]* %9 to i32*
    store i32 %8, i32* %10, align 4, !tbaa !45
    %11 = getelementptr inbounds float, float* %vertex, i32 1
    %12 = bitcast float* %11 to i32*
    %13 = load i32, i32* %12, align 4, !tbaa !45
    %14 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 1
    %15 = bitcast float* %14 to i32*
    store i32 %13, i32* %15, align 4, !tbaa !45
    %16 = getelementptr inbounds float, float* %vertex, i32 2
    %17 = bitcast float* %16 to i32*
    %18 = load i32, i32* %17, align 4, !tbaa !45
    %19 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 2
    %20 = bitcast float* %19 to i32*
    store i32 %18, i32* %20, align 4, !tbaa !45
    %21 = getelementptr inbounds float, float* %vertex, i32 3
    %22 = bitcast float* %21 to i32*
    %23 = load i32, i32* %22, align 4, !tbaa !45
    %24 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 0, i32 %4, i32 3
    %25 = bitcast float* %24 to i32*
    store i32 %23, i32* %25, align 4, !tbaa !45
    %26 = bitcast float* %normal to i32*
    %27 = load i32, i32* %26, align 4, !tbaa !45
    %28 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %4
    %29 = bitcast [3 x float]* %28 to i32*
    store i32 %27, i32* %29, align 4, !tbaa !45
    %30 = getelementptr inbounds float, float* %normal, i32 1
    %31 = bitcast float* %30 to i32*
    %32 = load i32, i32* %31, align 4, !tbaa !45
    %33 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %4, i32 1
    %34 = bitcast float* %33 to i32*
    store i32 %32, i32* %34, align 4, !tbaa !45
    %35 = getelementptr inbounds float, float* %normal, i32 2
    %36 = bitcast float* %35 to i32*
    %37 = load i32, i32* %36, align 4, !tbaa !45
    %38 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 4, i32 %4, i32 2
    %39 = bitcast float* %38 to i32*
    store i32 %37, i32* %39, align 4, !tbaa !45
    %40 = load i32, i32* %color, align 4, !tbaa !46
    %41 = shl i32 %40, %6
    %42 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 0
    store i32 %41, i32* %42, align 4, !tbaa !46
    %43 = getelementptr inbounds i32, i32* %color, i32 1
    %44 = load i32, i32* %43, align 4, !tbaa !46
    %45 = shl i32 %44, %6
    %46 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 1
    store i32 %45, i32* %46, align 4, !tbaa !46
    %47 = getelementptr inbounds i32, i32* %color, i32 2
    %48 = load i32, i32* %47, align 4, !tbaa !46
    %49 = shl i32 %48, %6
    %50 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 2
    store i32 %49, i32* %50, align 4, !tbaa !46
    %51 = getelementptr inbounds i32, i32* %color, i32 3
    %52 = load i32, i32* %51, align 4, !tbaa !46
    %53 = shl i32 %52, %6
    %54 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 %4, i32 3
    store i32 %53, i32* %54, align 4, !tbaa !46
    %55 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 8
    %56 = load i8, i8* %55, align 4, !tbaa !96
    %57 = icmp eq i8 %56, 0
    br i1 %57, label %92, label %58
  
  ; <label>:58                                      ; preds = %0
    %59 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 29, i32 0
    %60 = load i8, i8* %59, align 4, !tbaa !97
    %61 = icmp eq i8 %60, 0
    br i1 %61, label %92, label %62
  
  ; <label>:62                                      ; preds = %58
    %63 = bitcast [4 x float]* %fcolor to i8*
    call void @llvm.lifetime.start(i64 16, i8* %63) #6
    %64 = load i32, i32* %color, align 4, !tbaa !46
    %65 = sitofp i32 %64 to float
    %66 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 4
    %67 = load %struct.gl_visual*, %struct.gl_visual** %66, align 4, !tbaa !71
    %68 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %67, i32 0, i32 7
    %69 = load float, float* %68, align 4, !tbaa !98
    %70 = fmul float %65, %69
    %71 = bitcast [4 x float]* %fcolor to float*
    store float %70, float* %71, align 4, !tbaa !45
    %sunkaddr = ptrtoint i32* %color to i32
    %sunkaddr1 = add i32 %sunkaddr, 4
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i32*
    %72 = load i32, i32* %sunkaddr2, align 4, !tbaa !46
    %73 = sitofp i32 %72 to float
    %74 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %67, i32 0, i32 8
    %75 = load float, float* %74, align 4, !tbaa !99
    %76 = fmul float %73, %75
    %77 = getelementptr inbounds [4 x float], [4 x float]* %fcolor, i32 0, i32 1
    store float %76, float* %77, align 4, !tbaa !45
    %sunkaddr3 = ptrtoint i32* %color to i32
    %sunkaddr4 = add i32 %sunkaddr3, 8
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to i32*
    %78 = load i32, i32* %sunkaddr5, align 4, !tbaa !46
    %79 = sitofp i32 %78 to float
    %80 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %67, i32 0, i32 9
    %81 = load float, float* %80, align 4, !tbaa !100
    %82 = fmul float %79, %81
    %83 = getelementptr inbounds [4 x float], [4 x float]* %fcolor, i32 0, i32 2
    store float %82, float* %83, align 4, !tbaa !45
    %sunkaddr6 = ptrtoint i32* %color to i32
    %sunkaddr7 = add i32 %sunkaddr6, 12
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to i32*
    %84 = load i32, i32* %sunkaddr8, align 4, !tbaa !46
    %85 = sitofp i32 %84 to float
    %86 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %67, i32 0, i32 10
    %87 = load float, float* %86, align 4, !tbaa !101
    %88 = fmul float %85, %87
    %89 = getelementptr inbounds [4 x float], [4 x float]* %fcolor, i32 0, i32 3
    store float %88, float* %89, align 4, !tbaa !45
    %90 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 7
    %91 = load i32, i32* %90, align 4, !tbaa !102
    call void @gl_set_material(%struct.gl_context* nonnull %ctx, i32 signext %91, float* %71) #6
    call void @llvm.lifetime.end(i64 16, i8* %63) #6
    br label %92
  
  ; <label>:92                                      ; preds = %62, %58, %0
    %93 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 %4
    store i32 %index, i32* %93, align 4, !tbaa !46
    %94 = bitcast float* %texcoord to i32*
    %95 = load i32, i32* %94, align 4, !tbaa !45
    %96 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4
    %97 = bitcast [4 x float]* %96 to i32*
    store i32 %95, i32* %97, align 4, !tbaa !45
    %98 = getelementptr inbounds float, float* %texcoord, i32 1
    %99 = bitcast float* %98 to i32*
    %100 = load i32, i32* %99, align 4, !tbaa !45
    %101 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4, i32 1
    %102 = bitcast float* %101 to i32*
    store i32 %100, i32* %102, align 4, !tbaa !45
    %103 = getelementptr inbounds float, float* %texcoord, i32 2
    %104 = bitcast float* %103 to i32*
    %105 = load i32, i32* %104, align 4, !tbaa !45
    %106 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4, i32 2
    %107 = bitcast float* %106 to i32*
    store i32 %105, i32* %107, align 4, !tbaa !45
    %108 = getelementptr inbounds float, float* %texcoord, i32 3
    %109 = bitcast float* %108 to i32*
    %110 = load i32, i32* %109, align 4, !tbaa !45
    %111 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 12, i32 %4, i32 3
    %112 = bitcast float* %111 to i32*
    store i32 %110, i32* %112, align 4, !tbaa !45
    %113 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 10
    %114 = load i8, i8* %113, align 1, !tbaa !92
    %115 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 11, i32 %4
    store i8 %114, i8* %115, align 1, !tbaa !42
    %116 = add i32 %4, 1
    %sunkaddr9 = ptrtoint %struct.vertex_buffer* %2 to i32
    %sunkaddr10 = add i32 %sunkaddr9, 65536
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to i32*
    store i32 %116, i32* %sunkaddr11, align 4, !tbaa !39
    %117 = icmp eq i32 %116, 480
    br i1 %117, label %118, label %119
  
  ; <label>:118                                     ; preds = %92
    call void @gl_transform_vb_part1(%struct.gl_context* nonnull %ctx, i8 zeroext 0)
    br label %119
  
  ; <label>:119                                     ; preds = %118, %92
    ret void
  }
  
  declare void @gl_set_material(%struct.gl_context*, i32 signext, float*) #4
  
  ; Function Attrs: nounwind
  define void @gl_RasterPos4f(%struct.gl_context* %ctx, float %x, float %y, float %z, float %w) #0 {
    %eye = alloca [4 x float], align 4
    %clip = alloca [4 x float], align 4
    %eyenorm = alloca [3 x float], align 4
    %color = alloca [4 x i32], align 4
    %bcolor = alloca [4 x i32], align 4
    %dummy = alloca i32, align 4
    %1 = bitcast [4 x float]* %eye to i8*
    call void @llvm.lifetime.start(i64 16, i8* %1) #6
    %2 = bitcast [4 x float]* %clip to i8*
    call void @llvm.lifetime.start(i64 16, i8* %2) #6
    %3 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 8, i32 0
    %4 = load float, float* %3, align 4, !tbaa !45
    %5 = fmul float %4, %x
    %6 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 8, i32 4
    %7 = load float, float* %6, align 4, !tbaa !45
    %8 = fmul float %7, %y
    %9 = fadd float %5, %8
    %10 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 8, i32 8
    %11 = load float, float* %10, align 4, !tbaa !45
    %12 = fmul float %11, %z
    %13 = fadd float %9, %12
    %14 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 8, i32 12
    %15 = load float, float* %14, align 4, !tbaa !45
    %16 = fmul float %15, %w
    %17 = fadd float %13, %16
    %18 = bitcast [4 x float]* %eye to float*
    store float %17, float* %18, align 4, !tbaa !45
    %19 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 8, i32 1
    %20 = load float, float* %19, align 4, !tbaa !45
    %21 = fmul float %20, %x
    %22 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 8, i32 5
    %23 = load float, float* %22, align 4, !tbaa !45
    %24 = fmul float %23, %y
    %25 = fadd float %21, %24
    %26 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 8, i32 9
    %27 = load float, float* %26, align 4, !tbaa !45
    %28 = fmul float %27, %z
    %29 = fadd float %25, %28
    %30 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 8, i32 13
    %31 = load float, float* %30, align 4, !tbaa !45
    %32 = fmul float %31, %w
    %33 = fadd float %29, %32
    %34 = getelementptr inbounds [4 x float], [4 x float]* %eye, i32 0, i32 1
    store float %33, float* %34, align 4, !tbaa !45
    %35 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 8, i32 2
    %36 = load float, float* %35, align 4, !tbaa !45
    %37 = fmul float %36, %x
    %38 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 8, i32 6
    %39 = load float, float* %38, align 4, !tbaa !45
    %40 = fmul float %39, %y
    %41 = fadd float %37, %40
    %42 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 8, i32 10
    %43 = load float, float* %42, align 4, !tbaa !45
    %44 = fmul float %43, %z
    %45 = fadd float %41, %44
    %46 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 8, i32 14
    %47 = load float, float* %46, align 4, !tbaa !45
    %48 = fmul float %47, %w
    %49 = fadd float %45, %48
    %50 = getelementptr inbounds [4 x float], [4 x float]* %eye, i32 0, i32 2
    store float %49, float* %50, align 4, !tbaa !45
    %51 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 8, i32 3
    %52 = load float, float* %51, align 4, !tbaa !45
    %53 = fmul float %52, %x
    %54 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 8, i32 7
    %55 = load float, float* %54, align 4, !tbaa !45
    %56 = fmul float %55, %y
    %57 = fadd float %53, %56
    %58 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 8, i32 11
    %59 = load float, float* %58, align 4, !tbaa !45
    %60 = fmul float %59, %z
    %61 = fadd float %57, %60
    %62 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 8, i32 15
    %63 = load float, float* %62, align 4, !tbaa !45
    %64 = fmul float %63, %w
    %65 = fadd float %61, %64
    %66 = getelementptr inbounds [4 x float], [4 x float]* %eye, i32 0, i32 3
    store float %65, float* %66, align 4, !tbaa !45
    %67 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 3
    %68 = load i8, i8* %67, align 4, !tbaa !59
    %69 = icmp eq i8 %68, 0
    br i1 %69, label %162, label %70
  
  ; <label>:70                                      ; preds = %0
    %71 = bitcast [3 x float]* %eyenorm to i8*
    call void @llvm.lifetime.start(i64 12, i8* %71) #6
    %72 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 10
    %73 = load i8, i8* %72, align 4, !tbaa !103
    %74 = icmp eq i8 %73, 0
    br i1 %74, label %75, label %76
  
  ; <label>:75                                      ; preds = %70
    tail call void @gl_compute_modelview_inverse(%struct.gl_context* nonnull %ctx) #6
    br label %76
  
  ; <label>:76                                      ; preds = %75, %70
    %77 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2, i32 0
    %78 = load float, float* %77, align 4, !tbaa !45
    %79 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 0
    %80 = load float, float* %79, align 4, !tbaa !45
    %81 = fmul float %78, %80
    %82 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2, i32 1
    %83 = load float, float* %82, align 4, !tbaa !45
    %84 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 1
    %85 = load float, float* %84, align 4, !tbaa !45
    %86 = fmul float %83, %85
    %87 = fadd float %81, %86
    %88 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2, i32 2
    %89 = load float, float* %88, align 4, !tbaa !45
    %90 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 2
    %91 = load float, float* %90, align 4, !tbaa !45
    %92 = fmul float %89, %91
    %93 = fadd float %87, %92
    %94 = bitcast [3 x float]* %eyenorm to float*
    store float %93, float* %94, align 4, !tbaa !45
    %95 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 4
    %96 = load float, float* %95, align 4, !tbaa !45
    %97 = fmul float %78, %96
    %98 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 5
    %99 = load float, float* %98, align 4, !tbaa !45
    %100 = fmul float %83, %99
    %101 = fadd float %97, %100
    %102 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 6
    %103 = load float, float* %102, align 4, !tbaa !45
    %104 = fmul float %89, %103
    %105 = fadd float %101, %104
    %106 = getelementptr inbounds [3 x float], [3 x float]* %eyenorm, i32 0, i32 1
    store float %105, float* %106, align 4, !tbaa !45
    %107 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 8
    %108 = load float, float* %107, align 4, !tbaa !45
    %109 = fmul float %78, %108
    %110 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 9
    %111 = load float, float* %110, align 4, !tbaa !45
    %112 = fmul float %83, %111
    %113 = fadd float %109, %112
    %114 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 10
    %115 = load float, float* %114, align 4, !tbaa !45
    %116 = fmul float %89, %115
    %117 = fadd float %113, %116
    %118 = getelementptr inbounds [3 x float], [3 x float]* %eyenorm, i32 0, i32 2
    store float %117, float* %118, align 4, !tbaa !45
    %119 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 68
    store i32 0, i32* %119, align 4, !tbaa !90
    %120 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 4
    %121 = load %struct.gl_visual*, %struct.gl_visual** %120, align 4, !tbaa !71
    %122 = bitcast %struct.gl_visual* %121 to i8*
    %123 = load i8, i8* %122, align 4, !tbaa !72
    %124 = icmp eq i8 %123, 0
    br i1 %124, label %157, label %125
  
  ; <label>:125                                     ; preds = %76
    %126 = bitcast [4 x i32]* %color to i8*
    call void @llvm.lifetime.start(i64 16, i8* %126) #6
    %127 = bitcast [4 x i32]* %bcolor to i8*
    call void @llvm.lifetime.start(i64 16, i8* %127) #6
    call void @gl_color_shade_vertices(%struct.gl_context* nonnull %ctx, i32 signext 1, [4 x float]* nonnull %eye, [3 x float]* nonnull %eyenorm, i32 signext 0, [4 x i32]* nonnull %color, [4 x i32]* nonnull %bcolor) #6
    %128 = bitcast [4 x i32]* %color to i32*
    %129 = load i32, i32* %128, align 4, !tbaa !46
    %130 = sitofp i32 %129 to float
    %sunkaddr = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr1 = add i32 %sunkaddr, 2020
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to %struct.gl_visual**
    %131 = load %struct.gl_visual*, %struct.gl_visual** %sunkaddr2, align 4, !tbaa !71
    %132 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %131, i32 0, i32 7
    %133 = load float, float* %132, align 4, !tbaa !98
    %134 = fmul float %130, %133
    %135 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 6, i32 0
    store float %134, float* %135, align 4, !tbaa !45
    %136 = getelementptr inbounds [4 x i32], [4 x i32]* %color, i32 0, i32 1
    %137 = load i32, i32* %136, align 4, !tbaa !46
    %138 = sitofp i32 %137 to float
    %139 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %131, i32 0, i32 8
    %140 = load float, float* %139, align 4, !tbaa !99
    %141 = fmul float %138, %140
    %142 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 6, i32 1
    store float %141, float* %142, align 4, !tbaa !45
    %143 = getelementptr inbounds [4 x i32], [4 x i32]* %color, i32 0, i32 2
    %144 = load i32, i32* %143, align 4, !tbaa !46
    %145 = sitofp i32 %144 to float
    %146 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %131, i32 0, i32 9
    %147 = load float, float* %146, align 4, !tbaa !100
    %148 = fmul float %145, %147
    %149 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 6, i32 2
    store float %148, float* %149, align 4, !tbaa !45
    %150 = getelementptr inbounds [4 x i32], [4 x i32]* %color, i32 0, i32 3
    %151 = load i32, i32* %150, align 4, !tbaa !46
    %152 = sitofp i32 %151 to float
    %153 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %131, i32 0, i32 10
    %154 = load float, float* %153, align 4, !tbaa !101
    %155 = fmul float %152, %154
    %156 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 6, i32 3
    store float %155, float* %156, align 4, !tbaa !45
    call void @llvm.lifetime.end(i64 16, i8* %127) #6
    call void @llvm.lifetime.end(i64 16, i8* %126) #6
    br label %160
  
  ; <label>:157                                     ; preds = %76
    %158 = bitcast i32* %dummy to i8*
    call void @llvm.lifetime.start(i64 4, i8* %158) #6
    %159 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 7
    call void @gl_index_shade_vertices(%struct.gl_context* nonnull %ctx, i32 signext 1, [4 x float]* nonnull %eye, [3 x float]* nonnull %eyenorm, i32 signext 0, i32* %159, i32* nonnull %dummy) #6
    call void @llvm.lifetime.end(i64 4, i8* %158) #6
    br label %160
  
  ; <label>:160                                     ; preds = %157, %125
    %161 = bitcast [3 x float]* %eyenorm to i8*
    call void @llvm.lifetime.end(i64 12, i8* nonnull %161) #6
    br label %201
  
  ; <label>:162                                     ; preds = %0
    %163 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 4
    %164 = load %struct.gl_visual*, %struct.gl_visual** %163, align 4, !tbaa !71
    %165 = bitcast %struct.gl_visual* %164 to i8*
    %166 = load i8, i8* %165, align 4, !tbaa !72
    %167 = icmp eq i8 %166, 0
    br i1 %167, label %197, label %168
  
  ; <label>:168                                     ; preds = %162
    %169 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 0
    %170 = load i32, i32* %169, align 4, !tbaa !46
    %171 = sitofp i32 %170 to float
    %172 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %164, i32 0, i32 7
    %173 = load float, float* %172, align 4, !tbaa !98
    %174 = fmul float %171, %173
    %175 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 6, i32 0
    store float %174, float* %175, align 4, !tbaa !45
    %176 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 1
    %177 = load i32, i32* %176, align 4, !tbaa !46
    %178 = sitofp i32 %177 to float
    %179 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %164, i32 0, i32 8
    %180 = load float, float* %179, align 4, !tbaa !99
    %181 = fmul float %178, %180
    %182 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 6, i32 1
    store float %181, float* %182, align 4, !tbaa !45
    %183 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 2
    %184 = load i32, i32* %183, align 4, !tbaa !46
    %185 = sitofp i32 %184 to float
    %186 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %164, i32 0, i32 9
    %187 = load float, float* %186, align 4, !tbaa !100
    %188 = fmul float %185, %187
    %189 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 6, i32 2
    store float %188, float* %189, align 4, !tbaa !45
    %190 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 3
    %191 = load i32, i32* %190, align 4, !tbaa !46
    %192 = sitofp i32 %191 to float
    %193 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %164, i32 0, i32 10
    %194 = load float, float* %193, align 4, !tbaa !101
    %195 = fmul float %192, %194
    %196 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 6, i32 3
    store float %195, float* %196, align 4, !tbaa !45
    br label %201
  
  ; <label>:197                                     ; preds = %162
    %198 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 1
    %199 = load i32, i32* %198, align 4, !tbaa !91
    %200 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 7
    store i32 %199, i32* %200, align 4, !tbaa !104
    br label %201
  
  ; <label>:201                                     ; preds = %197, %168, %160
    %202 = bitcast [4 x float]* %eye to float*
    %203 = call i32 @gl_userclip_point(%struct.gl_context* nonnull %ctx, float* %202) #6
    %204 = icmp eq i32 %203, 0
    br i1 %204, label %205, label %207
  
  ; <label>:205                                     ; preds = %201
    %206 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 9
    store i8 0, i8* %206, align 4, !tbaa !105
    br label %357
  
  ; <label>:207                                     ; preds = %201
    %208 = bitcast [4 x float]* %eye to float*
    %209 = load float, float* %208, align 4, !tbaa !45
    %210 = fmul float %209, %209
    %sunkaddr3 = ptrtoint [4 x float]* %eye to i32
    %sunkaddr4 = add i32 %sunkaddr3, 4
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to float*
    %211 = load float, float* %sunkaddr5, align 4, !tbaa !45
    %212 = fmul float %211, %211
    %213 = fadd float %210, %212
    %sunkaddr6 = ptrtoint [4 x float]* %eye to i32
    %sunkaddr7 = add i32 %sunkaddr6, 8
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to float*
    %214 = load float, float* %sunkaddr8, align 4, !tbaa !45
    %215 = fmul float %214, %214
    %216 = fadd float %213, %215
    %sqrtf = call float @sqrtf(float %216) #8
    %217 = fcmp oeq float %sqrtf, %sqrtf
    br i1 %217, label %.split, label %call.sqrt
  
  call.sqrt:                                        ; preds = %207
    %218 = call float @sqrtf(float %216) #9
    br label %.split
  
  .split:                                           ; preds = %207, %call.sqrt
    %219 = phi float [ %sqrtf, %207 ], [ %218, %call.sqrt ]
    %220 = bitcast [4 x float]* %eye to float*
    %221 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 5
    store float %219, float* %221, align 4, !tbaa !106
    %222 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 0
    %223 = load float, float* %222, align 4, !tbaa !45
    %224 = load float, float* %220, align 4, !tbaa !45
    %225 = fmul float %223, %224
    %226 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 4
    %227 = load float, float* %226, align 4, !tbaa !45
    %sunkaddr9 = ptrtoint [4 x float]* %eye to i32
    %sunkaddr10 = add i32 %sunkaddr9, 4
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to float*
    %228 = load float, float* %sunkaddr11, align 4, !tbaa !45
    %229 = fmul float %227, %228
    %230 = fadd float %225, %229
    %231 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 8
    %232 = load float, float* %231, align 4, !tbaa !45
    %sunkaddr12 = ptrtoint [4 x float]* %eye to i32
    %sunkaddr13 = add i32 %sunkaddr12, 8
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to float*
    %233 = load float, float* %sunkaddr14, align 4, !tbaa !45
    %234 = fmul float %232, %233
    %235 = fadd float %230, %234
    %236 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 12
    %237 = load float, float* %236, align 4, !tbaa !45
    %sunkaddr15 = ptrtoint [4 x float]* %eye to i32
    %sunkaddr16 = add i32 %sunkaddr15, 12
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to float*
    %238 = load float, float* %sunkaddr17, align 4, !tbaa !45
    %239 = fmul float %237, %238
    %240 = fadd float %235, %239
    %241 = bitcast [4 x float]* %clip to float*
    store float %240, float* %241, align 4, !tbaa !45
    %242 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 1
    %243 = load float, float* %242, align 4, !tbaa !45
    %244 = fmul float %243, %224
    %245 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 5
    %246 = load float, float* %245, align 4, !tbaa !45
    %247 = fmul float %246, %228
    %248 = fadd float %244, %247
    %249 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 9
    %250 = load float, float* %249, align 4, !tbaa !45
    %251 = fmul float %250, %233
    %252 = fadd float %248, %251
    %253 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 13
    %254 = load float, float* %253, align 4, !tbaa !45
    %255 = fmul float %254, %238
    %256 = fadd float %252, %255
    %257 = getelementptr inbounds [4 x float], [4 x float]* %clip, i32 0, i32 1
    store float %256, float* %257, align 4, !tbaa !45
    %258 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 2
    %259 = load float, float* %258, align 4, !tbaa !45
    %260 = fmul float %259, %224
    %261 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 6
    %262 = load float, float* %261, align 4, !tbaa !45
    %263 = fmul float %262, %228
    %264 = fadd float %260, %263
    %265 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 10
    %266 = load float, float* %265, align 4, !tbaa !45
    %267 = fmul float %266, %233
    %268 = fadd float %264, %267
    %269 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 14
    %270 = load float, float* %269, align 4, !tbaa !45
    %271 = fmul float %270, %238
    %272 = fadd float %268, %271
    %273 = getelementptr inbounds [4 x float], [4 x float]* %clip, i32 0, i32 2
    store float %272, float* %273, align 4, !tbaa !45
    %274 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 3
    %275 = load float, float* %274, align 4, !tbaa !45
    %276 = fmul float %275, %224
    %277 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 7
    %278 = load float, float* %277, align 4, !tbaa !45
    %279 = fmul float %278, %228
    %280 = fadd float %276, %279
    %281 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 11
    %282 = load float, float* %281, align 4, !tbaa !45
    %283 = fmul float %282, %233
    %284 = fadd float %280, %283
    %285 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 13, i32 15
    %286 = load float, float* %285, align 4, !tbaa !45
    %287 = fmul float %286, %238
    %288 = fadd float %284, %287
    %289 = getelementptr inbounds [4 x float], [4 x float]* %clip, i32 0, i32 3
    store float %288, float* %289, align 4, !tbaa !45
    %290 = call i32 @gl_viewclip_point(float* %241) #6
    %291 = icmp eq i32 %290, 0
    br i1 %291, label %292, label %294
  
  ; <label>:292                                     ; preds = %.split
    %293 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 9
    store i8 0, i8* %293, align 4, !tbaa !105
    br label %357
  
  ; <label>:294                                     ; preds = %.split
    %295 = bitcast [4 x float]* %clip to float*
    %sunkaddr18 = ptrtoint [4 x float]* %clip to i32
    %sunkaddr19 = add i32 %sunkaddr18, 12
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to float*
    %296 = load float, float* %sunkaddr20, align 4, !tbaa !45
    %297 = fdiv float 1.000000e+00, %296
    %298 = load float, float* %295, align 4, !tbaa !45
    %299 = fmul float %298, %297
    %sunkaddr21 = ptrtoint [4 x float]* %clip to i32
    %sunkaddr22 = add i32 %sunkaddr21, 4
    %sunkaddr23 = inttoptr i32 %sunkaddr22 to float*
    %300 = load float, float* %sunkaddr23, align 4, !tbaa !45
    %301 = fmul float %297, %300
    %sunkaddr24 = ptrtoint [4 x float]* %clip to i32
    %sunkaddr25 = add i32 %sunkaddr24, 8
    %sunkaddr26 = inttoptr i32 %sunkaddr25 to float*
    %302 = load float, float* %sunkaddr26, align 4, !tbaa !45
    %303 = fmul float %297, %302
    %304 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 6
    %305 = load float, float* %304, align 4, !tbaa !65
    %306 = fmul float %299, %305
    %307 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 9
    %308 = load float, float* %307, align 4, !tbaa !66
    %309 = fadd float %306, %308
    %310 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 4, i32 0
    store float %309, float* %310, align 4, !tbaa !45
    %311 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 7
    %312 = load float, float* %311, align 4, !tbaa !67
    %313 = fmul float %301, %312
    %314 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 10
    %315 = load float, float* %314, align 4, !tbaa !68
    %316 = fadd float %313, %315
    %317 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 4, i32 1
    store float %316, float* %317, align 4, !tbaa !45
    %318 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 8
    %319 = load float, float* %318, align 4, !tbaa !69
    %320 = fmul float %303, %319
    %321 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 43, i32 11
    %322 = load float, float* %321, align 4, !tbaa !70
    %323 = fadd float %320, %322
    %324 = fdiv float %323, 6.553500e+04
    %325 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 4, i32 2
    store float %324, float* %325, align 4, !tbaa !45
    %326 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 4, i32 3
    store float %296, float* %326, align 4, !tbaa !45
    %327 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 9
    store i8 1, i8* %327, align 4, !tbaa !105
    %328 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 41, i32 0
    %329 = load i32, i32* %328, align 4, !tbaa !79
    %330 = icmp eq i32 %329, 0
    br i1 %330, label %352, label %331
  
  ; <label>:331                                     ; preds = %294
    %332 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3
    %333 = bitcast [4 x float]* %332 to i32*
    %334 = load i32, i32* %333, align 4, !tbaa !45
    %335 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 8
    %336 = bitcast [4 x float]* %335 to i32*
    store i32 %334, i32* %336, align 4, !tbaa !45
    %337 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3, i32 1
    %338 = bitcast float* %337 to i32*
    %339 = load i32, i32* %338, align 4, !tbaa !45
    %340 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 8, i32 1
    %341 = bitcast float* %340 to i32*
    store i32 %339, i32* %341, align 4, !tbaa !45
    %342 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3, i32 2
    %343 = bitcast float* %342 to i32*
    %344 = load i32, i32* %343, align 4, !tbaa !45
    %345 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 8, i32 2
    %346 = bitcast float* %345 to i32*
    store i32 %344, i32* %346, align 4, !tbaa !45
    %347 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3, i32 3
    %348 = bitcast float* %347 to i32*
    %349 = load i32, i32* %348, align 4, !tbaa !45
    %350 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 8, i32 3
    %351 = bitcast float* %350 to i32*
    store i32 %349, i32* %351, align 4, !tbaa !45
    br label %352
  
  ; <label>:352                                     ; preds = %331, %294
    %353 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 54
    %354 = load i32, i32* %353, align 4, !tbaa !80
    %355 = icmp eq i32 %354, 7170
    br i1 %355, label %356, label %357
  
  ; <label>:356                                     ; preds = %352
    call void @gl_update_hitflag(%struct.gl_context* nonnull %ctx, float %324) #6
    br label %357
  
  ; <label>:357                                     ; preds = %356, %352, %292, %205
    %358 = bitcast [4 x float]* %clip to i8*
    %359 = bitcast [4 x float]* %eye to i8*
    call void @llvm.lifetime.end(i64 16, i8* %358) #6
    call void @llvm.lifetime.end(i64 16, i8* %359) #6
    ret void
  }
  
  declare void @gl_compute_modelview_inverse(%struct.gl_context*) #4
  
  declare i32 @gl_userclip_point(%struct.gl_context*, float*) #4
  
  declare i32 @gl_viewclip_point(float*) #4
  
  declare void @gl_update_hitflag(%struct.gl_context*, float) #4
  
  ; Function Attrs: nounwind
  define void @gl_windowpos(%struct.gl_context* %ctx, float %x, float %y, float %z, float %w) #0 {
    %eye = alloca [4 x float], align 4
    %eyenorm = alloca [3 x float], align 4
    %color = alloca [4 x i32], align 4
    %bcolor = alloca [4 x i32], align 4
    %dummy = alloca i32, align 4
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 4, i32 0
    store float %x, float* %1, align 4, !tbaa !45
    %2 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 4, i32 1
    store float %y, float* %2, align 4, !tbaa !45
    %3 = fcmp olt float %z, 0.000000e+00
    %4 = fcmp ogt float %z, 1.000000e+00
    %5 = select i1 %4, float 1.000000e+00, float %z
    %6 = select i1 %3, float 0.000000e+00, float %5
    %7 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 4, i32 2
    store float %6, float* %7, align 4, !tbaa !45
    %8 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 4, i32 3
    store float %w, float* %8, align 4, !tbaa !45
    %9 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 9
    store i8 1, i8* %9, align 4, !tbaa !105
    %10 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 3
    %11 = load i8, i8* %10, align 4, !tbaa !59
    %12 = icmp eq i8 %11, 0
    br i1 %12, label %111, label %13
  
  ; <label>:13                                      ; preds = %0
    %14 = bitcast [4 x float]* %eye to i8*
    call void @llvm.lifetime.start(i64 16, i8* %14) #6
    %15 = bitcast [3 x float]* %eyenorm to i8*
    call void @llvm.lifetime.start(i64 12, i8* %15) #6
    %16 = bitcast [4 x float]* %eye to float*
    store float %x, float* %16, align 4, !tbaa !45
    %17 = getelementptr inbounds [4 x float], [4 x float]* %eye, i32 0, i32 1
    store float %y, float* %17, align 4, !tbaa !45
    %18 = getelementptr inbounds [4 x float], [4 x float]* %eye, i32 0, i32 2
    store float %6, float* %18, align 4, !tbaa !45
    %19 = getelementptr inbounds [4 x float], [4 x float]* %eye, i32 0, i32 3
    store float %w, float* %19, align 4, !tbaa !45
    %20 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 10
    %21 = load i8, i8* %20, align 4, !tbaa !103
    %22 = icmp eq i8 %21, 0
    br i1 %22, label %23, label %24
  
  ; <label>:23                                      ; preds = %13
    tail call void @gl_compute_modelview_inverse(%struct.gl_context* nonnull %ctx) #6
    br label %24
  
  ; <label>:24                                      ; preds = %23, %13
    %25 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2, i32 0
    %26 = load float, float* %25, align 4, !tbaa !45
    %27 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 0
    %28 = load float, float* %27, align 4, !tbaa !45
    %29 = fmul float %26, %28
    %30 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2, i32 1
    %31 = load float, float* %30, align 4, !tbaa !45
    %32 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 1
    %33 = load float, float* %32, align 4, !tbaa !45
    %34 = fmul float %31, %33
    %35 = fadd float %29, %34
    %36 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 2, i32 2
    %37 = load float, float* %36, align 4, !tbaa !45
    %38 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 2
    %39 = load float, float* %38, align 4, !tbaa !45
    %40 = fmul float %37, %39
    %41 = fadd float %35, %40
    %42 = bitcast [3 x float]* %eyenorm to float*
    store float %41, float* %42, align 4, !tbaa !45
    %43 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 4
    %44 = load float, float* %43, align 4, !tbaa !45
    %45 = fmul float %26, %44
    %46 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 5
    %47 = load float, float* %46, align 4, !tbaa !45
    %48 = fmul float %31, %47
    %49 = fadd float %45, %48
    %50 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 6
    %51 = load float, float* %50, align 4, !tbaa !45
    %52 = fmul float %37, %51
    %53 = fadd float %49, %52
    %54 = getelementptr inbounds [3 x float], [3 x float]* %eyenorm, i32 0, i32 1
    store float %53, float* %54, align 4, !tbaa !45
    %55 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 8
    %56 = load float, float* %55, align 4, !tbaa !45
    %57 = fmul float %26, %56
    %58 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 9
    %59 = load float, float* %58, align 4, !tbaa !45
    %60 = fmul float %31, %59
    %61 = fadd float %57, %60
    %62 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 9, i32 10
    %63 = load float, float* %62, align 4, !tbaa !45
    %64 = fmul float %37, %63
    %65 = fadd float %61, %64
    %66 = getelementptr inbounds [3 x float], [3 x float]* %eyenorm, i32 0, i32 2
    store float %65, float* %66, align 4, !tbaa !45
    %67 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 68
    store i32 0, i32* %67, align 4, !tbaa !90
    %68 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 4
    %69 = load %struct.gl_visual*, %struct.gl_visual** %68, align 4, !tbaa !71
    %70 = bitcast %struct.gl_visual* %69 to i8*
    %71 = load i8, i8* %70, align 4, !tbaa !72
    %72 = icmp eq i8 %71, 0
    br i1 %72, label %105, label %73
  
  ; <label>:73                                      ; preds = %24
    %74 = bitcast [4 x i32]* %color to i8*
    call void @llvm.lifetime.start(i64 16, i8* %74) #6
    %75 = bitcast [4 x i32]* %bcolor to i8*
    call void @llvm.lifetime.start(i64 16, i8* %75) #6
    call void @gl_color_shade_vertices(%struct.gl_context* nonnull %ctx, i32 signext 1, [4 x float]* nonnull %eye, [3 x float]* nonnull %eyenorm, i32 signext 0, [4 x i32]* nonnull %color, [4 x i32]* nonnull %bcolor) #6
    %76 = bitcast [4 x i32]* %color to i32*
    %77 = load i32, i32* %76, align 4, !tbaa !46
    %78 = sitofp i32 %77 to float
    %sunkaddr = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr1 = add i32 %sunkaddr, 2020
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to %struct.gl_visual**
    %79 = load %struct.gl_visual*, %struct.gl_visual** %sunkaddr2, align 4, !tbaa !71
    %80 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %79, i32 0, i32 7
    %81 = load float, float* %80, align 4, !tbaa !98
    %82 = fmul float %78, %81
    %83 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 6, i32 0
    store float %82, float* %83, align 4, !tbaa !45
    %84 = getelementptr inbounds [4 x i32], [4 x i32]* %color, i32 0, i32 1
    %85 = load i32, i32* %84, align 4, !tbaa !46
    %86 = sitofp i32 %85 to float
    %87 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %79, i32 0, i32 8
    %88 = load float, float* %87, align 4, !tbaa !99
    %89 = fmul float %86, %88
    %90 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 6, i32 1
    store float %89, float* %90, align 4, !tbaa !45
    %91 = getelementptr inbounds [4 x i32], [4 x i32]* %color, i32 0, i32 2
    %92 = load i32, i32* %91, align 4, !tbaa !46
    %93 = sitofp i32 %92 to float
    %94 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %79, i32 0, i32 9
    %95 = load float, float* %94, align 4, !tbaa !100
    %96 = fmul float %93, %95
    %97 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 6, i32 2
    store float %96, float* %97, align 4, !tbaa !45
    %98 = getelementptr inbounds [4 x i32], [4 x i32]* %color, i32 0, i32 3
    %99 = load i32, i32* %98, align 4, !tbaa !46
    %100 = sitofp i32 %99 to float
    %101 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %79, i32 0, i32 10
    %102 = load float, float* %101, align 4, !tbaa !101
    %103 = fmul float %100, %102
    %104 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 6, i32 3
    store float %103, float* %104, align 4, !tbaa !45
    call void @llvm.lifetime.end(i64 16, i8* %75) #6
    call void @llvm.lifetime.end(i64 16, i8* %74) #6
    br label %108
  
  ; <label>:105                                     ; preds = %24
    %106 = bitcast i32* %dummy to i8*
    call void @llvm.lifetime.start(i64 4, i8* %106) #6
    %107 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 7
    call void @gl_index_shade_vertices(%struct.gl_context* nonnull %ctx, i32 signext 1, [4 x float]* nonnull %eye, [3 x float]* nonnull %eyenorm, i32 signext 0, i32* %107, i32* nonnull %dummy) #6
    call void @llvm.lifetime.end(i64 4, i8* %106) #6
    br label %108
  
  ; <label>:108                                     ; preds = %105, %73
    %109 = bitcast [3 x float]* %eyenorm to i8*
    %110 = bitcast [4 x float]* %eye to i8*
    call void @llvm.lifetime.end(i64 12, i8* nonnull %109) #6
    call void @llvm.lifetime.end(i64 16, i8* %110) #6
    br label %150
  
  ; <label>:111                                     ; preds = %0
    %112 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 4
    %113 = load %struct.gl_visual*, %struct.gl_visual** %112, align 4, !tbaa !71
    %114 = bitcast %struct.gl_visual* %113 to i8*
    %115 = load i8, i8* %114, align 4, !tbaa !72
    %116 = icmp eq i8 %115, 0
    br i1 %116, label %146, label %117
  
  ; <label>:117                                     ; preds = %111
    %118 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 0
    %119 = load i32, i32* %118, align 4, !tbaa !46
    %120 = sitofp i32 %119 to float
    %121 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %113, i32 0, i32 7
    %122 = load float, float* %121, align 4, !tbaa !98
    %123 = fmul float %120, %122
    %124 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 6, i32 0
    store float %123, float* %124, align 4, !tbaa !45
    %125 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 1
    %126 = load i32, i32* %125, align 4, !tbaa !46
    %127 = sitofp i32 %126 to float
    %128 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %113, i32 0, i32 8
    %129 = load float, float* %128, align 4, !tbaa !99
    %130 = fmul float %127, %129
    %131 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 6, i32 1
    store float %130, float* %131, align 4, !tbaa !45
    %132 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 2
    %133 = load i32, i32* %132, align 4, !tbaa !46
    %134 = sitofp i32 %133 to float
    %135 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %113, i32 0, i32 9
    %136 = load float, float* %135, align 4, !tbaa !100
    %137 = fmul float %134, %136
    %138 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 6, i32 2
    store float %137, float* %138, align 4, !tbaa !45
    %139 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 3
    %140 = load i32, i32* %139, align 4, !tbaa !46
    %141 = sitofp i32 %140 to float
    %142 = getelementptr inbounds %struct.gl_visual, %struct.gl_visual* %113, i32 0, i32 10
    %143 = load float, float* %142, align 4, !tbaa !101
    %144 = fmul float %141, %143
    %145 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 6, i32 3
    store float %144, float* %145, align 4, !tbaa !45
    br label %150
  
  ; <label>:146                                     ; preds = %111
    %147 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 1
    %148 = load i32, i32* %147, align 4, !tbaa !91
    %149 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 7
    store i32 %148, i32* %149, align 4, !tbaa !104
    br label %150
  
  ; <label>:150                                     ; preds = %146, %117, %108
    %151 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 5
    store float 0.000000e+00, float* %151, align 4, !tbaa !106
    %152 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 41, i32 0
    %153 = load i32, i32* %152, align 4, !tbaa !79
    %154 = icmp eq i32 %153, 0
    br i1 %154, label %176, label %155
  
  ; <label>:155                                     ; preds = %150
    %156 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3
    %157 = bitcast [4 x float]* %156 to i32*
    %158 = load i32, i32* %157, align 4, !tbaa !45
    %159 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 8
    %160 = bitcast [4 x float]* %159 to i32*
    store i32 %158, i32* %160, align 4, !tbaa !45
    %161 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3, i32 1
    %162 = bitcast float* %161 to i32*
    %163 = load i32, i32* %162, align 4, !tbaa !45
    %164 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 8, i32 1
    %165 = bitcast float* %164 to i32*
    store i32 %163, i32* %165, align 4, !tbaa !45
    %166 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3, i32 2
    %167 = bitcast float* %166 to i32*
    %168 = load i32, i32* %167, align 4, !tbaa !45
    %169 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 8, i32 2
    %170 = bitcast float* %169 to i32*
    store i32 %168, i32* %170, align 4, !tbaa !45
    %171 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 3, i32 3
    %172 = bitcast float* %171 to i32*
    %173 = load i32, i32* %172, align 4, !tbaa !45
    %174 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 8, i32 3
    %175 = bitcast float* %174 to i32*
    store i32 %173, i32* %175, align 4, !tbaa !45
    br label %176
  
  ; <label>:176                                     ; preds = %155, %150
    %177 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 54
    %178 = load i32, i32* %177, align 4, !tbaa !80
    %179 = icmp eq i32 %178, 7170
    br i1 %179, label %180, label %182
  
  ; <label>:180                                     ; preds = %176
    %sunkaddr3 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr4 = add i32 %sunkaddr3, 7460
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to float*
    %181 = load float, float* %sunkaddr5, align 4, !tbaa !45
    call void @gl_update_hitflag(%struct.gl_context* nonnull %ctx, float %181) #6
    br label %182
  
  ; <label>:182                                     ; preds = %180, %176
    ret void
  }
  
  ; Function Attrs: nounwind
  define void @gl_Begin(%struct.gl_context* %ctx, i32 signext %p) #0 {
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %2 = load %struct.vertex_buffer*, %struct.vertex_buffer** %1, align 4, !tbaa !1
    %3 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 75
    %4 = load %struct.pixel_buffer*, %struct.pixel_buffer** %3, align 4, !tbaa !107
    %5 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 55
    %6 = load i32, i32* %5, align 4, !tbaa !37
    %7 = icmp eq i32 %6, 6656
    br i1 %7, label %9, label %8
  
  ; <label>:8                                       ; preds = %0
    tail call void @gl_error(%struct.gl_context* nonnull %ctx, i32 signext 1282, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0)) #6
    br label %129
  
  ; <label>:9                                       ; preds = %0
    %10 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 10
    %11 = load i8, i8* %10, align 4, !tbaa !103
    %12 = icmp eq i8 %11, 0
    br i1 %12, label %13, label %14
  
  ; <label>:13                                      ; preds = %9
    tail call void @gl_compute_modelview_inverse(%struct.gl_context* nonnull %ctx) #6
    br label %14
  
  ; <label>:14                                      ; preds = %13, %9
    %15 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 53
    %16 = load i32, i32* %15, align 4, !tbaa !108
    %17 = icmp eq i32 %16, 0
    br i1 %17, label %19, label %18
  
  ; <label>:18                                      ; preds = %14
    tail call void @gl_update_state(%struct.gl_context* nonnull %ctx) #6
    br label %gl_set_vertex_function.exit
  
  ; <label>:19                                      ; preds = %14
    %20 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 3, i32 163
    %21 = load void (%struct.gl_context*, float, float, float, float)*, void (%struct.gl_context*, float, float, float, float)** %20, align 4, !tbaa !93
    %22 = icmp eq void (%struct.gl_context*, float, float, float, float)* %21, @gl_nop_vertex
    br i1 %22, label %23, label %gl_set_vertex_function.exit
  
  ; <label>:23                                      ; preds = %19
    %24 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 54
    %25 = load i32, i32* %24, align 4, !tbaa !80
    %26 = icmp eq i32 %25, 7169
    br i1 %26, label %27, label %28
  
  ; <label>:27                                      ; preds = %23
    %sunkaddr = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr1 = add i32 %sunkaddr, 2000
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to void (%struct.gl_context*, float, float, float, float)**
    store void (%struct.gl_context*, float, float, float, float)* @vertex_feedback, void (%struct.gl_context*, float, float, float, float)** %sunkaddr2, align 4, !tbaa !93
    br label %52
  
  ; <label>:28                                      ; preds = %23
    %29 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 4
    %30 = load %struct.gl_visual*, %struct.gl_visual** %29, align 4, !tbaa !71
    %31 = bitcast %struct.gl_visual* %30 to i8*
    %32 = load i8, i8* %31, align 4, !tbaa !72
    %33 = icmp eq i8 %32, 0
    %34 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 3
    %35 = load i8, i8* %34, align 4, !tbaa !59
    br i1 %33, label %48, label %36
  
  ; <label>:36                                      ; preds = %28
    %37 = icmp ne i8 %35, 0
    %38 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 41, i32 0
    %39 = load i32, i32* %38, align 4, !tbaa !79
    br i1 %37, label %40, label %44
  
  ; <label>:40                                      ; preds = %36
    %41 = icmp ne i32 %39, 0
    br i1 %41, label %42, label %43
  
  ; <label>:42                                      ; preds = %40
    %sunkaddr3 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr4 = add i32 %sunkaddr3, 2000
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to void (%struct.gl_context*, float, float, float, float)**
    store void (%struct.gl_context*, float, float, float, float)* @vertex_normal_texture, void (%struct.gl_context*, float, float, float, float)** %sunkaddr5, align 4, !tbaa !93
    br label %52
  
  ; <label>:43                                      ; preds = %40
    %sunkaddr6 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr7 = add i32 %sunkaddr6, 2000
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to void (%struct.gl_context*, float, float, float, float)**
    store void (%struct.gl_context*, float, float, float, float)* @vertex_normal, void (%struct.gl_context*, float, float, float, float)** %sunkaddr8, align 4, !tbaa !93
    br label %52
  
  ; <label>:44                                      ; preds = %36
    %45 = icmp ne i32 %39, 0
    br i1 %45, label %46, label %47
  
  ; <label>:46                                      ; preds = %44
    %sunkaddr9 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr10 = add i32 %sunkaddr9, 2000
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to void (%struct.gl_context*, float, float, float, float)**
    store void (%struct.gl_context*, float, float, float, float)* @vertex_texture, void (%struct.gl_context*, float, float, float, float)** %sunkaddr11, align 4, !tbaa !93
    br label %52
  
  ; <label>:47                                      ; preds = %44
    %sunkaddr12 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr13 = add i32 %sunkaddr12, 2000
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to void (%struct.gl_context*, float, float, float, float)**
    store void (%struct.gl_context*, float, float, float, float)* @vertex_color, void (%struct.gl_context*, float, float, float, float)** %sunkaddr14, align 4, !tbaa !93
    br label %52
  
  ; <label>:48                                      ; preds = %28
    %49 = icmp ne i8 %35, 0
    br i1 %49, label %50, label %51
  
  ; <label>:50                                      ; preds = %48
    %sunkaddr15 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr16 = add i32 %sunkaddr15, 2000
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to void (%struct.gl_context*, float, float, float, float)**
    store void (%struct.gl_context*, float, float, float, float)* @vertex_normal, void (%struct.gl_context*, float, float, float, float)** %sunkaddr17, align 4, !tbaa !93
    br label %52
  
  ; <label>:51                                      ; preds = %48
    %sunkaddr18 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr19 = add i32 %sunkaddr18, 2000
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to void (%struct.gl_context*, float, float, float, float)**
    store void (%struct.gl_context*, float, float, float, float)* @vertex_index, void (%struct.gl_context*, float, float, float, float)** %sunkaddr20, align 4, !tbaa !93
    br label %52
  
  ; <label>:52                                      ; preds = %51, %50, %47, %46, %43, %42, %27
    %53 = phi i32 [ ptrtoint (void (%struct.gl_context*, float, float, float, float)* @vertex_texture to i32), %46 ], [ ptrtoint (void (%struct.gl_context*, float, float, float, float)* @vertex_color to i32), %47 ], [ ptrtoint (void (%struct.gl_context*, float, float, float, float)* @vertex_normal_texture to i32), %42 ], [ ptrtoint (void (%struct.gl_context*, float, float, float, float)* @vertex_normal to i32), %43 ], [ ptrtoint (void (%struct.gl_context*, float, float, float, float)* @vertex_index to i32), %51 ], [ ptrtoint (void (%struct.gl_context*, float, float, float, float)* @vertex_normal to i32), %50 ], [ ptrtoint (void (%struct.gl_context*, float, float, float, float)* @vertex_feedback to i32), %27 ]
    %54 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 22
    %55 = load i8, i8* %54, align 1, !tbaa !94
    %56 = icmp eq i8 %55, 0
    br i1 %56, label %57, label %gl_set_vertex_function.exit
  
  ; <label>:57                                      ; preds = %52
    %58 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 1, i32 163
    %59 = bitcast void (%struct.gl_context*, float, float, float, float)** %58 to i32*
    store i32 %53, i32* %59, align 4, !tbaa !95
    br label %gl_set_vertex_function.exit
  
  gl_set_vertex_function.exit:                      ; preds = %57, %52, %19, %18
    %60 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 6, i32 38
    %61 = load void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32)** %60, align 4, !tbaa !109
    %62 = icmp eq void (%struct.gl_context*, i32)* %61, null
    br i1 %62, label %64, label %63
  
  ; <label>:63                                      ; preds = %gl_set_vertex_function.exit
    tail call void %61(%struct.gl_context* nonnull %ctx, i32 signext %p) #6
    br label %64
  
  ; <label>:64                                      ; preds = %63, %gl_set_vertex_function.exit
    %sunkaddr21 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr22 = add i32 %sunkaddr21, 55744
    %sunkaddr23 = inttoptr i32 %sunkaddr22 to i32*
    store i32 %p, i32* %sunkaddr23, align 4, !tbaa !37
    %65 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 16
    store i32 0, i32* %65, align 4, !tbaa !39
    %66 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 15
    store i32 0, i32* %66, align 4, !tbaa !47
    %67 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 14
    store i8 0, i8* %67, align 4, !tbaa !41
    %68 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 67
    %69 = load i8, i8* %68, align 1, !tbaa !110
    %70 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 21
    store i8 %69, i8* %70, align 4, !tbaa !111
    %71 = icmp eq i8 %69, 0
    br i1 %71, label %98, label %72
  
  ; <label>:72                                      ; preds = %64
    %73 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 4
    %74 = load %struct.gl_visual*, %struct.gl_visual** %73, align 4, !tbaa !71
    %75 = bitcast %struct.gl_visual* %74 to i8*
    %76 = load i8, i8* %75, align 4, !tbaa !72
    %77 = icmp eq i8 %76, 0
    br i1 %77, label %93, label %78
  
  ; <label>:78                                      ; preds = %72
    %79 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 0
    %80 = load i32, i32* %79, align 4, !tbaa !46
    %81 = trunc i32 %80 to i8
    %82 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 1
    %83 = load i32, i32* %82, align 4, !tbaa !46
    %84 = trunc i32 %83 to i8
    %85 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 2
    %86 = load i32, i32* %85, align 4, !tbaa !46
    %87 = trunc i32 %86 to i8
    %88 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 0, i32 3
    %89 = load i32, i32* %88, align 4, !tbaa !46
    %90 = trunc i32 %89 to i8
    %91 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 6, i32 5
    %92 = load void (%struct.gl_context*, i8, i8, i8, i8)*, void (%struct.gl_context*, i8, i8, i8, i8)** %91, align 4, !tbaa !112
    tail call void %92(%struct.gl_context* nonnull %ctx, i8 zeroext %81, i8 zeroext %84, i8 zeroext %87, i8 zeroext %90) #6
    br label %98
  
  ; <label>:93                                      ; preds = %72
    %94 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 6, i32 4
    %95 = load void (%struct.gl_context*, i32)*, void (%struct.gl_context*, i32)** %94, align 4, !tbaa !113
    %96 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 27, i32 1
    %97 = load i32, i32* %96, align 4, !tbaa !91
    tail call void %95(%struct.gl_context* nonnull %ctx, i32 signext %97) #6
    br label %98
  
  ; <label>:98                                      ; preds = %93, %78, %64
    %99 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 4
    %100 = load i32, i32* %99, align 4, !tbaa !114
    %101 = icmp eq i32 %100, 7424
    %102 = select i1 %101, i32 0, i32 11
    %103 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 68
    store i32 %102, i32* %103, align 4, !tbaa !90
    %104 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 5, i32 0
    %105 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 7
    store [4 x i32]* %104, [4 x i32]** %105, align 4, !tbaa !60
    %106 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 8, i32 0
    %107 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %2, i32 0, i32 10
    store i32* %106, i32** %107, align 4, !tbaa !61
    %sunkaddr24 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr25 = add i32 %sunkaddr24, 55744
    %sunkaddr26 = inttoptr i32 %sunkaddr25 to i32*
    %108 = load i32, i32* %sunkaddr26, align 4, !tbaa !37
    switch i32 %108, label %128 [
      i32 0, label %109
      i32 1, label %114
      i32 3, label %114
      i32 2, label %114
      i32 4, label %120
      i32 5, label %120
      i32 6, label %120
      i32 7, label %120
      i32 8, label %120
      i32 9, label %120
    ]
  
  ; <label>:109                                     ; preds = %98
    %110 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 59
    store i32 0, i32* %110, align 4, !tbaa !75
    %111 = getelementptr inbounds %struct.pixel_buffer, %struct.pixel_buffer* %4, i32 0, i32 13
    store i32 0, i32* %111, align 4, !tbaa !115
    %112 = getelementptr inbounds %struct.pixel_buffer, %struct.pixel_buffer* %4, i32 0, i32 14
    store i8 0, i8* %112, align 4, !tbaa !117
    %113 = getelementptr inbounds %struct.pixel_buffer, %struct.pixel_buffer* %4, i32 0, i32 15
    store i32 6912, i32* %113, align 4, !tbaa !118
    br label %129
  
  ; <label>:114                                     ; preds = %98, %98, %98
    %115 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 59
    store i32 0, i32* %115, align 4, !tbaa !75
    %116 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 56
    store i32 0, i32* %116, align 4, !tbaa !44
    %117 = getelementptr inbounds %struct.pixel_buffer, %struct.pixel_buffer* %4, i32 0, i32 13
    store i32 0, i32* %117, align 4, !tbaa !115
    %118 = getelementptr inbounds %struct.pixel_buffer, %struct.pixel_buffer* %4, i32 0, i32 14
    store i8 0, i8* %118, align 4, !tbaa !117
    %119 = getelementptr inbounds %struct.pixel_buffer, %struct.pixel_buffer* %4, i32 0, i32 15
    store i32 6913, i32* %119, align 4, !tbaa !118
    br label %129
  
  ; <label>:120                                     ; preds = %98, %98, %98, %98, %98, %98
    %121 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 32, i32 1, i32 2
    %122 = load i8, i8* %121, align 1, !tbaa !58
    %123 = zext i8 %122 to i32
    %124 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 59
    store i32 %123, i32* %124, align 4, !tbaa !75
    %125 = getelementptr inbounds %struct.pixel_buffer, %struct.pixel_buffer* %4, i32 0, i32 13
    store i32 0, i32* %125, align 4, !tbaa !115
    %126 = getelementptr inbounds %struct.pixel_buffer, %struct.pixel_buffer* %4, i32 0, i32 14
    store i8 0, i8* %126, align 4, !tbaa !117
    %127 = getelementptr inbounds %struct.pixel_buffer, %struct.pixel_buffer* %4, i32 0, i32 15
    store i32 9, i32* %127, align 4, !tbaa !118
    br label %129
  
  ; <label>:128                                     ; preds = %98
    tail call void @gl_error(%struct.gl_context* nonnull %ctx, i32 signext 1280, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0)) #6
    %sunkaddr27 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr28 = add i32 %sunkaddr27, 55744
    %sunkaddr29 = inttoptr i32 %sunkaddr28 to i32*
    store i32 6656, i32* %sunkaddr29, align 4, !tbaa !37
    br label %129
  
  ; <label>:129                                     ; preds = %128, %120, %114, %109, %8
    ret void
  }
  
  declare void @gl_update_state(%struct.gl_context*) #4
  
  ; Function Attrs: nounwind
  define void @gl_End(%struct.gl_context* %ctx) #0 {
    %1 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 75
    %2 = load %struct.pixel_buffer*, %struct.pixel_buffer** %1, align 4, !tbaa !107
    %3 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %4 = load %struct.vertex_buffer*, %struct.vertex_buffer** %3, align 4, !tbaa !1
    %5 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 55
    %6 = load i32, i32* %5, align 4, !tbaa !37
    %7 = icmp eq i32 %6, 6656
    br i1 %7, label %8, label %9
  
  ; <label>:8                                       ; preds = %0
    tail call void @gl_error(%struct.gl_context* nonnull %ctx, i32 signext 1282, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0)) #6
    br label %28
  
  ; <label>:9                                       ; preds = %0
    %10 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 16
    %11 = load i32, i32* %10, align 4, !tbaa !39
    %12 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 15
    %13 = load i32, i32* %12, align 4, !tbaa !47
    %14 = icmp ugt i32 %11, %13
    br i1 %14, label %15, label %16
  
  ; <label>:15                                      ; preds = %9
    tail call void @gl_transform_vb_part1(%struct.gl_context* nonnull %ctx, i8 zeroext 1)
    br label %16
  
  ; <label>:16                                      ; preds = %15, %9
    %17 = getelementptr inbounds %struct.pixel_buffer, %struct.pixel_buffer* %2, i32 0, i32 13
    %18 = load i32, i32* %17, align 4, !tbaa !115
    %19 = icmp eq i32 %18, 0
    br i1 %19, label %21, label %20
  
  ; <label>:20                                      ; preds = %16
    tail call void @gl_flush_pb(%struct.gl_context* nonnull %ctx) #6
    br label %21
  
  ; <label>:21                                      ; preds = %20, %16
    %sunkaddr = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr1 = add i32 %sunkaddr, 55744
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to i32*
    store i32 6656, i32* %sunkaddr2, align 4, !tbaa !37
    %22 = getelementptr inbounds %struct.pixel_buffer, %struct.pixel_buffer* %2, i32 0, i32 15
    store i32 6656, i32* %22, align 4, !tbaa !118
    %23 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %4, i32 0, i32 18
    store i8 0, i8* %23, align 4, !tbaa !74
    %24 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 6, i32 39
    %25 = load void (%struct.gl_context*)*, void (%struct.gl_context*)** %24, align 4, !tbaa !119
    %26 = icmp eq void (%struct.gl_context*)* %25, null
    br i1 %26, label %28, label %27
  
  ; <label>:27                                      ; preds = %21
    tail call void %25(%struct.gl_context* nonnull %ctx) #6
    br label %28
  
  ; <label>:28                                      ; preds = %27, %21, %8
    ret void
  }
  
  declare void @gl_flush_pb(%struct.gl_context*) #4
  
  declare i32 @gl_userclip_line(%struct.gl_context*, i32*, i32*) #4
  
  declare i32 @gl_viewclip_line(%struct.gl_context*, i32*, i32*) #4
  
  ; Function Attrs: nounwind
  define internal fastcc void @unfilled_polygon(%struct.gl_context* %ctx, i32 signext %n, i32* nocapture readonly %vlist, i32 signext %pv, i32 signext %facing) unnamed_addr #0 {
    %1 = icmp eq i32 %facing, 0
    %2 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 2
    %3 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 37, i32 1
    %.in = select i1 %1, i32* %3, i32* %2
    %4 = load i32, i32* %.in, align 4, !tbaa !42
    %5 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 74
    %6 = load %struct.vertex_buffer*, %struct.vertex_buffer** %5, align 4, !tbaa !1
    switch i32 %4, label %43 [
      i32 6912, label %7
      i32 6913, label %23
    ]
  
  ; <label>:7                                       ; preds = %0
    %8 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 55
    %9 = load i32, i32* %8, align 4, !tbaa !37
    %switch.tableidx = add i32 %9, -4
    %10 = icmp ult i32 %switch.tableidx, 6
    br i1 %10, label %switch.lookup, label %11
  
  switch.lookup:                                    ; preds = %7
    %switch.gep = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.3, i32 0, i32 %switch.tableidx
    %switch.load = load i32, i32* %switch.gep, align 4
    br label %11
  
  ; <label>:11                                      ; preds = %switch.lookup, %7
    %edge.0 = phi i32 [ %switch.load, %switch.lookup ], [ 1, %7 ]
    %12 = icmp eq i32 %n, 0
    br i1 %12, label %.loopexit, label %.lr.ph14
  
  .lr.ph14:                                         ; preds = %11
    br label %13
  
  ; <label>:13                                      ; preds = %22, %.lr.ph14
    %lsr.iv6 = phi i32* [ %scevgep7, %22 ], [ %vlist, %.lr.ph14 ]
    %lsr.iv4 = phi i32 [ %lsr.iv.next5, %22 ], [ %n, %.lr.ph14 ]
    %14 = icmp eq i32 %edge.0, 0
    %15 = load i32, i32* %lsr.iv6, align 4, !tbaa !46
    br i1 %14, label %16, label %20
  
  ; <label>:16                                      ; preds = %13
    %17 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %6, i32 0, i32 11, i32 %15
    %18 = load i8, i8* %17, align 1, !tbaa !42
    %19 = icmp eq i8 %18, 0
    br i1 %19, label %22, label %20
  
  ; <label>:20                                      ; preds = %16, %13
    %sunkaddr = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr10 = add i32 %sunkaddr, 55788
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to void (%struct.gl_context*, i32, i32)**
    %21 = load void (%struct.gl_context*, i32, i32)*, void (%struct.gl_context*, i32, i32)** %sunkaddr11, align 4, !tbaa !38
    tail call void %21(%struct.gl_context* %ctx, i32 signext %15, i32 signext %15) #6
    br label %22
  
  ; <label>:22                                      ; preds = %20, %16
    %lsr.iv.next5 = add i32 %lsr.iv4, -1
    %scevgep7 = getelementptr i32, i32* %lsr.iv6, i32 1
    %exitcond19 = icmp eq i32 %lsr.iv.next5, 0
    br i1 %exitcond19, label %.loopexit, label %13
  
  ; <label>:23                                      ; preds = %0
    %24 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 56
    store i32 0, i32* %24, align 4, !tbaa !44
    %25 = getelementptr inbounds %struct.gl_context, %struct.gl_context* %ctx, i32 0, i32 55
    %26 = load i32, i32* %25, align 4, !tbaa !37
    %switch.tableidx7 = add i32 %26, -4
    %27 = icmp ult i32 %switch.tableidx7, 6
    br i1 %27, label %switch.lookup6, label %28
  
  switch.lookup6:                                   ; preds = %23
    %switch.gep8 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.3, i32 0, i32 %switch.tableidx7
    %switch.load9 = load i32, i32* %switch.gep8, align 4
    br label %28
  
  ; <label>:28                                      ; preds = %switch.lookup6, %23
    %edge2.0 = phi i32 [ %switch.load9, %switch.lookup6 ], [ 1, %23 ]
    %29 = icmp eq i32 %n, 0
    br i1 %29, label %.loopexit, label %.lr.ph16
  
  .lr.ph16:                                         ; preds = %28
    br label %30
  
  ; <label>:30                                      ; preds = %41, %.lr.ph16
    %lsr.iv8 = phi i32* [ %scevgep9, %41 ], [ %vlist, %.lr.ph16 ]
    %i1.015 = phi i32 [ 0, %.lr.ph16 ], [ %42, %41 ]
    %31 = icmp eq i32 %edge2.0, 0
    %32 = icmp eq i32 %i1.015, 0
    %n.i1.0 = select i1 %32, i32 %n, i32 %i1.015
    %.pn = add i32 %n.i1.0, -1
    %.in5 = getelementptr inbounds i32, i32* %vlist, i32 %.pn
    %33 = load i32, i32* %.in5, align 4, !tbaa !46
    %34 = load i32, i32* %lsr.iv8, align 4, !tbaa !46
    br i1 %31, label %35, label %39
  
  ; <label>:35                                      ; preds = %30
    %36 = getelementptr inbounds %struct.vertex_buffer, %struct.vertex_buffer* %6, i32 0, i32 11, i32 %33
    %37 = load i8, i8* %36, align 1, !tbaa !42
    %38 = icmp eq i8 %37, 0
    br i1 %38, label %41, label %39
  
  ; <label>:39                                      ; preds = %35, %30
    %sunkaddr12 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr13 = add i32 %sunkaddr12, 55792
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to void (%struct.gl_context*, i32, i32, i32)**
    %40 = load void (%struct.gl_context*, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32)** %sunkaddr14, align 4, !tbaa !43
    tail call void %40(%struct.gl_context* %ctx, i32 signext %33, i32 signext %34, i32 signext %pv) #6
    br label %41
  
  ; <label>:41                                      ; preds = %39, %35
    %42 = add nuw i32 %i1.015, 1
    %scevgep9 = getelementptr i32, i32* %lsr.iv8, i32 1
    %exitcond20 = icmp eq i32 %n, %42
    br i1 %exitcond20, label %.loopexit, label %30
  
  ; <label>:43                                      ; preds = %0
    %44 = load i32, i32* %vlist, align 4, !tbaa !46
    %45 = icmp ugt i32 %n, 2
    br i1 %45, label %.lr.ph, label %.loopexit
  
  .lr.ph:                                           ; preds = %43
    %46 = add i32 %n, -2
    %scevgep = getelementptr i32, i32* %vlist, i32 2
    br label %47
  
  ; <label>:47                                      ; preds = %47, %.lr.ph
    %lsr.iv1 = phi i32* [ %scevgep2, %47 ], [ %scevgep, %.lr.ph ]
    %lsr.iv = phi i32 [ %lsr.iv.next, %47 ], [ %46, %.lr.ph ]
    %sunkaddr15 = ptrtoint %struct.gl_context* %ctx to i32
    %sunkaddr16 = add i32 %sunkaddr15, 55804
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to void (%struct.gl_context*, i32, i32, i32, i32)**
    %48 = load void (%struct.gl_context*, i32, i32, i32, i32)*, void (%struct.gl_context*, i32, i32, i32, i32)** %sunkaddr17, align 4, !tbaa !49
    %scevgep3 = getelementptr i32, i32* %lsr.iv1, i32 -1
    %49 = load i32, i32* %scevgep3, align 4, !tbaa !46
    %50 = load i32, i32* %lsr.iv1, align 4, !tbaa !46
    tail call void %48(%struct.gl_context* nonnull %ctx, i32 signext %44, i32 signext %49, i32 signext %50, i32 signext %pv) #6
    %lsr.iv.next = add i32 %lsr.iv, -1
    %scevgep2 = getelementptr i32, i32* %lsr.iv1, i32 1
    %exitcond = icmp eq i32 %lsr.iv.next, 0
    br i1 %exitcond, label %.loopexit, label %47
  
  .loopexit:                                        ; preds = %41, %22, %47, %43, %28, %11
    ret void
  }
  
  declare i32 @gl_userclip_polygon(%struct.gl_context*, i32 signext, i32*) #4
  
  declare i32 @gl_viewclip_polygon(%struct.gl_context*, i32 signext, i32*) #4
  
  declare float @sqrtf(float) #5
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { argmemonly nounwind "target-cpu"="mips32" }
  attributes #2 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #3 = { norecurse nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #5 = { "target-cpu"="mips32" }
  attributes #6 = { nounwind }
  attributes #7 = { noreturn nounwind }
  attributes #8 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32r2" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #9 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32r2" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}
  !1 = !{!2, !3, i64 55808}
  !2 = !{!"gl_context", !3, i64 0, !6, i64 4, !6, i64 676, !6, i64 1348, !3, i64 2020, !3, i64 2024, !7, i64 2028, !3, i64 2208, !4, i64 2212, !4, i64 2276, !4, i64 2340, !8, i64 2344, !4, i64 2348, !4, i64 4396, !8, i64 4460, !4, i64 4464, !4, i64 6512, !4, i64 6576, !8, i64 6580, !4, i64 6584, !8, i64 7224, !4, i64 7228, !4, i64 7229, !8, i64 7232, !4, i64 7236, !9, i64 7300, !10, i64 7316, !12, i64 7404, !13, i64 7512, !14, i64 7524, !15, i64 7580, !16, i64 7620, !17, i64 7640, !19, i64 43772, !21, i64 43784, !22, i64 43788, !23, i64 54132, !24, i64 54140, !4, i64 54180, !25, i64 54308, !26, i64 54328, !27, i64 54352, !28, i64 54548, !29, i64 54656, !8, i64 54704, !4, i64 54708, !30, i64 54772, !31, i64 54900, !31, i64 54928, !32, i64 54956, !35, i64 55424, !36, i64 55444, !4, i64 55732, !8, i64 55736, !4, i64 55740, !4, i64 55744, !8, i64 55748, !8, i64 55752, !8, i64 55756, !8, i64 55760, !4, i64 55764, !11, i64 55768, !11, i64 55772, !11, i64 55776, !4, i64 55780, !4, i64 55781, !4, i64 55782, !4, i64 55783, !8, i64 55784, !3, i64 55788, !3, i64 55792, !3, i64 55796, !3, i64 55800, !3, i64 55804, !3, i64 55808, !3, i64 55812, !4, i64 55816}
  !3 = !{!"any pointer", !4, i64 0}
  !4 = !{!"omnipotent char", !5, i64 0}
  !5 = !{!"Simple C/C++ TBAA"}
  !6 = !{!"api_function_table", !3, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !3, i64 20, !3, i64 24, !3, i64 28, !3, i64 32, !3, i64 36, !3, i64 40, !3, i64 44, !3, i64 48, !3, i64 52, !3, i64 56, !3, i64 60, !3, i64 64, !3, i64 68, !3, i64 72, !3, i64 76, !3, i64 80, !3, i64 84, !3, i64 88, !3, i64 92, !3, i64 96, !3, i64 100, !3, i64 104, !3, i64 108, !3, i64 112, !3, i64 116, !3, i64 120, !3, i64 124, !3, i64 128, !3, i64 132, !3, i64 136, !3, i64 140, !3, i64 144, !3, i64 148, !3, i64 152, !3, i64 156, !3, i64 160, !3, i64 164, !3, i64 168, !3, i64 172, !3, i64 176, !3, i64 180, !3, i64 184, !3, i64 188, !3, i64 192, !3, i64 196, !3, i64 200, !3, i64 204, !3, i64 208, !3, i64 212, !3, i64 216, !3, i64 220, !3, i64 224, !3, i64 228, !3, i64 232, !3, i64 236, !3, i64 240, !3, i64 244, !3, i64 248, !3, i64 252, !3, i64 256, !3, i64 260, !3, i64 264, !3, i64 268, !3, i64 272, !3, i64 276, !3, i64 280, !3, i64 284, !3, i64 288, !3, i64 292, !3, i64 296, !3, i64 300, !3, i64 304, !3, i64 308, !3, i64 312, !3, i64 316, !3, i64 320, !3, i64 324, !3, i64 328, !3, i64 332, !3, i64 336, !3, i64 340, !3, i64 344, !3, i64 348, !3, i64 352, !3, i64 356, !3, i64 360, !3, i64 364, !3, i64 368, !3, i64 372, !3, i64 376, !3, i64 380, !3, i64 384, !3, i64 388, !3, i64 392, !3, i64 396, !3, i64 400, !3, i64 404, !3, i64 408, !3, i64 412, !3, i64 416, !3, i64 420, !3, i64 424, !3, i64 428, !3, i64 432, !3, i64 436, !3, i64 440, !3, i64 444, !3, i64 448, !3, i64 452, !3, i64 456, !3, i64 460, !3, i64 464, !3, i64 468, !3, i64 472, !3, i64 476, !3, i64 480, !3, i64 484, !3, i64 488, !3, i64 492, !3, i64 496, !3, i64 500, !3, i64 504, !3, i64 508, !3, i64 512, !3, i64 516, !3, i64 520, !3, i64 524, !3, i64 528, !3, i64 532, !3, i64 536, !3, i64 540, !3, i64 544, !3, i64 548, !3, i64 552, !3, i64 556, !3, i64 560, !3, i64 564, !3, i64 568, !3, i64 572, !3, i64 576, !3, i64 580, !3, i64 584, !3, i64 588, !3, i64 592, !3, i64 596, !3, i64 600, !3, i64 604, !3, i64 608, !3, i64 612, !3, i64 616, !3, i64 620, !3, i64 624, !3, i64 628, !3, i64 632, !3, i64 636, !3, i64 640, !3, i64 644, !3, i64 648, !3, i64 652, !3, i64 656, !3, i64 660, !3, i64 664, !3, i64 668}
  !7 = !{!"dd_function_table", !3, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !3, i64 20, !3, i64 24, !3, i64 28, !3, i64 32, !3, i64 36, !3, i64 40, !3, i64 44, !3, i64 48, !3, i64 52, !3, i64 56, !3, i64 60, !3, i64 64, !3, i64 68, !3, i64 72, !3, i64 76, !3, i64 80, !3, i64 84, !3, i64 88, !3, i64 92, !3, i64 96, !3, i64 100, !3, i64 104, !3, i64 108, !3, i64 112, !3, i64 116, !3, i64 120, !3, i64 124, !3, i64 128, !3, i64 132, !3, i64 136, !3, i64 140, !3, i64 144, !3, i64 148, !3, i64 152, !3, i64 156, !3, i64 160, !3, i64 164, !3, i64 168, !3, i64 172, !3, i64 176}
  !8 = !{!"int", !4, i64 0}
  !9 = !{!"gl_accum_attrib", !4, i64 0}
  !10 = !{!"gl_colorbuffer_attrib", !8, i64 0, !4, i64 4, !8, i64 20, !8, i64 24, !4, i64 28, !4, i64 32, !4, i64 36, !4, i64 40, !11, i64 44, !4, i64 48, !4, i64 49, !4, i64 52, !4, i64 56, !4, i64 60, !4, i64 64, !4, i64 80, !4, i64 84, !4, i64 85, !4, i64 86, !4, i64 87}
  !11 = !{!"float", !4, i64 0}
  !12 = !{!"gl_current_attrib", !4, i64 0, !8, i64 16, !4, i64 20, !4, i64 32, !4, i64 48, !11, i64 64, !4, i64 68, !8, i64 84, !4, i64 88, !4, i64 104, !4, i64 105}
  !13 = !{!"gl_depthbuffer_attrib", !4, i64 0, !11, i64 4, !4, i64 8, !4, i64 9}
  !14 = !{!"gl_eval_attrib", !4, i64 0, !4, i64 1, !4, i64 2, !4, i64 3, !4, i64 4, !4, i64 5, !4, i64 6, !4, i64 7, !4, i64 8, !4, i64 9, !4, i64 10, !4, i64 11, !4, i64 12, !4, i64 13, !4, i64 14, !4, i64 15, !4, i64 16, !4, i64 17, !4, i64 18, !8, i64 20, !11, i64 24, !11, i64 28, !8, i64 32, !8, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52}
  !15 = !{!"gl_fog_attrib", !4, i64 0, !4, i64 4, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !4, i64 36}
  !16 = !{!"gl_hint_attrib", !4, i64 0, !4, i64 4, !4, i64 8, !4, i64 12, !4, i64 16}
  !17 = !{!"gl_light_attrib", !4, i64 0, !18, i64 34304, !4, i64 34324, !4, i64 36084, !4, i64 36088, !4, i64 36092, !4, i64 36096, !8, i64 36100, !4, i64 36104, !3, i64 36108, !4, i64 36112, !4, i64 36116}
  !18 = !{!"gl_lightmodel", !4, i64 0, !4, i64 16, !4, i64 17}
  !19 = !{!"gl_line_attrib", !4, i64 0, !4, i64 1, !20, i64 2, !8, i64 4, !11, i64 8}
  !20 = !{!"short", !4, i64 0}
  !21 = !{!"gl_list_attrib", !8, i64 0}
  !22 = !{!"gl_pixel_attrib", !4, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !8, i64 44, !8, i64 48, !4, i64 52, !4, i64 53, !11, i64 56, !11, i64 60, !8, i64 64, !8, i64 68, !8, i64 72, !8, i64 76, !8, i64 80, !8, i64 84, !8, i64 88, !8, i64 92, !8, i64 96, !8, i64 100, !4, i64 104, !4, i64 1128, !4, i64 2152, !4, i64 3176, !4, i64 4200, !4, i64 5224, !4, i64 6248, !4, i64 7272, !4, i64 8296, !4, i64 9320}
  !23 = !{!"gl_point_attrib", !4, i64 0, !11, i64 4}
  !24 = !{!"gl_polygon_attrib", !4, i64 0, !4, i64 4, !4, i64 8, !4, i64 12, !4, i64 13, !4, i64 16, !8, i64 20, !4, i64 24, !4, i64 25, !11, i64 28, !11, i64 32, !4, i64 36, !4, i64 37, !4, i64 38, !4, i64 39}
  !25 = !{!"gl_scissor_attrib", !4, i64 0, !8, i64 4, !8, i64 8, !8, i64 12, !8, i64 16}
  !26 = !{!"gl_stencil_attrib", !4, i64 0, !4, i64 4, !4, i64 8, !4, i64 12, !4, i64 16, !4, i64 20, !4, i64 21, !4, i64 22, !4, i64 23}
  !27 = !{!"gl_texture_attrib", !8, i64 0, !4, i64 4, !4, i64 8, !8, i64 24, !4, i64 28, !4, i64 32, !4, i64 36, !4, i64 40, !4, i64 44, !4, i64 60, !4, i64 76, !4, i64 92, !4, i64 108, !4, i64 124, !4, i64 140, !4, i64 156, !3, i64 172, !3, i64 176, !3, i64 180, !3, i64 184, !3, i64 188, !3, i64 192}
  !28 = !{!"gl_transform_attrib", !4, i64 0, !4, i64 4, !4, i64 100, !4, i64 106, !4, i64 107}
  !29 = !{!"gl_viewport_attrib", !8, i64 0, !8, i64 4, !8, i64 8, !8, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44}
  !30 = !{!"gl_array_attrib", !8, i64 0, !4, i64 4, !8, i64 8, !8, i64 12, !3, i64 16, !4, i64 20, !4, i64 24, !8, i64 28, !8, i64 32, !3, i64 36, !4, i64 40, !8, i64 44, !4, i64 48, !8, i64 52, !8, i64 56, !3, i64 60, !4, i64 64, !4, i64 68, !8, i64 72, !8, i64 76, !3, i64 80, !4, i64 84, !8, i64 88, !4, i64 92, !8, i64 96, !8, i64 100, !3, i64 104, !4, i64 108, !8, i64 112, !8, i64 116, !3, i64 120, !4, i64 124}
  !31 = !{!"gl_pixelstore_attrib", !8, i64 0, !8, i64 4, !8, i64 8, !8, i64 12, !8, i64 16, !8, i64 20, !4, i64 24, !4, i64 25}
  !32 = !{!"gl_evaluators", !33, i64 0, !33, i64 20, !33, i64 40, !33, i64 60, !33, i64 80, !33, i64 100, !33, i64 120, !33, i64 140, !33, i64 160, !34, i64 180, !34, i64 212, !34, i64 244, !34, i64 276, !34, i64 308, !34, i64 340, !34, i64 372, !34, i64 404, !34, i64 436}
  !33 = !{!"gl_1d_map", !8, i64 0, !11, i64 4, !11, i64 8, !3, i64 12, !4, i64 16}
  !34 = !{!"gl_2d_map", !8, i64 0, !8, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !3, i64 24, !4, i64 28}
  !35 = !{!"gl_feedback", !4, i64 0, !8, i64 4, !3, i64 8, !8, i64 12, !8, i64 16}
  !36 = !{!"gl_selection", !3, i64 0, !8, i64 4, !8, i64 8, !8, i64 12, !8, i64 16, !4, i64 20, !4, i64 276, !11, i64 280, !11, i64 284}
  !37 = !{!2, !4, i64 55744}
  !38 = !{!2, !3, i64 55788}
  !39 = !{!40, !8, i64 65536}
  !40 = !{!"vertex_buffer", !4, i64 0, !4, i64 8064, !4, i64 16128, !4, i64 24192, !4, i64 30240, !4, i64 36288, !4, i64 44352, !3, i64 52416, !4, i64 52420, !4, i64 54436, !3, i64 56452, !4, i64 56456, !4, i64 56960, !4, i64 65024, !4, i64 65528, !8, i64 65532, !8, i64 65536, !8, i64 65540, !4, i64 65544, !4, i64 65548, !4, i64 67564, !4, i64 954604}
  !41 = !{!40, !4, i64 65528}
  !42 = !{!4, !4, i64 0}
  !43 = !{!2, !3, i64 55792}
  !44 = !{!2, !8, i64 55748}
  !45 = !{!11, !11, i64 0}
  !46 = !{!8, !8, i64 0}
  !47 = !{!40, !8, i64 65532}
  !48 = !{!2, !4, i64 55764}
  !49 = !{!2, !3, i64 55804}
  !50 = !{!2, !4, i64 54140}
  !51 = !{!2, !8, i64 54160}
  !52 = !{!2, !4, i64 54179}
  !53 = !{!2, !11, i64 54168}
  !54 = !{!2, !11, i64 54172}
  !55 = !{!2, !11, i64 55776}
  !56 = !{!2, !11, i64 55772}
  !57 = !{!2, !11, i64 55768}
  !58 = !{!2, !4, i64 41961}
  !59 = !{!2, !4, i64 43724}
  !60 = !{!40, !3, i64 52416}
  !61 = !{!40, !3, i64 56452}
  !62 = !{!2, !4, i64 54152}
  !63 = !{!40, !8, i64 65540}
  !64 = !{!2, !4, i64 54654}
  !65 = !{!2, !11, i64 54680}
  !66 = !{!2, !11, i64 54692}
  !67 = !{!2, !11, i64 54684}
  !68 = !{!2, !11, i64 54696}
  !69 = !{!2, !11, i64 54688}
  !70 = !{!2, !11, i64 54700}
  !71 = !{!2, !3, i64 2020}
  !72 = !{!73, !4, i64 0}
  !73 = !{!"gl_visual", !4, i64 0, !4, i64 1, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !4, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !8, i64 40, !8, i64 44, !8, i64 48, !8, i64 52, !4, i64 56, !4, i64 57}
  !74 = !{!40, !4, i64 65544}
  !75 = !{!2, !8, i64 55760}
  !76 = !{!2, !4, i64 43752}
  !77 = !{!2, !4, i64 7580}
  !78 = !{!2, !4, i64 7636}
  !79 = !{!2, !8, i64 54352}
  !80 = !{!2, !4, i64 55740}
  !81 = !{!2, !8, i64 54376}
  !82 = !{!2, !4, i64 6576}
  !83 = !{!84, !11, i64 64}
  !84 = !{!"gl_material", !4, i64 0, !4, i64 16, !4, i64 32, !4, i64 48, !11, i64 64, !11, i64 68, !11, i64 72, !11, i64 76, !4, i64 80}
  !85 = !{!84, !11, i64 68}
  !86 = !{!84, !11, i64 72}
  !87 = !{!84, !11, i64 76}
  !88 = !{!2, !4, i64 55780}
  !89 = !{!2, !4, i64 54655}
  !90 = !{!2, !8, i64 55784}
  !91 = !{!2, !8, i64 7420}
  !92 = !{!2, !4, i64 7509}
  !93 = !{!2, !3, i64 2000}
  !94 = !{!2, !4, i64 7229}
  !95 = !{!2, !3, i64 656}
  !96 = !{!2, !4, i64 43744}
  !97 = !{!2, !4, i64 7524}
  !98 = !{!73, !11, i64 24}
  !99 = !{!73, !11, i64 28}
  !100 = !{!73, !11, i64 32}
  !101 = !{!73, !11, i64 36}
  !102 = !{!2, !8, i64 43740}
  !103 = !{!2, !4, i64 2340}
  !104 = !{!2, !8, i64 7488}
  !105 = !{!2, !4, i64 7508}
  !106 = !{!2, !11, i64 7468}
  !107 = !{!2, !3, i64 55812}
  !108 = !{!2, !8, i64 55736}
  !109 = !{!2, !3, i64 2180}
  !110 = !{!2, !4, i64 55783}
  !111 = !{!40, !4, i64 954604}
  !112 = !{!2, !3, i64 2048}
  !113 = !{!2, !3, i64 2044}
  !114 = !{!2, !4, i64 43728}
  !115 = !{!116, !8, i64 115220}
  !116 = !{!"pixel_buffer", !4, i64 0, !4, i64 15360, !4, i64 30720, !4, i64 38400, !4, i64 42240, !4, i64 46080, !4, i64 49920, !4, i64 53760, !4, i64 69120, !4, i64 84480, !4, i64 99840, !4, i64 115200, !8, i64 115216, !8, i64 115220, !4, i64 115224, !4, i64 115228}
  !117 = !{!116, !4, i64 115224}
  !118 = !{!116, !4, i64 115228}
  !119 = !{!2, !3, i64 2184}

...
---
name:            gl_render_vb
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
  - { id: 2, class: gpr32 }
  - { id: 3, class: gpr32 }
  - { id: 4, class: gpr32 }
  - { id: 5, class: gpr32 }
  - { id: 6, class: gpr32 }
  - { id: 7, class: gpr32 }
  - { id: 8, class: gpr32 }
  - { id: 9, class: gpr32 }
  - { id: 10, class: gpr32 }
  - { id: 11, class: gpr32 }
  - { id: 12, class: gpr32 }
  - { id: 13, class: gpr32 }
  - { id: 14, class: gpr32 }
  - { id: 15, class: gpr32 }
  - { id: 16, class: gpr32 }
  - { id: 17, class: gpr32 }
  - { id: 18, class: gpr32 }
  - { id: 19, class: gpr32 }
  - { id: 20, class: gpr32 }
  - { id: 21, class: gpr32 }
  - { id: 22, class: gpr32 }
  - { id: 23, class: gpr32 }
  - { id: 24, class: gpr32 }
  - { id: 25, class: gpr32 }
  - { id: 26, class: gpr32 }
  - { id: 27, class: gpr32 }
  - { id: 28, class: gpr32 }
  - { id: 29, class: gpr32 }
  - { id: 30, class: gpr32 }
  - { id: 31, class: gpr32 }
  - { id: 32, class: gpr32 }
  - { id: 33, class: gpr32 }
  - { id: 34, class: gpr32 }
  - { id: 35, class: gpr32 }
  - { id: 36, class: gpr32 }
  - { id: 37, class: gpr32 }
  - { id: 38, class: gpr32 }
  - { id: 39, class: gpr32 }
  - { id: 40, class: gpr32 }
  - { id: 41, class: gpr32 }
  - { id: 42, class: gpr32 }
  - { id: 43, class: gpr32 }
  - { id: 44, class: gpr32 }
  - { id: 45, class: gpr32 }
  - { id: 46, class: gpr32 }
  - { id: 47, class: gpr32 }
  - { id: 48, class: gpr32 }
  - { id: 49, class: gpr32 }
  - { id: 50, class: gpr32 }
  - { id: 51, class: gpr32 }
  - { id: 52, class: gpr32 }
  - { id: 53, class: gpr32 }
  - { id: 54, class: gpr32 }
  - { id: 55, class: gpr32 }
  - { id: 56, class: gpr32 }
  - { id: 57, class: gpr32 }
  - { id: 58, class: gpr32 }
  - { id: 59, class: gpr32 }
  - { id: 60, class: gpr32 }
  - { id: 61, class: gpr32 }
  - { id: 62, class: gpr32 }
  - { id: 63, class: gpr32 }
  - { id: 64, class: gpr32 }
  - { id: 65, class: gpr32 }
  - { id: 66, class: gpr32 }
  - { id: 67, class: gpr32 }
  - { id: 68, class: gpr32 }
  - { id: 69, class: gpr32 }
  - { id: 70, class: gpr32 }
  - { id: 71, class: gpr32 }
  - { id: 72, class: gpr32 }
  - { id: 73, class: gpr32 }
  - { id: 74, class: gpr32 }
  - { id: 75, class: gpr32 }
  - { id: 76, class: gpr32 }
  - { id: 77, class: gpr32 }
  - { id: 78, class: gpr32 }
  - { id: 79, class: gpr32 }
  - { id: 80, class: gpr32 }
  - { id: 81, class: gpr32 }
  - { id: 82, class: gpr32 }
  - { id: 83, class: gpr32 }
  - { id: 84, class: gpr32 }
  - { id: 85, class: gpr32 }
  - { id: 86, class: gpr32 }
  - { id: 87, class: fgr32 }
  - { id: 88, class: fgr32 }
  - { id: 89, class: gpr32 }
  - { id: 90, class: gpr32 }
  - { id: 91, class: gpr32 }
  - { id: 92, class: fgr32 }
  - { id: 93, class: gpr32 }
  - { id: 94, class: gpr32 }
  - { id: 95, class: fgr32 }
  - { id: 96, class: fgr32 }
  - { id: 97, class: fgr32 }
  - { id: 98, class: fgr32 }
  - { id: 99, class: fgr32 }
  - { id: 100, class: fgr32 }
  - { id: 101, class: fgr32 }
  - { id: 102, class: fgr32 }
  - { id: 103, class: fgr32 }
  - { id: 104, class: gpr32 }
  - { id: 105, class: gpr32 }
  - { id: 106, class: gpr32 }
  - { id: 107, class: gpr32 }
  - { id: 108, class: gpr32 }
  - { id: 109, class: gpr32 }
  - { id: 110, class: gpr32 }
  - { id: 111, class: gpr32 }
  - { id: 112, class: gpr32 }
  - { id: 113, class: gpr32 }
  - { id: 114, class: gpr32 }
  - { id: 115, class: gpr32 }
  - { id: 116, class: gpr32 }
  - { id: 117, class: gpr32 }
  - { id: 118, class: gpr32 }
  - { id: 119, class: gpr32 }
  - { id: 120, class: gpr32 }
  - { id: 121, class: gpr32 }
  - { id: 122, class: gpr32 }
  - { id: 123, class: gpr32 }
  - { id: 124, class: gpr32 }
  - { id: 125, class: gpr32 }
  - { id: 126, class: gpr32 }
  - { id: 127, class: gpr32 }
  - { id: 128, class: gpr32 }
  - { id: 129, class: gpr32 }
  - { id: 130, class: gpr32 }
  - { id: 131, class: gpr32 }
  - { id: 132, class: gpr32 }
  - { id: 133, class: gpr32 }
  - { id: 134, class: gpr32 }
  - { id: 135, class: gpr32 }
  - { id: 136, class: gpr32 }
  - { id: 137, class: gpr32 }
  - { id: 138, class: gpr32 }
  - { id: 139, class: gpr32 }
  - { id: 140, class: gpr32 }
  - { id: 141, class: gpr32 }
  - { id: 142, class: gpr32 }
  - { id: 143, class: gpr32 }
  - { id: 144, class: gpr32 }
  - { id: 145, class: fgr32 }
  - { id: 146, class: gpr32 }
  - { id: 147, class: gpr32 }
  - { id: 148, class: gpr32 }
  - { id: 149, class: gpr32 }
  - { id: 150, class: gpr32 }
  - { id: 151, class: gpr32 }
  - { id: 152, class: gpr32 }
  - { id: 153, class: gpr32 }
  - { id: 154, class: gpr32 }
  - { id: 155, class: gpr32 }
  - { id: 156, class: gpr32 }
  - { id: 157, class: gpr32 }
  - { id: 158, class: gpr32 }
  - { id: 159, class: fgr32 }
  - { id: 160, class: fgr32 }
  - { id: 161, class: gpr32 }
  - { id: 162, class: gpr32 }
  - { id: 163, class: gpr32 }
  - { id: 164, class: fgr32 }
  - { id: 165, class: fgr32 }
  - { id: 166, class: gpr32 }
  - { id: 167, class: fgr32 }
  - { id: 168, class: fgr32 }
  - { id: 169, class: gpr32 }
  - { id: 170, class: fgr32 }
  - { id: 171, class: fgr32 }
  - { id: 172, class: fgr32 }
  - { id: 173, class: gpr32 }
  - { id: 174, class: gpr32 }
  - { id: 175, class: gpr32 }
  - { id: 176, class: gpr32 }
  - { id: 177, class: gpr32 }
  - { id: 178, class: gpr32 }
  - { id: 179, class: gpr32 }
  - { id: 180, class: gpr32 }
  - { id: 181, class: gpr32 }
  - { id: 182, class: gpr32 }
  - { id: 183, class: gpr32 }
  - { id: 184, class: gpr32 }
  - { id: 185, class: gpr32 }
  - { id: 186, class: gpr32 }
  - { id: 187, class: gpr32 }
  - { id: 188, class: gpr32 }
  - { id: 189, class: gpr32 }
  - { id: 190, class: gpr32 }
  - { id: 191, class: fgr32 }
  - { id: 192, class: gpr32 }
  - { id: 193, class: gpr32 }
  - { id: 194, class: gpr32 }
  - { id: 195, class: gpr32 }
  - { id: 196, class: gpr32 }
  - { id: 197, class: gpr32 }
  - { id: 198, class: gpr32 }
  - { id: 199, class: gpr32 }
  - { id: 200, class: gpr32 }
  - { id: 201, class: gpr32 }
  - { id: 202, class: gpr32 }
  - { id: 203, class: gpr32 }
  - { id: 204, class: gpr32 }
  - { id: 205, class: gpr32 }
  - { id: 206, class: gpr32 }
  - { id: 207, class: gpr32 }
  - { id: 208, class: gpr32 }
  - { id: 209, class: gpr32 }
  - { id: 210, class: gpr32 }
  - { id: 211, class: gpr32 }
  - { id: 212, class: gpr32 }
  - { id: 213, class: fgr32 }
  - { id: 214, class: fgr32 }
  - { id: 215, class: fgr32 }
  - { id: 216, class: fgr32 }
  - { id: 217, class: fgr32 }
  - { id: 218, class: gpr32 }
  - { id: 219, class: fgr32 }
  - { id: 220, class: fgr32 }
  - { id: 221, class: gpr32 }
  - { id: 222, class: gpr32 }
  - { id: 223, class: gpr32 }
  - { id: 224, class: gpr32 }
  - { id: 225, class: gpr32 }
  - { id: 226, class: fgr32 }
  - { id: 227, class: fgr32 }
  - { id: 228, class: gpr32 }
  - { id: 229, class: fgr32 }
  - { id: 230, class: fgr32 }
  - { id: 231, class: fgr32 }
  - { id: 232, class: fgr32 }
  - { id: 233, class: fgr32 }
  - { id: 234, class: gpr32 }
  - { id: 235, class: fgr32 }
  - { id: 236, class: fgr32 }
  - { id: 237, class: fgr32 }
  - { id: 238, class: gpr32 }
  - { id: 239, class: gpr32 }
  - { id: 240, class: fgr32 }
  - { id: 241, class: fgr32 }
  - { id: 242, class: fgr32 }
  - { id: 243, class: fgr32 }
  - { id: 244, class: fgr32 }
  - { id: 245, class: fgr32 }
  - { id: 246, class: fgr32 }
  - { id: 247, class: fgr32 }
  - { id: 248, class: fgr32 }
  - { id: 249, class: fgr32 }
  - { id: 250, class: fgr32 }
  - { id: 251, class: fgr32 }
  - { id: 252, class: gpr32 }
  - { id: 253, class: gpr32 }
  - { id: 254, class: gpr32 }
  - { id: 255, class: gpr32 }
  - { id: 256, class: gpr32 }
  - { id: 257, class: gpr32 }
  - { id: 258, class: fgr32 }
  - { id: 259, class: fgr32 }
  - { id: 260, class: gpr32 }
  - { id: 261, class: gpr32 }
  - { id: 262, class: fgr32 }
  - { id: 263, class: gpr32 }
  - { id: 264, class: fgr32 }
  - { id: 265, class: gpr32 }
  - { id: 266, class: gpr32 }
  - { id: 267, class: gpr32 }
  - { id: 268, class: gpr32 }
  - { id: 269, class: gpr32 }
  - { id: 270, class: gpr32 }
  - { id: 271, class: gpr32 }
  - { id: 272, class: gpr32 }
  - { id: 273, class: gpr32 }
  - { id: 274, class: gpr32 }
  - { id: 275, class: gpr32 }
  - { id: 276, class: gpr32 }
  - { id: 277, class: gpr32 }
  - { id: 278, class: gpr32 }
  - { id: 279, class: gpr32 }
  - { id: 280, class: gpr32 }
  - { id: 281, class: gpr32 }
  - { id: 282, class: gpr32 }
  - { id: 283, class: gpr32 }
  - { id: 284, class: gpr32 }
  - { id: 285, class: gpr32 }
  - { id: 286, class: gpr32 }
  - { id: 287, class: gpr32 }
  - { id: 288, class: gpr32 }
  - { id: 289, class: gpr32 }
  - { id: 290, class: gpr32 }
  - { id: 291, class: gpr32 }
  - { id: 292, class: gpr32 }
  - { id: 293, class: gpr32 }
  - { id: 294, class: gpr32 }
  - { id: 295, class: gpr32 }
  - { id: 296, class: gpr32 }
  - { id: 297, class: gpr32 }
  - { id: 298, class: gpr32 }
  - { id: 299, class: gpr32 }
  - { id: 300, class: gpr32 }
  - { id: 301, class: gpr32 }
  - { id: 302, class: gpr32 }
  - { id: 303, class: gpr32 }
  - { id: 304, class: gpr32 }
  - { id: 305, class: gpr32 }
  - { id: 306, class: gpr32 }
  - { id: 307, class: gpr32 }
  - { id: 308, class: gpr32 }
  - { id: 309, class: gpr32 }
  - { id: 310, class: gpr32 }
  - { id: 311, class: gpr32 }
  - { id: 312, class: gpr32 }
  - { id: 313, class: gpr32 }
  - { id: 314, class: gpr32 }
  - { id: 315, class: gpr32 }
  - { id: 316, class: gpr32 }
  - { id: 317, class: gpr32 }
  - { id: 318, class: gpr32 }
  - { id: 319, class: gpr32 }
  - { id: 320, class: gpr32 }
  - { id: 321, class: gpr32 }
  - { id: 322, class: gpr32 }
  - { id: 323, class: gpr32 }
  - { id: 324, class: gpr32 }
  - { id: 325, class: gpr32 }
  - { id: 326, class: gpr32 }
  - { id: 327, class: gpr32 }
  - { id: 328, class: gpr32 }
  - { id: 329, class: gpr32 }
  - { id: 330, class: gpr32 }
  - { id: 331, class: gpr32 }
  - { id: 332, class: gpr32 }
  - { id: 333, class: gpr32 }
  - { id: 334, class: gpr32 }
  - { id: 335, class: gpr32 }
  - { id: 336, class: gpr32 }
  - { id: 337, class: gpr32 }
  - { id: 338, class: gpr32 }
  - { id: 339, class: gpr32 }
  - { id: 340, class: gpr32 }
  - { id: 341, class: gpr32 }
  - { id: 342, class: gpr32 }
  - { id: 343, class: gpr32 }
  - { id: 344, class: gpr32 }
  - { id: 345, class: gpr32 }
  - { id: 346, class: gpr32 }
  - { id: 347, class: gpr32 }
  - { id: 348, class: gpr32 }
  - { id: 349, class: gpr32 }
  - { id: 350, class: gpr32 }
  - { id: 351, class: gpr32 }
  - { id: 352, class: gpr32 }
  - { id: 353, class: gpr32 }
  - { id: 354, class: gpr32 }
  - { id: 355, class: gpr32 }
  - { id: 356, class: gpr32 }
  - { id: 357, class: gpr32 }
  - { id: 358, class: gpr32 }
  - { id: 359, class: gpr32 }
  - { id: 360, class: gpr32 }
  - { id: 361, class: gpr32 }
  - { id: 362, class: gpr32 }
  - { id: 363, class: gpr32 }
  - { id: 364, class: gpr32 }
  - { id: 365, class: gpr32 }
  - { id: 366, class: gpr32 }
  - { id: 367, class: gpr32 }
  - { id: 368, class: gpr32 }
  - { id: 369, class: gpr32 }
  - { id: 370, class: gpr32 }
  - { id: 371, class: gpr32 }
  - { id: 372, class: gpr32 }
  - { id: 373, class: gpr32 }
  - { id: 374, class: gpr32 }
  - { id: 375, class: gpr32 }
  - { id: 376, class: gpr32 }
  - { id: 377, class: gpr32 }
  - { id: 378, class: gpr32 }
  - { id: 379, class: gpr32 }
  - { id: 380, class: gpr32 }
  - { id: 381, class: gpr32 }
  - { id: 382, class: gpr32 }
  - { id: 383, class: gpr32 }
  - { id: 384, class: gpr32 }
  - { id: 385, class: gpr32 }
  - { id: 386, class: gpr32 }
  - { id: 387, class: gpr32 }
  - { id: 388, class: gpr32 }
  - { id: 389, class: gpr32 }
  - { id: 390, class: gpr32 }
  - { id: 391, class: gpr32 }
  - { id: 392, class: gpr32 }
  - { id: 393, class: gpr32 }
  - { id: 394, class: gpr32 }
  - { id: 395, class: gpr32 }
  - { id: 396, class: gpr32 }
  - { id: 397, class: gpr32 }
  - { id: 398, class: gpr32 }
  - { id: 399, class: gpr32 }
  - { id: 400, class: gpr32 }
  - { id: 401, class: gpr32 }
  - { id: 402, class: gpr32 }
  - { id: 403, class: gpr32 }
  - { id: 404, class: gpr32 }
  - { id: 405, class: gpr32 }
  - { id: 406, class: gpr32 }
  - { id: 407, class: gpr32 }
  - { id: 408, class: gpr32 }
  - { id: 409, class: gpr32 }
  - { id: 410, class: gpr32 }
  - { id: 411, class: gpr32 }
  - { id: 412, class: gpr32 }
  - { id: 413, class: gpr32 }
  - { id: 414, class: gpr32 }
  - { id: 415, class: gpr32 }
  - { id: 416, class: gpr32 }
  - { id: 417, class: gpr32 }
  - { id: 418, class: gpr32 }
  - { id: 419, class: gpr32 }
  - { id: 420, class: gpr32 }
  - { id: 421, class: gpr32 }
  - { id: 422, class: gpr32 }
  - { id: 423, class: gpr32 }
  - { id: 424, class: gpr32 }
  - { id: 425, class: gpr32 }
  - { id: 426, class: gpr32 }
  - { id: 427, class: gpr32 }
  - { id: 428, class: gpr32 }
  - { id: 429, class: gpr32 }
  - { id: 430, class: gpr32 }
  - { id: 431, class: gpr32 }
  - { id: 432, class: gpr32 }
  - { id: 433, class: gpr32 }
  - { id: 434, class: gpr32 }
  - { id: 435, class: gpr32 }
  - { id: 436, class: gpr32 }
  - { id: 437, class: gpr32 }
  - { id: 438, class: gpr32 }
  - { id: 439, class: gpr32 }
  - { id: 440, class: gpr32 }
  - { id: 441, class: gpr32 }
  - { id: 442, class: gpr32 }
  - { id: 443, class: gpr32 }
  - { id: 444, class: gpr32 }
  - { id: 445, class: gpr32 }
  - { id: 446, class: gpr32 }
  - { id: 447, class: gpr32 }
  - { id: 448, class: gpr32 }
  - { id: 449, class: gpr32 }
  - { id: 450, class: gpr32 }
  - { id: 451, class: gpr32 }
  - { id: 452, class: gpr32 }
  - { id: 453, class: gpr32 }
  - { id: 454, class: gpr32 }
  - { id: 455, class: gpr32 }
  - { id: 456, class: gpr32 }
  - { id: 457, class: gpr32 }
  - { id: 458, class: gpr32 }
  - { id: 459, class: gpr32 }
  - { id: 460, class: gpr32 }
  - { id: 461, class: gpr32 }
  - { id: 462, class: gpr32 }
  - { id: 463, class: gpr32 }
  - { id: 464, class: gpr32 }
  - { id: 465, class: gpr32 }
  - { id: 466, class: gpr32 }
  - { id: 467, class: gpr32 }
  - { id: 468, class: gpr32 }
  - { id: 469, class: gpr32 }
  - { id: 470, class: gpr32 }
  - { id: 471, class: gpr32 }
  - { id: 472, class: gpr32 }
  - { id: 473, class: gpr32 }
  - { id: 474, class: gpr32 }
  - { id: 475, class: gpr32 }
  - { id: 476, class: gpr32 }
  - { id: 477, class: gpr32 }
  - { id: 478, class: gpr32 }
  - { id: 479, class: gpr32 }
  - { id: 480, class: gpr32 }
  - { id: 481, class: gpr32 }
  - { id: 482, class: gpr32 }
  - { id: 483, class: gpr32 }
  - { id: 484, class: gpr32 }
  - { id: 485, class: gpr32 }
  - { id: 486, class: gpr32 }
  - { id: 487, class: gpr32 }
  - { id: 488, class: gpr32 }
  - { id: 489, class: gpr32 }
  - { id: 490, class: gpr32 }
  - { id: 491, class: gpr32 }
  - { id: 492, class: gpr32 }
  - { id: 493, class: gpr32 }
  - { id: 494, class: gpr32 }
  - { id: 495, class: gpr32 }
  - { id: 496, class: gpr32 }
  - { id: 497, class: gpr32 }
  - { id: 498, class: gpr32 }
  - { id: 499, class: gpr32 }
  - { id: 500, class: gpr32 }
  - { id: 501, class: gpr32 }
  - { id: 502, class: gpr32 }
  - { id: 503, class: gpr32 }
  - { id: 504, class: gpr32 }
  - { id: 505, class: gpr32 }
  - { id: 506, class: gpr32 }
  - { id: 507, class: gpr32 }
  - { id: 508, class: gpr32 }
  - { id: 509, class: gpr32 }
  - { id: 510, class: gpr32 }
  - { id: 511, class: gpr32 }
  - { id: 512, class: gpr32 }
  - { id: 513, class: gpr32 }
  - { id: 514, class: gpr32 }
  - { id: 515, class: gpr32 }
  - { id: 516, class: gpr32 }
  - { id: 517, class: gpr32 }
  - { id: 518, class: gpr32 }
  - { id: 519, class: gpr32 }
  - { id: 520, class: gpr32 }
  - { id: 521, class: gpr32 }
  - { id: 522, class: gpr32 }
  - { id: 523, class: gpr32 }
  - { id: 524, class: gpr32 }
  - { id: 525, class: gpr32 }
  - { id: 526, class: gpr32 }
  - { id: 527, class: gpr32 }
  - { id: 528, class: gpr32 }
  - { id: 529, class: gpr32 }
  - { id: 530, class: gpr32 }
  - { id: 531, class: gpr32 }
  - { id: 532, class: gpr32 }
  - { id: 533, class: gpr32 }
  - { id: 534, class: gpr32 }
  - { id: 535, class: gpr32 }
  - { id: 536, class: gpr32 }
  - { id: 537, class: gpr32 }
  - { id: 538, class: gpr32 }
  - { id: 539, class: gpr32 }
  - { id: 540, class: gpr32 }
  - { id: 541, class: gpr32 }
  - { id: 542, class: gpr32 }
  - { id: 543, class: gpr32 }
  - { id: 544, class: gpr32 }
  - { id: 545, class: gpr32 }
  - { id: 546, class: gpr32 }
  - { id: 547, class: gpr32 }
  - { id: 548, class: gpr32 }
  - { id: 549, class: gpr32 }
  - { id: 550, class: gpr32 }
  - { id: 551, class: gpr32 }
  - { id: 552, class: gpr32 }
  - { id: 553, class: gpr32 }
  - { id: 554, class: gpr32 }
  - { id: 555, class: gpr32 }
  - { id: 556, class: gpr32 }
  - { id: 557, class: gpr32 }
  - { id: 558, class: gpr32 }
  - { id: 559, class: gpr32 }
  - { id: 560, class: gpr32 }
  - { id: 561, class: gpr32 }
  - { id: 562, class: gpr32 }
  - { id: 563, class: gpr32 }
  - { id: 564, class: gpr32 }
  - { id: 565, class: gpr32 }
  - { id: 566, class: gpr32 }
  - { id: 567, class: gpr32 }
  - { id: 568, class: gpr32 }
  - { id: 569, class: gpr32 }
  - { id: 570, class: gpr32 }
  - { id: 571, class: gpr32 }
  - { id: 572, class: gpr32 }
  - { id: 573, class: gpr32 }
  - { id: 574, class: gpr32 }
  - { id: 575, class: gpr32 }
  - { id: 576, class: gpr32 }
  - { id: 577, class: gpr32 }
  - { id: 578, class: gpr32 }
  - { id: 579, class: gpr32 }
  - { id: 580, class: gpr32 }
  - { id: 581, class: gpr32 }
  - { id: 582, class: gpr32 }
  - { id: 583, class: gpr32 }
  - { id: 584, class: gpr32 }
  - { id: 585, class: gpr32 }
  - { id: 586, class: gpr32 }
  - { id: 587, class: gpr32 }
  - { id: 588, class: gpr32 }
  - { id: 589, class: gpr32 }
  - { id: 590, class: gpr32 }
  - { id: 591, class: gpr32 }
  - { id: 592, class: gpr32 }
  - { id: 593, class: gpr32 }
  - { id: 594, class: gpr32 }
  - { id: 595, class: gpr32 }
  - { id: 596, class: gpr32 }
  - { id: 597, class: gpr32 }
  - { id: 598, class: gpr32 }
  - { id: 599, class: gpr32 }
  - { id: 600, class: gpr32 }
  - { id: 601, class: gpr32 }
  - { id: 602, class: gpr32 }
  - { id: 603, class: gpr32 }
  - { id: 604, class: gpr32 }
  - { id: 605, class: gpr32 }
  - { id: 606, class: gpr32 }
  - { id: 607, class: gpr32 }
  - { id: 608, class: gpr32 }
  - { id: 609, class: gpr32 }
  - { id: 610, class: gpr32 }
  - { id: 611, class: gpr32 }
  - { id: 612, class: gpr32 }
  - { id: 613, class: gpr32 }
  - { id: 614, class: gpr32 }
  - { id: 615, class: gpr32 }
  - { id: 616, class: gpr32 }
  - { id: 617, class: gpr32 }
  - { id: 618, class: gpr32 }
  - { id: 619, class: gpr32 }
  - { id: 620, class: gpr32 }
  - { id: 621, class: gpr32 }
  - { id: 622, class: gpr32 }
  - { id: 623, class: gpr32 }
  - { id: 624, class: gpr32 }
  - { id: 625, class: gpr32 }
  - { id: 626, class: gpr32 }
  - { id: 627, class: gpr32 }
  - { id: 628, class: gpr32 }
  - { id: 629, class: gpr32 }
  - { id: 630, class: gpr32 }
  - { id: 631, class: gpr32 }
  - { id: 632, class: gpr32 }
  - { id: 633, class: gpr32 }
  - { id: 634, class: gpr32 }
  - { id: 635, class: gpr32 }
  - { id: 636, class: gpr32 }
  - { id: 637, class: gpr32 }
  - { id: 638, class: gpr32 }
  - { id: 639, class: gpr32 }
  - { id: 640, class: gpr32 }
  - { id: 641, class: gpr32 }
  - { id: 642, class: gpr32 }
  - { id: 643, class: gpr32 }
  - { id: 644, class: gpr32 }
  - { id: 645, class: gpr32 }
  - { id: 646, class: gpr32 }
  - { id: 647, class: gpr32 }
  - { id: 648, class: gpr32 }
  - { id: 649, class: gpr32 }
  - { id: 650, class: gpr32 }
  - { id: 651, class: gpr32 }
  - { id: 652, class: gpr32 }
  - { id: 653, class: gpr32 }
  - { id: 654, class: gpr32 }
  - { id: 655, class: gpr32 }
  - { id: 656, class: gpr32 }
  - { id: 657, class: gpr32 }
  - { id: 658, class: gpr32 }
  - { id: 659, class: gpr32 }
  - { id: 660, class: gpr32 }
  - { id: 661, class: gpr32 }
  - { id: 662, class: gpr32 }
  - { id: 663, class: gpr32 }
  - { id: 664, class: gpr32 }
  - { id: 665, class: gpr32 }
  - { id: 666, class: gpr32 }
  - { id: 667, class: gpr32 }
  - { id: 668, class: gpr32 }
  - { id: 669, class: gpr32 }
  - { id: 670, class: gpr32 }
  - { id: 671, class: gpr32 }
  - { id: 672, class: gpr32 }
  - { id: 673, class: gpr32 }
  - { id: 674, class: gpr32 }
  - { id: 675, class: gpr32 }
  - { id: 676, class: gpr32 }
  - { id: 677, class: gpr32 }
  - { id: 678, class: gpr32 }
  - { id: 679, class: gpr32 }
  - { id: 680, class: gpr32 }
  - { id: 681, class: gpr32 }
  - { id: 682, class: gpr32 }
  - { id: 683, class: gpr32 }
  - { id: 684, class: gpr32 }
  - { id: 685, class: gpr32 }
  - { id: 686, class: gpr32 }
  - { id: 687, class: gpr32 }
  - { id: 688, class: gpr32 }
  - { id: 689, class: gpr32 }
  - { id: 690, class: gpr32 }
  - { id: 691, class: gpr32 }
  - { id: 692, class: gpr32 }
  - { id: 693, class: gpr32 }
  - { id: 694, class: gpr32 }
  - { id: 695, class: gpr32 }
  - { id: 696, class: gpr32 }
  - { id: 697, class: gpr32 }
  - { id: 698, class: gpr32 }
  - { id: 699, class: gpr32 }
  - { id: 700, class: gpr32 }
  - { id: 701, class: gpr32 }
  - { id: 702, class: gpr32 }
  - { id: 703, class: gpr32 }
  - { id: 704, class: gpr32 }
  - { id: 705, class: gpr32 }
  - { id: 706, class: gpr32 }
  - { id: 707, class: gpr32 }
  - { id: 708, class: gpr32 }
  - { id: 709, class: gpr32 }
  - { id: 710, class: gpr32 }
  - { id: 711, class: gpr32 }
  - { id: 712, class: gpr32 }
  - { id: 713, class: gpr32 }
  - { id: 714, class: gpr32 }
  - { id: 715, class: gpr32 }
  - { id: 716, class: gpr32 }
  - { id: 717, class: gpr32 }
  - { id: 718, class: gpr32 }
  - { id: 719, class: gpr32 }
  - { id: 720, class: gpr32 }
  - { id: 721, class: gpr32 }
  - { id: 722, class: gpr32 }
  - { id: 723, class: gpr32 }
  - { id: 724, class: gpr32 }
  - { id: 725, class: gpr32 }
  - { id: 726, class: gpr32 }
  - { id: 727, class: gpr32 }
  - { id: 728, class: gpr32 }
  - { id: 729, class: gpr32 }
  - { id: 730, class: gpr32 }
  - { id: 731, class: gpr32 }
  - { id: 732, class: gpr32 }
  - { id: 733, class: gpr32 }
  - { id: 734, class: gpr32 }
  - { id: 735, class: gpr32 }
  - { id: 736, class: gpr32 }
  - { id: 737, class: gpr32 }
  - { id: 738, class: gpr32 }
  - { id: 739, class: gpr32 }
  - { id: 740, class: gpr32 }
  - { id: 741, class: gpr32 }
  - { id: 742, class: gpr32 }
  - { id: 743, class: gpr32 }
  - { id: 744, class: gpr32 }
  - { id: 745, class: gpr32 }
  - { id: 746, class: gpr32 }
  - { id: 747, class: gpr32 }
  - { id: 748, class: gpr32 }
  - { id: 749, class: gpr32 }
  - { id: 750, class: gpr32 }
  - { id: 751, class: gpr32 }
  - { id: 752, class: gpr32 }
  - { id: 753, class: gpr32 }
  - { id: 754, class: gpr32 }
  - { id: 755, class: gpr32 }
  - { id: 756, class: gpr32 }
  - { id: 757, class: gpr32 }
  - { id: 758, class: gpr32 }
  - { id: 759, class: gpr32 }
  - { id: 760, class: gpr32 }
  - { id: 761, class: gpr32 }
  - { id: 762, class: gpr32 }
  - { id: 763, class: gpr32 }
  - { id: 764, class: gpr32 }
  - { id: 765, class: gpr32 }
  - { id: 766, class: gpr32 }
  - { id: 767, class: gpr32 }
  - { id: 768, class: gpr32 }
  - { id: 769, class: gpr32 }
  - { id: 770, class: gpr32 }
  - { id: 771, class: gpr32 }
  - { id: 772, class: gpr32 }
  - { id: 773, class: gpr32 }
  - { id: 774, class: gpr32 }
  - { id: 775, class: gpr32 }
  - { id: 776, class: gpr32 }
  - { id: 777, class: gpr32 }
  - { id: 778, class: gpr32 }
  - { id: 779, class: gpr32 }
  - { id: 780, class: gpr32 }
  - { id: 781, class: gpr32 }
  - { id: 782, class: gpr32 }
  - { id: 783, class: gpr32 }
  - { id: 784, class: gpr32 }
  - { id: 785, class: gpr32 }
  - { id: 786, class: gpr32 }
  - { id: 787, class: gpr32 }
  - { id: 788, class: gpr32 }
  - { id: 789, class: gpr32 }
  - { id: 790, class: gpr32 }
  - { id: 791, class: gpr32 }
  - { id: 792, class: gpr32 }
  - { id: 793, class: gpr32 }
  - { id: 794, class: gpr32 }
  - { id: 795, class: gpr32 }
  - { id: 796, class: gpr32 }
  - { id: 797, class: gpr32 }
  - { id: 798, class: gpr32 }
  - { id: 799, class: gpr32 }
  - { id: 800, class: gpr32 }
  - { id: 801, class: gpr32 }
  - { id: 802, class: gpr32 }
  - { id: 803, class: gpr32 }
  - { id: 804, class: gpr32 }
  - { id: 805, class: gpr32 }
  - { id: 806, class: gpr32 }
  - { id: 807, class: gpr32 }
  - { id: 808, class: gpr32 }
  - { id: 809, class: gpr32 }
  - { id: 810, class: gpr32 }
  - { id: 811, class: gpr32 }
  - { id: 812, class: gpr32 }
  - { id: 813, class: gpr32 }
  - { id: 814, class: gpr32 }
  - { id: 815, class: gpr32 }
  - { id: 816, class: gpr32 }
  - { id: 817, class: gpr32 }
  - { id: 818, class: gpr32 }
  - { id: 819, class: gpr32 }
  - { id: 820, class: gpr32 }
  - { id: 821, class: gpr32 }
  - { id: 822, class: gpr32 }
  - { id: 823, class: gpr32 }
  - { id: 824, class: gpr32 }
  - { id: 825, class: gpr32 }
  - { id: 826, class: gpr32 }
  - { id: 827, class: gpr32 }
  - { id: 828, class: gpr32 }
  - { id: 829, class: gpr32 }
  - { id: 830, class: gpr32 }
  - { id: 831, class: gpr32 }
  - { id: 832, class: gpr32 }
  - { id: 833, class: gpr32 }
  - { id: 834, class: gpr32 }
  - { id: 835, class: gpr32 }
  - { id: 836, class: gpr32 }
  - { id: 837, class: gpr32 }
  - { id: 838, class: gpr32 }
  - { id: 839, class: gpr32 }
  - { id: 840, class: gpr32 }
  - { id: 841, class: gpr32 }
  - { id: 842, class: gpr32 }
  - { id: 843, class: gpr32 }
  - { id: 844, class: gpr32 }
  - { id: 845, class: gpr32 }
  - { id: 846, class: gpr32 }
  - { id: 847, class: gpr32 }
  - { id: 848, class: gpr32 }
  - { id: 849, class: gpr32 }
  - { id: 850, class: gpr32 }
  - { id: 851, class: gpr32 }
  - { id: 852, class: gpr32 }
  - { id: 853, class: gpr32 }
  - { id: 854, class: gpr32 }
  - { id: 855, class: gpr32 }
  - { id: 856, class: gpr32 }
  - { id: 857, class: gpr32 }
  - { id: 858, class: gpr32 }
  - { id: 859, class: gpr32 }
  - { id: 860, class: gpr32 }
  - { id: 861, class: gpr32 }
  - { id: 862, class: gpr32 }
  - { id: 863, class: gpr32 }
  - { id: 864, class: gpr32 }
  - { id: 865, class: gpr32 }
  - { id: 866, class: gpr32 }
  - { id: 867, class: gpr32 }
  - { id: 868, class: gpr32 }
  - { id: 869, class: gpr32 }
  - { id: 870, class: gpr32 }
  - { id: 871, class: gpr32 }
  - { id: 872, class: gpr32 }
  - { id: 873, class: gpr32 }
  - { id: 874, class: gpr32 }
  - { id: 875, class: gpr32 }
  - { id: 876, class: gpr32 }
  - { id: 877, class: gpr32 }
  - { id: 878, class: gpr32 }
  - { id: 879, class: gpr32 }
  - { id: 880, class: gpr32 }
  - { id: 881, class: gpr32 }
  - { id: 882, class: gpr32 }
  - { id: 883, class: gpr32 }
  - { id: 884, class: gpr32 }
  - { id: 885, class: gpr32 }
  - { id: 886, class: gpr32 }
  - { id: 887, class: gpr32 }
  - { id: 888, class: gpr32 }
  - { id: 889, class: gpr32 }
  - { id: 890, class: gpr32 }
  - { id: 891, class: gpr32 }
  - { id: 892, class: gpr32 }
  - { id: 893, class: gpr32 }
  - { id: 894, class: gpr32 }
  - { id: 895, class: gpr32 }
  - { id: 896, class: gpr32 }
  - { id: 897, class: gpr32 }
  - { id: 898, class: gpr32 }
  - { id: 899, class: gpr32 }
  - { id: 900, class: gpr32 }
  - { id: 901, class: gpr32 }
  - { id: 902, class: gpr32 }
  - { id: 903, class: gpr32 }
  - { id: 904, class: gpr32 }
  - { id: 905, class: gpr32 }
  - { id: 906, class: gpr32 }
  - { id: 907, class: gpr32 }
  - { id: 908, class: gpr32 }
  - { id: 909, class: gpr32 }
  - { id: 910, class: gpr32 }
  - { id: 911, class: gpr32 }
  - { id: 912, class: gpr32 }
  - { id: 913, class: gpr32 }
  - { id: 914, class: gpr32 }
  - { id: 915, class: gpr32 }
  - { id: 916, class: gpr32 }
  - { id: 917, class: gpr32 }
  - { id: 918, class: gpr32 }
  - { id: 919, class: gpr32 }
  - { id: 920, class: gpr32 }
  - { id: 921, class: gpr32 }
  - { id: 922, class: gpr32 }
  - { id: 923, class: gpr32 }
  - { id: 924, class: gpr32 }
  - { id: 925, class: gpr32 }
  - { id: 926, class: gpr32 }
  - { id: 927, class: gpr32 }
  - { id: 928, class: gpr32 }
  - { id: 929, class: gpr32 }
  - { id: 930, class: gpr32 }
  - { id: 931, class: gpr32 }
  - { id: 932, class: gpr32 }
  - { id: 933, class: gpr32 }
  - { id: 934, class: gpr32 }
  - { id: 935, class: gpr32 }
  - { id: 936, class: gpr32 }
  - { id: 937, class: gpr32 }
  - { id: 938, class: gpr32 }
  - { id: 939, class: gpr32 }
  - { id: 940, class: gpr32 }
  - { id: 941, class: gpr32 }
  - { id: 942, class: gpr32 }
  - { id: 943, class: gpr32 }
  - { id: 944, class: gpr32 }
  - { id: 945, class: gpr32 }
  - { id: 946, class: gpr32 }
  - { id: 947, class: gpr32 }
  - { id: 948, class: gpr32 }
  - { id: 949, class: gpr32 }
  - { id: 950, class: gpr32 }
  - { id: 951, class: gpr32 }
  - { id: 952, class: gpr32 }
  - { id: 953, class: gpr32 }
  - { id: 954, class: gpr32 }
  - { id: 955, class: gpr32 }
  - { id: 956, class: gpr32 }
  - { id: 957, class: gpr32 }
  - { id: 958, class: gpr32 }
  - { id: 959, class: gpr32 }
  - { id: 960, class: gpr32 }
  - { id: 961, class: gpr32 }
  - { id: 962, class: gpr32 }
  - { id: 963, class: gpr32 }
  - { id: 964, class: gpr32 }
  - { id: 965, class: gpr32 }
  - { id: 966, class: gpr32 }
  - { id: 967, class: gpr32 }
  - { id: 968, class: gpr32 }
  - { id: 969, class: gpr32 }
  - { id: 970, class: gpr32 }
  - { id: 971, class: gpr32 }
  - { id: 972, class: gpr32 }
  - { id: 973, class: gpr32 }
  - { id: 974, class: gpr32 }
  - { id: 975, class: gpr32 }
  - { id: 976, class: gpr32 }
  - { id: 977, class: gpr32 }
  - { id: 978, class: gpr32 }
  - { id: 979, class: gpr32 }
  - { id: 980, class: gpr32 }
  - { id: 981, class: gpr32 }
  - { id: 982, class: gpr32 }
  - { id: 983, class: gpr32 }
  - { id: 984, class: gpr32 }
  - { id: 985, class: gpr32 }
  - { id: 986, class: gpr32 }
  - { id: 987, class: gpr32 }
  - { id: 988, class: gpr32 }
  - { id: 989, class: gpr32 }
  - { id: 990, class: gpr32 }
  - { id: 991, class: gpr32 }
  - { id: 992, class: gpr32 }
  - { id: 993, class: gpr32 }
  - { id: 994, class: gpr32 }
  - { id: 995, class: gpr32 }
  - { id: 996, class: gpr32 }
  - { id: 997, class: gpr32 }
  - { id: 998, class: gpr32 }
  - { id: 999, class: gpr32 }
  - { id: 1000, class: gpr32 }
  - { id: 1001, class: gpr32 }
  - { id: 1002, class: gpr32 }
  - { id: 1003, class: gpr32 }
  - { id: 1004, class: gpr32 }
  - { id: 1005, class: gpr32 }
  - { id: 1006, class: gpr32 }
  - { id: 1007, class: gpr32 }
  - { id: 1008, class: gpr32 }
  - { id: 1009, class: gpr32 }
  - { id: 1010, class: gpr32 }
  - { id: 1011, class: gpr32 }
  - { id: 1012, class: gpr32 }
  - { id: 1013, class: gpr32 }
  - { id: 1014, class: gpr32 }
  - { id: 1015, class: gpr32 }
  - { id: 1016, class: gpr32 }
  - { id: 1017, class: gpr32 }
  - { id: 1018, class: gpr32 }
  - { id: 1019, class: gpr32 }
  - { id: 1020, class: gpr32 }
  - { id: 1021, class: gpr32 }
  - { id: 1022, class: gpr32 }
  - { id: 1023, class: gpr32 }
  - { id: 1024, class: gpr32 }
  - { id: 1025, class: gpr32 }
  - { id: 1026, class: gpr32 }
  - { id: 1027, class: gpr32 }
  - { id: 1028, class: gpr32 }
  - { id: 1029, class: gpr32 }
  - { id: 1030, class: gpr32 }
  - { id: 1031, class: gpr32 }
  - { id: 1032, class: gpr32 }
  - { id: 1033, class: gpr32 }
  - { id: 1034, class: gpr32 }
  - { id: 1035, class: gpr32 }
  - { id: 1036, class: gpr32 }
  - { id: 1037, class: gpr32 }
  - { id: 1038, class: gpr32 }
  - { id: 1039, class: gpr32 }
  - { id: 1040, class: gpr32 }
  - { id: 1041, class: gpr32 }
  - { id: 1042, class: gpr32 }
  - { id: 1043, class: gpr32 }
  - { id: 1044, class: gpr32 }
  - { id: 1045, class: gpr32 }
  - { id: 1046, class: gpr32 }
  - { id: 1047, class: gpr32 }
  - { id: 1048, class: gpr32 }
  - { id: 1049, class: gpr32 }
  - { id: 1050, class: gpr32 }
  - { id: 1051, class: gpr32 }
  - { id: 1052, class: gpr32 }
  - { id: 1053, class: gpr32 }
  - { id: 1054, class: gpr32 }
  - { id: 1055, class: gpr32 }
  - { id: 1056, class: gpr32 }
  - { id: 1057, class: gpr32 }
  - { id: 1058, class: gpr32 }
  - { id: 1059, class: gpr32 }
  - { id: 1060, class: gpr32 }
  - { id: 1061, class: gpr32 }
  - { id: 1062, class: gpr32 }
  - { id: 1063, class: gpr32 }
  - { id: 1064, class: gpr32 }
  - { id: 1065, class: gpr32 }
  - { id: 1066, class: gpr32 }
  - { id: 1067, class: gpr32 }
  - { id: 1068, class: gpr32 }
  - { id: 1069, class: gpr32 }
  - { id: 1070, class: gpr32 }
  - { id: 1071, class: gpr32 }
  - { id: 1072, class: gpr32 }
  - { id: 1073, class: gpr32 }
  - { id: 1074, class: gpr32 }
  - { id: 1075, class: gpr32 }
  - { id: 1076, class: gpr32 }
  - { id: 1077, class: gpr32 }
  - { id: 1078, class: gpr32 }
  - { id: 1079, class: gpr32 }
  - { id: 1080, class: gpr32 }
  - { id: 1081, class: gpr32 }
  - { id: 1082, class: gpr32 }
  - { id: 1083, class: gpr32 }
  - { id: 1084, class: gpr32 }
  - { id: 1085, class: gpr32 }
  - { id: 1086, class: gpr32 }
  - { id: 1087, class: gpr32 }
  - { id: 1088, class: gpr32 }
  - { id: 1089, class: gpr32 }
  - { id: 1090, class: gpr32 }
  - { id: 1091, class: gpr32 }
  - { id: 1092, class: gpr32 }
  - { id: 1093, class: gpr32 }
  - { id: 1094, class: gpr32 }
  - { id: 1095, class: gpr32 }
  - { id: 1096, class: gpr32 }
  - { id: 1097, class: gpr32 }
  - { id: 1098, class: gpr32 }
  - { id: 1099, class: gpr32 }
  - { id: 1100, class: gpr32 }
  - { id: 1101, class: gpr32 }
  - { id: 1102, class: gpr32 }
  - { id: 1103, class: gpr32 }
  - { id: 1104, class: gpr32 }
  - { id: 1105, class: gpr32 }
  - { id: 1106, class: gpr32 }
  - { id: 1107, class: gpr32 }
  - { id: 1108, class: gpr32 }
  - { id: 1109, class: gpr32 }
  - { id: 1110, class: gpr32 }
  - { id: 1111, class: gpr32 }
  - { id: 1112, class: gpr32 }
  - { id: 1113, class: gpr32 }
  - { id: 1114, class: gpr32 }
  - { id: 1115, class: gpr32 }
  - { id: 1116, class: gpr32 }
  - { id: 1117, class: gpr32 }
  - { id: 1118, class: gpr32 }
  - { id: 1119, class: gpr32 }
  - { id: 1120, class: gpr32 }
  - { id: 1121, class: gpr32 }
  - { id: 1122, class: gpr32 }
  - { id: 1123, class: gpr32 }
  - { id: 1124, class: gpr32 }
  - { id: 1125, class: gpr32 }
  - { id: 1126, class: gpr32 }
  - { id: 1127, class: gpr32 }
  - { id: 1128, class: gpr32 }
  - { id: 1129, class: gpr32 }
  - { id: 1130, class: gpr32 }
  - { id: 1131, class: gpr32 }
  - { id: 1132, class: gpr32 }
  - { id: 1133, class: gpr32 }
  - { id: 1134, class: gpr32 }
  - { id: 1135, class: gpr32 }
  - { id: 1136, class: gpr32 }
  - { id: 1137, class: gpr32 }
  - { id: 1138, class: gpr32 }
  - { id: 1139, class: gpr32 }
  - { id: 1140, class: gpr32 }
  - { id: 1141, class: gpr32 }
  - { id: 1142, class: gpr32 }
  - { id: 1143, class: gpr32 }
  - { id: 1144, class: gpr32 }
  - { id: 1145, class: gpr32 }
  - { id: 1146, class: gpr32 }
  - { id: 1147, class: gpr32 }
  - { id: 1148, class: gpr32 }
  - { id: 1149, class: gpr32 }
  - { id: 1150, class: gpr32 }
  - { id: 1151, class: gpr32 }
  - { id: 1152, class: gpr32 }
  - { id: 1153, class: gpr32 }
  - { id: 1154, class: gpr32 }
  - { id: 1155, class: gpr32 }
  - { id: 1156, class: gpr32 }
  - { id: 1157, class: gpr32 }
  - { id: 1158, class: gpr32 }
  - { id: 1159, class: gpr32 }
  - { id: 1160, class: gpr32 }
  - { id: 1161, class: gpr32 }
  - { id: 1162, class: gpr32 }
  - { id: 1163, class: gpr32 }
  - { id: 1164, class: gpr32 }
  - { id: 1165, class: gpr32 }
  - { id: 1166, class: gpr32 }
  - { id: 1167, class: gpr32 }
  - { id: 1168, class: gpr32 }
  - { id: 1169, class: gpr32 }
  - { id: 1170, class: gpr32 }
  - { id: 1171, class: gpr32 }
  - { id: 1172, class: gpr32 }
  - { id: 1173, class: gpr32 }
  - { id: 1174, class: gpr32 }
  - { id: 1175, class: gpr32 }
  - { id: 1176, class: gpr32 }
  - { id: 1177, class: gpr32 }
  - { id: 1178, class: gpr32 }
  - { id: 1179, class: gpr32 }
  - { id: 1180, class: gpr32 }
  - { id: 1181, class: gpr32 }
  - { id: 1182, class: gpr32 }
  - { id: 1183, class: gpr32 }
  - { id: 1184, class: gpr32 }
  - { id: 1185, class: gpr32 }
  - { id: 1186, class: gpr32 }
  - { id: 1187, class: gpr32 }
  - { id: 1188, class: gpr32 }
  - { id: 1189, class: gpr32 }
  - { id: 1190, class: gpr32 }
  - { id: 1191, class: gpr32 }
  - { id: 1192, class: gpr32 }
  - { id: 1193, class: gpr32 }
  - { id: 1194, class: gpr32 }
  - { id: 1195, class: gpr32 }
  - { id: 1196, class: gpr32 }
  - { id: 1197, class: gpr32 }
  - { id: 1198, class: gpr32 }
  - { id: 1199, class: gpr32 }
  - { id: 1200, class: gpr32 }
  - { id: 1201, class: gpr32 }
  - { id: 1202, class: gpr32 }
  - { id: 1203, class: gpr32 }
  - { id: 1204, class: gpr32 }
  - { id: 1205, class: gpr32 }
  - { id: 1206, class: gpr32 }
  - { id: 1207, class: gpr32 }
  - { id: 1208, class: gpr32 }
  - { id: 1209, class: gpr32 }
  - { id: 1210, class: gpr32 }
  - { id: 1211, class: gpr32 }
  - { id: 1212, class: gpr32 }
  - { id: 1213, class: gpr32 }
  - { id: 1214, class: gpr32 }
  - { id: 1215, class: gpr32 }
  - { id: 1216, class: gpr32 }
  - { id: 1217, class: gpr32 }
  - { id: 1218, class: gpr32 }
  - { id: 1219, class: gpr32 }
  - { id: 1220, class: gpr32 }
  - { id: 1221, class: gpr32 }
  - { id: 1222, class: gpr32 }
  - { id: 1223, class: gpr32 }
  - { id: 1224, class: gpr32 }
  - { id: 1225, class: gpr32 }
  - { id: 1226, class: gpr32 }
  - { id: 1227, class: gpr32 }
  - { id: 1228, class: gpr32 }
  - { id: 1229, class: gpr32 }
  - { id: 1230, class: gpr32 }
  - { id: 1231, class: gpr32 }
  - { id: 1232, class: gpr32 }
  - { id: 1233, class: gpr32 }
  - { id: 1234, class: gpr32 }
  - { id: 1235, class: gpr32 }
  - { id: 1236, class: gpr32 }
  - { id: 1237, class: gpr32 }
  - { id: 1238, class: gpr32 }
  - { id: 1239, class: gpr32 }
  - { id: 1240, class: gpr32 }
  - { id: 1241, class: gpr32 }
  - { id: 1242, class: gpr32 }
  - { id: 1243, class: gpr32 }
  - { id: 1244, class: gpr32 }
  - { id: 1245, class: gpr32 }
  - { id: 1246, class: gpr32 }
  - { id: 1247, class: gpr32 }
  - { id: 1248, class: gpr32 }
  - { id: 1249, class: gpr32 }
  - { id: 1250, class: gpr32 }
  - { id: 1251, class: gpr32 }
  - { id: 1252, class: gpr32 }
  - { id: 1253, class: gpr32 }
  - { id: 1254, class: gpr32 }
  - { id: 1255, class: gpr32 }
  - { id: 1256, class: gpr32 }
  - { id: 1257, class: gpr32 }
  - { id: 1258, class: gpr32 }
  - { id: 1259, class: gpr32 }
  - { id: 1260, class: gpr32 }
  - { id: 1261, class: gpr32 }
  - { id: 1262, class: gpr32 }
  - { id: 1263, class: gpr32 }
  - { id: 1264, class: gpr32 }
  - { id: 1265, class: gpr32 }
  - { id: 1266, class: gpr32 }
  - { id: 1267, class: gpr32 }
  - { id: 1268, class: gpr32 }
  - { id: 1269, class: gpr32 }
  - { id: 1270, class: gpr32 }
  - { id: 1271, class: gpr32 }
  - { id: 1272, class: gpr32 }
  - { id: 1273, class: gpr32 }
  - { id: 1274, class: gpr32 }
  - { id: 1275, class: gpr32 }
  - { id: 1276, class: gpr32 }
  - { id: 1277, class: gpr32 }
  - { id: 1278, class: gpr32 }
  - { id: 1279, class: gpr32 }
  - { id: 1280, class: gpr32 }
  - { id: 1281, class: gpr32 }
  - { id: 1282, class: gpr32 }
  - { id: 1283, class: gpr32 }
  - { id: 1284, class: gpr32 }
  - { id: 1285, class: gpr32 }
  - { id: 1286, class: gpr32 }
  - { id: 1287, class: gpr32 }
  - { id: 1288, class: gpr32 }
  - { id: 1289, class: gpr32 }
  - { id: 1290, class: gpr32 }
  - { id: 1291, class: gpr32 }
  - { id: 1292, class: gpr32 }
  - { id: 1293, class: gpr32 }
  - { id: 1294, class: gpr32 }
  - { id: 1295, class: gpr32 }
  - { id: 1296, class: gpr32 }
  - { id: 1297, class: gpr32 }
  - { id: 1298, class: gpr32 }
  - { id: 1299, class: gpr32 }
  - { id: 1300, class: gpr32 }
  - { id: 1301, class: gpr32 }
  - { id: 1302, class: gpr32 }
  - { id: 1303, class: gpr32 }
  - { id: 1304, class: gpr32 }
  - { id: 1305, class: gpr32 }
  - { id: 1306, class: gpr32 }
  - { id: 1307, class: gpr32 }
  - { id: 1308, class: gpr32 }
  - { id: 1309, class: gpr32 }
  - { id: 1310, class: gpr32 }
  - { id: 1311, class: gpr32 }
  - { id: 1312, class: gpr32 }
  - { id: 1313, class: gpr32 }
  - { id: 1314, class: gpr32 }
  - { id: 1315, class: gpr32 }
  - { id: 1316, class: gpr32 }
  - { id: 1317, class: gpr32 }
  - { id: 1318, class: gpr32 }
  - { id: 1319, class: gpr32 }
  - { id: 1320, class: gpr32 }
  - { id: 1321, class: gpr32 }
  - { id: 1322, class: gpr32 }
  - { id: 1323, class: gpr32 }
  - { id: 1324, class: gpr32 }
  - { id: 1325, class: gpr32 }
  - { id: 1326, class: gpr32 }
  - { id: 1327, class: gpr32 }
  - { id: 1328, class: gpr32 }
  - { id: 1329, class: gpr32 }
  - { id: 1330, class: gpr32 }
  - { id: 1331, class: gpr32 }
  - { id: 1332, class: gpr32 }
  - { id: 1333, class: gpr32 }
  - { id: 1334, class: gpr32 }
  - { id: 1335, class: gpr32 }
  - { id: 1336, class: gpr32 }
  - { id: 1337, class: gpr32 }
  - { id: 1338, class: gpr32 }
  - { id: 1339, class: gpr32 }
  - { id: 1340, class: gpr32 }
  - { id: 1341, class: gpr32 }
  - { id: 1342, class: gpr32 }
  - { id: 1343, class: gpr32 }
  - { id: 1344, class: gpr32 }
  - { id: 1345, class: gpr32 }
  - { id: 1346, class: gpr32 }
  - { id: 1347, class: gpr32 }
  - { id: 1348, class: gpr32 }
  - { id: 1349, class: gpr32 }
  - { id: 1350, class: gpr32 }
  - { id: 1351, class: gpr32 }
  - { id: 1352, class: gpr32 }
  - { id: 1353, class: gpr32 }
  - { id: 1354, class: gpr32 }
  - { id: 1355, class: gpr32 }
  - { id: 1356, class: gpr32 }
  - { id: 1357, class: gpr32 }
  - { id: 1358, class: gpr32 }
  - { id: 1359, class: gpr32 }
  - { id: 1360, class: gpr32 }
  - { id: 1361, class: gpr32 }
  - { id: 1362, class: gpr32 }
  - { id: 1363, class: gpr32 }
  - { id: 1364, class: gpr32 }
  - { id: 1365, class: gpr32 }
  - { id: 1366, class: gpr32 }
  - { id: 1367, class: gpr32 }
  - { id: 1368, class: gpr32 }
  - { id: 1369, class: gpr32 }
  - { id: 1370, class: gpr32 }
  - { id: 1371, class: gpr32 }
  - { id: 1372, class: gpr32 }
  - { id: 1373, class: gpr32 }
  - { id: 1374, class: gpr32 }
  - { id: 1375, class: gpr32 }
  - { id: 1376, class: gpr32 }
  - { id: 1377, class: gpr32 }
  - { id: 1378, class: gpr32 }
  - { id: 1379, class: gpr32 }
  - { id: 1380, class: gpr32 }
  - { id: 1381, class: gpr32 }
  - { id: 1382, class: gpr32 }
  - { id: 1383, class: gpr32 }
  - { id: 1384, class: gpr32 }
  - { id: 1385, class: gpr32 }
  - { id: 1386, class: gpr32 }
  - { id: 1387, class: gpr32 }
  - { id: 1388, class: gpr32 }
  - { id: 1389, class: gpr32 }
  - { id: 1390, class: gpr32 }
  - { id: 1391, class: gpr32 }
  - { id: 1392, class: gpr32 }
  - { id: 1393, class: gpr32 }
  - { id: 1394, class: gpr32 }
  - { id: 1395, class: gpr32 }
  - { id: 1396, class: gpr32 }
  - { id: 1397, class: gpr32 }
  - { id: 1398, class: gpr32 }
  - { id: 1399, class: gpr32 }
  - { id: 1400, class: gpr32 }
  - { id: 1401, class: gpr32 }
  - { id: 1402, class: gpr32 }
  - { id: 1403, class: gpr32 }
  - { id: 1404, class: gpr32 }
  - { id: 1405, class: gpr32 }
  - { id: 1406, class: gpr32 }
  - { id: 1407, class: gpr32 }
  - { id: 1408, class: gpr32 }
  - { id: 1409, class: gpr32 }
  - { id: 1410, class: gpr32 }
  - { id: 1411, class: gpr32 }
  - { id: 1412, class: gpr32 }
  - { id: 1413, class: gpr32 }
  - { id: 1414, class: gpr32 }
  - { id: 1415, class: gpr32 }
  - { id: 1416, class: gpr32 }
  - { id: 1417, class: gpr32 }
  - { id: 1418, class: gpr32 }
  - { id: 1419, class: gpr32 }
  - { id: 1420, class: gpr32 }
  - { id: 1421, class: gpr32 }
  - { id: 1422, class: gpr32 }
  - { id: 1423, class: gpr32 }
  - { id: 1424, class: gpr32 }
  - { id: 1425, class: gpr32 }
  - { id: 1426, class: gpr32 }
  - { id: 1427, class: gpr32 }
  - { id: 1428, class: gpr32 }
  - { id: 1429, class: gpr32 }
  - { id: 1430, class: gpr32 }
  - { id: 1431, class: gpr32 }
  - { id: 1432, class: gpr32 }
  - { id: 1433, class: gpr32 }
  - { id: 1434, class: gpr32 }
  - { id: 1435, class: gpr32 }
  - { id: 1436, class: gpr32 }
  - { id: 1437, class: gpr32 }
  - { id: 1438, class: gpr32 }
  - { id: 1439, class: gpr32 }
  - { id: 1440, class: gpr32 }
  - { id: 1441, class: gpr32 }
  - { id: 1442, class: gpr32 }
  - { id: 1443, class: gpr32 }
  - { id: 1444, class: gpr32 }
  - { id: 1445, class: gpr32 }
  - { id: 1446, class: gpr32 }
  - { id: 1447, class: gpr32 }
  - { id: 1448, class: gpr32 }
  - { id: 1449, class: gpr32 }
  - { id: 1450, class: gpr32 }
  - { id: 1451, class: gpr32 }
  - { id: 1452, class: gpr32 }
  - { id: 1453, class: gpr32 }
  - { id: 1454, class: gpr32 }
  - { id: 1455, class: gpr32 }
  - { id: 1456, class: gpr32 }
  - { id: 1457, class: gpr32 }
  - { id: 1458, class: gpr32 }
  - { id: 1459, class: gpr32 }
  - { id: 1460, class: gpr32 }
  - { id: 1461, class: gpr32 }
  - { id: 1462, class: gpr32 }
  - { id: 1463, class: gpr32 }
  - { id: 1464, class: gpr32 }
  - { id: 1465, class: gpr32 }
  - { id: 1466, class: gpr32 }
  - { id: 1467, class: gpr32 }
  - { id: 1468, class: gpr32 }
  - { id: 1469, class: gpr32 }
  - { id: 1470, class: gpr32 }
  - { id: 1471, class: gpr32 }
  - { id: 1472, class: gpr32 }
  - { id: 1473, class: gpr32 }
  - { id: 1474, class: gpr32 }
  - { id: 1475, class: gpr32 }
  - { id: 1476, class: gpr32 }
  - { id: 1477, class: gpr32 }
  - { id: 1478, class: gpr32 }
  - { id: 1479, class: gpr32 }
  - { id: 1480, class: gpr32 }
  - { id: 1481, class: gpr32 }
  - { id: 1482, class: gpr32 }
  - { id: 1483, class: gpr32 }
  - { id: 1484, class: gpr32 }
  - { id: 1485, class: gpr32 }
  - { id: 1486, class: gpr32 }
  - { id: 1487, class: gpr32 }
  - { id: 1488, class: gpr32 }
  - { id: 1489, class: gpr32 }
  - { id: 1490, class: gpr32 }
  - { id: 1491, class: gpr32 }
  - { id: 1492, class: gpr32 }
  - { id: 1493, class: gpr32 }
  - { id: 1494, class: gpr32 }
  - { id: 1495, class: gpr32 }
  - { id: 1496, class: gpr32 }
  - { id: 1497, class: gpr32 }
  - { id: 1498, class: gpr32 }
  - { id: 1499, class: gpr32 }
  - { id: 1500, class: gpr32 }
  - { id: 1501, class: gpr32 }
  - { id: 1502, class: gpr32 }
  - { id: 1503, class: gpr32 }
  - { id: 1504, class: gpr32 }
  - { id: 1505, class: gpr32 }
  - { id: 1506, class: gpr32 }
  - { id: 1507, class: gpr32 }
  - { id: 1508, class: gpr32 }
  - { id: 1509, class: gpr32 }
  - { id: 1510, class: gpr32 }
  - { id: 1511, class: gpr32 }
  - { id: 1512, class: gpr32 }
  - { id: 1513, class: gpr32 }
  - { id: 1514, class: gpr32 }
  - { id: 1515, class: gpr32 }
  - { id: 1516, class: gpr32 }
  - { id: 1517, class: gpr32 }
  - { id: 1518, class: gpr32 }
  - { id: 1519, class: gpr32 }
  - { id: 1520, class: gpr32 }
  - { id: 1521, class: gpr32 }
  - { id: 1522, class: gpr32 }
  - { id: 1523, class: gpr32 }
  - { id: 1524, class: gpr32 }
  - { id: 1525, class: gpr32 }
  - { id: 1526, class: gpr32 }
  - { id: 1527, class: gpr32 }
  - { id: 1528, class: gpr32 }
  - { id: 1529, class: gpr32 }
  - { id: 1530, class: gpr32 }
  - { id: 1531, class: gpr32 }
  - { id: 1532, class: gpr32 }
  - { id: 1533, class: gpr32 }
  - { id: 1534, class: gpr32 }
  - { id: 1535, class: gpr32 }
  - { id: 1536, class: gpr32 }
  - { id: 1537, class: gpr32 }
  - { id: 1538, class: gpr32 }
  - { id: 1539, class: gpr32 }
  - { id: 1540, class: gpr32 }
  - { id: 1541, class: gpr32 }
  - { id: 1542, class: gpr32 }
  - { id: 1543, class: gpr32 }
  - { id: 1544, class: gpr32 }
  - { id: 1545, class: gpr32 }
  - { id: 1546, class: gpr32 }
  - { id: 1547, class: gpr32 }
  - { id: 1548, class: gpr32 }
  - { id: 1549, class: gpr32 }
  - { id: 1550, class: gpr32 }
  - { id: 1551, class: gpr32 }
  - { id: 1552, class: gpr32 }
  - { id: 1553, class: gpr32 }
  - { id: 1554, class: gpr32 }
  - { id: 1555, class: gpr32 }
  - { id: 1556, class: gpr32 }
  - { id: 1557, class: gpr32 }
  - { id: 1558, class: gpr32 }
  - { id: 1559, class: gpr32 }
  - { id: 1560, class: gpr32 }
  - { id: 1561, class: gpr32 }
  - { id: 1562, class: gpr32 }
  - { id: 1563, class: gpr32 }
  - { id: 1564, class: gpr32 }
  - { id: 1565, class: gpr32 }
  - { id: 1566, class: gpr32 }
  - { id: 1567, class: gpr32 }
  - { id: 1568, class: gpr32 }
  - { id: 1569, class: gpr32 }
  - { id: 1570, class: gpr32 }
  - { id: 1571, class: gpr32 }
  - { id: 1572, class: gpr32 }
  - { id: 1573, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%113' }
  - { reg: '%a1', virtual-reg: '%114' }
  - { reg: '%t9' }
  - { reg: '%v0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    4
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
stack:           
  - { id: 0, name: vlist, offset: 0, size: 2016, alignment: 4 }
constants:       
  - id:              0
    value:           float 5.000000e-01
    alignment:       4
  - id:              1
    value:           float 0x3F50624DE0000000
    alignment:       4
  - id:              2
    value:           float 0xBF50624DE0000000
    alignment:       4
jumpTable:       
  kind:            gp-rel32-block-address
  entries:         
    - id:              0
      blocks:          [ '%bb.1', '%bb.2', '%bb.25', '%bb.13', '%bb.36', 
                         '%bb.52', '%bb.69', '%bb.86', '%bb.102', '%bb.119' ]
body:             |
  bb.0 (%ir-block.0, freq 8388607):
    successors: %bb.145(0), %bb.147(99)
    liveins: %a0, %a1, %t9, %v0
  
    %122 = ADDu %v0, %t9
    %114 = COPY %a1
    %113 = COPY %a0
    %119 = ORi %zero, 55744
    %120 = ADDu %113, killed %119
    %116 = LW killed %120, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.4, !tbaa !37)
    %121 = SLTiu %116, 10
    BEQ killed %121, %zero, %bb.145, implicit-def dead %at
  
  bb.147 (%ir-block.0, freq 8388599):
    successors: %bb.1(10), %bb.2(10), %bb.25(10), %bb.13(10), %bb.36(10), %bb.52(10), %bb.69(10), %bb.86(10), %bb.102(10), %bb.119(10)
  
    %117 = ORi %zero, 55808
    %118 = ADDu %113, %117
    %0 = LW %118, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1, !tbaa !1)
    %115 = COPY %114
    %123 = SLL %116, 2
    %124 = LW %122, target-flags(<unknown>) %jump-table.0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %125 = ADDu killed %123, killed %124
    %126 = LW killed %125, target-flags(<unknown>) %jump-table.0, <0x3771480> = !{!"unison-memory-partition", i32 2} :: (load 4 from jump-table)
    %127 = ADDu killed %126, %122
    PseudoIndirectBranch killed %127
  
  bb.1 (%ir-block.6, freq 838859):
    successors: %bb.146(100)
  
    %1556 = ORi %zero, 55788
    %1557 = ADDu %113, killed %1556
    %1558 = LW killed %1557, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.7, !tbaa !38)
    %1559 = LUi 1
    %1560 = ADDu %0, killed %1559
    %1561 = LW %1560, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.9, !tbaa !39)
    %1562 = ADDiu killed %1561, -1
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %1563 = ADDiu %zero, 0
    %a0 = COPY %113
    %a1 = COPY %1563
    %a2 = COPY %1562
    %t9 = COPY %1558
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %1564 = ORi %zero, 65528
    SW %zero, %1560, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.9, !tbaa !39)
    %1565 = ADDu %0, killed %1564
    SB %zero, killed %1565, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.12, align 4, !tbaa !41)
    B %bb.146, implicit-def dead %at
  
  bb.2 (%ir-block.13, freq 838859):
    successors: %bb.5..preheader(37), %bb.3..preheader20(62)
  
    %1511 = LUi 1
    %1512 = ADDu %0, killed %1511
    %1 = LW killed %1512, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.17, !tbaa !39)
    %1513 = ORi %zero, 65528
    %1514 = ADDu %0, %1513
    %1515 = LBu %1514, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.14, align 4, !tbaa !41)
    BEQ killed %1515, %zero, %bb.5..preheader, implicit-def dead %at
    B %bb.3..preheader20, implicit-def dead %at
  
  bb.3..preheader20 (freq 524287):
    successors: %bb.4..lr.ph62(50), %bb.12..loopexit(50)
  
    %1516 = SLTiu %1, 2
    BNE killed %1516, %zero, %bb.12..loopexit, implicit-def dead %at
    B %bb.4..lr.ph62, implicit-def dead %at
  
  bb.4..lr.ph62 (freq 262143):
    successors: %bb.7(100)
  
    %1517 = ADDiu %zero, 0
    %1519 = ORi %zero, 65024
    %1522 = ORi %zero, 65025
    %1530 = LW %122, target-flags(<unknown>) @render_clipped_line, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %1531 = ADDiu %1530, target-flags(<unknown>) @render_clipped_line
    %1532 = ORi %zero, 55748
    %1533 = ADDu %113, %1532
    %1534 = LUi 1
    %1535 = ADDu %0, %1534
    %1527 = ORi %zero, 55792
    %1528 = ADDu %113, %1527
    B %bb.7, implicit-def dead %at
  
  bb.5..preheader (freq 314572):
    successors: %bb.6..lr.ph(50), %bb.12..loopexit(50)
  
    %1539 = SLTiu %1, 2
    BNE killed %1539, %zero, %bb.12..loopexit, implicit-def dead %at
    B %bb.6..lr.ph, implicit-def dead %at
  
  bb.6..lr.ph (freq 157286):
    successors: %bb.11(100)
  
    %1540 = ADDiu %zero, 1
    %1541 = ORi %zero, 55792
    %1542 = ADDu %113, %1541
    %1545 = ORi %zero, 55748
    %1546 = ADDu %113, %1545
    %1547 = LUi 1
    %1548 = ADDu %0, %1547
    B %bb.11, implicit-def dead %at
  
  bb.7 (%ir-block.21, freq 8388599):
    successors: %bb.9(37), %bb.8(62)
  
    %2 = PHI %1517, %bb.4..lr.ph62, %4, %bb.10
    %1518 = ADDu %0, %2
    %1520 = ADDu %1518, %1519
    %1521 = LBu killed %1520, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.scevgep2, !tbaa !42)
    %1523 = ADDu %1518, %1522
    %1524 = LBu killed %1523, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.scevgep, !tbaa !42)
    %1525 = AND killed %1524, killed %1521
    %1526 = ANDi killed %1525, 255
    %3 = ADDiu %2, 1
    BEQ killed %1526, %zero, %bb.9, implicit-def dead %at
    B %bb.8, implicit-def dead %at
  
  bb.8 (%ir-block.28, freq 5242874):
    successors: %bb.10(100)
  
    %1529 = LW %1528, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr72, !tbaa !43)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %a0 = COPY %113
    %a1 = COPY %2
    %a2 = COPY %3
    %a3 = COPY %3
    %t9 = COPY %1529
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    B %bb.10, implicit-def dead %at
  
  bb.9 (%ir-block.30, freq 3145724):
    successors: %bb.10(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %a0 = COPY %113
    %a1 = COPY %2
    %a2 = COPY %3
    %t9 = COPY %1531
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
  
  bb.10 (%ir-block.31, freq 8388599):
    successors: %bb.7(96), %bb.12..loopexit(3)
  
    SW %zero, %1533, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr75, !tbaa !44)
    %1536 = LW %1535, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr78, !tbaa !39)
    %1537 = ADDiu %2, 3
    %1538 = SLTu killed %1537, killed %1536
    %4 = ADDiu %2, 2
    BNE killed %1538, %zero, %bb.7, implicit-def dead %at
    B %bb.12..loopexit, implicit-def dead %at
  
  bb.11 (%ir-block.35, freq 5033159):
    successors: %bb.11(96), %bb.12..loopexit(3)
  
    %5 = PHI %1540, %bb.6..lr.ph, %6, %bb.11
    %1543 = LW %1542, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr81, !tbaa !43)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %1544 = ADDiu %5, -1
    %a0 = COPY %113
    %a1 = COPY %1544
    %a2 = COPY %5
    %a3 = COPY %5
    %t9 = COPY %1543
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    SW %zero, %1546, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr84, !tbaa !44)
    %6 = ADDiu %5, 2
    %1549 = LW %1548, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr87, !tbaa !39)
    %1550 = SLTu %6, killed %1549
    BNE killed %1550, %zero, %bb.11, implicit-def dead %at
    B %bb.12..loopexit, implicit-def dead %at
  
  bb.12..loopexit (freq 838859):
    successors: %bb.146(100)
  
    %1551 = LUi 1
    %1552 = ADDu %0, killed %1551
    SW %zero, killed %1552, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr90, !tbaa !39)
    SB %zero, %1514, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.sunkaddr93, align 4, !tbaa !41)
    B %bb.146, implicit-def dead %at
  
  bb.13 (%ir-block.41, freq 838860):
    successors: %bb.16..preheader22(37), %bb.14..preheader24(62)
  
    %1394 = LUi 1
    %1395 = ADDu %0, killed %1394
    %7 = LW killed %1395, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.45, !tbaa !39)
    %1396 = ORi %zero, 65528
    %1397 = ADDu %0, %1396
    %1398 = LBu %1397, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.42, align 4, !tbaa !41)
    BEQ killed %1398, %zero, %bb.16..preheader22, implicit-def dead %at
    B %bb.14..preheader24, implicit-def dead %at
  
  bb.14..preheader24 (freq 524287):
    successors: %bb.15..lr.ph66(50), %bb.23..loopexit23(50)
  
    %1399 = SLTiu %7, 2
    BNE killed %1399, %zero, %bb.23..loopexit23, implicit-def dead %at
    B %bb.15..lr.ph66, implicit-def dead %at
  
  bb.15..lr.ph66 (freq 262143):
    successors: %bb.18(100)
  
    %1400 = ADDiu %zero, 0
    %1402 = ORi %zero, 65024
    %1405 = ORi %zero, 65025
    %1413 = LW %122, target-flags(<unknown>) @render_clipped_line, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %1414 = ADDiu %1413, target-flags(<unknown>) @render_clipped_line
    %1415 = LUi 1
    %1416 = ADDu %0, %1415
    %1410 = ORi %zero, 55792
    %1411 = ADDu %113, %1410
    B %bb.18, implicit-def dead %at
  
  bb.16..preheader22 (freq 314572):
    successors: %bb.17..lr.ph64(50), %bb.23..loopexit23(50)
  
    %1419 = SLTiu %7, 2
    BNE killed %1419, %zero, %bb.23..loopexit23, implicit-def dead %at
    B %bb.17..lr.ph64, implicit-def dead %at
  
  bb.17..lr.ph64 (freq 157286):
    successors: %bb.22(100)
  
    %1420 = ADDiu %zero, 1
    %1421 = ORi %zero, 55792
    %1422 = ADDu %113, %1421
    %1425 = LUi 1
    %1426 = ADDu %0, %1425
    B %bb.22, implicit-def dead %at
  
  bb.18 (%ir-block.49, freq 8388600):
    successors: %bb.20(37), %bb.19(62)
  
    %8 = PHI %1400, %bb.15..lr.ph66, %11, %bb.21
    %1401 = ADDu %0, %8
    %1403 = ADDu %1401, %1402
    %1404 = LBu killed %1403, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.scevgep8, !tbaa !42)
    %1406 = ADDu %1401, %1405
    %1407 = LBu killed %1406, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.scevgep6, !tbaa !42)
    %1408 = AND killed %1407, killed %1404
    %1409 = ANDi killed %1408, 255
    %9 = ADDiu %8, 1
    BEQ killed %1409, %zero, %bb.20, implicit-def dead %at
    B %bb.19, implicit-def dead %at
  
  bb.19 (%ir-block.56, freq 5242875):
    successors: %bb.21(100)
  
    %1412 = LW %1411, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr96, !tbaa !43)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %a0 = COPY %113
    %a1 = COPY %8
    %a2 = COPY %9
    %a3 = COPY %9
    %t9 = COPY %1412
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    B %bb.21, implicit-def dead %at
  
  bb.20 (%ir-block.58, freq 3145725):
    successors: %bb.21(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %a0 = COPY %113
    %a1 = COPY %8
    %a2 = COPY %9
    %t9 = COPY %1414
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
  
  bb.21 (%ir-block.59, freq 8388600):
    successors: %bb.18(96), %bb.23..loopexit23(3)
  
    %10 = LW %1416, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr99, !tbaa !39)
    %1417 = ADDiu %8, 2
    %1418 = SLTu killed %1417, %10
    %11 = ADDiu %8, 1
    BNE killed %1418, %zero, %bb.18, implicit-def dead %at
    B %bb.23..loopexit23, implicit-def dead %at
  
  bb.22 (%ir-block.63, freq 5033160):
    successors: %bb.22(96), %bb.23..loopexit23(3)
  
    %12 = PHI %1420, %bb.17..lr.ph64, %13, %bb.22
    %1423 = LW %1422, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr102, !tbaa !43)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %1424 = ADDiu %12, -1
    %a0 = COPY %113
    %a1 = COPY %1424
    %a2 = COPY %12
    %a3 = COPY %12
    %t9 = COPY %1423
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %14 = LW %1426, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.sunkaddr105, !tbaa !39)
    %13 = ADDiu %12, 1
    %1427 = SLTu %13, %14
    BNE killed %1427, %zero, %bb.22, implicit-def dead %at
    B %bb.23..loopexit23, implicit-def dead %at
  
  bb.23..loopexit23 (freq 838860):
    successors: %bb.24(37), %bb.146(62)
  
    %15 = PHI %7, %bb.14..preheader24, %10, %bb.21, %7, %bb.16..preheader22, %14, %bb.22
    BNE %115, %zero, %bb.146, implicit-def dead %at
    B %bb.24, implicit-def dead %at
  
  bb.24 (%ir-block.71, freq 314572):
    successors: %bb.146(100)
  
    %1428 = ADDiu %0, 16128
    %1429 = ADDiu %15, -1
    %1430 = SLL %1429, 4
    %1431 = ADDu killed %1428, %1430
    %1432 = LW %1431, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.74, !tbaa !45)
    %1433 = SLL %1429, 2
    %1434 = SLL %1429, 3
    %1435 = ORi %zero, 36288
    %1436 = ORi %zero, 56960
    %1437 = ORi %zero, 65024
    %1438 = ORi %zero, 56456
    %1439 = ORi %zero, 54436
    %1440 = ORi %zero, 52420
    %1441 = ORi %zero, 44352
    %1442 = ADDu %0, killed %1441
    %1443 = ADDu %0, killed %1435
    %1444 = ADDu killed %1434, %1433
    %1445 = ADDiu %0, 24192
    %1446 = ADDiu %0, 8064
    SW killed %1432, %0, 16128, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.77, !tbaa !45)
    %1447 = ADDu %0, killed %1440
    %1448 = ADDu %0, killed %1439
    %1449 = ADDu %0, killed %1438
    %1450 = ADDu %0, killed %1437
    %1451 = ADDu %0, killed %1436
    %1452 = ORi %zero, 56972
    %1453 = LUi 1
    %1455 = ORi %zero, 44356
    %1456 = ORi %zero, 44360
    %1457 = ORi %zero, 44364
    %1458 = ORi %zero, 36292
    %1459 = ORi %zero, 36296
    %1460 = ORi %zero, 36300
    %1461 = ADDu killed %1446, %1430
    %1462 = ADDu killed %1445, killed %1444
    %1463 = ADDu %1443, %1430
    %1464 = ADDu %1442, %1430
    %1465 = ADDu %0, killed %1460
    %1466 = ADDu %0, killed %1459
    %1467 = ADDu %0, killed %1458
    %1468 = ADDu %1451, %1430
    %1469 = ADDu %0, killed %1457
    %1470 = ADDu %0, killed %1456
    %1471 = ADDu %0, killed %1455
    %1473 = ADDu %0, killed %1453
    %1474 = ADDu %1450, %1429
    %1475 = ADDu %1449, %1429
    %1476 = ADDu %1448, %1433
    %1477 = ADDu %1447, %1433
    %1478 = ADDu %0, killed %1452
    %1479 = LW %1431, 4, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.79, !tbaa !45)
    SW killed %1479, %0, 16132, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.82, !tbaa !45)
    %1480 = LW %1431, 8, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.84, !tbaa !45)
    SW killed %1480, %0, 16136, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.87, !tbaa !45)
    %1481 = ORi %zero, 56968
    %1482 = ADDu %0, killed %1481
    %1483 = LW %1431, 12, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.89, !tbaa !45)
    SW killed %1483, %0, 16140, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.92, !tbaa !45)
    %1484 = LW %1461, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.94, !tbaa !45)
    SW killed %1484, %0, 8064, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.97, !tbaa !45)
    %1485 = LW %1461, 4, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.99, !tbaa !45)
    SW killed %1485, %0, 8068, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.102, !tbaa !45)
    %1486 = LW %1461, 8, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.104, !tbaa !45)
    SW killed %1486, %0, 8072, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.107, !tbaa !45)
    %1487 = ORi %zero, 56964
    %1488 = ADDu %0, killed %1487
    %1489 = LW %1461, 12, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.109, !tbaa !45)
    SW killed %1489, %0, 8076, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.112, !tbaa !45)
    %1490 = LW %1462, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.114, !tbaa !45)
    SW killed %1490, %0, 24192, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.117, !tbaa !45)
    %1491 = LW %1462, 4, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.119, !tbaa !45)
    SW killed %1491, %0, 24196, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.122, !tbaa !45)
    %1492 = LW %1462, 8, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.124, !tbaa !45)
    %1493 = ADDiu %zero, 1
    SW killed %1492, %0, 24200, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.127, !tbaa !45)
    %1494 = LW %1463, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.128, !tbaa !46)
    SW killed %1494, %1443, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.130, !tbaa !46)
    %1495 = LW %1463, 4, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.131, !tbaa !46)
    SW killed %1495, killed %1467, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.133, !tbaa !46)
    %1496 = LW %1463, 8, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.134, !tbaa !46)
    SW killed %1496, killed %1466, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.136, !tbaa !46)
    %1497 = LW %1463, 12, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.137, !tbaa !46)
    SW killed %1497, killed %1465, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.139, !tbaa !46)
    %1498 = LW %1464, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.140, !tbaa !46)
    SW killed %1498, %1442, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.142, !tbaa !46)
    %1499 = LW %1464, 4, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.143, !tbaa !46)
    SW killed %1499, killed %1471, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.145, !tbaa !46)
    %1500 = LW %1464, 8, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.146, !tbaa !46)
    SW killed %1500, killed %1470, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.148, !tbaa !46)
    %1501 = LW %1464, 12, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.149, !tbaa !46)
    SW killed %1501, killed %1469, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.151, !tbaa !46)
    %1502 = LW %1468, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.153, !tbaa !45)
    SW killed %1502, %1451, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.156, !tbaa !45)
    %1503 = LW %1468, 4, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.158, !tbaa !45)
    SW killed %1503, killed %1488, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.161, !tbaa !45)
    %1504 = LW %1468, 8, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.163, !tbaa !45)
    SW killed %1504, killed %1482, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.166, !tbaa !45)
    %1505 = LW %1468, 12, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.168, !tbaa !45)
    SW killed %1505, killed %1478, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.171, !tbaa !45)
    %1506 = LW killed %1477, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.172, !tbaa !46)
    SW killed %1506, %1447, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.174, !tbaa !46)
    %1507 = LW killed %1476, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.175, !tbaa !46)
    SW killed %1507, %1448, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.177, !tbaa !46)
    %1508 = LBu killed %1475, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.178, !tbaa !42)
    SB killed %1508, %1449, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.180, !tbaa !42)
    %1509 = LBu killed %1474, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.181, !tbaa !42)
    SB %1509, %1450, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.183, !tbaa !42)
    SW killed %1493, killed %1473, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr108, !tbaa !39)
    %1510 = SLTiu %1509, 1
    SB killed %1510, %1397, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.sunkaddr111, align 4, !tbaa !41)
    B %bb.146, implicit-def dead %at
  
  bb.25 (%ir-block.185, freq 838860):
    successors: %bb.26..lr.ph68(50), %bb.31.._crit_edge(50)
  
    %1252 = LUi 1
    %1253 = ADDu %0, %1252
    %17 = LW %1253, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.189, !tbaa !39)
    %1254 = ORi %zero, 65532
    %1255 = ADDu %0, killed %1254
    %1256 = LW killed %1255, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.186, !tbaa !47)
    %1257 = SLTu %zero, killed %1256
    %16 = ADDiu killed %1257, 1
    %1258 = SLTu %16, %17
    BEQ killed %1258, %zero, %bb.31.._crit_edge, implicit-def dead %at
    B %bb.26..lr.ph68, implicit-def dead %at
  
  bb.26..lr.ph68 (freq 419430):
    successors: %bb.27(100)
  
    %1260 = ORi %zero, 65023
    %1263 = ORi %zero, 65024
    %1271 = LW %122, target-flags(<unknown>) @render_clipped_line, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %1272 = ADDiu %1271, target-flags(<unknown>) @render_clipped_line
    %1268 = ORi %zero, 55792
    %1269 = ADDu %113, %1268
  
  bb.27 (%ir-block.192, freq 13421760):
    successors: %bb.29(37), %bb.28(62)
  
    %18 = PHI %16, %bb.26..lr.ph68, %20, %bb.30
    %1259 = ADDu %0, %18
    %1261 = ADDu %1259, %1260
    %1262 = LBu killed %1261, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.scevgep12, !tbaa !42)
    %1264 = ADDu %1259, %1263
    %1265 = LBu killed %1264, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.scevgep10, !tbaa !42)
    %1266 = AND killed %1265, killed %1262
    %1267 = ANDi killed %1266, 255
    %19 = ADDiu %18, -1
    BEQ killed %1267, %zero, %bb.29, implicit-def dead %at
    B %bb.28, implicit-def dead %at
  
  bb.28 (%ir-block.199, freq 8388600):
    successors: %bb.30(100)
  
    %1270 = LW %1269, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr114, !tbaa !43)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %a0 = COPY %113
    %a1 = COPY %19
    %a2 = COPY %18
    %a3 = COPY %18
    %t9 = COPY %1270
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    B %bb.30, implicit-def dead %at
  
  bb.29 (%ir-block.201, freq 5033160):
    successors: %bb.30(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %a0 = COPY %113
    %a1 = COPY %19
    %a2 = COPY %18
    %t9 = COPY %1272
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
  
  bb.30 (%ir-block.202, freq 13421760):
    successors: %bb.27(96), %bb.31.._crit_edge(3)
  
    %21 = LW %1253, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr117, !tbaa !39)
    %20 = ADDiu %18, 1
    %1275 = SLTu %20, %21
    BNE killed %1275, %zero, %bb.27, implicit-def dead %at
    B %bb.31.._crit_edge, implicit-def dead %at
  
  bb.31.._crit_edge (freq 838860):
    successors: %bb.35(37), %bb.32(62)
  
    %22 = PHI %17, %bb.25, %21, %bb.30
    BEQ %115, %zero, %bb.35, implicit-def dead %at
    B %bb.32, implicit-def dead %at
  
  bb.32 (%ir-block.207, freq 524287):
    successors: %bb.34(37), %bb.33(62)
  
    %1276 = ORi %zero, 65024
    %1277 = ADDu %0, killed %1276
    %1278 = LBu %1277, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.211, align 4, !tbaa !42)
    %23 = ADDiu %22, -1
    %1279 = ADDu %1277, %23
    %1280 = LBu killed %1279, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.209, !tbaa !42)
    %1281 = AND killed %1278, killed %1280
    %1282 = ANDi killed %1281, 255
    BEQ killed %1282, %zero, %bb.34, implicit-def dead %at
    B %bb.33, implicit-def dead %at
  
  bb.33 (%ir-block.215, freq 327679):
    successors: %bb.146(100)
  
    %1283 = ORi %zero, 55792
    %1284 = ADDu %113, killed %1283
    %1285 = LW killed %1284, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.216, !tbaa !43)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %1286 = ADDiu %zero, 0
    %a0 = COPY %113
    %a1 = COPY %23
    %a2 = COPY %1286
    %a3 = COPY %1286
    %t9 = COPY %1285
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    B %bb.146, implicit-def dead %at
  
  bb.34 (%ir-block.218, freq 196607):
    successors: %bb.146(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %1287 = LW %122, target-flags(<unknown>) @render_clipped_line, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %1288 = ADDiu killed %1287, target-flags(<unknown>) @render_clipped_line
    %1289 = ADDiu %zero, 0
    %a0 = COPY %113
    %a1 = COPY %23
    %a2 = COPY %1289
    %t9 = COPY %1288
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.146, implicit-def dead %at
  
  bb.35 (%ir-block.219, freq 314572):
    successors: %bb.146(100)
  
    %1290 = LW %0, 23792, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.221, !tbaa !45)
    SW killed %1290, %0, 16144, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.224, !tbaa !45)
    %1291 = LW %0, 23796, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.226, !tbaa !45)
    %1292 = ORi %zero, 65025
    %1293 = LUi 1
    %1294 = ORi %zero, 36316
    %1295 = ORi %zero, 52016
    %1296 = ORi %zero, 44368
    %1297 = ORi %zero, 54336
    %1298 = ORi %zero, 52424
    %1299 = ORi %zero, 56352
    %1300 = ORi %zero, 54440
    %1301 = ORi %zero, 56935
    %1302 = ORi %zero, 56457
    %1303 = ORi %zero, 65503
    %1304 = ORi %zero, 65024
    %1305 = ORi %zero, 43964
    %1306 = ORi %zero, 52020
    %1307 = ORi %zero, 43960
    %1308 = ORi %zero, 36312
    %1309 = ORi %zero, 43956
    %1310 = ORi %zero, 36308
    %1311 = ORi %zero, 43952
    %1312 = ORi %zero, 36304
    %1313 = ORi %zero, 56980
    %1314 = ORi %zero, 64632
    %1315 = ORi %zero, 56984
    %1316 = ORi %zero, 64636
    %1317 = ORi %zero, 56988
    SW killed %1291, %0, 16148, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.229, !tbaa !45)
    %1318 = ADDu %0, killed %1312
    %1319 = ADDu %0, killed %1311
    %1320 = ADDu %0, killed %1310
    %1321 = ADDu %0, killed %1309
    %1322 = ADDu %0, killed %1308
    %1323 = ADDu %0, killed %1307
    %1324 = ADDu %0, killed %1306
    %1325 = ADDu %0, killed %1296
    %1326 = ADDu %0, killed %1295
    %1327 = ADDu %0, killed %1294
    %1328 = ADDu %0, killed %1305
    %1329 = ADDu %0, killed %1304
    %1330 = ADDu %0, killed %1293
    %1331 = ADDu %0, killed %1292
    %1332 = ADDu %0, killed %1303
    %1333 = ADDu %0, killed %1302
    %1334 = ADDu %0, killed %1301
    %1335 = ADDu %0, killed %1300
    %1336 = ADDu %0, killed %1299
    %1337 = ADDu %0, killed %1298
    %1338 = ADDu %0, killed %1297
    %1339 = ADDu %0, killed %1317
    %1340 = ADDu %0, killed %1316
    %1341 = ADDu %0, killed %1315
    %1342 = ADDu %0, killed %1314
    %1343 = ADDu %0, killed %1313
    %1344 = LW %0, 23800, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.231, !tbaa !45)
    SW killed %1344, %0, 16152, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.234, !tbaa !45)
    %1345 = LW %0, 23804, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.236, !tbaa !45)
    SW killed %1345, %0, 16156, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.239, !tbaa !45)
    %1346 = LW %0, 15728, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.241, !tbaa !45)
    SW killed %1346, %0, 8080, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.244, !tbaa !45)
    %1347 = LW %0, 15732, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.246, !tbaa !45)
    SW killed %1347, %0, 8084, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.249, !tbaa !45)
    %1348 = LW %0, 15736, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.251, !tbaa !45)
    SW killed %1348, %0, 8088, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.254, !tbaa !45)
    %1349 = LW %0, 15740, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.256, !tbaa !45)
    SW killed %1349, %0, 8092, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.259, !tbaa !45)
    %1350 = LW %0, 29940, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.261, !tbaa !45)
    SW killed %1350, %0, 24204, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.264, !tbaa !45)
    %1351 = LW %0, 29944, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.266, !tbaa !45)
    SW killed %1351, %0, 24208, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.269, !tbaa !45)
    %1352 = LW %0, 29948, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.271, !tbaa !45)
    SW killed %1352, %0, 24212, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.274, !tbaa !45)
    %1353 = ORi %zero, 64628
    %1354 = ADDu %0, killed %1353
    %1355 = ORi %zero, 56976
    %1356 = ADDu %0, killed %1355
    %1357 = LW killed %1319, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.275, !tbaa !46)
    SW killed %1357, killed %1318, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.277, !tbaa !46)
    %1358 = ORi %zero, 64624
    %1359 = ADDu %0, killed %1358
    %1360 = ORi %zero, 44380
    %1361 = ADDu %0, killed %1360
    %1362 = LW killed %1321, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.278, !tbaa !46)
    SW killed %1362, killed %1320, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.280, !tbaa !46)
    %1363 = ORi %zero, 52028
    %1364 = ADDu %0, killed %1363
    %1365 = ORi %zero, 44376
    %1366 = ADDu %0, killed %1365
    %1367 = LW killed %1323, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.281, !tbaa !46)
    SW killed %1367, killed %1322, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.283, !tbaa !46)
    %1368 = ORi %zero, 52024
    %1369 = ADDu %0, killed %1368
    %1370 = ORi %zero, 44372
    %1371 = ADDu %0, killed %1370
    %1372 = ORi %zero, 65528
    %1373 = ADDu %0, killed %1372
    %1374 = LW killed %1328, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.284, !tbaa !46)
    SW killed %1374, killed %1327, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.286, !tbaa !46)
    %1375 = LW killed %1326, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.287, !tbaa !46)
    %1376 = ADDiu %zero, 2
    %1377 = ADDiu %zero, 1
    SW killed %1375, killed %1325, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.289, !tbaa !46)
    %1378 = LW killed %1324, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.290, !tbaa !46)
    SW killed %1378, killed %1371, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.292, !tbaa !46)
    %1379 = LW killed %1369, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.293, !tbaa !46)
    SW killed %1379, killed %1366, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.295, !tbaa !46)
    %1380 = LW killed %1364, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.296, !tbaa !46)
    SW killed %1380, killed %1361, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.298, !tbaa !46)
    %1381 = LW killed %1359, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.300, !tbaa !45)
    SW killed %1381, killed %1356, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.303, !tbaa !45)
    %1382 = LW killed %1354, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.305, !tbaa !45)
    SW killed %1382, killed %1343, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.308, !tbaa !45)
    %1383 = LW killed %1342, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.310, !tbaa !45)
    SW killed %1383, killed %1341, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.313, !tbaa !45)
    %1384 = LW killed %1340, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.315, !tbaa !45)
    SW killed %1384, killed %1339, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.318, !tbaa !45)
    %1385 = LW killed %1338, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.319, !tbaa !46)
    SW killed %1385, killed %1337, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.321, !tbaa !46)
    %1386 = LW killed %1336, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.322, !tbaa !46)
    SW killed %1386, killed %1335, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.324, !tbaa !46)
    %1387 = LBu killed %1334, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.325, !tbaa !42)
    SB killed %1387, killed %1333, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.327, !tbaa !42)
    %1388 = LBu killed %1332, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.328, !tbaa !42)
    SB killed %1388, killed %1331, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.330, !tbaa !42)
    SW killed %1376, killed %1330, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr120, !tbaa !39)
    %1389 = LHu killed %1329, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 2 from %ir.332, align 4)
    %1390 = SLTiu %1389, 256
    %1391 = ANDi %1389, 255
    %1392 = SLTiu killed %1391, 1
    %1393 = MOVN_I_I killed %1377, killed %1390, %1392
    SB killed %1393, killed %1373, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.338, align 4, !tbaa !41)
    B %bb.146, implicit-def dead %at
  
  bb.36 (%ir-block.339, freq 838860):
    successors: %bb.45(37), %bb.37..preheader30(62)
  
    %1188 = ORi %zero, 65528
    %1189 = ADDu %0, %1188
    %1190 = LBu %1189, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.340, align 4, !tbaa !41)
    BEQ killed %1190, %zero, %bb.45, implicit-def dead %at
    B %bb.37..preheader30, implicit-def dead %at
  
  bb.37..preheader30 (freq 524287):
    successors: %bb.38..lr.ph75(50), %bb.51..loopexit27(50)
  
    %1191 = LUi 1
    %24 = ADDu %0, killed %1191
    %1192 = LW %24, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.343, !tbaa !39)
    %1193 = SLTiu killed %1192, 3
    BNE killed %1193, %zero, %bb.51..loopexit27, implicit-def dead %at
    B %bb.38..lr.ph75, implicit-def dead %at
  
  bb.38..lr.ph75 (freq 262143):
    successors: %bb.39(100)
  
    %1194 = ADDiu %zero, 0
    %1196 = ORi %zero, 65024
    %1199 = ORi %zero, 65025
    %1203 = ORi %zero, 65026
    %1218 = LW %122, target-flags(<unknown>) @render_clipped_polygon, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %1219 = ADDiu %1218, target-flags(<unknown>) @render_clipped_polygon
    %1220 = ADDiu %zero, 3
    %1222 = LEA_ADDiu %stack.0.vlist, 0
    %1208 = ORi %zero, 55764
    %1209 = ADDu %113, %1208
    %1215 = LW %122, target-flags(<unknown>) @render_triangle, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %1216 = ADDiu %1215, target-flags(<unknown>) @render_triangle
    %1211 = ORi %zero, 55804
    %1212 = ADDu %113, %1211
  
  bb.39 (%ir-block.346, freq 8388600):
    successors: %bb.43(37), %bb.40(62)
  
    %25 = PHI %1194, %bb.38..lr.ph75, %28, %bb.44
    %1195 = ADDu %0, %25
    %1197 = ADDu %1195, %1196
    %1198 = LBu killed %1197, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.scevgep20, !tbaa !42)
    %1200 = ADDu %1195, %1199
    %1201 = LBu killed %1200, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.scevgep18, !tbaa !42)
    %1202 = AND killed %1201, killed %1198
    %1204 = ADDu %1195, %1203
    %1205 = LBu killed %1204, 0, <0x3771480> = !{!"unison-memory-partition", i32 2} :: (load 1 from %ir.scevgep16, !tbaa !42)
    %1206 = AND killed %1202, killed %1205
    %27 = ADDiu %25, 1
    %26 = ADDiu %25, 2
    %1207 = ANDi killed %1206, 255
    BEQ killed %1207, %zero, %bb.43, implicit-def dead %at
    B %bb.40, implicit-def dead %at
  
  bb.40 (%ir-block.356, freq 5242875):
    successors: %bb.42(37), %bb.41(62)
  
    %1210 = LBu %1209, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.sunkaddr123, align 4, !tbaa !48)
    BEQ killed %1210, %zero, %bb.42, implicit-def dead %at
    B %bb.41, implicit-def dead %at
  
  bb.41 (%ir-block.359, freq 3276796):
    successors: %bb.44(100)
  
    %1213 = LW %1212, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr126, !tbaa !49)
    ADJCALLSTACKDOWN 24, implicit-def dead %sp, implicit %sp
    %1214 = COPY %sp
    SW %26, %1214, 16, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into unknown)
    %a0 = COPY %113
    %a1 = COPY %25
    %a2 = COPY %27
    %a3 = COPY %26
    %t9 = COPY %1213
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 24, 0, implicit-def dead %sp, implicit %sp
    B %bb.44, implicit-def dead %at
  
  bb.42 (%ir-block.361, freq 1966078):
    successors: %bb.44(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %a0 = COPY %113
    %a1 = COPY %25
    %a2 = COPY %27
    %a3 = COPY %26
    %t0 = COPY %26
    %t1 = COPY %1194
    %t9 = COPY %1216
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %t0, implicit %t1, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.44, implicit-def dead %at
  
  bb.43 (%ir-block.362, freq 3145725):
    successors: %bb.44(100)
  
    SW %25, %stack.0.vlist, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.363, !tbaa !46)
    SW %27, %stack.0.vlist, 4, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr129, !tbaa !46)
    SW %26, %stack.0.vlist, 8, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr132, !tbaa !46)
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %a0 = COPY %113
    %a1 = COPY %1220
    %a2 = COPY %1222
    %a3 = COPY %1194
    %t9 = COPY %1219
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
  
  bb.44 (%ir-block.364, freq 8388600):
    successors: %bb.39(96), %bb.51..loopexit27(3)
  
    %1223 = LW %24, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.343, !tbaa !39)
    %1224 = ADDiu %25, 5
    %1225 = SLTu killed %1224, killed %1223
    %28 = ADDiu %25, 3
    BNE killed %1225, %zero, %bb.39, implicit-def dead %at
    B %bb.51..loopexit27, implicit-def dead %at
  
  bb.45 (%ir-block.368, freq 314572):
    successors: %bb.48..preheader26(37), %bb.46..preheader28(62)
  
    %1226 = LUi 1
    %29 = ADDu %0, killed %1226
    %30 = LW %29, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.372, !tbaa !39)
    %1227 = ORi %zero, 55764
    %1228 = ADDu %113, killed %1227
    %1229 = LBu killed %1228, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.369, align 4, !tbaa !48)
    BEQ killed %1229, %zero, %bb.48..preheader26, implicit-def dead %at
    B %bb.46..preheader28, implicit-def dead %at
  
  bb.46..preheader28 (freq 196607):
    successors: %bb.47..lr.ph73(50), %bb.51..loopexit27(50)
  
    %1230 = SLTiu %30, 3
    BNE killed %1230, %zero, %bb.51..loopexit27, implicit-def dead %at
    B %bb.47..lr.ph73, implicit-def dead %at
  
  bb.47..lr.ph73 (freq 98303):
    successors: %bb.49(100)
  
    %1231 = ADDiu %zero, 2
    %1232 = ORi %zero, 55804
    %1233 = ADDu %113, %1232
    B %bb.49, implicit-def dead %at
  
  bb.48..preheader26 (freq 117964):
    successors: %bb.154(50), %bb.51..loopexit27(50)
  
    %1241 = SLTiu %30, 3
    BNE %1241, %zero, %bb.51..loopexit27, implicit-def %at
  
  bb.154 (freq 58982):
    successors: %bb.50..lr.ph71(100)
  
    %1240 = ADDiu %zero, 2
    %1244 = LW %122, target-flags(<unknown>) @render_triangle, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %1245 = ADDiu %1244, target-flags(<unknown>) @render_triangle
    %1246 = ADDiu %zero, 0
    B %bb.50..lr.ph71, implicit-def %at
  
  bb.49 (%ir-block.376, freq 3145725):
    successors: %bb.49(96), %bb.51..loopexit27(3)
  
    %31 = PHI %1231, %bb.47..lr.ph73, %32, %bb.49
    %1234 = LW %1233, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr135, !tbaa !49)
    ADJCALLSTACKDOWN 24, implicit-def dead %sp, implicit %sp
    %1235 = COPY %sp
    SW %31, %1235, 16, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into unknown)
    %1236 = ADDiu %31, -2
    %1237 = ADDiu %31, -1
    %a0 = COPY %113
    %a1 = COPY %1236
    %a2 = COPY %1237
    %a3 = COPY %31
    %t9 = COPY %1234
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 24, 0, implicit-def dead %sp, implicit %sp
    %1238 = LW %29, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.372, !tbaa !39)
    %32 = ADDiu %31, 3
    %1239 = SLTu %32, killed %1238
    BNE killed %1239, %zero, %bb.49, implicit-def dead %at
    B %bb.51..loopexit27, implicit-def dead %at
  
  bb.50..lr.ph71 (freq 1887435):
    successors: %bb.50..lr.ph71(96), %bb.51..loopexit27(3)
  
    %33 = PHI %1240, %bb.154, %34, %bb.50..lr.ph71
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %1242 = ADDiu %33, -2
    %1243 = ADDiu %33, -1
    %a0 = COPY %113
    %a1 = COPY %1242
    %a2 = COPY %1243
    %a3 = COPY %33
    %t0 = COPY %33
    %t1 = COPY %1246
    %t9 = COPY %1245
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %t0, implicit %t1, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    %1247 = LW %29, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.372, !tbaa !39)
    %34 = ADDiu %33, 3
    %1248 = SLTu %34, killed %1247
    BNE killed %1248, %zero, %bb.50..lr.ph71, implicit-def dead %at
    B %bb.51..loopexit27, implicit-def dead %at
  
  bb.51..loopexit27 (freq 838860):
    successors: %bb.146(100)
  
    %35 = PHI %24, %bb.37..preheader30, %24, %bb.44, %29, %bb.46..preheader28, %29, %bb.49, %29, %bb.48..preheader26, %29, %bb.50..lr.ph71
    SW %zero, %35, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir..pre-phi, !tbaa !39)
    SB %zero, %1189, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.sunkaddr138, align 4, !tbaa !41)
    B %bb.146, implicit-def dead %at
  
  bb.52 (%ir-block.388, freq 838859):
    successors: %bb.61(37), %bb.53..preheader36(62)
  
    %926 = ORi %zero, 65528
    %927 = ADDu %0, %926
    %928 = LBu %927, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.389, align 4, !tbaa !41)
    BEQ killed %928, %zero, %bb.61, implicit-def dead %at
    B %bb.53..preheader36, implicit-def dead %at
  
  bb.53..preheader36 (freq 524287):
    successors: %bb.54..lr.ph81(50), %bb.67..loopexit33(50)
  
    %929 = LUi 1
    %930 = ADDu %0, %929
    %931 = LW %930, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.392, !tbaa !39)
    %932 = SLTiu killed %931, 3
    BNE killed %932, %zero, %bb.67..loopexit33, implicit-def dead %at
    B %bb.54..lr.ph81, implicit-def dead %at
  
  bb.54..lr.ph81 (freq 262143):
    successors: %bb.55(100)
  
    %933 = ADDiu %zero, 0
    %935 = ORi %zero, 65024
    %938 = ORi %zero, 65025
    %942 = ORi %zero, 65026
    %957 = LW %122, target-flags(<unknown>) @render_clipped_polygon, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %959 = ADDiu %957, target-flags(<unknown>) @render_clipped_polygon
    %960 = ADDiu %zero, 3
    %961 = LEA_ADDiu %stack.0.vlist, 0
    %947 = ORi %zero, 55764
    %948 = ADDu %113, %947
    %955 = LW %122, target-flags(<unknown>) @render_triangle, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %956 = ADDiu %955, target-flags(<unknown>) @render_triangle
    %950 = ORi %zero, 55804
    %951 = ADDu %113, %950
  
  bb.55 (%ir-block.395, freq 8388599):
    successors: %bb.59(37), %bb.56(62)
  
    %36 = PHI %933, %bb.54..lr.ph81, %39, %bb.60
    %934 = ADDu %0, %36
    %936 = ADDu %934, %935
    %937 = LBu killed %936, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.scevgep28, !tbaa !42)
    %939 = ADDu %934, %938
    %940 = LBu killed %939, 0, <0x3771480> = !{!"unison-memory-partition", i32 2} :: (load 1 from %ir.scevgep26, !tbaa !42)
    %941 = AND killed %940, killed %937
    %943 = ADDu %934, %942
    %944 = LBu killed %943, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.scevgep24, !tbaa !42)
    %945 = AND killed %941, killed %944
    %38 = ADDiu %36, 1
    %37 = ADDiu %36, 2
    %946 = ANDi killed %945, 255
    BEQ killed %946, %zero, %bb.59, implicit-def dead %at
    B %bb.56, implicit-def dead %at
  
  bb.56 (%ir-block.405, freq 5242874):
    successors: %bb.58(37), %bb.57(62)
  
    %949 = LBu %948, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.sunkaddr141, align 4, !tbaa !48)
    BEQ killed %949, %zero, %bb.58, implicit-def dead %at
    B %bb.57, implicit-def dead %at
  
  bb.57 (%ir-block.408, freq 3276796):
    successors: %bb.60(100)
  
    %952 = LW %951, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr144, !tbaa !49)
    ADJCALLSTACKDOWN 24, implicit-def dead %sp, implicit %sp
    %953 = COPY %sp
    SW %37, %953, 16, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into unknown)
    %a0 = COPY %113
    %a1 = COPY %36
    %a2 = COPY %38
    %a3 = COPY %37
    %t9 = COPY %952
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 24, 0, implicit-def dead %sp, implicit %sp
    B %bb.60, implicit-def dead %at
  
  bb.58 (%ir-block.410, freq 1966078):
    successors: %bb.60(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %954 = ANDi %37, 1
    %a0 = COPY %113
    %a1 = COPY %36
    %a2 = COPY %38
    %a3 = COPY %37
    %t0 = COPY %37
    %t1 = COPY %954
    %t9 = COPY %956
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %t0, implicit %t1, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.60, implicit-def dead %at
  
  bb.59 (%ir-block.412, freq 3145724):
    successors: %bb.60(100)
  
    SW %36, %stack.0.vlist, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.413, !tbaa !46)
    SW %38, %stack.0.vlist, 4, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr147, !tbaa !46)
    SW %37, %stack.0.vlist, 8, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr150, !tbaa !46)
    %958 = ANDi %37, 1
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %a0 = COPY %113
    %a1 = COPY %960
    %a2 = COPY %961
    %a3 = COPY %958
    %t9 = COPY %959
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
  
  bb.60 (%ir-block.415, freq 8388599):
    successors: %bb.55(96), %bb.67..loopexit33(3)
  
    %964 = LW %930, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr153, !tbaa !39)
    %965 = ADDiu %36, 3
    %966 = SLTu killed %965, killed %964
    %39 = ADDiu %36, 1
    BNE killed %966, %zero, %bb.55, implicit-def dead %at
    B %bb.67..loopexit33, implicit-def dead %at
  
  bb.61 (%ir-block.419, freq 314572):
    successors: %bb.64..preheader32(37), %bb.62..preheader34(62)
  
    %967 = LUi 1
    %968 = ADDu %0, killed %967
    %40 = LW killed %968, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.423, !tbaa !39)
    %969 = ORi %zero, 55764
    %970 = ADDu %113, killed %969
    %971 = LBu killed %970, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.420, align 4, !tbaa !48)
    BEQ killed %971, %zero, %bb.64..preheader32, implicit-def dead %at
    B %bb.62..preheader34, implicit-def dead %at
  
  bb.62..preheader34 (freq 196607):
    successors: %bb.63..lr.ph79(50), %bb.67..loopexit33(50)
  
    %972 = SLTiu %40, 3
    BNE killed %972, %zero, %bb.67..loopexit33, implicit-def dead %at
    B %bb.63..lr.ph79, implicit-def dead %at
  
  bb.63..lr.ph79 (freq 98303):
    successors: %bb.65(100)
  
    %973 = ADDiu %zero, 2
    %974 = ORi %zero, 55804
    %975 = ADDu %113, %974
    %980 = LUi 1
    %981 = ADDu %0, %980
    B %bb.65, implicit-def dead %at
  
  bb.64..preheader32 (freq 117964):
    successors: %bb.153(50), %bb.67..loopexit33(50)
  
    %985 = SLTiu %40, 3
    BNE %985, %zero, %bb.67..loopexit33, implicit-def %at
  
  bb.153 (freq 58982):
    successors: %bb.66..lr.ph77(100)
  
    %984 = ADDiu %zero, 2
    %989 = LW %122, target-flags(<unknown>) @render_triangle, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %990 = ADDiu %989, target-flags(<unknown>) @render_triangle
    %991 = LUi 1
    %992 = ADDu %0, %991
    B %bb.66..lr.ph77, implicit-def %at
  
  bb.65 (%ir-block.427, freq 3145724):
    successors: %bb.65(96), %bb.67..loopexit33(3)
  
    %41 = PHI %973, %bb.63..lr.ph79, %42, %bb.65
    %976 = LW %975, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr156, !tbaa !49)
    ADJCALLSTACKDOWN 24, implicit-def dead %sp, implicit %sp
    %977 = COPY %sp
    SW %41, %977, 16, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into unknown)
    %978 = ADDiu %41, -2
    %979 = ADDiu %41, -1
    %a0 = COPY %113
    %a1 = COPY %978
    %a2 = COPY %979
    %a3 = COPY %41
    %t9 = COPY %976
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 24, 0, implicit-def dead %sp, implicit %sp
    %982 = LW %981, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr159, !tbaa !39)
    %42 = ADDiu %41, 1
    %983 = SLTu %42, killed %982
    BNE killed %983, %zero, %bb.65, implicit-def dead %at
    B %bb.67..loopexit33, implicit-def dead %at
  
  bb.66..lr.ph77 (freq 1887434):
    successors: %bb.66..lr.ph77(96), %bb.67..loopexit33(3)
  
    %43 = PHI %984, %bb.153, %44, %bb.66..lr.ph77
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %986 = ADDiu %43, -2
    %987 = ADDiu %43, -1
    %988 = ANDi %43, 1
    %a0 = COPY %113
    %a1 = COPY %986
    %a2 = COPY %987
    %a3 = COPY %43
    %t0 = COPY %43
    %t1 = COPY %988
    %t9 = COPY %990
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %t0, implicit %t1, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    %993 = LW %992, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr162, !tbaa !39)
    %44 = ADDiu %43, 1
    %994 = SLTu %44, killed %993
    BNE killed %994, %zero, %bb.66..lr.ph77, implicit-def dead %at
    B %bb.67..loopexit33, implicit-def dead %at
  
  bb.67..loopexit33 (freq 838859):
    successors: %bb.68(37), %bb.146(62)
  
    BNE %115, %zero, %bb.146, implicit-def dead %at
    B %bb.68, implicit-def dead %at
  
  bb.68 (%ir-block.441, freq 314572):
    successors: %bb.146(100)
  
    %995 = LW %0, 23776, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.443, !tbaa !45)
    SW killed %995, %0, 16128, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.446, !tbaa !45)
    %996 = LW %0, 23780, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.448, !tbaa !45)
    %997 = ORi %zero, 44364
    %998 = ORi %zero, 44360
    %999 = ORi %zero, 44356
    %1000 = ORi %zero, 52008
    %1001 = ORi %zero, 52000
    %1002 = ORi %zero, 44352
    %1003 = ORi %zero, 43948
    %1004 = ORi %zero, 36300
    %1005 = ORi %zero, 36292
    %1006 = ORi %zero, 43944
    %1007 = ORi %zero, 36296
    %1008 = ORi %zero, 36288
    %1009 = ORi %zero, 43940
    %1010 = ORi %zero, 43936
    %1011 = ORi %zero, 54332
    %1012 = ORi %zero, 56968
    %1013 = ORi %zero, 64620
    %1014 = ORi %zero, 56964
    %1015 = ORi %zero, 64608
    %1016 = ORi %zero, 56960
    %1017 = ORi %zero, 64612
    %1018 = ORi %zero, 52012
    %1019 = ORi %zero, 52004
    %1020 = ORi %zero, 56348
    %1021 = ORi %zero, 56972
    %1022 = ORi %zero, 64616
    SW killed %996, %0, 16132, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.451, !tbaa !45)
    %1023 = ADDu %0, killed %1010
    %1024 = ADDu %0, killed %1009
    %1025 = ADDu %0, killed %1008
    %1026 = ADDu %0, killed %1007
    %1027 = ADDu %0, killed %1006
    %1028 = ADDu %0, killed %1005
    %1029 = ADDu %0, killed %1004
    %1030 = ADDu %0, killed %1003
    %1031 = ADDu %0, killed %1002
    %1032 = ADDu %0, killed %1001
    %1033 = ADDu %0, killed %1000
    %1034 = ADDu %0, killed %999
    %1035 = ADDu %0, killed %1019
    %1036 = ADDu %0, killed %1018
    %1037 = ADDu %0, killed %998
    %1038 = ADDu %0, killed %997
    %1039 = ADDu %0, killed %1017
    %1040 = ADDu %0, killed %1016
    %1041 = ADDu %0, killed %1015
    %1042 = ADDu %0, killed %1022
    %1043 = ADDu %0, killed %1014
    %1044 = ADDu %0, killed %1013
    %1045 = ADDu %0, killed %1012
    %1046 = ADDu %0, killed %1011
    %1047 = ADDu %0, killed %1021
    %1048 = ADDu %0, killed %1020
    %1049 = LW %0, 23784, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.453, !tbaa !45)
    SW killed %1049, %0, 16136, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.456, !tbaa !45)
    %1050 = LW %0, 23788, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.458, !tbaa !45)
    SW killed %1050, %0, 16140, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.461, !tbaa !45)
    %1051 = LW %0, 15712, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.463, !tbaa !45)
    SW killed %1051, %0, 8064, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.466, !tbaa !45)
    %1052 = LW %0, 15716, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.468, !tbaa !45)
    SW killed %1052, %0, 8068, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.471, !tbaa !45)
    %1053 = LW %0, 15720, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.473, !tbaa !45)
    SW killed %1053, %0, 8072, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.476, !tbaa !45)
    %1054 = LW %0, 15724, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.478, !tbaa !45)
    SW killed %1054, %0, 8076, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.481, !tbaa !45)
    %1055 = LW %0, 29928, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.483, !tbaa !45)
    SW killed %1055, %0, 24192, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.486, !tbaa !45)
    %1056 = LW %0, 29932, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.488, !tbaa !45)
    SW killed %1056, %0, 24196, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.491, !tbaa !45)
    %1057 = LW %0, 29936, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.493, !tbaa !45)
    SW killed %1057, %0, 24200, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.496, !tbaa !45)
    %1058 = ORi %zero, 52420
    %1059 = ADDu %0, killed %1058
    %1060 = ORi %zero, 56934
    %1061 = ADDu %0, killed %1060
    %1062 = LW killed %1023, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.497, !tbaa !46)
    SW killed %1062, killed %1025, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.499, !tbaa !46)
    %1063 = ORi %zero, 54436
    %1064 = ADDu %0, killed %1063
    %1065 = ORi %zero, 65024
    %1066 = ADDu %0, killed %1065
    %1067 = LW killed %1024, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.500, !tbaa !46)
    SW killed %1067, killed %1028, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.502, !tbaa !46)
    %1068 = ORi %zero, 65502
    %1069 = ADDu %0, killed %1068
    %1070 = ORi %zero, 56456
    %1071 = ADDu %0, killed %1070
    %1072 = LW killed %1027, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.503, !tbaa !46)
    SW killed %1072, killed %1026, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.505, !tbaa !46)
    %1073 = ORi %zero, 36304
    %1074 = ADDu %0, killed %1073
    %1075 = ORi %zero, 43952
    %1076 = ADDu %0, killed %1075
    %1077 = LW killed %1030, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.506, !tbaa !46)
    SW killed %1077, killed %1029, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.508, !tbaa !46)
    %1078 = ORi %zero, 36308
    %1079 = ADDu %0, killed %1078
    %1080 = ORi %zero, 43956
    %1081 = ADDu %0, killed %1080
    %1082 = LW killed %1032, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.509, !tbaa !46)
    SW killed %1082, killed %1031, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.511, !tbaa !46)
    %1083 = ORi %zero, 36312
    %1084 = ADDu %0, killed %1083
    %1085 = ORi %zero, 43960
    %1086 = ADDu %0, killed %1085
    %1087 = LW killed %1035, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.512, !tbaa !46)
    SW killed %1087, killed %1034, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.514, !tbaa !46)
    %1088 = ORi %zero, 52020
    %1089 = ADDu %0, killed %1088
    %1090 = ORi %zero, 44368
    %1091 = ADDu %0, killed %1090
    %1092 = LW killed %1033, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.515, !tbaa !46)
    SW killed %1092, killed %1037, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.517, !tbaa !46)
    %1093 = ORi %zero, 52016
    %1094 = ADDu %0, killed %1093
    %1095 = ORi %zero, 36316
    %1096 = ADDu %0, killed %1095
    %1097 = LW killed %1036, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.518, !tbaa !46)
    SW killed %1097, killed %1038, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.520, !tbaa !46)
    %1098 = ORi %zero, 43964
    %1099 = ADDu %0, killed %1098
    %1100 = LUi 1
    %1101 = ADDu %0, killed %1100
    %1102 = LW killed %1041, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.522, !tbaa !45)
    SW killed %1102, killed %1040, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.525, !tbaa !45)
    %1103 = ORi %zero, 65025
    %1104 = ADDu %0, killed %1103
    %1105 = ORi %zero, 65503
    %1106 = ADDu %0, killed %1105
    %1107 = LW killed %1039, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.527, !tbaa !45)
    SW killed %1107, killed %1043, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.530, !tbaa !45)
    %1108 = ORi %zero, 56457
    %1109 = ADDu %0, killed %1108
    %1110 = ORi %zero, 56935
    %1111 = ADDu %0, killed %1110
    %1112 = LW killed %1042, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.532, !tbaa !45)
    SW killed %1112, killed %1045, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.535, !tbaa !45)
    %1113 = ORi %zero, 54440
    %1114 = ADDu %0, killed %1113
    %1115 = ORi %zero, 56352
    %1116 = ADDu %0, killed %1115
    %1117 = LW killed %1044, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.537, !tbaa !45)
    SW killed %1117, killed %1047, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.540, !tbaa !45)
    %1118 = ORi %zero, 52424
    %1119 = ADDu %0, killed %1118
    %1120 = ORi %zero, 54336
    %1121 = ADDu %0, killed %1120
    %1122 = LW killed %1046, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.541, !tbaa !46)
    SW killed %1122, killed %1059, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.543, !tbaa !46)
    %1123 = ORi %zero, 56988
    %1124 = ADDu %0, killed %1123
    %1125 = ORi %zero, 64636
    %1126 = ADDu %0, killed %1125
    %1127 = LW killed %1048, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.544, !tbaa !46)
    SW killed %1127, killed %1064, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.546, !tbaa !46)
    %1128 = ORi %zero, 56984
    %1129 = ADDu %0, killed %1128
    %1130 = ORi %zero, 64632
    %1131 = ADDu %0, killed %1130
    %1132 = LBu killed %1061, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.547, !tbaa !42)
    SB killed %1132, killed %1071, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.549, !tbaa !42)
    %1133 = ORi %zero, 56980
    %1134 = ADDu %0, killed %1133
    %1135 = LBu killed %1069, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.550, !tbaa !42)
    SB killed %1135, %1066, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.552, !tbaa !42)
    %1136 = LW %0, 23792, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.554, !tbaa !45)
    SW killed %1136, %0, 16144, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.557, !tbaa !45)
    %1137 = LW %0, 23796, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.559, !tbaa !45)
    SW killed %1137, %0, 16148, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.562, !tbaa !45)
    %1138 = LW %0, 23800, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.564, !tbaa !45)
    SW killed %1138, %0, 16152, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.567, !tbaa !45)
    %1139 = LW %0, 23804, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.569, !tbaa !45)
    SW killed %1139, %0, 16156, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.572, !tbaa !45)
    %1140 = LW %0, 15728, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.574, !tbaa !45)
    SW killed %1140, %0, 8080, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.577, !tbaa !45)
    %1141 = LW %0, 15732, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.579, !tbaa !45)
    SW killed %1141, %0, 8084, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.582, !tbaa !45)
    %1142 = LW %0, 15736, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.584, !tbaa !45)
    SW killed %1142, %0, 8088, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.587, !tbaa !45)
    %1143 = LW %0, 15740, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.589, !tbaa !45)
    SW killed %1143, %0, 8092, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.592, !tbaa !45)
    %1144 = LW %0, 29940, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.594, !tbaa !45)
    SW killed %1144, %0, 24204, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.597, !tbaa !45)
    %1145 = LW %0, 29944, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.599, !tbaa !45)
    SW killed %1145, %0, 24208, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.602, !tbaa !45)
    %1146 = LW %0, 29948, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.604, !tbaa !45)
    SW killed %1146, %0, 24212, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.607, !tbaa !45)
    %1147 = ORi %zero, 64628
    %1148 = ADDu %0, killed %1147
    %1149 = ORi %zero, 56976
    %1150 = ADDu %0, killed %1149
    %1151 = LW killed %1076, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.608, !tbaa !46)
    SW killed %1151, killed %1074, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.610, !tbaa !46)
    %1152 = ORi %zero, 64624
    %1153 = ADDu %0, killed %1152
    %1154 = ORi %zero, 44380
    %1155 = ADDu %0, killed %1154
    %1156 = LW killed %1081, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.611, !tbaa !46)
    SW killed %1156, killed %1079, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.613, !tbaa !46)
    %1157 = ORi %zero, 52028
    %1158 = ADDu %0, killed %1157
    %1159 = ORi %zero, 44376
    %1160 = ADDu %0, killed %1159
    %1161 = LW killed %1086, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.614, !tbaa !46)
    SW killed %1161, killed %1084, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.616, !tbaa !46)
    %1162 = ORi %zero, 52024
    %1163 = ADDu %0, killed %1162
    %1164 = ORi %zero, 44372
    %1165 = ADDu %0, killed %1164
    %1168 = LW killed %1099, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.617, !tbaa !46)
    SW killed %1168, killed %1096, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.619, !tbaa !46)
    %1169 = LW killed %1094, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.620, !tbaa !46)
    %1170 = ADDiu %zero, 2
    %1171 = ADDiu %zero, 1
    SW killed %1169, killed %1091, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.622, !tbaa !46)
    %1172 = LW killed %1089, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.623, !tbaa !46)
    SW killed %1172, killed %1165, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.625, !tbaa !46)
    %1173 = LW killed %1163, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.626, !tbaa !46)
    SW killed %1173, killed %1160, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.628, !tbaa !46)
    %1174 = LW killed %1158, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.629, !tbaa !46)
    SW killed %1174, killed %1155, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.631, !tbaa !46)
    %1175 = LW killed %1153, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.633, !tbaa !45)
    SW killed %1175, killed %1150, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.636, !tbaa !45)
    %1176 = LW killed %1148, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.638, !tbaa !45)
    SW killed %1176, killed %1134, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.641, !tbaa !45)
    %1177 = LW killed %1131, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.643, !tbaa !45)
    SW killed %1177, killed %1129, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.646, !tbaa !45)
    %1178 = LW killed %1126, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.648, !tbaa !45)
    SW killed %1178, killed %1124, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.651, !tbaa !45)
    %1179 = LW killed %1121, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.652, !tbaa !46)
    SW killed %1179, killed %1119, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.654, !tbaa !46)
    %1180 = LW killed %1116, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.655, !tbaa !46)
    SW killed %1180, killed %1114, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.657, !tbaa !46)
    %1181 = LBu killed %1111, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.658, !tbaa !42)
    SB killed %1181, killed %1109, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.660, !tbaa !42)
    %1182 = LBu killed %1106, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.661, !tbaa !42)
    SB killed %1182, killed %1104, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.663, !tbaa !42)
    SW killed %1170, killed %1101, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.664, !tbaa !39)
    %1183 = LHu %1066, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 2 from %ir.665, align 4)
    %1184 = SLTiu %1183, 256
    %1185 = ANDi %1183, 255
    %1186 = SLTiu killed %1185, 1
    %1187 = MOVN_I_I killed %1171, killed %1184, %1186
    SB killed %1187, %927, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.sunkaddr165, align 4, !tbaa !41)
    B %bb.146, implicit-def dead %at
  
  bb.69 (%ir-block.671, freq 838859):
    successors: %bb.78(37), %bb.70..preheader42(62)
  
    %752 = ORi %zero, 65528
    %753 = ADDu %0, %752
    %754 = LBu %753, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.672, align 4, !tbaa !41)
    BEQ killed %754, %zero, %bb.78, implicit-def dead %at
    B %bb.70..preheader42, implicit-def dead %at
  
  bb.70..preheader42 (freq 524287):
    successors: %bb.71..lr.ph87(50), %bb.84..loopexit39(50)
  
    %755 = LUi 1
    %756 = ADDu %0, %755
    %757 = LW %756, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.675, !tbaa !39)
    %758 = SLTiu killed %757, 3
    BNE killed %758, %zero, %bb.84..loopexit39, implicit-def dead %at
    B %bb.71..lr.ph87, implicit-def dead %at
  
  bb.71..lr.ph87 (freq 262143):
    successors: %bb.72(100)
  
    %759 = ORi %zero, 65026
    %762 = ORi %zero, 65024
    %763 = ADDu %0, %762
    %768 = LUi 65535
    %770 = ORi %768, 511
    %771 = ORi %768, 512
    %783 = LW %122, target-flags(<unknown>) @render_clipped_polygon, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %784 = ADDiu %783, target-flags(<unknown>) @render_clipped_polygon
    %785 = ADDiu %zero, 3
    %786 = ADDiu %zero, 0
    %787 = LEA_ADDiu %stack.0.vlist, 0
    %789 = ORi %768, 513
    %772 = ORi %zero, 55764
    %773 = ADDu %113, %772
    %780 = LW %122, target-flags(<unknown>) @render_triangle, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %781 = ADDiu %780, target-flags(<unknown>) @render_triangle
    %775 = ORi %zero, 55804
    %776 = ADDu %113, %775
  
  bb.72 (%ir-block.678, freq 8388599):
    successors: %bb.76(37), %bb.73(62)
  
    %45 = PHI %759, %bb.71..lr.ph87, %48, %bb.77
    %760 = ADDu %0, %45
    %761 = LBu %760, -1, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.scevgep33, !tbaa !42)
    %764 = LBu %763, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.sunkaddr168, align 4, !tbaa !42)
    %765 = AND killed %761, killed %764
    %766 = LBu %760, 0, <0x3771480> = !{!"unison-memory-partition", i32 2} :: (load 1 from %ir.uglygep31, !tbaa !42)
    %767 = AND killed %765, killed %766
    %769 = ANDi killed %767, 255
    %47 = ADDu %45, %770
    %46 = ADDu %45, %771
    BEQ killed %769, %zero, %bb.76, implicit-def dead %at
    B %bb.73, implicit-def dead %at
  
  bb.73 (%ir-block.688, freq 5242874):
    successors: %bb.75(37), %bb.74(62)
  
    %774 = LBu %773, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.sunkaddr171, align 4, !tbaa !48)
    BEQ killed %774, %zero, %bb.75, implicit-def dead %at
    B %bb.74, implicit-def dead %at
  
  bb.74 (%ir-block.691, freq 3276796):
    successors: %bb.77(100)
  
    %777 = LW %776, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr174, !tbaa !49)
    ADJCALLSTACKDOWN 24, implicit-def dead %sp, implicit %sp
    %778 = COPY %sp
    SW %46, %778, 16, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into unknown)
    %a0 = COPY %113
    %a1 = COPY %786
    %a2 = COPY %47
    %a3 = COPY %46
    %t9 = COPY %777
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 24, 0, implicit-def dead %sp, implicit %sp
    B %bb.77, implicit-def dead %at
  
  bb.75 (%ir-block.693, freq 1966078):
    successors: %bb.77(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %a0 = COPY %113
    %a1 = COPY %786
    %a2 = COPY %47
    %a3 = COPY %46
    %t0 = COPY %46
    %t1 = COPY %786
    %t9 = COPY %781
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %t0, implicit %t1, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.77, implicit-def dead %at
  
  bb.76 (%ir-block.694, freq 3145724):
    successors: %bb.77(100)
  
    SW %zero, %stack.0.vlist, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.695, !tbaa !46)
    SW %47, %stack.0.vlist, 4, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr177, !tbaa !46)
    SW %46, %stack.0.vlist, 8, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr180, !tbaa !46)
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %a0 = COPY %113
    %a1 = COPY %785
    %a2 = COPY %787
    %a3 = COPY %786
    %t9 = COPY %784
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
  
  bb.77 (%ir-block.696, freq 8388599):
    successors: %bb.72(96), %bb.84..loopexit39(3)
  
    %790 = ADDu %45, %789
    %793 = LW %756, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr183, !tbaa !39)
    %794 = SLTu killed %790, killed %793
    %48 = ADDiu %45, 1
    BNE killed %794, %zero, %bb.72, implicit-def dead %at
    B %bb.84..loopexit39, implicit-def dead %at
  
  bb.78 (%ir-block.700, freq 314572):
    successors: %bb.81..preheader38(37), %bb.79..preheader40(62)
  
    %795 = LUi 1
    %796 = ADDu %0, killed %795
    %49 = LW killed %796, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.704, !tbaa !39)
    %797 = ORi %zero, 55764
    %798 = ADDu %113, killed %797
    %799 = LBu killed %798, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.701, align 4, !tbaa !48)
    BEQ killed %799, %zero, %bb.81..preheader38, implicit-def dead %at
    B %bb.79..preheader40, implicit-def dead %at
  
  bb.79..preheader40 (freq 196607):
    successors: %bb.80..lr.ph85(50), %bb.84..loopexit39(50)
  
    %800 = SLTiu %49, 3
    BNE killed %800, %zero, %bb.84..loopexit39, implicit-def dead %at
    B %bb.80..lr.ph85, implicit-def dead %at
  
  bb.80..lr.ph85 (freq 98303):
    successors: %bb.82(100)
  
    %801 = ADDiu %zero, 2
    %802 = ORi %zero, 55804
    %803 = ADDu %113, %802
    %807 = ADDiu %zero, 0
    %808 = LUi 1
    %809 = ADDu %0, %808
    B %bb.82, implicit-def dead %at
  
  bb.81..preheader38 (freq 117964):
    successors: %bb.152(50), %bb.84..loopexit39(50)
  
    %813 = SLTiu %49, 3
    BNE %813, %zero, %bb.84..loopexit39, implicit-def %at
  
  bb.152 (freq 58982):
    successors: %bb.83..lr.ph83(100)
  
    %812 = ADDiu %zero, 2
    %815 = LW %122, target-flags(<unknown>) @render_triangle, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %816 = ADDiu %815, target-flags(<unknown>) @render_triangle
    %817 = ADDiu %zero, 0
    %818 = LUi 1
    %819 = ADDu %0, %818
    B %bb.83..lr.ph83, implicit-def %at
  
  bb.82 (%ir-block.708, freq 3145724):
    successors: %bb.82(96), %bb.84..loopexit39(3)
  
    %50 = PHI %801, %bb.80..lr.ph85, %51, %bb.82
    %804 = LW %803, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr186, !tbaa !49)
    ADJCALLSTACKDOWN 24, implicit-def dead %sp, implicit %sp
    %805 = COPY %sp
    SW %50, %805, 16, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into unknown)
    %806 = ADDiu %50, -1
    %a0 = COPY %113
    %a1 = COPY %807
    %a2 = COPY %806
    %a3 = COPY %50
    %t9 = COPY %804
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 24, 0, implicit-def dead %sp, implicit %sp
    %810 = LW %809, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr189, !tbaa !39)
    %51 = ADDiu %50, 1
    %811 = SLTu %51, killed %810
    BNE killed %811, %zero, %bb.82, implicit-def dead %at
    B %bb.84..loopexit39, implicit-def dead %at
  
  bb.83..lr.ph83 (freq 1887434):
    successors: %bb.83..lr.ph83(96), %bb.84..loopexit39(3)
  
    %52 = PHI %812, %bb.152, %53, %bb.83..lr.ph83
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %814 = ADDiu %52, -1
    %a0 = COPY %113
    %a1 = COPY %817
    %a2 = COPY %814
    %a3 = COPY %52
    %t0 = COPY %52
    %t1 = COPY %817
    %t9 = COPY %816
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %t0, implicit %t1, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    %820 = LW %819, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr192, !tbaa !39)
    %53 = ADDiu %52, 1
    %821 = SLTu %53, killed %820
    BNE killed %821, %zero, %bb.83..lr.ph83, implicit-def dead %at
    B %bb.84..loopexit39, implicit-def dead %at
  
  bb.84..loopexit39 (freq 838859):
    successors: %bb.85(37), %bb.146(62)
  
    BNE %115, %zero, %bb.146, implicit-def dead %at
    B %bb.85, implicit-def dead %at
  
  bb.85 (%ir-block.719, freq 314572):
    successors: %bb.146(100)
  
    %822 = LW %0, 23792, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.721, !tbaa !45)
    SW killed %822, %0, 16144, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.724, !tbaa !45)
    %823 = LW %0, 23796, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.726, !tbaa !45)
    %824 = ORi %zero, 65025
    %825 = LUi 1
    %826 = ORi %zero, 36316
    %827 = ORi %zero, 52016
    %828 = ORi %zero, 44368
    %829 = ORi %zero, 54336
    %830 = ORi %zero, 52424
    %831 = ORi %zero, 56352
    %832 = ORi %zero, 54440
    %833 = ORi %zero, 56935
    %834 = ORi %zero, 56457
    %835 = ORi %zero, 65503
    %836 = ORi %zero, 65024
    %837 = ORi %zero, 43964
    %838 = ORi %zero, 52020
    %839 = ORi %zero, 43960
    %840 = ORi %zero, 36312
    %841 = ORi %zero, 43956
    %842 = ORi %zero, 36308
    %843 = ORi %zero, 43952
    %844 = ORi %zero, 36304
    %845 = ORi %zero, 56980
    %846 = ORi %zero, 64632
    %847 = ORi %zero, 56984
    %848 = ORi %zero, 64636
    %849 = ORi %zero, 56988
    SW killed %823, %0, 16148, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.729, !tbaa !45)
    %850 = ADDu %0, killed %844
    %851 = ADDu %0, killed %843
    %852 = ADDu %0, killed %842
    %853 = ADDu %0, killed %841
    %854 = ADDu %0, killed %840
    %855 = ADDu %0, killed %839
    %856 = ADDu %0, killed %838
    %857 = ADDu %0, killed %828
    %858 = ADDu %0, killed %827
    %859 = ADDu %0, killed %826
    %860 = ADDu %0, killed %837
    %861 = ADDu %0, killed %836
    %862 = ADDu %0, killed %825
    %863 = ADDu %0, killed %824
    %864 = ADDu %0, killed %835
    %865 = ADDu %0, killed %834
    %866 = ADDu %0, killed %833
    %867 = ADDu %0, killed %832
    %868 = ADDu %0, killed %831
    %869 = ADDu %0, killed %830
    %870 = ADDu %0, killed %829
    %871 = ADDu %0, killed %849
    %872 = ADDu %0, killed %848
    %873 = ADDu %0, killed %847
    %874 = ADDu %0, killed %846
    %875 = ADDu %0, killed %845
    %876 = LW %0, 23800, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.731, !tbaa !45)
    SW killed %876, %0, 16152, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.734, !tbaa !45)
    %877 = LW %0, 23804, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.736, !tbaa !45)
    SW killed %877, %0, 16156, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.739, !tbaa !45)
    %878 = LW %0, 15728, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.741, !tbaa !45)
    SW killed %878, %0, 8080, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.744, !tbaa !45)
    %879 = LW %0, 15732, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.746, !tbaa !45)
    SW killed %879, %0, 8084, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.749, !tbaa !45)
    %880 = LW %0, 15736, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.751, !tbaa !45)
    SW killed %880, %0, 8088, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.754, !tbaa !45)
    %881 = LW %0, 15740, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.756, !tbaa !45)
    SW killed %881, %0, 8092, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.759, !tbaa !45)
    %882 = LW %0, 29940, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.761, !tbaa !45)
    SW killed %882, %0, 24204, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.764, !tbaa !45)
    %883 = LW %0, 29944, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.766, !tbaa !45)
    SW killed %883, %0, 24208, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.769, !tbaa !45)
    %884 = LW %0, 29948, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.771, !tbaa !45)
    SW killed %884, %0, 24212, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.774, !tbaa !45)
    %885 = ORi %zero, 64628
    %886 = ADDu %0, killed %885
    %887 = ORi %zero, 56976
    %888 = ADDu %0, killed %887
    %889 = LW killed %851, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.775, !tbaa !46)
    SW killed %889, killed %850, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.777, !tbaa !46)
    %890 = ORi %zero, 64624
    %891 = ADDu %0, killed %890
    %892 = ORi %zero, 44380
    %893 = ADDu %0, killed %892
    %894 = LW killed %853, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.778, !tbaa !46)
    SW killed %894, killed %852, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.780, !tbaa !46)
    %895 = ORi %zero, 52028
    %896 = ADDu %0, killed %895
    %897 = ORi %zero, 44376
    %898 = ADDu %0, killed %897
    %899 = LW killed %855, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.781, !tbaa !46)
    SW killed %899, killed %854, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.783, !tbaa !46)
    %900 = ORi %zero, 52024
    %901 = ADDu %0, killed %900
    %902 = ORi %zero, 44372
    %903 = ADDu %0, killed %902
    %906 = LW killed %860, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.784, !tbaa !46)
    SW killed %906, killed %859, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.786, !tbaa !46)
    %907 = LW killed %858, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.787, !tbaa !46)
    %908 = ADDiu %zero, 2
    %909 = ADDiu %zero, 1
    SW killed %907, killed %857, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.789, !tbaa !46)
    %910 = LW killed %856, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.790, !tbaa !46)
    SW killed %910, killed %903, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.792, !tbaa !46)
    %911 = LW killed %901, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.793, !tbaa !46)
    SW killed %911, killed %898, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.795, !tbaa !46)
    %912 = LW killed %896, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.796, !tbaa !46)
    SW killed %912, killed %893, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.798, !tbaa !46)
    %913 = LW killed %891, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.800, !tbaa !45)
    SW killed %913, killed %888, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.803, !tbaa !45)
    %914 = LW killed %886, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.805, !tbaa !45)
    SW killed %914, killed %875, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.808, !tbaa !45)
    %915 = LW killed %874, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.810, !tbaa !45)
    SW killed %915, killed %873, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.813, !tbaa !45)
    %916 = LW killed %872, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.815, !tbaa !45)
    SW killed %916, killed %871, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.818, !tbaa !45)
    %917 = LW killed %870, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.819, !tbaa !46)
    SW killed %917, killed %869, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.821, !tbaa !46)
    %918 = LW killed %868, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.822, !tbaa !46)
    SW killed %918, killed %867, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.824, !tbaa !46)
    %919 = LBu killed %866, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.825, !tbaa !42)
    SB killed %919, killed %865, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.827, !tbaa !42)
    %920 = LBu killed %864, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.828, !tbaa !42)
    SB killed %920, killed %863, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.830, !tbaa !42)
    SW killed %908, killed %862, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.831, !tbaa !39)
    %921 = LHu killed %861, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 2 from %ir.833, align 4)
    %922 = SLTiu %921, 256
    %923 = ANDi %921, 255
    %924 = SLTiu killed %923, 1
    %925 = MOVN_I_I killed %909, killed %922, %924
    SB killed %925, %753, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.sunkaddr195, align 4, !tbaa !41)
    B %bb.146, implicit-def dead %at
  
  bb.86 (%ir-block.839, freq 838860):
    successors: %bb.95(37), %bb.87..preheader48(62)
  
    %678 = ORi %zero, 65528
    %679 = ADDu %0, %678
    %680 = LBu %679, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.840, align 4, !tbaa !41)
    BEQ killed %680, %zero, %bb.95, implicit-def dead %at
    B %bb.87..preheader48, implicit-def dead %at
  
  bb.87..preheader48 (freq 524287):
    successors: %bb.88..lr.ph93(50), %bb.101..loopexit45(50)
  
    %681 = LUi 1
    %54 = ADDu %0, killed %681
    %682 = LW %54, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.843, !tbaa !39)
    %683 = SLTiu killed %682, 4
    BNE killed %683, %zero, %bb.101..loopexit45, implicit-def dead %at
    B %bb.88..lr.ph93, implicit-def dead %at
  
  bb.88..lr.ph93 (freq 262143):
    successors: %bb.89(100)
  
    %684 = ADDiu %zero, 0
    %686 = ORi %zero, 65024
    %689 = ORi %zero, 65025
    %693 = ORi %zero, 65026
    %697 = ORi %zero, 65027
    %714 = LW %122, target-flags(<unknown>) @render_clipped_polygon, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %715 = ADDiu %714, target-flags(<unknown>) @render_clipped_polygon
    %716 = ADDiu %zero, 4
    %718 = LEA_ADDiu %stack.0.vlist, 0
    %702 = ORi %zero, 55764
    %703 = ADDu %113, %702
    %711 = LW %122, target-flags(<unknown>) @render_quad, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %712 = ADDiu %711, target-flags(<unknown>) @render_quad
    %705 = ORi %zero, 55804
    %706 = ADDu %113, %705
  
  bb.89 (%ir-block.846, freq 8388600):
    successors: %bb.93(37), %bb.90(62)
  
    %55 = PHI %684, %bb.88..lr.ph93, %59, %bb.94
    %685 = ADDu %0, %55
    %687 = ADDu %685, %686
    %688 = LBu killed %687, 0, <0x35f5e80> = !{!"unison-memory-partition", i32 3} :: (load 1 from %ir.scevgep43, !tbaa !42)
    %690 = ADDu %685, %689
    %691 = LBu killed %690, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.scevgep41, !tbaa !42)
    %692 = AND killed %691, killed %688
    %694 = ADDu %685, %693
    %695 = LBu killed %694, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.scevgep39, !tbaa !42)
    %696 = AND killed %692, killed %695
    %698 = ADDu %685, %697
    %699 = LBu killed %698, 0, <0x3771480> = !{!"unison-memory-partition", i32 2} :: (load 1 from %ir.scevgep37, !tbaa !42)
    %58 = ADDiu %55, 2
    %57 = ADDiu %55, 1
    %56 = ADDiu %55, 3
    %700 = AND killed %696, killed %699
    %701 = ANDi killed %700, 255
    BEQ killed %701, %zero, %bb.93, implicit-def dead %at
    B %bb.90, implicit-def dead %at
  
  bb.90 (%ir-block.859, freq 5242875):
    successors: %bb.92(37), %bb.91(62)
  
    %704 = LBu %703, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.sunkaddr198, align 4, !tbaa !48)
    BEQ killed %704, %zero, %bb.92, implicit-def dead %at
    B %bb.91, implicit-def dead %at
  
  bb.91 (%ir-block.862, freq 3276796):
    successors: %bb.94(100)
  
    %707 = LW %706, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr201, !tbaa !49)
    ADJCALLSTACKDOWN 24, implicit-def dead %sp, implicit %sp
    %708 = COPY %sp
    SW %56, %708, 16, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into unknown)
    %a0 = COPY %113
    %a1 = COPY %55
    %a2 = COPY %57
    %a3 = COPY %56
    %t9 = COPY %707
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 24, 0, implicit-def dead %sp, implicit %sp
    %709 = LW %706, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr201, !tbaa !49)
    ADJCALLSTACKDOWN 24, implicit-def dead %sp, implicit %sp
    %710 = COPY %sp
    SW %56, %710, 16, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into unknown)
    %a0 = COPY %113
    %a1 = COPY %57
    %a2 = COPY %58
    %a3 = COPY %56
    %t9 = COPY %709
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 24, 0, implicit-def dead %sp, implicit %sp
    B %bb.94, implicit-def dead %at
  
  bb.92 (%ir-block.865, freq 1966078):
    successors: %bb.94(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %a0 = COPY %113
    %a1 = COPY %55
    %a2 = COPY %57
    %a3 = COPY %58
    %t0 = COPY %56
    %t1 = COPY %56
    %t2 = COPY %684
    %t9 = COPY %712
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %t0, implicit %t1, implicit %t2, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.94, implicit-def dead %at
  
  bb.93 (%ir-block.866, freq 3145725):
    successors: %bb.94(100)
  
    SW %55, %stack.0.vlist, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.867, !tbaa !46)
    SW %57, %stack.0.vlist, 4, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr204, !tbaa !46)
    SW %58, %stack.0.vlist, 8, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr207, !tbaa !46)
    SW %56, %stack.0.vlist, 12, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr210, !tbaa !46)
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %a0 = COPY %113
    %a1 = COPY %716
    %a2 = COPY %718
    %a3 = COPY %684
    %t9 = COPY %715
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
  
  bb.94 (%ir-block.868, freq 8388600):
    successors: %bb.89(96), %bb.101..loopexit45(3)
  
    %719 = LW %54, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.843, !tbaa !39)
    %720 = ADDiu %55, 7
    %721 = SLTu killed %720, killed %719
    %59 = ADDiu %55, 4
    BNE killed %721, %zero, %bb.89, implicit-def dead %at
    B %bb.101..loopexit45, implicit-def dead %at
  
  bb.95 (%ir-block.872, freq 314572):
    successors: %bb.98..preheader44(37), %bb.96..preheader46(62)
  
    %722 = LUi 1
    %60 = ADDu %0, killed %722
    %61 = LW %60, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.876, !tbaa !39)
    %723 = ORi %zero, 55764
    %724 = ADDu %113, killed %723
    %725 = LBu killed %724, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.873, align 4, !tbaa !48)
    BEQ killed %725, %zero, %bb.98..preheader44, implicit-def dead %at
    B %bb.96..preheader46, implicit-def dead %at
  
  bb.96..preheader46 (freq 196607):
    successors: %bb.97..lr.ph91(50), %bb.101..loopexit45(50)
  
    %726 = SLTiu %61, 4
    BNE killed %726, %zero, %bb.101..loopexit45, implicit-def dead %at
    B %bb.97..lr.ph91, implicit-def dead %at
  
  bb.97..lr.ph91 (freq 98303):
    successors: %bb.99(100)
  
    %727 = ADDiu %zero, 3
    %728 = ORi %zero, 55804
    %729 = ADDu %113, %728
    B %bb.99, implicit-def dead %at
  
  bb.98..preheader44 (freq 117964):
    successors: %bb.151(50), %bb.101..loopexit45(50)
  
    %740 = SLTiu %61, 4
    BNE %740, %zero, %bb.101..loopexit45, implicit-def %at
  
  bb.151 (freq 58982):
    successors: %bb.100..lr.ph89(100)
  
    %739 = ADDiu %zero, 3
    %744 = LW %122, target-flags(<unknown>) @render_quad, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %745 = ADDiu %744, target-flags(<unknown>) @render_quad
    %746 = ADDiu %zero, 0
    B %bb.100..lr.ph89, implicit-def %at
  
  bb.99 (%ir-block.880, freq 3145725):
    successors: %bb.99(96), %bb.101..loopexit45(3)
  
    %62 = PHI %727, %bb.97..lr.ph91, %63, %bb.99
    %730 = LW %729, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr213, !tbaa !49)
    ADJCALLSTACKDOWN 24, implicit-def dead %sp, implicit %sp
    %731 = COPY %sp
    SW %62, %731, 16, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into unknown)
    %732 = ADDiu %62, -3
    %733 = ADDiu %62, -2
    %a0 = COPY %113
    %a1 = COPY %732
    %a2 = COPY %733
    %a3 = COPY %62
    %t9 = COPY %730
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 24, 0, implicit-def dead %sp, implicit %sp
    %734 = LW %729, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr213, !tbaa !49)
    %735 = ADDiu %62, -1
    ADJCALLSTACKDOWN 24, implicit-def dead %sp, implicit %sp
    %736 = COPY %sp
    SW %62, %736, 16, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into unknown)
    %a0 = COPY %113
    %a1 = COPY %733
    %a2 = COPY %735
    %a3 = COPY %62
    %t9 = COPY %734
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 24, 0, implicit-def dead %sp, implicit %sp
    %63 = ADDiu %62, 4
    %737 = LW %60, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.876, !tbaa !39)
    %738 = SLTu %63, killed %737
    BNE killed %738, %zero, %bb.99, implicit-def dead %at
    B %bb.101..loopexit45, implicit-def dead %at
  
  bb.100..lr.ph89 (freq 1887435):
    successors: %bb.100..lr.ph89(96), %bb.101..loopexit45(3)
  
    %64 = PHI %739, %bb.151, %65, %bb.100..lr.ph89
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %741 = ADDiu %64, -3
    %742 = ADDiu %64, -2
    %743 = ADDiu %64, -1
    %a0 = COPY %113
    %a1 = COPY %741
    %a2 = COPY %742
    %a3 = COPY %743
    %t0 = COPY %64
    %t1 = COPY %64
    %t2 = COPY %746
    %t9 = COPY %745
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %t0, implicit %t1, implicit %t2, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    %747 = LW %60, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.876, !tbaa !39)
    %65 = ADDiu %64, 4
    %748 = SLTu %65, killed %747
    BNE killed %748, %zero, %bb.100..lr.ph89, implicit-def dead %at
    B %bb.101..loopexit45, implicit-def dead %at
  
  bb.101..loopexit45 (freq 838860):
    successors: %bb.146(100)
  
    %66 = PHI %54, %bb.87..preheader48, %54, %bb.94, %60, %bb.96..preheader46, %60, %bb.99, %60, %bb.98..preheader44, %60, %bb.100..lr.ph89
    SW %zero, %66, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir..pre-phi119, !tbaa !39)
    SB %zero, %679, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.sunkaddr216, align 4, !tbaa !41)
    B %bb.146, implicit-def dead %at
  
  bb.102 (%ir-block.895, freq 838859):
    successors: %bb.111(37), %bb.103..preheader54(62)
  
    %406 = ORi %zero, 65528
    %407 = ADDu %0, %406
    %408 = LBu %407, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.896, align 4, !tbaa !41)
    BEQ killed %408, %zero, %bb.111, implicit-def dead %at
    B %bb.103..preheader54, implicit-def dead %at
  
  bb.103..preheader54 (freq 524287):
    successors: %bb.104..lr.ph99(50), %bb.117..loopexit51(50)
  
    %409 = LUi 1
    %410 = ADDu %0, %409
    %411 = LW %410, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.899, !tbaa !39)
    %412 = SLTiu killed %411, 4
    BNE killed %412, %zero, %bb.117..loopexit51, implicit-def dead %at
    B %bb.104..lr.ph99, implicit-def dead %at
  
  bb.104..lr.ph99 (freq 262143):
    successors: %bb.105(100)
  
    %413 = ADDiu %zero, 0
    %415 = ORi %zero, 65025
    %418 = ORi %zero, 65024
    %422 = ORi %zero, 65026
    %426 = ORi %zero, 65027
    %443 = LW %122, target-flags(<unknown>) @render_clipped_polygon, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %444 = ADDiu %443, target-flags(<unknown>) @render_clipped_polygon
    %445 = ADDiu %zero, 4
    %446 = ADDiu %zero, 1
    %447 = LEA_ADDiu %stack.0.vlist, 0
    %431 = ORi %zero, 55764
    %432 = ADDu %113, %431
    %440 = LW %122, target-flags(<unknown>) @render_quad, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %441 = ADDiu %440, target-flags(<unknown>) @render_quad
    %434 = ORi %zero, 55804
    %435 = ADDu %113, %434
  
  bb.105 (%ir-block.902, freq 8388599):
    successors: %bb.109(37), %bb.106(62)
  
    %67 = PHI %413, %bb.104..lr.ph99, %71, %bb.110
    %414 = ADDu %0, %67
    %416 = ADDu %414, %415
    %417 = LBu killed %416, 0, <0x3771480> = !{!"unison-memory-partition", i32 2} :: (load 1 from %ir.scevgep53, !tbaa !42)
    %419 = ADDu %414, %418
    %420 = LBu killed %419, 0, <0x35f5e80> = !{!"unison-memory-partition", i32 3} :: (load 1 from %ir.scevgep51, !tbaa !42)
    %421 = AND killed %420, killed %417
    %423 = ADDu %414, %422
    %424 = LBu killed %423, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.scevgep49, !tbaa !42)
    %425 = AND killed %421, killed %424
    %427 = ADDu %414, %426
    %428 = LBu killed %427, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.scevgep47, !tbaa !42)
    %70 = ADDiu %67, 2
    %69 = ADDiu %67, 1
    %68 = ADDiu %67, 3
    %429 = AND killed %425, killed %428
    %430 = ANDi killed %429, 255
    BEQ killed %430, %zero, %bb.109, implicit-def dead %at
    B %bb.106, implicit-def dead %at
  
  bb.106 (%ir-block.915, freq 5242874):
    successors: %bb.108(37), %bb.107(62)
  
    %433 = LBu %432, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.sunkaddr219, align 4, !tbaa !48)
    BEQ killed %433, %zero, %bb.108, implicit-def dead %at
    B %bb.107, implicit-def dead %at
  
  bb.107 (%ir-block.918, freq 3276796):
    successors: %bb.110(100)
  
    %436 = LW %435, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr222, !tbaa !49)
    ADJCALLSTACKDOWN 24, implicit-def dead %sp, implicit %sp
    %437 = COPY %sp
    SW %68, %437, 16, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into unknown)
    %a0 = COPY %113
    %a1 = COPY %69
    %a2 = COPY %67
    %a3 = COPY %68
    %t9 = COPY %436
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 24, 0, implicit-def dead %sp, implicit %sp
    %438 = LW %435, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr222, !tbaa !49)
    ADJCALLSTACKDOWN 24, implicit-def dead %sp, implicit %sp
    %439 = COPY %sp
    SW %68, %439, 16, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into unknown)
    %a0 = COPY %113
    %a1 = COPY %67
    %a2 = COPY %70
    %a3 = COPY %68
    %t9 = COPY %438
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 24, 0, implicit-def dead %sp, implicit %sp
    B %bb.110, implicit-def dead %at
  
  bb.108 (%ir-block.921, freq 1966078):
    successors: %bb.110(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %a0 = COPY %113
    %a1 = COPY %69
    %a2 = COPY %67
    %a3 = COPY %70
    %t0 = COPY %68
    %t1 = COPY %68
    %t2 = COPY %446
    %t9 = COPY %441
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %t0, implicit %t1, implicit %t2, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.110, implicit-def dead %at
  
  bb.109 (%ir-block.922, freq 3145724):
    successors: %bb.110(100)
  
    SW %69, %stack.0.vlist, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.923, !tbaa !46)
    SW %67, %stack.0.vlist, 4, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr225, !tbaa !46)
    SW %70, %stack.0.vlist, 8, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr228, !tbaa !46)
    SW %68, %stack.0.vlist, 12, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr231, !tbaa !46)
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %a0 = COPY %113
    %a1 = COPY %445
    %a2 = COPY %447
    %a3 = COPY %446
    %t9 = COPY %444
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
  
  bb.110 (%ir-block.924, freq 8388599):
    successors: %bb.105(96), %bb.117..loopexit51(3)
  
    %450 = LW %410, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr234, !tbaa !39)
    %451 = ADDiu %67, 5
    %452 = SLTu killed %451, killed %450
    %71 = ADDiu %67, 2
    BNE killed %452, %zero, %bb.105, implicit-def dead %at
    B %bb.117..loopexit51, implicit-def dead %at
  
  bb.111 (%ir-block.928, freq 314572):
    successors: %bb.114..preheader50(37), %bb.112..preheader52(62)
  
    %453 = LUi 1
    %454 = ADDu %0, killed %453
    %72 = LW killed %454, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.932, !tbaa !39)
    %455 = ORi %zero, 55764
    %456 = ADDu %113, killed %455
    %457 = LBu killed %456, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.929, align 4, !tbaa !48)
    BEQ killed %457, %zero, %bb.114..preheader50, implicit-def dead %at
    B %bb.112..preheader52, implicit-def dead %at
  
  bb.112..preheader52 (freq 196607):
    successors: %bb.113..lr.ph97(50), %bb.117..loopexit51(50)
  
    %458 = SLTiu %72, 4
    BNE killed %458, %zero, %bb.117..loopexit51, implicit-def dead %at
    B %bb.113..lr.ph97, implicit-def dead %at
  
  bb.113..lr.ph97 (freq 98303):
    successors: %bb.115(100)
  
    %459 = ADDiu %zero, 3
    %460 = ORi %zero, 55804
    %461 = ADDu %113, %460
    %469 = LUi 1
    %470 = ADDu %0, %469
    B %bb.115, implicit-def dead %at
  
  bb.114..preheader50 (freq 117964):
    successors: %bb.150(50), %bb.117..loopexit51(50)
  
    %474 = SLTiu %72, 4
    BNE %474, %zero, %bb.117..loopexit51, implicit-def %at
  
  bb.150 (freq 58982):
    successors: %bb.116..lr.ph95(100)
  
    %473 = ADDiu %zero, 3
    %478 = LW %122, target-flags(<unknown>) @render_quad, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %479 = ADDiu %478, target-flags(<unknown>) @render_quad
    %480 = ADDiu %zero, 1
    %481 = LUi 1
    %482 = ADDu %0, %481
    B %bb.116..lr.ph95, implicit-def %at
  
  bb.115 (%ir-block.936, freq 3145724):
    successors: %bb.115(96), %bb.117..loopexit51(3)
  
    %73 = PHI %459, %bb.113..lr.ph97, %74, %bb.115
    %462 = LW %461, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr237, !tbaa !49)
    ADJCALLSTACKDOWN 24, implicit-def dead %sp, implicit %sp
    %463 = COPY %sp
    SW %73, %463, 16, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into unknown)
    %464 = ADDiu %73, -2
    %465 = ADDiu %73, -3
    %a0 = COPY %113
    %a1 = COPY %464
    %a2 = COPY %465
    %a3 = COPY %73
    %t9 = COPY %462
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 24, 0, implicit-def dead %sp, implicit %sp
    %466 = LW %461, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr237, !tbaa !49)
    %467 = ADDiu %73, -1
    ADJCALLSTACKDOWN 24, implicit-def dead %sp, implicit %sp
    %468 = COPY %sp
    SW %73, %468, 16, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into unknown)
    %a0 = COPY %113
    %a1 = COPY %465
    %a2 = COPY %467
    %a3 = COPY %73
    %t9 = COPY %466
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 24, 0, implicit-def dead %sp, implicit %sp
    %74 = ADDiu %73, 2
    %471 = LW %470, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr240, !tbaa !39)
    %472 = SLTu %74, killed %471
    BNE killed %472, %zero, %bb.115, implicit-def dead %at
    B %bb.117..loopexit51, implicit-def dead %at
  
  bb.116..lr.ph95 (freq 1887434):
    successors: %bb.116..lr.ph95(96), %bb.117..loopexit51(3)
  
    %75 = PHI %473, %bb.150, %76, %bb.116..lr.ph95
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %475 = ADDiu %75, -2
    %476 = ADDiu %75, -3
    %477 = ADDiu %75, -1
    %a0 = COPY %113
    %a1 = COPY %475
    %a2 = COPY %476
    %a3 = COPY %477
    %t0 = COPY %75
    %t1 = COPY %75
    %t2 = COPY %480
    %t9 = COPY %479
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %t0, implicit %t1, implicit %t2, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    %483 = LW %482, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr243, !tbaa !39)
    %76 = ADDiu %75, 2
    %484 = SLTu %76, killed %483
    BNE killed %484, %zero, %bb.116..lr.ph95, implicit-def dead %at
    B %bb.117..loopexit51, implicit-def dead %at
  
  bb.117..loopexit51 (freq 838859):
    successors: %bb.118(37), %bb.146(62)
  
    BNE %115, %zero, %bb.146, implicit-def dead %at
    B %bb.118, implicit-def dead %at
  
  bb.118 (%ir-block.952, freq 314572):
    successors: %bb.146(100)
  
    %485 = LW %0, 23776, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.954, !tbaa !45)
    SW killed %485, %0, 16128, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.957, !tbaa !45)
    %486 = LW %0, 23780, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.959, !tbaa !45)
    %487 = ORi %zero, 44364
    %488 = ORi %zero, 44360
    %489 = ORi %zero, 44356
    %490 = ORi %zero, 52008
    %491 = ORi %zero, 52000
    %492 = ORi %zero, 44352
    %493 = ORi %zero, 43948
    %494 = ORi %zero, 36300
    %495 = ORi %zero, 36292
    %496 = ORi %zero, 43944
    %497 = ORi %zero, 36296
    %498 = ORi %zero, 36288
    %499 = ORi %zero, 43940
    %500 = ORi %zero, 43936
    %501 = ORi %zero, 54332
    %502 = ORi %zero, 56968
    %503 = ORi %zero, 64620
    %504 = ORi %zero, 56964
    %505 = ORi %zero, 64608
    %506 = ORi %zero, 56960
    %507 = ORi %zero, 64612
    %508 = ORi %zero, 52012
    %509 = ORi %zero, 52004
    %510 = ORi %zero, 56348
    %511 = ORi %zero, 56972
    %512 = ORi %zero, 64616
    SW killed %486, %0, 16132, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.962, !tbaa !45)
    %513 = ADDu %0, killed %500
    %514 = ADDu %0, killed %499
    %515 = ADDu %0, killed %498
    %516 = ADDu %0, killed %497
    %517 = ADDu %0, killed %496
    %518 = ADDu %0, killed %495
    %519 = ADDu %0, killed %494
    %520 = ADDu %0, killed %493
    %521 = ADDu %0, killed %492
    %522 = ADDu %0, killed %491
    %523 = ADDu %0, killed %490
    %524 = ADDu %0, killed %489
    %525 = ADDu %0, killed %509
    %526 = ADDu %0, killed %508
    %527 = ADDu %0, killed %488
    %528 = ADDu %0, killed %487
    %529 = ADDu %0, killed %507
    %530 = ADDu %0, killed %506
    %531 = ADDu %0, killed %505
    %532 = ADDu %0, killed %512
    %533 = ADDu %0, killed %504
    %534 = ADDu %0, killed %503
    %535 = ADDu %0, killed %502
    %536 = ADDu %0, killed %501
    %537 = ADDu %0, killed %511
    %538 = ADDu %0, killed %510
    %539 = LW %0, 23784, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.964, !tbaa !45)
    SW killed %539, %0, 16136, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.967, !tbaa !45)
    %540 = LW %0, 23788, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.969, !tbaa !45)
    SW killed %540, %0, 16140, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.972, !tbaa !45)
    %541 = LW %0, 15712, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.974, !tbaa !45)
    SW killed %541, %0, 8064, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.977, !tbaa !45)
    %542 = LW %0, 15716, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.979, !tbaa !45)
    SW killed %542, %0, 8068, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.982, !tbaa !45)
    %543 = LW %0, 15720, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.984, !tbaa !45)
    SW killed %543, %0, 8072, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.987, !tbaa !45)
    %544 = LW %0, 15724, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.989, !tbaa !45)
    SW killed %544, %0, 8076, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.992, !tbaa !45)
    %545 = LW %0, 29928, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.994, !tbaa !45)
    SW killed %545, %0, 24192, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.997, !tbaa !45)
    %546 = LW %0, 29932, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.999, !tbaa !45)
    SW killed %546, %0, 24196, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1002, !tbaa !45)
    %547 = LW %0, 29936, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1004, !tbaa !45)
    SW killed %547, %0, 24200, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1007, !tbaa !45)
    %548 = ORi %zero, 52420
    %549 = ADDu %0, killed %548
    %550 = ORi %zero, 56934
    %551 = ADDu %0, killed %550
    %552 = LW killed %513, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1008, !tbaa !46)
    SW killed %552, killed %515, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1010, !tbaa !46)
    %553 = ORi %zero, 54436
    %554 = ADDu %0, killed %553
    %555 = ORi %zero, 65024
    %556 = ADDu %0, killed %555
    %557 = LW killed %514, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1011, !tbaa !46)
    SW killed %557, killed %518, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1013, !tbaa !46)
    %558 = ORi %zero, 65502
    %559 = ADDu %0, killed %558
    %560 = ORi %zero, 56456
    %561 = ADDu %0, killed %560
    %562 = LW killed %517, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1014, !tbaa !46)
    SW killed %562, killed %516, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1016, !tbaa !46)
    %563 = ORi %zero, 36304
    %564 = ADDu %0, killed %563
    %565 = ORi %zero, 43952
    %566 = ADDu %0, killed %565
    %567 = LW killed %520, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1017, !tbaa !46)
    SW killed %567, killed %519, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1019, !tbaa !46)
    %568 = ORi %zero, 36308
    %569 = ADDu %0, killed %568
    %570 = ORi %zero, 43956
    %571 = ADDu %0, killed %570
    %572 = LW killed %522, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1020, !tbaa !46)
    SW killed %572, killed %521, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1022, !tbaa !46)
    %573 = ORi %zero, 36312
    %574 = ADDu %0, killed %573
    %575 = ORi %zero, 43960
    %576 = ADDu %0, killed %575
    %577 = LW killed %525, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1023, !tbaa !46)
    SW killed %577, killed %524, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1025, !tbaa !46)
    %578 = ORi %zero, 52020
    %579 = ADDu %0, killed %578
    %580 = ORi %zero, 44368
    %581 = ADDu %0, killed %580
    %582 = LW killed %523, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1026, !tbaa !46)
    SW killed %582, killed %527, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1028, !tbaa !46)
    %583 = ORi %zero, 52016
    %584 = ADDu %0, killed %583
    %585 = ORi %zero, 36316
    %586 = ADDu %0, killed %585
    %587 = LW killed %526, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1029, !tbaa !46)
    SW killed %587, killed %528, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1031, !tbaa !46)
    %588 = ORi %zero, 43964
    %589 = ADDu %0, killed %588
    %590 = LUi 1
    %591 = ADDu %0, killed %590
    %592 = LW killed %531, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1033, !tbaa !45)
    SW killed %592, killed %530, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1036, !tbaa !45)
    %593 = ORi %zero, 65025
    %594 = ADDu %0, killed %593
    %595 = ORi %zero, 65503
    %596 = ADDu %0, killed %595
    %597 = LW killed %529, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1038, !tbaa !45)
    SW killed %597, killed %533, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1041, !tbaa !45)
    %598 = ORi %zero, 56457
    %599 = ADDu %0, killed %598
    %600 = ORi %zero, 56935
    %601 = ADDu %0, killed %600
    %602 = LW killed %532, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1043, !tbaa !45)
    SW killed %602, killed %535, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1046, !tbaa !45)
    %603 = ORi %zero, 54440
    %604 = ADDu %0, killed %603
    %605 = ORi %zero, 56352
    %606 = ADDu %0, killed %605
    %607 = LW killed %534, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1048, !tbaa !45)
    SW killed %607, killed %537, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1051, !tbaa !45)
    %608 = ORi %zero, 52424
    %609 = ADDu %0, killed %608
    %610 = ORi %zero, 54336
    %611 = ADDu %0, killed %610
    %612 = LW killed %536, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1052, !tbaa !46)
    SW killed %612, killed %549, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1054, !tbaa !46)
    %613 = ORi %zero, 56988
    %614 = ADDu %0, killed %613
    %615 = ORi %zero, 64636
    %616 = ADDu %0, killed %615
    %617 = LW killed %538, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1055, !tbaa !46)
    SW killed %617, killed %554, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1057, !tbaa !46)
    %618 = ORi %zero, 56984
    %619 = ADDu %0, killed %618
    %620 = ORi %zero, 64632
    %621 = ADDu %0, killed %620
    %622 = LBu killed %551, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.1058, !tbaa !42)
    SB killed %622, killed %561, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.1060, !tbaa !42)
    %623 = ORi %zero, 56980
    %624 = ADDu %0, killed %623
    %625 = LBu killed %559, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.1061, !tbaa !42)
    SB killed %625, %556, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.1063, !tbaa !42)
    %626 = LW %0, 23792, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1065, !tbaa !45)
    SW killed %626, %0, 16144, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1068, !tbaa !45)
    %627 = LW %0, 23796, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1070, !tbaa !45)
    SW killed %627, %0, 16148, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1073, !tbaa !45)
    %628 = LW %0, 23800, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1075, !tbaa !45)
    SW killed %628, %0, 16152, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1078, !tbaa !45)
    %629 = LW %0, 23804, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1080, !tbaa !45)
    SW killed %629, %0, 16156, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1083, !tbaa !45)
    %630 = LW %0, 15728, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1085, !tbaa !45)
    SW killed %630, %0, 8080, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1088, !tbaa !45)
    %631 = LW %0, 15732, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1090, !tbaa !45)
    SW killed %631, %0, 8084, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1093, !tbaa !45)
    %632 = LW %0, 15736, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1095, !tbaa !45)
    SW killed %632, %0, 8088, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1098, !tbaa !45)
    %633 = LW %0, 15740, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1100, !tbaa !45)
    SW killed %633, %0, 8092, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1103, !tbaa !45)
    %634 = LW %0, 29940, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1105, !tbaa !45)
    SW killed %634, %0, 24204, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1108, !tbaa !45)
    %635 = LW %0, 29944, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1110, !tbaa !45)
    SW killed %635, %0, 24208, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1113, !tbaa !45)
    %636 = LW %0, 29948, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1115, !tbaa !45)
    SW killed %636, %0, 24212, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1118, !tbaa !45)
    %637 = ORi %zero, 64628
    %638 = ADDu %0, killed %637
    %639 = ORi %zero, 56976
    %640 = ADDu %0, killed %639
    %641 = LW killed %566, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1119, !tbaa !46)
    SW killed %641, killed %564, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1121, !tbaa !46)
    %642 = ORi %zero, 64624
    %643 = ADDu %0, killed %642
    %644 = ORi %zero, 44380
    %645 = ADDu %0, killed %644
    %646 = LW killed %571, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1122, !tbaa !46)
    SW killed %646, killed %569, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1124, !tbaa !46)
    %647 = ORi %zero, 52028
    %648 = ADDu %0, killed %647
    %649 = ORi %zero, 44376
    %650 = ADDu %0, killed %649
    %651 = LW killed %576, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1125, !tbaa !46)
    SW killed %651, killed %574, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1127, !tbaa !46)
    %652 = ORi %zero, 52024
    %653 = ADDu %0, killed %652
    %654 = ORi %zero, 44372
    %655 = ADDu %0, killed %654
    %658 = LW killed %589, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1128, !tbaa !46)
    SW killed %658, killed %586, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1130, !tbaa !46)
    %659 = LW killed %584, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1131, !tbaa !46)
    %660 = ADDiu %zero, 2
    %661 = ADDiu %zero, 1
    SW killed %659, killed %581, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1133, !tbaa !46)
    %662 = LW killed %579, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1134, !tbaa !46)
    SW killed %662, killed %655, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1136, !tbaa !46)
    %663 = LW killed %653, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1137, !tbaa !46)
    SW killed %663, killed %650, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1139, !tbaa !46)
    %664 = LW killed %648, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1140, !tbaa !46)
    SW killed %664, killed %645, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1142, !tbaa !46)
    %665 = LW killed %643, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1144, !tbaa !45)
    SW killed %665, killed %640, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1147, !tbaa !45)
    %666 = LW killed %638, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1149, !tbaa !45)
    SW killed %666, killed %624, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1152, !tbaa !45)
    %667 = LW killed %621, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1154, !tbaa !45)
    SW killed %667, killed %619, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1157, !tbaa !45)
    %668 = LW killed %616, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1159, !tbaa !45)
    SW killed %668, killed %614, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1162, !tbaa !45)
    %669 = LW killed %611, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1163, !tbaa !46)
    SW killed %669, killed %609, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1165, !tbaa !46)
    %670 = LW killed %606, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1166, !tbaa !46)
    SW killed %670, killed %604, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1168, !tbaa !46)
    %671 = LBu killed %601, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.1169, !tbaa !42)
    SB killed %671, killed %599, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.1171, !tbaa !42)
    %672 = LBu killed %596, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.1172, !tbaa !42)
    SB killed %672, killed %594, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.1174, !tbaa !42)
    SW killed %660, killed %591, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1175, !tbaa !39)
    %673 = LHu %556, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 2 from %ir.1176, align 4)
    %674 = SLTiu %673, 256
    %675 = ANDi %673, 255
    %676 = SLTiu killed %675, 1
    %677 = MOVN_I_I killed %661, killed %674, %676
    SB killed %677, %407, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.sunkaddr246, align 4, !tbaa !41)
    B %bb.146, implicit-def dead %at
  
  bb.119 (%ir-block.1182, freq 838860):
    successors: %bb.149(50), %bb.143.render_polygon.exit(50)
  
    %130 = LUi 1
    %131 = ADDu %0, %130
    %132 = LW %131, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1183, !tbaa !39)
    %133 = SLTiu killed %132, 3
    BNE %133, %zero, %bb.143.render_polygon.exit, implicit-def %at
  
  bb.149 (freq 419430):
    successors: %bb.120..lr.ph101(100)
  
    %128 = LEA_ADDiu %stack.0.vlist, 0
    %129 = ADDiu %zero, 0
  
  bb.120..lr.ph101 (freq 13421760):
    successors: %bb.120..lr.ph101(96), %bb.121.._crit_edge102(3)
  
    %77 = PHI %128, %bb.149, %81, %bb.120..lr.ph101
    %78 = PHI %129, %bb.149, %79, %bb.120..lr.ph101
    SW %78, %77, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.lsr.iv6870, !tbaa !46)
    %80 = LW %131, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr249, !tbaa !39)
    %79 = ADDiu %78, 1
    %136 = SLTu %79, %80
    %81 = ADDiu %77, 4
    BNE killed %136, %zero, %bb.120..lr.ph101, implicit-def dead %at
    B %bb.121.._crit_edge102, implicit-def dead %at
  
  bb.121.._crit_edge102 (freq 419430):
    successors: %bb.123(37), %bb.122(62)
  
    %137 = ORi %zero, 65528
    %138 = ADDu %0, killed %137
    %139 = LBu killed %138, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.1189, align 4, !tbaa !41)
    BEQ killed %139, %zero, %bb.123, implicit-def dead %at
    B %bb.122, implicit-def dead %at
  
  bb.122 (%ir-block.1192, freq 262143):
    successors: %bb.143.render_polygon.exit(100)
  
    %140 = LW %122, target-flags(<unknown>) @render_clipped_polygon, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %141 = ADDiu killed %140, target-flags(<unknown>) @render_clipped_polygon
    %142 = ADDiu %zero, 0
    %143 = LEA_ADDiu %stack.0.vlist, 0
    %a0 = COPY %113
    %a1 = COPY %80
    %a2 = COPY %143
    %a3 = COPY %142
    %t9 = COPY %141
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.143.render_polygon.exit, implicit-def dead %at
  
  bb.123 (%ir-block.1194, freq 157286):
    successors: %bb.143.render_polygon.exit(37), %bb.124..lr.ph.i.i.preheader(62)
  
    BEQ %80, %zero, %bb.143.render_polygon.exit, implicit-def dead %at
    B %bb.124..lr.ph.i.i.preheader, implicit-def dead %at
  
  bb.124..lr.ph.i.i.preheader (freq 98303):
    successors: %bb.125..lr.ph.i.i(100)
  
    %82 = LW %stack.0.vlist, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1195, !tbaa !46)
    %146 = LEA_ADDiu %stack.0.vlist, 0
    %83 = ADDiu %146, 4
    %144 = ADDiu %zero, 1
    %145 = MTC1 %zero
  
  bb.125..lr.ph.i.i (freq 3145725):
    successors: %bb.127.polygon_area.exit.i(3), %bb.126..lr.ph.i.i..lr.ph.i.i_crit_edge(96)
  
    %84 = PHI %144, %bb.124..lr.ph.i.i.preheader, %91, %bb.126..lr.ph.i.i..lr.ph.i.i_crit_edge
    %85 = PHI %83, %bb.124..lr.ph.i.i.preheader, %90, %bb.126..lr.ph.i.i..lr.ph.i.i_crit_edge
    %86 = PHI %82, %bb.124..lr.ph.i.i.preheader, %89, %bb.126..lr.ph.i.i..lr.ph.i.i_crit_edge
    %87 = PHI %145, %bb.124..lr.ph.i.i.preheader, %88, %bb.126..lr.ph.i.i..lr.ph.i.i_crit_edge
    %147 = XOR %80, %84
    %149 = MOVZ_I_I %zero, killed %147, %84
    %150 = SLL killed %149, 2
    %152 = ADDu %146, killed %150
    %153 = LW killed %152, 0, <0x36ef400> = !{!"unison-memory-partition", i32 4} :: (load 4 from %ir.1200, !tbaa !46)
    %154 = SLL %86, 2
    %155 = SLL %86, 3
    %156 = ADDu killed %155, killed %154
    %157 = ADDiu %0, 24192
    %158 = ADDu %157, %156
    %159 = LWC1 killed %158, 4, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1204, !tbaa !45)
    %160 = LWXC1 %157, %156, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.1202, !tbaa !45)
    %161 = SLL %153, 2
    %162 = SLL %153, 3
    %163 = ADDu killed %162, killed %161
    %164 = LWXC1 %157, %163, <0x3771480> = !{!"unison-memory-partition", i32 2} :: (load 4 from %ir.1206, !tbaa !45)
    %165 = FSUB_S killed %160, killed %164
    %166 = ADDu %157, %163
    %167 = LWC1 killed %166, 4, <0x35f5e80> = !{!"unison-memory-partition", i32 3} :: (load 4 from %ir.1208, !tbaa !45)
    %168 = FADD_S killed %159, killed %167
    %88 = MADD_S %87, killed %165, killed %168
    BEQ %80, %84, %bb.127.polygon_area.exit.i, implicit-def dead %at
    B %bb.126..lr.ph.i.i..lr.ph.i.i_crit_edge, implicit-def dead %at
  
  bb.126..lr.ph.i.i..lr.ph.i.i_crit_edge (freq 3047421):
    successors: %bb.125..lr.ph.i.i(100)
  
    %89 = LW %85, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1214, !tbaa !46)
    %91 = ADDiu %84, 1
    %90 = ADDiu %85, 4
    B %bb.125..lr.ph.i.i, implicit-def dead %at
  
  bb.127.polygon_area.exit.i (freq 98303):
    successors: %bb.143.render_polygon.exit(62), %bb.128(37)
  
    %169 = LW %122, target-flags(<unknown>) %const.0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %170 = LWC1 killed %169, target-flags(<unknown>) %const.0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 4 from constant-pool)
    %92 = FMUL_S %88, killed %170
    %171 = MTC1 %zero
    FCMP_S32 %92, %171, 2, implicit-def %fcc0
    BC1T %fcc0, %bb.143.render_polygon.exit, implicit-def dead %at
    B %bb.128, implicit-def dead %at
  
  bb.128 (%ir-block.1217, freq 36863):
    successors: %bb.129(37), %bb.143.render_polygon.exit(62)
  
    %173 = ADDiu %zero, 1
    FCMP_S32 %92, %171, 4, implicit-def %fcc0
    %175 = MOVF_I %zero, %fcc0, %173
    %176 = ORi %zero, 54140
    %177 = ADDu %113, killed %176
    %178 = LW killed %177, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1219, !tbaa !50)
    %179 = ADDiu %zero, 2304
    %180 = XOR killed %178, killed %179
    %181 = SLTiu killed %180, 1
    %94 = XOR killed %175, killed %181
    %182 = ORi %zero, 54160
    %183 = ADDiu %zero, 2
    %184 = MOVN_I_I killed %183, %94, %173
    %185 = ADDu %113, killed %182
    %186 = LW killed %185, 0, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.1225, !tbaa !51)
    %187 = AND killed %184, killed %186
    BNE killed %187, %zero, %bb.143.render_polygon.exit, implicit-def dead %at
    B %bb.129, implicit-def dead %at
  
  bb.129 (%ir-block.1229, freq 13823):
    successors: %bb.133(37), %bb.130(62)
  
    %188 = ORi %zero, 54179
    %189 = ADDu %113, killed %188
    %190 = LBu killed %189, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.1230, !tbaa !52)
    BEQ killed %190, %zero, %bb.133, implicit-def dead %at
    B %bb.130, implicit-def dead %at
  
  bb.130 (%ir-block.1233, freq 8639):
    successors: %bb.148(75), %bb.131(25)
  
    %192 = XORi %80, 3
    %193 = ADDiu %zero, 3
    %195 = MOVZ_I_I %zero, killed %192, %193
    %196 = SLL killed %195, 2
    %198 = ADDu %146, killed %196
    %199 = LW killed %198, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1240, !tbaa !46)
    %200 = SLL %82, 2
    %201 = SLL %82, 3
    %202 = ADDu killed %201, killed %200
    %203 = ADDiu %0, 24192
    %204 = ADDu %203, %202
    %205 = LW %stack.0.vlist, 4, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.1234, !tbaa !46)
    %206 = LW %stack.0.vlist, 8, <0x3771480> = !{!"unison-memory-partition", i32 2} :: (load 4 from %ir.1236, !tbaa !46)
    %207 = LW %122, target-flags(<unknown>) %const.1, <0x35f5e80> = !{!"unison-memory-partition", i32 3} :: (load 4 from got)
    %208 = SLL %199, 2
    %209 = SLL %199, 3
    %210 = ADDu killed %209, killed %208
    %211 = SLL %205, 2
    %212 = SLL %205, 3
    %213 = LWXC1 %203, %202, <0x36ef400> = !{!"unison-memory-partition", i32 4} :: (load 4 from %ir.1259, !tbaa !45)
    %214 = LWXC1 %203, %210, <0x3771720> = !{!"unison-memory-partition", i32 5} :: (load 4 from %ir.1244, !tbaa !45)
    %215 = LWC1 %204, 4, <0x36908e0> = !{!"unison-memory-partition", i32 6} :: (load 4 from %ir.1264, !tbaa !45)
    %216 = LWC1 %204, 8, <0x37aacf0> = !{!"unison-memory-partition", i32 7} :: (load 4 from %ir.1269, !tbaa !45)
    %217 = LWC1 killed %207, target-flags(<unknown>) %const.1, <0x37c4550> = !{!"unison-memory-partition", i32 8} :: (load 4 from constant-pool)
    %218 = ADDu %203, %210
    %219 = LWC1 %218, 4, <0x37c4620> = !{!"unison-memory-partition", i32 9} :: (load 4 from %ir.1249, !tbaa !45)
    %220 = LWC1 %218, 8, <0x37c46f0> = !{!"unison-memory-partition", i32 10} :: (load 4 from %ir.1254, !tbaa !45)
    %221 = ADDu killed %212, killed %211
    %222 = SLL %206, 2
    %223 = SLL %206, 3
    %224 = ADDu killed %223, killed %222
    %225 = ADDu %203, %224
    %226 = LWC1 %225, 4, <0x37c47c0> = !{!"unison-memory-partition", i32 11} :: (load 4 from %ir.1262, !tbaa !45)
    %227 = LWC1 %225, 8, <0x37c4890> = !{!"unison-memory-partition", i32 12} :: (load 4 from %ir.1267, !tbaa !45)
    %228 = ADDu %203, %221
    %229 = LWC1 %228, 4, <0x37c4960> = !{!"unison-memory-partition", i32 13} :: (load 4 from %ir.1247, !tbaa !45)
    %230 = LWXC1 %203, %221, <0x37c4a30> = !{!"unison-memory-partition", i32 14} :: (load 4 from %ir.1242, !tbaa !45)
    %231 = LWC1 %228, 8, <0x37c4b00> = !{!"unison-memory-partition", i32 15} :: (load 4 from %ir.1252, !tbaa !45)
    %95 = FSUB_S killed %230, killed %214
    %96 = FSUB_S killed %229, killed %219
    %99 = FSUB_S killed %226, killed %215
    %232 = LWXC1 %203, %224, <0x37c4bd0> = !{!"unison-memory-partition", i32 16} :: (load 4 from %ir.1257, !tbaa !45)
    %98 = FSUB_S killed %232, killed %213
    %233 = FMUL_S %96, %98
    %101 = MSUB_S killed %233, %95, %99
    FCMP_S32 %101, killed %217, 20, implicit-def %fcc0
    BC1F %fcc0, %bb.131, implicit-def dead %at
    B %bb.148, implicit-def dead %at
  
  bb.148 (%ir-block.1233, freq 6479):
    successors: %bb.132.offset_polygon.exit.i(66), %bb.131(33)
  
    %234 = LW %122, target-flags(<unknown>) %const.2, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %235 = LWC1 killed %234, target-flags(<unknown>) %const.2, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 4 from constant-pool)
    FCMP_S32 %101, killed %235, 23, implicit-def %fcc0
    BC1F %fcc0, %bb.132.offset_polygon.exit.i, implicit-def dead %at
    B %bb.131, implicit-def dead %at
  
  bb.131 (%ir-block.1277, freq 4319):
    successors: %bb.132.offset_polygon.exit.i(100)
  
    %97 = FSUB_S %231, %220
    %100 = FSUB_S %227, %216
    %236 = FMUL_S %97, %99
    %237 = FMUL_S %95, %100
    %238 = ORi %zero, 54172
    %239 = ORi %zero, 54168
    %240 = MTC1 %zero
    %241 = MSUB_S killed %237, %97, %98
    %242 = MSUB_S killed %236, %96, %100
    %243 = LWXC1 %113, killed %239, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1292, !tbaa !53)
    %244 = LWXC1 %113, killed %238, <0x3773810> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.1295, !tbaa !54)
    %245 = FDIV_S killed %242, %101
    %246 = FDIV_S killed %241, %101
    %247 = FNEG_S %246
    FCMP_S32 %246, %240, 4, implicit-def %fcc0
    %248 = MOVT_S killed %247, %fcc0, %246
    %249 = FNEG_S %245
    FCMP_S32 %245, %240, 4, implicit-def %fcc0
    %250 = MOVT_S killed %249, %fcc0, %245
    FCMP_S32 %250, %248, 23, implicit-def %fcc0
    %251 = MOVF_S %250, %fcc0, %248
    %102 = MADD_S killed %244, killed %251, killed %243
  
  bb.132.offset_polygon.exit.i (freq 8639):
    successors: %bb.133(100)
  
    %103 = PHI %171, %bb.148, %102, %bb.131
    %252 = ORi %zero, 54176
    %253 = ADDu %113, killed %252
    %254 = LW killed %253, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1299)
    %255 = LUi 255
    %256 = ORi %255, 65535
    %257 = SLTu killed %256, %254
    %259 = MOVN_I_S %103, killed %257, %171
    %260 = ORi %zero, 55776
    SWXC1 killed %259, %113, killed %260, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1303, !tbaa !55)
    %261 = ANDi %254, 65280
    %262 = MOVN_I_S %103, killed %261, %171
    %263 = AND %254, %255
    %264 = MOVN_I_S %103, killed %263, %171
    %265 = ORi %zero, 55768
    %266 = ORi %zero, 55772
    SWXC1 killed %264, %113, killed %266, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1307, !tbaa !56)
    SWXC1 killed %262, %113, killed %265, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1311, !tbaa !57)
  
  bb.133 (%ir-block.1312, freq 13823):
    successors: %bb.138(37), %bb.134(62)
  
    %267 = ORi %zero, 41961
    %268 = ADDu %113, killed %267
    %269 = LBu killed %268, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.1313, !tbaa !58)
    BEQ killed %269, %zero, %bb.138, implicit-def dead %at
    B %bb.134, implicit-def dead %at
  
  bb.134 (%ir-block.1316, freq 8639):
    successors: %bb.135(50), %bb.137(50)
  
    %270 = ANDi %94, 1
    BEQ killed %270, %zero, %bb.137, implicit-def dead %at
    B %bb.135, implicit-def dead %at
  
  bb.135 (%ir-block.1317, freq 4319):
    successors: %bb.137(37), %bb.136(62)
  
    %271 = ORi %zero, 43724
    %272 = ADDu %113, killed %271
    %273 = LBu killed %272, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.1318, align 4, !tbaa !59)
    BEQ killed %273, %zero, %bb.137, implicit-def dead %at
    B %bb.136, implicit-def dead %at
  
  bb.136 (%ir-block.1321, freq 2699):
    successors: %bb.138(100)
  
    %274 = ORi %zero, 52416
    %275 = ADDu %0, killed %274
    %276 = ORi %zero, 44352
    %277 = ADDu %0, killed %276
    SW killed %277, killed %275, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1323, !tbaa !60)
    %278 = ORi %zero, 56452
    %279 = ADDu %0, killed %278
    %280 = ORi %zero, 54436
    %281 = ADDu %0, killed %280
    SW killed %281, killed %279, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1325, !tbaa !61)
    B %bb.138, implicit-def dead %at
  
  bb.137 (%ir-block.1326, freq 5939):
    successors: %bb.138(100)
  
    %282 = ORi %zero, 52416
    %283 = ADDu %0, killed %282
    %284 = ORi %zero, 36288
    %285 = ADDu %0, killed %284
    SW killed %285, killed %283, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1328, !tbaa !60)
    %286 = ORi %zero, 56452
    %287 = ADDu %0, killed %286
    %288 = ORi %zero, 52420
    %289 = ADDu %0, killed %288
    SW killed %289, killed %287, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1330, !tbaa !61)
  
  bb.138 (%ir-block.1331, freq 13823):
    successors: %bb.140(37), %bb.139(62)
  
    %290 = ORi %zero, 54152
    %291 = ADDu %113, killed %290
    %292 = LBu killed %291, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.1332, align 4, !tbaa !62)
    BEQ killed %292, %zero, %bb.140, implicit-def dead %at
    B %bb.139, implicit-def dead %at
  
  bb.139 (%ir-block.1335, freq 8639):
    successors: %bb.143.render_polygon.exit(100)
  
    %293 = LW %122, target-flags(<unknown>) @unfilled_polygon, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %294 = ADDiu killed %293, target-flags(<unknown>) @unfilled_polygon
    %295 = LEA_ADDiu %stack.0.vlist, 0
    %a0 = COPY %113
    %a1 = COPY %80
    %a2 = COPY %295
    %a3 = COPY %82
    %t0 = COPY %94
    %t9 = COPY %294
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %t0, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.143.render_polygon.exit, implicit-def dead %at
  
  bb.140 (%ir-block.1337, freq 5183):
    successors: %bb.141..lr.ph.i(50), %bb.143.render_polygon.exit(50)
  
    %296 = SLTiu %80, 3
    BNE killed %296, %zero, %bb.143.render_polygon.exit, implicit-def dead %at
    B %bb.141..lr.ph.i, implicit-def dead %at
  
  bb.141..lr.ph.i (freq 2591):
    successors: %bb.142(100)
  
    %106 = ADDiu %146, 8
    %105 = ADDiu %80, -2
    %104 = LW %stack.0.vlist, 4, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir..phi.trans.insert, !tbaa !46)
    %298 = ORi %zero, 55804
    %299 = ADDu %113, %298
  
  bb.142 (%ir-block.1340, freq 82943):
    successors: %bb.143.render_polygon.exit(3), %bb.142(96)
  
    %107 = PHI %106, %bb.141..lr.ph.i, %112, %bb.142
    %108 = PHI %105, %bb.141..lr.ph.i, %111, %bb.142
    %109 = PHI %104, %bb.141..lr.ph.i, %110, %bb.142
    %300 = LW %299, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr252, !tbaa !49)
    %110 = LW %107, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.lsr.iv5860, !tbaa !46)
    ADJCALLSTACKDOWN 24, implicit-def dead %sp, implicit %sp
    %301 = COPY %sp
    SW %82, %301, 16, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into unknown)
    %a0 = COPY %113
    %a1 = COPY %82
    %a2 = COPY %109
    %a3 = COPY %110
    %t9 = COPY %300
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp
    ADJCALLSTACKUP 24, 0, implicit-def dead %sp, implicit %sp
    %112 = ADDiu %107, 4
    %111 = ADDiu %108, -1
    BNE %111, %zero, %bb.142, implicit-def dead %at
    B %bb.143.render_polygon.exit, implicit-def dead %at
  
  bb.143.render_polygon.exit (freq 838860):
    successors: %bb.144(37), %bb.146(62)
  
    BNE %115, %zero, %bb.146, implicit-def dead %at
    B %bb.144, implicit-def dead %at
  
  bb.144 (%ir-block.1346, freq 314572):
    successors: %bb.146(100)
  
    %302 = LW %0, 23792, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1348, !tbaa !45)
    SW killed %302, %0, 16144, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1351, !tbaa !45)
    %303 = LW %0, 23796, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1353, !tbaa !45)
    %304 = ORi %zero, 65025
    %305 = LUi 1
    %306 = ORi %zero, 36316
    %307 = ORi %zero, 52016
    %308 = ORi %zero, 44368
    %309 = ORi %zero, 54336
    %310 = ORi %zero, 52424
    %311 = ORi %zero, 56352
    %312 = ORi %zero, 54440
    %313 = ORi %zero, 56935
    %314 = ORi %zero, 56457
    %315 = ORi %zero, 65503
    %316 = ORi %zero, 65024
    %317 = ORi %zero, 43964
    %318 = ORi %zero, 52020
    %319 = ORi %zero, 43960
    %320 = ORi %zero, 36312
    %321 = ORi %zero, 43956
    %322 = ORi %zero, 36308
    %323 = ORi %zero, 43952
    %324 = ORi %zero, 36304
    %325 = ORi %zero, 56980
    %326 = ORi %zero, 64632
    %327 = ORi %zero, 56984
    %328 = ORi %zero, 64636
    %329 = ORi %zero, 56988
    SW killed %303, %0, 16148, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1356, !tbaa !45)
    %330 = ADDu %0, killed %324
    %331 = ADDu %0, killed %323
    %332 = ADDu %0, killed %322
    %333 = ADDu %0, killed %321
    %334 = ADDu %0, killed %320
    %335 = ADDu %0, killed %319
    %336 = ADDu %0, killed %318
    %337 = ADDu %0, killed %308
    %338 = ADDu %0, killed %307
    %339 = ADDu %0, killed %306
    %340 = ADDu %0, killed %317
    %341 = ADDu %0, killed %316
    %342 = ADDu %0, killed %305
    %343 = ADDu %0, killed %304
    %344 = ADDu %0, killed %315
    %345 = ADDu %0, killed %314
    %346 = ADDu %0, killed %313
    %347 = ADDu %0, killed %312
    %348 = ADDu %0, killed %311
    %349 = ADDu %0, killed %310
    %350 = ADDu %0, killed %309
    %351 = ADDu %0, killed %329
    %352 = ADDu %0, killed %328
    %353 = ADDu %0, killed %327
    %354 = ADDu %0, killed %326
    %355 = ADDu %0, killed %325
    %356 = LW %0, 23800, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1358, !tbaa !45)
    SW killed %356, %0, 16152, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1361, !tbaa !45)
    %357 = LW %0, 23804, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1363, !tbaa !45)
    SW killed %357, %0, 16156, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1366, !tbaa !45)
    %358 = LW %0, 15728, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1368, !tbaa !45)
    SW killed %358, %0, 8080, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1371, !tbaa !45)
    %359 = LW %0, 15732, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1373, !tbaa !45)
    SW killed %359, %0, 8084, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1376, !tbaa !45)
    %360 = LW %0, 15736, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1378, !tbaa !45)
    SW killed %360, %0, 8088, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1381, !tbaa !45)
    %361 = LW %0, 15740, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1383, !tbaa !45)
    SW killed %361, %0, 8092, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1386, !tbaa !45)
    %362 = LW %0, 29940, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1388, !tbaa !45)
    SW killed %362, %0, 24204, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1391, !tbaa !45)
    %363 = LW %0, 29944, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1393, !tbaa !45)
    SW killed %363, %0, 24208, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1396, !tbaa !45)
    %364 = LW %0, 29948, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1398, !tbaa !45)
    SW killed %364, %0, 24212, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1401, !tbaa !45)
    %365 = ORi %zero, 64628
    %366 = ADDu %0, killed %365
    %367 = ORi %zero, 56976
    %368 = ADDu %0, killed %367
    %369 = LW killed %331, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1402, !tbaa !46)
    SW killed %369, killed %330, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1404, !tbaa !46)
    %370 = ORi %zero, 64624
    %371 = ADDu %0, killed %370
    %372 = ORi %zero, 44380
    %373 = ADDu %0, killed %372
    %374 = LW killed %333, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1405, !tbaa !46)
    SW killed %374, killed %332, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1407, !tbaa !46)
    %375 = ORi %zero, 52028
    %376 = ADDu %0, killed %375
    %377 = ORi %zero, 44376
    %378 = ADDu %0, killed %377
    %379 = LW killed %335, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1408, !tbaa !46)
    SW killed %379, killed %334, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1410, !tbaa !46)
    %380 = ORi %zero, 52024
    %381 = ADDu %0, killed %380
    %382 = ORi %zero, 44372
    %383 = ADDu %0, killed %382
    %384 = ORi %zero, 65528
    %385 = ADDu %0, killed %384
    %386 = LW killed %340, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1411, !tbaa !46)
    SW killed %386, killed %339, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1413, !tbaa !46)
    %387 = LW killed %338, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1414, !tbaa !46)
    %388 = ADDiu %zero, 2
    %389 = ADDiu %zero, 1
    SW killed %387, killed %337, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1416, !tbaa !46)
    %390 = LW killed %336, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1417, !tbaa !46)
    SW killed %390, killed %383, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1419, !tbaa !46)
    %391 = LW killed %381, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1420, !tbaa !46)
    SW killed %391, killed %378, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1422, !tbaa !46)
    %392 = LW killed %376, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1423, !tbaa !46)
    SW killed %392, killed %373, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1425, !tbaa !46)
    %393 = LW killed %371, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1427, !tbaa !45)
    SW killed %393, killed %368, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1430, !tbaa !45)
    %394 = LW killed %366, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1432, !tbaa !45)
    SW killed %394, killed %355, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1435, !tbaa !45)
    %395 = LW killed %354, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1437, !tbaa !45)
    SW killed %395, killed %353, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1440, !tbaa !45)
    %396 = LW killed %352, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1442, !tbaa !45)
    SW killed %396, killed %351, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1445, !tbaa !45)
    %397 = LW killed %350, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1446, !tbaa !46)
    SW killed %397, killed %349, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1448, !tbaa !46)
    %398 = LW killed %348, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1449, !tbaa !46)
    SW killed %398, killed %347, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1451, !tbaa !46)
    %399 = LBu killed %346, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.1452, !tbaa !42)
    SB killed %399, killed %345, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.1454, !tbaa !42)
    %400 = LBu killed %344, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.1455, !tbaa !42)
    SB killed %400, killed %343, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.1457, !tbaa !42)
    SW killed %388, killed %342, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr255, !tbaa !39)
    %401 = LHu killed %341, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 2 from %ir.1459, align 4)
    %402 = SLTiu %401, 256
    %403 = ANDi %401, 255
    %404 = SLTiu killed %403, 1
    %405 = MOVN_I_I killed %389, killed %402, %404
    SB killed %405, killed %385, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.1465, align 4, !tbaa !41)
    B %bb.146, implicit-def dead %at
  
  bb.145 (%ir-block.1466, freq 8):
    exit
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %1571 = LW %122, target-flags(<unknown>) @abort, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @abort)
    %gp = COPY %122
    %t9 = COPY %1571
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
  
  bb.146 (%ir-block.1467, freq 8388599):
    liveouts:
  
    %1566 = ORi %zero, 65532
    %1567 = ADDu %0, killed %1566
    %1568 = LUi 1
    %1569 = ADDu %0, killed %1568
    %1570 = LW killed %1569, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1469, !tbaa !39)
    SW killed %1570, killed %1567, 0, <0x3728dc0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.1471, !tbaa !47)
    RetRA

...
