--- |
  ; ModuleID = '/home/romi/didaktoriko/unison/unison-experiments/experiments/test-input/c/mediabench/mips_zip/build-mips/mpeg2/mpeg2.subspic.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips--linux-gnu"
  
  %struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i32, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i32, i32, [40 x i8] }
  %struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
  
  @Substitute_Frame_Buffer.previous_temporal_reference = internal unnamed_addr global i32 0, align 4
  @Substitute_Frame_Buffer.previous_anchor_temporal_reference = internal unnamed_addr global i32 0, align 4
  @Substitute_Frame_Buffer.previous_picture_coding_type = internal unnamed_addr global i32 0, align 4
  @Substitute_Frame_Buffer.bgate = internal unnamed_addr global i1 false
  @Second_Field = external global i32, align 4
  @picture_structure = external global i32, align 4
  @picture_coding_type = external global i32, align 4
  @Substitute_Picture_Filename = external global i8*, align 4
  @forward_reference_frame = external global [3 x i8*], align 4
  @temporal_reference = external global i32, align 4
  @backward_reference_frame = external global [3 x i8*], align 4
  @current_frame = external global [3 x i8*], align 4
  @.str = private unnamed_addr constant [40 x i8] c"ERROR: framenum (%d) is less than zero\0A\00", align 1
  @Big_Picture_Flag = external global i32, align 4
  @substitute_frame = external global [3 x i8*], align 4
  @Coded_Picture_Width = external global i32, align 4
  @Coded_Picture_Height = external global i32, align 4
  @Chroma_Width = external global i32, align 4
  @Chroma_Height = external global i32, align 4
  @.str.2 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
  @Error_Text = external global [256 x i8], align 1
  @.str.3 = private unnamed_addr constant [18 x i8] c"Couldn't open %s\0A\00", align 1
  @chroma_format = external global i32, align 4
  @.str.4 = private unnamed_addr constant [42 x i8] c"ERROR: chroma_format (%d) not recognized\0A\00", align 1
  @.str.5 = private unnamed_addr constant [5 x i8] c"%s.Y\00", align 1
  @.str.6 = private unnamed_addr constant [5 x i8] c"%s.U\00", align 1
  @.str.7 = private unnamed_addr constant [5 x i8] c"%s.V\00", align 1
  @.str.9 = private unnamed_addr constant [49 x i8] c"was able to read only %d bytes of %d of file %s\0A\00", align 1
  @str = private unnamed_addr constant [31 x i8] c"was unable to substitute frame\00"
  
  ; Function Attrs: nounwind
  define void @Substitute_Frame_Buffer(i32 signext %bitstream_framenum, i32 signext %sequence_framenum) #0 {
    %1 = load i32, i32* @Second_Field, align 4
    %2 = or i32 %1, %sequence_framenum
    %3 = icmp eq i32 %2, 0
    br i1 %3, label %37, label %4
  
  ; <label>:4                                       ; preds = %0
    %5 = icmp ne i32 %1, 0
    %6 = load i32, i32* @picture_structure, align 4, !tbaa !1
    %7 = icmp ne i32 %6, 3
    %or.cond3 = and i1 %5, %7
    %8 = load i32, i32* @picture_coding_type, align 4
    br i1 %or.cond3, label %24, label %9
  
  ; <label>:9                                       ; preds = %4
    %10 = icmp eq i32 %8, 2
    br i1 %10, label %11, label %14
  
  ; <label>:11                                      ; preds = %9
    %12 = add nsw i32 %bitstream_framenum, -1
    %13 = load i8*, i8** @Substitute_Picture_Filename, align 4, !tbaa !5
    tail call fastcc void @Read_Frame(i8* %13, i8** nonnull getelementptr inbounds ([3 x i8*], [3 x i8*]* @forward_reference_frame, i32 0, i32 0), i32 signext %12)
    br label %37
  
  ; <label>:14                                      ; preds = %9
    %15 = icmp eq i32 %8, 3
    %.b = load i1, i1* @Substitute_Frame_Buffer.bgate, align 1
    %16 = xor i1 %.b, true
    %or.cond5 = and i1 %15, %16
    br i1 %or.cond5, label %17, label %37
  
  ; <label>:17                                      ; preds = %14
    %18 = load i32, i32* @Substitute_Frame_Buffer.previous_temporal_reference, align 4, !tbaa !1
    %19 = load i32, i32* @temporal_reference, align 4, !tbaa !1
    %20 = add i32 %bitstream_framenum, -1
    %21 = add i32 %20, %18
    %22 = sub i32 %21, %19
    %23 = load i8*, i8** @Substitute_Picture_Filename, align 4, !tbaa !5
    tail call fastcc void @Read_Frame(i8* %23, i8** nonnull getelementptr inbounds ([3 x i8*], [3 x i8*]* @backward_reference_frame, i32 0, i32 0), i32 signext %22)
    br label %37
  
  ; <label>:24                                      ; preds = %4
    %25 = icmp eq i32 %8, 2
    br i1 %25, label %26, label %37
  
  ; <label>:26                                      ; preds = %24
    %27 = load i32, i32* @Substitute_Frame_Buffer.previous_picture_coding_type, align 4, !tbaa !1
    %28 = icmp eq i32 %27, 1
    br i1 %28, label %35, label %29
  
  ; <label>:29                                      ; preds = %26
    %30 = load i32, i32* @temporal_reference, align 4, !tbaa !1
    %31 = load i32, i32* @Substitute_Frame_Buffer.previous_anchor_temporal_reference, align 4, !tbaa !1
    %32 = add i32 %bitstream_framenum, -1
    %33 = add i32 %32, %30
    %34 = sub i32 %33, %31
    br label %35
  
  ; <label>:35                                      ; preds = %29, %26
    %substitute_display_framenum.0 = phi i32 [ %34, %29 ], [ %bitstream_framenum, %26 ]
    %36 = load i8*, i8** @Substitute_Picture_Filename, align 4, !tbaa !5
    tail call fastcc void @Read_Frame(i8* %36, i8** nonnull getelementptr inbounds ([3 x i8*], [3 x i8*]* @current_frame, i32 0, i32 0), i32 signext %substitute_display_framenum.0)
    br label %37
  
  ; <label>:37                                      ; preds = %35, %24, %17, %14, %11, %0
    %38 = load i32, i32* @picture_coding_type, align 4, !tbaa !1
    %39 = icmp eq i32 %38, 3
    store i1 %39, i1* @Substitute_Frame_Buffer.bgate, align 1
    %40 = load i32, i32* @picture_structure, align 4, !tbaa !1
    %41 = icmp ne i32 %40, 3
    %42 = load i32, i32* @Second_Field, align 4
    %43 = icmp ne i32 %42, 0
    %or.cond11 = and i1 %41, %43
    br i1 %or.cond11, label %46, label %44
  
  ; <label>:44                                      ; preds = %37
    %45 = load i32, i32* @temporal_reference, align 4, !tbaa !1
    store i32 %45, i32* @Substitute_Frame_Buffer.previous_temporal_reference, align 4, !tbaa !1
    br label %46
  
  ; <label>:46                                      ; preds = %44, %37
    %47 = icmp ne i32 %42, 0
    %48 = icmp eq i32 %38, 3
    %.not = xor i1 %48, true
    %49 = icmp eq i32 %40, 3
    %or.cond13 = or i1 %49, %47
    %or.cond = and i1 %or.cond13, %.not
    br i1 %or.cond, label %50, label %52
  
  ; <label>:50                                      ; preds = %46
    %51 = load i32, i32* @temporal_reference, align 4, !tbaa !1
    store i32 %51, i32* @Substitute_Frame_Buffer.previous_anchor_temporal_reference, align 4, !tbaa !1
    br label %52
  
  ; <label>:52                                      ; preds = %50, %46
    store i32 %38, i32* @Substitute_Frame_Buffer.previous_picture_coding_type, align 4, !tbaa !1
    ret void
  }
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.start(i64, i8* nocapture) #1
  
  ; Function Attrs: nounwind
  define internal fastcc void @Read_Frame(i8* %fname, i8** nocapture readonly %frame, i32 signext %framenum) unnamed_addr #0 {
    %outname.i = alloca [256 x i8], align 1
    %name.i = alloca [256 x i8], align 1
    %1 = icmp slt i32 %framenum, 0
    br i1 %1, label %2, label %4
  
  ; <label>:2                                       ; preds = %0
    %3 = tail call i32 (i8*, ...) @printf(i8* nonnull getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i32 0, i32 0), i32 signext %framenum)
    br label %4
  
  ; <label>:4                                       ; preds = %2, %0
    %5 = load i32, i32* @Big_Picture_Flag, align 4, !tbaa !1
    %6 = icmp eq i32 %5, 0
    br i1 %6, label %.critedge, label %7
  
  ; <label>:7                                       ; preds = %4
    %8 = tail call %struct._IO_FILE* @fopen(i8* %fname, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0)) #4
    %9 = icmp eq %struct._IO_FILE* %8, null
    br i1 %9, label %102, label %10
  
  ; <label>:10                                      ; preds = %7
    %11 = load i32, i32* @Coded_Picture_Width, align 4, !tbaa !1
    %12 = load i32, i32* @Coded_Picture_Height, align 4, !tbaa !1
    %13 = mul nsw i32 %12, %11
    %14 = load i32, i32* @chroma_format, align 4, !tbaa !1
    switch i32 %14, label %22 [
      i32 3, label %15
      i32 2, label %17
      i32 1, label %19
    ]
  
  ; <label>:15                                      ; preds = %10
    %16 = mul nsw i32 %13, 3
    br label %24
  
  ; <label>:17                                      ; preds = %10
    %18 = shl nsw i32 %13, 1
    br label %24
  
  ; <label>:19                                      ; preds = %10
    %20 = mul nsw i32 %13, 3
    %21 = ashr i32 %20, 1
    br label %24
  
  ; <label>:22                                      ; preds = %10
    %23 = tail call i32 (i8*, ...) @printf(i8* nonnull getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i32 0, i32 0), i32 signext %14) #4
    br label %24
  
  ; <label>:24                                      ; preds = %22, %19, %17, %15
    %size.0.i = phi i32 [ %16, %15 ], [ %18, %17 ], [ %21, %19 ], [ %13, %22 ]
    %25 = mul nsw i32 %size.0.i, %framenum
    %26 = tail call i32 @fseek(%struct._IO_FILE* nonnull %8, i32 signext %25, i32 signext 0) #4
    %27 = load i32, i32* @Coded_Picture_Height, align 4, !tbaa !1
    %28 = icmp sgt i32 %27, 0
    br i1 %28, label %.lr.ph7.i, label %.preheader1.i
  
  .preheader1.i:                                    ; preds = %.lr.ph7.i, %24
    %29 = load i32, i32* @Chroma_Height, align 4, !tbaa !1
    %30 = icmp sgt i32 %29, 0
    br i1 %30, label %.lr.ph4.i, label %Extract_Components.exit
  
  .lr.ph7.i:                                        ; preds = %24, %.lr.ph7.i
    %line.05.i = phi i32 [ %36, %.lr.ph7.i ], [ 0, %24 ]
    %31 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 0), align 4, !tbaa !5
    %32 = load i32, i32* @Coded_Picture_Width, align 4, !tbaa !1
    %33 = mul nsw i32 %32, %line.05.i
    %34 = getelementptr inbounds i8, i8* %31, i32 %33
    %35 = tail call i32 @fread(i8* %34, i32 signext 1, i32 signext %32, %struct._IO_FILE* nonnull %8) #4
    %36 = add nuw nsw i32 %line.05.i, 1
    %37 = load i32, i32* @Coded_Picture_Height, align 4, !tbaa !1
    %38 = icmp slt i32 %36, %37
    br i1 %38, label %.lr.ph7.i, label %.preheader1.i
  
  .preheader.i:                                     ; preds = %.lr.ph4.i
    %39 = icmp sgt i32 %46, 0
    br i1 %39, label %.lr.ph.i, label %Extract_Components.exit
  
  .lr.ph4.i:                                        ; preds = %.preheader1.i, %.lr.ph4.i
    %line.13.i = phi i32 [ %45, %.lr.ph4.i ], [ 0, %.preheader1.i ]
    %40 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 1), align 4, !tbaa !5
    %41 = load i32, i32* @Chroma_Width, align 4, !tbaa !1
    %42 = mul nsw i32 %41, %line.13.i
    %43 = getelementptr inbounds i8, i8* %40, i32 %42
    %44 = tail call i32 @fread(i8* %43, i32 signext 1, i32 signext %41, %struct._IO_FILE* nonnull %8) #4
    %45 = add nuw nsw i32 %line.13.i, 1
    %46 = load i32, i32* @Chroma_Height, align 4, !tbaa !1
    %47 = icmp slt i32 %45, %46
    br i1 %47, label %.lr.ph4.i, label %.preheader.i
  
  .lr.ph.i:                                         ; preds = %.preheader.i, %.lr.ph.i
    %line.22.i = phi i32 [ %53, %.lr.ph.i ], [ 0, %.preheader.i ]
    %48 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 2), align 4, !tbaa !5
    %49 = load i32, i32* @Chroma_Width, align 4, !tbaa !1
    %50 = mul nsw i32 %49, %line.22.i
    %51 = getelementptr inbounds i8, i8* %48, i32 %50
    %52 = tail call i32 @fread(i8* %51, i32 signext 1, i32 signext %49, %struct._IO_FILE* nonnull %8) #4
    %53 = add nuw nsw i32 %line.22.i, 1
    %54 = load i32, i32* @Chroma_Height, align 4, !tbaa !1
    %55 = icmp slt i32 %53, %54
    br i1 %55, label %.lr.ph.i, label %Extract_Components.exit
  
  Extract_Components.exit:                          ; preds = %.lr.ph.i, %.preheader.i, %.preheader1.i
    %56 = tail call i32 @fclose(%struct._IO_FILE* nonnull %8) #4
    br label %104
  
  .critedge:                                        ; preds = %4
    %57 = bitcast [256 x i8]* %outname.i to i8*
    call void @llvm.lifetime.start(i64 256, i8* %57) #4
    %58 = bitcast [256 x i8]* %name.i to i8*
    call void @llvm.lifetime.start(i64 256, i8* %58) #4
    %59 = call i32 (i8*, i8*, ...) @sprintf(i8* %57, i8* %fname, i32 signext %framenum) #4
    %60 = call i32 (i8*, i8*, ...) @sprintf(i8* %58, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* %57) #4
    %61 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 0), align 4, !tbaa !5
    %62 = load i32, i32* @Coded_Picture_Width, align 4, !tbaa !1
    %63 = load i32, i32* @Coded_Picture_Height, align 4, !tbaa !1
    %64 = mul nsw i32 %63, %62
    %65 = call i32 (i8*, i32, ...) @open(i8* %58, i32 signext 0) #4
    %66 = call i32 bitcast (i32 (...)* @read to i32 (i32, i8*, i32)*)(i32 signext %65, i8* %61, i32 signext %64) #4
    %67 = icmp eq i32 %66, %64
    br i1 %67, label %Read_Component.exit.i, label %68
  
  ; <label>:68                                      ; preds = %.critedge
    %69 = bitcast [256 x i8]* %name.i to i8*
    %70 = call i32 (i8*, ...) @printf(i8* nonnull getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i32 0, i32 0), i32 signext %66, i32 signext %64, i8* %69) #4
    br label %Read_Component.exit.i
  
  Read_Component.exit.i:                            ; preds = %68, %.critedge
    %71 = bitcast [256 x i8]* %name.i to i8*
    %72 = bitcast [256 x i8]* %outname.i to i8*
    %73 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 signext %65) #4
    %74 = call i32 (i8*, i8*, ...) @sprintf(i8* %71, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i8* %72) #4
    %75 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 1), align 4, !tbaa !5
    %76 = load i32, i32* @Chroma_Width, align 4, !tbaa !1
    %77 = load i32, i32* @Chroma_Height, align 4, !tbaa !1
    %78 = mul nsw i32 %77, %76
    %79 = call i32 (i8*, i32, ...) @open(i8* %71, i32 signext 0) #4
    %80 = call i32 bitcast (i32 (...)* @read to i32 (i32, i8*, i32)*)(i32 signext %79, i8* %75, i32 signext %78) #4
    %81 = icmp eq i32 %80, %78
    br i1 %81, label %Read_Component.exit1.i, label %82
  
  ; <label>:82                                      ; preds = %Read_Component.exit.i
    %83 = bitcast [256 x i8]* %name.i to i8*
    %84 = call i32 (i8*, ...) @printf(i8* nonnull getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i32 0, i32 0), i32 signext %80, i32 signext %78, i8* %83) #4
    br label %Read_Component.exit1.i
  
  Read_Component.exit1.i:                           ; preds = %82, %Read_Component.exit.i
    %85 = bitcast [256 x i8]* %name.i to i8*
    %86 = bitcast [256 x i8]* %outname.i to i8*
    %87 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 signext %79) #4
    %88 = call i32 (i8*, i8*, ...) @sprintf(i8* %85, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* %86) #4
    %89 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 2), align 4, !tbaa !5
    %90 = load i32, i32* @Chroma_Width, align 4, !tbaa !1
    %91 = load i32, i32* @Chroma_Height, align 4, !tbaa !1
    %92 = mul nsw i32 %91, %90
    %93 = call i32 (i8*, i32, ...) @open(i8* %85, i32 signext 0) #4
    %94 = call i32 bitcast (i32 (...)* @read to i32 (i32, i8*, i32)*)(i32 signext %93, i8* %89, i32 signext %92) #4
    %95 = icmp eq i32 %94, %92
    br i1 %95, label %Read_Components.exit, label %96
  
  ; <label>:96                                      ; preds = %Read_Component.exit1.i
    %97 = bitcast [256 x i8]* %name.i to i8*
    %98 = call i32 (i8*, ...) @printf(i8* nonnull getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i32 0, i32 0), i32 signext %94, i32 signext %92, i8* %97) #4
    br label %Read_Components.exit
  
  Read_Components.exit:                             ; preds = %96, %Read_Component.exit1.i
    %99 = bitcast [256 x i8]* %name.i to i8*
    %100 = bitcast [256 x i8]* %outname.i to i8*
    %101 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 signext %93) #4
    call void @llvm.lifetime.end(i64 256, i8* %99) #4
    call void @llvm.lifetime.end(i64 256, i8* %100) #4
    br label %104
  
  ; <label>:102                                     ; preds = %7
    %103 = tail call i32 (i8*, i8*, ...) @sprintf(i8* nonnull getelementptr inbounds ([256 x i8], [256 x i8]* @Error_Text, i32 0, i32 0), i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i32 0, i32 0), i8* %fname) #4
    %puts = tail call i32 @puts(i8* nonnull getelementptr inbounds ([31 x i8], [31 x i8]* @str, i32 0, i32 0))
    br label %104
  
  ; <label>:104                                     ; preds = %102, %Read_Components.exit, %Extract_Components.exit
    %105 = load i32, i32* @Second_Field, align 4, !tbaa !1
    %106 = icmp ne i32 %105, 0
    %107 = load i32, i32* @picture_coding_type, align 4
    %108 = icmp eq i32 %107, 2
    %or.cond = and i1 %106, %108
    br i1 %or.cond, label %109, label %113
  
  ; <label>:109                                     ; preds = %104
    %110 = load i32, i32* @picture_structure, align 4, !tbaa !1
    %111 = icmp eq i32 %110, 1
    %112 = zext i1 %111 to i32
    %phitmp = icmp eq i32 %110, 3
    br label %113
  
  ; <label>:113                                     ; preds = %109, %104
    %parity.0 = phi i32 [ %112, %109 ], [ 0, %104 ]
    %field_mode.0 = phi i1 [ %phitmp, %109 ], [ true, %104 ]
    %114 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 0), align 4, !tbaa !5
    %115 = load i8*, i8** %frame, align 4, !tbaa !5
    %116 = load i32, i32* @Coded_Picture_Width, align 4, !tbaa !1
    %117 = load i32, i32* @Coded_Picture_Height, align 4, !tbaa !1
    %incr.0.i = select i1 %field_mode.0, i32 1, i32 2
    %118 = icmp sgt i32 %117, 0
    br i1 %118, label %.preheader.lr.ph.i, label %Copy_Frame.exit
  
  .preheader.lr.ph.i:                               ; preds = %113
    %119 = icmp eq i32 %parity.0, 0
    %width..i = select i1 %119, i32 %116, i32 0
    %s.0.i = select i1 %field_mode.0, i32 0, i32 %width..i
    %120 = mul i32 %incr.0.i, %116
    %scevgep31 = getelementptr i8, i8* %114, i32 %s.0.i
    br label %.preheader.i2
  
  .preheader.i2:                                    ; preds = %._crit_edge.i4, %.preheader.lr.ph.i
    %lsr.iv32 = phi i8* [ %127, %._crit_edge.i4 ], [ %scevgep31, %.preheader.lr.ph.i ]
    %lsr.iv26 = phi i8* [ %126, %._crit_edge.i4 ], [ %115, %.preheader.lr.ph.i ]
    %row.02.i = phi i32 [ 0, %.preheader.lr.ph.i ], [ %125, %._crit_edge.i4 ]
    %121 = icmp sgt i32 %116, 0
    br i1 %121, label %.lr.ph.i3, label %._crit_edge.i4
  
  .lr.ph.i3:                                        ; preds = %.preheader.i2, %.lr.ph.i3
    %lsr.iv35 = phi i8* [ %scevgep36, %.lr.ph.i3 ], [ %lsr.iv32, %.preheader.i2 ]
    %lsr.iv29 = phi i8* [ %scevgep30, %.lr.ph.i3 ], [ %lsr.iv26, %.preheader.i2 ]
    %lsr.iv24 = phi i32 [ %lsr.iv.next25, %.lr.ph.i3 ], [ %116, %.preheader.i2 ]
    %122 = load i8, i8* %lsr.iv35, align 1, !tbaa !7
    store i8 %122, i8* %lsr.iv29, align 1, !tbaa !7
    %lsr.iv.next25 = add i32 %lsr.iv24, -1
    %scevgep30 = getelementptr i8, i8* %lsr.iv29, i32 1
    %scevgep36 = getelementptr i8, i8* %lsr.iv35, i32 1
    %exitcond.i = icmp eq i32 %lsr.iv.next25, 0
    br i1 %exitcond.i, label %._crit_edge.i4, label %.lr.ph.i3
  
  ._crit_edge.i4:                                   ; preds = %.lr.ph.i3, %.preheader.i2
    %123 = bitcast i8* %lsr.iv26 to i1*
    %124 = bitcast i8* %lsr.iv32 to i1*
    %125 = add nsw i32 %row.02.i, %incr.0.i
    %scevgep28 = getelementptr i1, i1* %123, i32 %120
    %126 = bitcast i1* %scevgep28 to i8*
    %scevgep34 = getelementptr i1, i1* %124, i32 %120
    %127 = bitcast i1* %scevgep34 to i8*
    %128 = icmp slt i32 %125, %117
    br i1 %128, label %.preheader.i2, label %Copy_Frame.exit
  
  Copy_Frame.exit:                                  ; preds = %._crit_edge.i4, %113
    %129 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 1), align 4, !tbaa !5
    %130 = getelementptr inbounds i8*, i8** %frame, i32 1
    %131 = load i8*, i8** %130, align 4, !tbaa !5
    %132 = load i32, i32* @Chroma_Width, align 4, !tbaa !1
    %133 = load i32, i32* @Chroma_Height, align 4, !tbaa !1
    %134 = icmp sgt i32 %133, 0
    br i1 %134, label %.preheader.lr.ph.i8, label %Copy_Frame.exit30
  
  .preheader.lr.ph.i8:                              ; preds = %Copy_Frame.exit
    %135 = icmp eq i32 %parity.0, 0
    %width..i6 = select i1 %135, i32 %132, i32 0
    %s.0.i7 = select i1 %field_mode.0, i32 0, i32 %width..i6
    %136 = mul i32 %incr.0.i, %132
    %scevgep18 = getelementptr i8, i8* %129, i32 %s.0.i7
    br label %.preheader.i12
  
  .preheader.i12:                                   ; preds = %._crit_edge.i16, %.preheader.lr.ph.i8
    %lsr.iv19 = phi i8* [ %143, %._crit_edge.i16 ], [ %scevgep18, %.preheader.lr.ph.i8 ]
    %lsr.iv13 = phi i8* [ %142, %._crit_edge.i16 ], [ %131, %.preheader.lr.ph.i8 ]
    %row.02.i11 = phi i32 [ 0, %.preheader.lr.ph.i8 ], [ %141, %._crit_edge.i16 ]
    %137 = icmp sgt i32 %132, 0
    br i1 %137, label %.lr.ph.i15, label %._crit_edge.i16
  
  .lr.ph.i15:                                       ; preds = %.preheader.i12, %.lr.ph.i15
    %lsr.iv22 = phi i8* [ %scevgep23, %.lr.ph.i15 ], [ %lsr.iv19, %.preheader.i12 ]
    %lsr.iv16 = phi i8* [ %scevgep17, %.lr.ph.i15 ], [ %lsr.iv13, %.preheader.i12 ]
    %lsr.iv11 = phi i32 [ %lsr.iv.next12, %.lr.ph.i15 ], [ %132, %.preheader.i12 ]
    %138 = load i8, i8* %lsr.iv22, align 1, !tbaa !7
    store i8 %138, i8* %lsr.iv16, align 1, !tbaa !7
    %lsr.iv.next12 = add i32 %lsr.iv11, -1
    %scevgep17 = getelementptr i8, i8* %lsr.iv16, i32 1
    %scevgep23 = getelementptr i8, i8* %lsr.iv22, i32 1
    %exitcond.i14 = icmp eq i32 %lsr.iv.next12, 0
    br i1 %exitcond.i14, label %._crit_edge.i16, label %.lr.ph.i15
  
  ._crit_edge.i16:                                  ; preds = %.lr.ph.i15, %.preheader.i12
    %139 = bitcast i8* %lsr.iv13 to i1*
    %140 = bitcast i8* %lsr.iv19 to i1*
    %141 = add nsw i32 %row.02.i11, %incr.0.i
    %scevgep15 = getelementptr i1, i1* %139, i32 %136
    %142 = bitcast i1* %scevgep15 to i8*
    %scevgep21 = getelementptr i1, i1* %140, i32 %136
    %143 = bitcast i1* %scevgep21 to i8*
    %144 = icmp slt i32 %141, %133
    br i1 %144, label %.preheader.i12, label %Copy_Frame.exit17
  
  Copy_Frame.exit17:                                ; preds = %._crit_edge.i16
    %.pr = load i32, i32* @Chroma_Height, align 4, !tbaa !1
    %145 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 2), align 4, !tbaa !5
    %146 = getelementptr inbounds i8*, i8** %frame, i32 2
    %147 = load i8*, i8** %146, align 4, !tbaa !5
    %148 = load i32, i32* @Chroma_Width, align 4, !tbaa !1
    %149 = icmp sgt i32 %.pr, 0
    br i1 %149, label %.preheader.lr.ph.i21, label %Copy_Frame.exit30
  
  .preheader.lr.ph.i21:                             ; preds = %Copy_Frame.exit17
    %150 = icmp eq i32 %parity.0, 0
    %width..i19 = select i1 %150, i32 %148, i32 0
    %s.0.i20 = select i1 %field_mode.0, i32 0, i32 %width..i19
    %151 = mul i32 %incr.0.i, %148
    %scevgep5 = getelementptr i8, i8* %145, i32 %s.0.i20
    br label %.preheader.i25
  
  .preheader.i25:                                   ; preds = %._crit_edge.i29, %.preheader.lr.ph.i21
    %lsr.iv6 = phi i8* [ %158, %._crit_edge.i29 ], [ %scevgep5, %.preheader.lr.ph.i21 ]
    %lsr.iv1 = phi i8* [ %157, %._crit_edge.i29 ], [ %147, %.preheader.lr.ph.i21 ]
    %row.02.i24 = phi i32 [ 0, %.preheader.lr.ph.i21 ], [ %156, %._crit_edge.i29 ]
    %152 = icmp sgt i32 %148, 0
    br i1 %152, label %.lr.ph.i28, label %._crit_edge.i29
  
  .lr.ph.i28:                                       ; preds = %.preheader.i25, %.lr.ph.i28
    %lsr.iv9 = phi i8* [ %scevgep10, %.lr.ph.i28 ], [ %lsr.iv6, %.preheader.i25 ]
    %lsr.iv3 = phi i8* [ %scevgep4, %.lr.ph.i28 ], [ %lsr.iv1, %.preheader.i25 ]
    %lsr.iv = phi i32 [ %lsr.iv.next, %.lr.ph.i28 ], [ %148, %.preheader.i25 ]
    %153 = load i8, i8* %lsr.iv9, align 1, !tbaa !7
    store i8 %153, i8* %lsr.iv3, align 1, !tbaa !7
    %lsr.iv.next = add i32 %lsr.iv, -1
    %scevgep4 = getelementptr i8, i8* %lsr.iv3, i32 1
    %scevgep10 = getelementptr i8, i8* %lsr.iv9, i32 1
    %exitcond.i27 = icmp eq i32 %lsr.iv.next, 0
    br i1 %exitcond.i27, label %._crit_edge.i29, label %.lr.ph.i28
  
  ._crit_edge.i29:                                  ; preds = %.lr.ph.i28, %.preheader.i25
    %154 = bitcast i8* %lsr.iv1 to i1*
    %155 = bitcast i8* %lsr.iv6 to i1*
    %156 = add nsw i32 %row.02.i24, %incr.0.i
    %scevgep = getelementptr i1, i1* %154, i32 %151
    %157 = bitcast i1* %scevgep to i8*
    %scevgep8 = getelementptr i1, i1* %155, i32 %151
    %158 = bitcast i1* %scevgep8 to i8*
    %159 = icmp slt i32 %156, %.pr
    br i1 %159, label %.preheader.i25, label %Copy_Frame.exit30
  
  Copy_Frame.exit30:                                ; preds = %._crit_edge.i29, %Copy_Frame.exit17, %Copy_Frame.exit
    ret void
  }
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.end(i64, i8* nocapture) #1
  
  ; Function Attrs: nounwind
  declare i32 @printf(i8* nocapture readonly, ...) #0
  
  ; Function Attrs: nounwind
  declare noalias %struct._IO_FILE* @fopen(i8* nocapture readonly, i8* nocapture readonly) #0
  
  ; Function Attrs: nounwind
  declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) #0
  
  ; Function Attrs: nounwind
  declare i32 @fseek(%struct._IO_FILE* nocapture, i32 signext, i32 signext) #0
  
  ; Function Attrs: nounwind
  declare i32 @fread(i8* nocapture, i32 signext, i32 signext, %struct._IO_FILE* nocapture) #0
  
  ; Function Attrs: nounwind
  declare i32 @fclose(%struct._IO_FILE* nocapture) #0
  
  declare i32 @open(i8* nocapture readonly, i32 signext, ...) #2
  
  declare i32 @read(...) #2
  
  declare i32 @close(...) #2
  
  ; Function Attrs: nounwind
  declare i32 @puts(i8* nocapture) #3
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { argmemonly nounwind "target-cpu"="mips32" }
  attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #3 = { nounwind "target-cpu"="mips32" }
  attributes #4 = { nounwind }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}
  !1 = !{!2, !2, i64 0}
  !2 = !{!"int", !3, i64 0}
  !3 = !{!"omnipotent char", !4, i64 0}
  !4 = !{!"Simple C/C++ TBAA"}
  !5 = !{!6, !6, i64 0}
  !6 = !{!"any pointer", !3, i64 0}
  !7 = !{!3, !3, i64 0}

...
---
name:            Substitute_Frame_Buffer
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
  - { id: 2, class: gpr32 }
  - { id: 3, class: gpr32 }
  - { id: 4, class: gpr32 }
  - { id: 5, class: gpr32 }
  - { id: 6, class: gpr32 }
  - { id: 7, class: gpr32 }
  - { id: 8, class: gpr32 }
  - { id: 9, class: gpr32 }
  - { id: 10, class: gpr32 }
  - { id: 11, class: gpr32 }
  - { id: 12, class: gpr32 }
  - { id: 13, class: gpr32 }
  - { id: 14, class: gpr32 }
  - { id: 15, class: gpr32 }
  - { id: 16, class: gpr32 }
  - { id: 17, class: gpr32 }
  - { id: 18, class: gpr32 }
  - { id: 19, class: gpr32 }
  - { id: 20, class: gpr32 }
  - { id: 21, class: gpr32 }
  - { id: 22, class: gpr32 }
  - { id: 23, class: gpr32 }
  - { id: 24, class: gpr32 }
  - { id: 25, class: gpr32 }
  - { id: 26, class: gpr32 }
  - { id: 27, class: gpr32 }
  - { id: 28, class: gpr32 }
  - { id: 29, class: gpr32 }
  - { id: 30, class: gpr32 }
  - { id: 31, class: gpr32 }
  - { id: 32, class: gpr32 }
  - { id: 33, class: gpr32 }
  - { id: 34, class: gpr32 }
  - { id: 35, class: gpr32 }
  - { id: 36, class: gpr32 }
  - { id: 37, class: gpr32 }
  - { id: 38, class: gpr32 }
  - { id: 39, class: gpr32 }
  - { id: 40, class: gpr32 }
  - { id: 41, class: gpr32 }
  - { id: 42, class: gpr32 }
  - { id: 43, class: gpr32 }
  - { id: 44, class: gpr32 }
  - { id: 45, class: gpr32 }
  - { id: 46, class: gpr32 }
  - { id: 47, class: gpr32 }
  - { id: 48, class: gpr32 }
  - { id: 49, class: gpr32 }
  - { id: 50, class: gpr32 }
  - { id: 51, class: gpr32 }
  - { id: 52, class: gpr32 }
  - { id: 53, class: gpr32 }
  - { id: 54, class: gpr32 }
  - { id: 55, class: gpr32 }
  - { id: 56, class: gpr32 }
  - { id: 57, class: gpr32 }
  - { id: 58, class: gpr32 }
  - { id: 59, class: gpr32 }
  - { id: 60, class: gpr32 }
  - { id: 61, class: gpr32 }
  - { id: 62, class: gpr32 }
  - { id: 63, class: gpr32 }
  - { id: 64, class: gpr32 }
  - { id: 65, class: gpr32 }
  - { id: 66, class: gpr32 }
  - { id: 67, class: gpr32 }
  - { id: 68, class: gpr32 }
  - { id: 69, class: gpr32 }
  - { id: 70, class: gpr32 }
  - { id: 71, class: gpr32 }
  - { id: 72, class: gpr32 }
  - { id: 73, class: gpr32 }
  - { id: 74, class: gpr32 }
  - { id: 75, class: gpr32 }
  - { id: 76, class: gpr32 }
  - { id: 77, class: gpr32 }
  - { id: 78, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%7' }
  - { reg: '%a1', virtual-reg: '%8' }
  - { reg: '%t9' }
  - { reg: '%v0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 102):
    successors: %bb.10(37), %bb.1(62)
    liveins: %a0, %a1, %t9, %v0
  
    %9 = ADDu %v0, %t9
    %8 = COPY %a1
    %7 = COPY %a0
    %10 = LW %9, target-flags(<unknown>) @Second_Field, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %0 = LW %10, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @Second_Field)
    %11 = OR %0, %8
    BEQ killed %11, %zero, %bb.10, implicit-def dead %at
    B %bb.1, implicit-def dead %at
  
  bb.1 (%ir-block.4, freq 64):
    successors: %bb.15(75), %bb.2(25)
  
    %14 = LW %9, target-flags(<unknown>) @picture_coding_type, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %1 = LW killed %14, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @picture_coding_type)
    BEQ %0, %zero, %bb.2, implicit-def dead %at
    B %bb.15, implicit-def dead %at
  
  bb.15 (%ir-block.4, freq 48):
    successors: %bb.6(66), %bb.2(33)
  
    %13 = LW %9, target-flags(<unknown>) @picture_structure, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %12 = LW %13, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @picture_structure, !tbaa !1)
    %15 = ADDiu %zero, 3
    BNE %12, killed %15, %bb.6, implicit-def dead %at
    B %bb.2, implicit-def dead %at
  
  bb.2 (%ir-block.9, freq 32):
    successors: %bb.3(50), %bb.4(50)
  
    %16 = ADDiu %zero, 2
    BNE %1, killed %16, %bb.4, implicit-def dead %at
    B %bb.3, implicit-def dead %at
  
  bb.3 (%ir-block.11, freq 16):
    successors: %bb.10(100)
  
    %34 = LW %9, target-flags(<unknown>) @Substitute_Picture_Filename, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %35 = LW killed %34, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @Substitute_Picture_Filename, !tbaa !5)
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %36 = ADDiu %7, -1
    %37 = LW %9, target-flags(<unknown>) @Read_Frame, <0x3ba0590> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %38 = ADDiu killed %37, target-flags(<unknown>) @Read_Frame
    %39 = LW %9, target-flags(<unknown>) @forward_reference_frame, <0x3bd0f30> = !{!"unison-memory-partition", i32 3} :: (load 4 from got)
    %a0 = COPY %35
    %a1 = COPY %39
    %a2 = COPY %36
    %t9 = COPY %38
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.10, implicit-def dead %at
  
  bb.4 (%ir-block.14, freq 16):
    successors: %bb.16(75), %bb.10(25)
  
    %20 = ADDiu %zero, 3
    BNE %1, killed %20, %bb.10, implicit-def dead %at
    B %bb.16, implicit-def dead %at
  
  bb.16 (%ir-block.14, freq 12):
    successors: %bb.5(66), %bb.10(33)
  
    %18 = LW %9, target-flags(<unknown>) @Substitute_Frame_Buffer.bgate, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %19 = LBu %18, target-flags(<unknown>) @Substitute_Frame_Buffer.bgate, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 1 from @Substitute_Frame_Buffer.bgate)
    %17 = XORi %19, 1
    %21 = ANDi %17, 1
    BEQ killed %21, %zero, %bb.10, implicit-def dead %at
    B %bb.5, implicit-def dead %at
  
  bb.5 (%ir-block.17, freq 8):
    successors: %bb.10(100)
  
    %22 = LW %9, target-flags(<unknown>) @Substitute_Frame_Buffer.previous_temporal_reference, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %23 = LW killed %22, target-flags(<unknown>) @Substitute_Frame_Buffer.previous_temporal_reference, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @Substitute_Frame_Buffer.previous_temporal_reference, !tbaa !1)
    %24 = ADDu %7, killed %23
    %25 = LW %9, target-flags(<unknown>) @Substitute_Picture_Filename, <0x3ba0590> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %26 = ADDiu killed %24, -1
    %27 = LW killed %25, 0, <0x3bd0f30> = !{!"unison-memory-partition", i32 3} :: (load 4 from @Substitute_Picture_Filename, !tbaa !5)
    %28 = LW %9, target-flags(<unknown>) @temporal_reference, <0x3bb81b0> = !{!"unison-memory-partition", i32 4} :: (load 4 from got)
    %29 = LW killed %28, 0, <0x3ba1000> = !{!"unison-memory-partition", i32 5} :: (load 4 from @temporal_reference, !tbaa !1)
    %30 = SUBu killed %26, killed %29
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %31 = LW %9, target-flags(<unknown>) @Read_Frame, <0x3ba1110> = !{!"unison-memory-partition", i32 6} :: (load 4 from got)
    %32 = ADDiu killed %31, target-flags(<unknown>) @Read_Frame
    %33 = LW %9, target-flags(<unknown>) @backward_reference_frame, <0x3bc66e0> = !{!"unison-memory-partition", i32 7} :: (load 4 from got)
    %a0 = COPY %27
    %a1 = COPY %33
    %a2 = COPY %30
    %t9 = COPY %32
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.10, implicit-def dead %at
  
  bb.6 (%ir-block.24, freq 31):
    successors: %bb.7(50), %bb.10(50)
  
    %40 = ADDiu %zero, 2
    BNE %1, killed %40, %bb.10, implicit-def dead %at
    B %bb.7, implicit-def dead %at
  
  bb.7 (%ir-block.26, freq 15):
    successors: %bb.9(50), %bb.8(50)
  
    %41 = LW %9, target-flags(<unknown>) @Substitute_Frame_Buffer.previous_picture_coding_type, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %42 = LW killed %41, target-flags(<unknown>) @Substitute_Frame_Buffer.previous_picture_coding_type, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @Substitute_Frame_Buffer.previous_picture_coding_type, !tbaa !1)
    %43 = ADDiu %zero, 1
    BEQ killed %42, killed %43, %bb.9, implicit-def dead %at
    B %bb.8, implicit-def dead %at
  
  bb.8 (%ir-block.29, freq 8):
    successors: %bb.9(100)
  
    %44 = LW %9, target-flags(<unknown>) @temporal_reference, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %45 = LW killed %44, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @temporal_reference, !tbaa !1)
    %46 = ADDu %7, killed %45
    %47 = LW %9, target-flags(<unknown>) @Substitute_Frame_Buffer.previous_anchor_temporal_reference, <0x3ba0590> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %48 = ADDiu killed %46, -1
    %49 = LW killed %47, target-flags(<unknown>) @Substitute_Frame_Buffer.previous_anchor_temporal_reference, <0x3bd0f30> = !{!"unison-memory-partition", i32 3} :: (load 4 from @Substitute_Frame_Buffer.previous_anchor_temporal_reference, !tbaa !1)
    %2 = SUBu killed %48, killed %49
  
  bb.9 (%ir-block.35, freq 15):
    successors: %bb.10(100)
  
    %3 = PHI %7, %bb.7, %2, %bb.8
    %50 = LW %9, target-flags(<unknown>) @Substitute_Picture_Filename, <0x3ba0590> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %51 = LW killed %50, 0, <0x3bd0f30> = !{!"unison-memory-partition", i32 3} :: (load 4 from @Substitute_Picture_Filename, !tbaa !5)
    %52 = LW %9, target-flags(<unknown>) @Read_Frame, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %53 = ADDiu killed %52, target-flags(<unknown>) @Read_Frame
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %54 = LW %9, target-flags(<unknown>) @current_frame, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %a0 = COPY %51
    %a1 = COPY %54
    %a2 = COPY %3
    %t9 = COPY %53
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
  
  bb.10 (%ir-block.37, freq 102):
    successors: %bb.17(75), %bb.11(25)
  
    %55 = LW %9, target-flags(<unknown>) @picture_coding_type, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %4 = LW killed %55, 0, <0x3bd0f30> = !{!"unison-memory-partition", i32 3} :: (load 4 from @picture_coding_type, !tbaa !1)
    %56 = ADDiu %zero, 3
    %57 = XOR %4, %56
    %58 = LW %9, target-flags(<unknown>) @picture_structure, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %60 = LW %9, target-flags(<unknown>) @Substitute_Frame_Buffer.bgate, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %61 = SLTiu killed %57, 1
    SB killed %61, killed %60, target-flags(<unknown>) @Substitute_Frame_Buffer.bgate, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (store 1 into @Substitute_Frame_Buffer.bgate)
    %6 = LW %10, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @Second_Field)
    %5 = LW killed %58, 0, <0x3ba0590> = !{!"unison-memory-partition", i32 2} :: (load 4 from @picture_structure, !tbaa !1)
    BEQ %5, %56, %bb.11, implicit-def dead %at
    B %bb.17, implicit-def dead %at
  
  bb.17 (%ir-block.37, freq 76):
    successors: %bb.12(66), %bb.11(33)
  
    BNE %6, %zero, %bb.12, implicit-def dead %at
    B %bb.11, implicit-def dead %at
  
  bb.11 (%ir-block.44, freq 51):
    successors: %bb.12(100)
  
    %62 = LW %9, target-flags(<unknown>) @temporal_reference, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %63 = LW killed %62, 0, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from @temporal_reference, !tbaa !1)
    %64 = LW %9, target-flags(<unknown>) @Substitute_Frame_Buffer.previous_temporal_reference, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    SW killed %63, killed %64, target-flags(<unknown>) @Substitute_Frame_Buffer.previous_temporal_reference, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (store 4 into @Substitute_Frame_Buffer.previous_temporal_reference, !tbaa !1)
  
  bb.12 (%ir-block.46, freq 102):
    successors: %bb.18(75), %bb.14(25)
  
    %66 = ADDiu %zero, 3
    %67 = XOR %5, %66
    %68 = SLTiu killed %67, 1
    %69 = SLTu %zero, %6
    %70 = OR killed %68, killed %69
    %72 = ADDiu %zero, 1
    BNE killed %70, killed %72, %bb.14, implicit-def dead %at
    B %bb.18, implicit-def dead %at
  
  bb.18 (%ir-block.46, freq 76):
    successors: %bb.13(66), %bb.14(33)
  
    %71 = XOR %4, %66
    %65 = SLTu %zero, %71
    BEQ %65, %zero, %bb.14, implicit-def dead %at
    B %bb.13, implicit-def dead %at
  
  bb.13 (%ir-block.50, freq 51):
    successors: %bb.14(100)
  
    %73 = LW %9, target-flags(<unknown>) @temporal_reference, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %74 = LW killed %73, 0, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from @temporal_reference, !tbaa !1)
    %75 = LW %9, target-flags(<unknown>) @Substitute_Frame_Buffer.previous_anchor_temporal_reference, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    SW killed %74, killed %75, target-flags(<unknown>) @Substitute_Frame_Buffer.previous_anchor_temporal_reference, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (store 4 into @Substitute_Frame_Buffer.previous_anchor_temporal_reference, !tbaa !1)
  
  bb.14 (%ir-block.52, freq 102):
    liveouts:
  
    %76 = LW %9, target-flags(<unknown>) @Substitute_Frame_Buffer.previous_picture_coding_type, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    SW %4, killed %76, target-flags(<unknown>) @Substitute_Frame_Buffer.previous_picture_coding_type, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (store 4 into @Substitute_Frame_Buffer.previous_picture_coding_type, !tbaa !1)
    RetRA

...
--- |
  ; ModuleID = '/home/romi/didaktoriko/unison/unison-experiments/experiments/test-input/c/mediabench/mips_zip/build-mips/mpeg2/mpeg2.subspic.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips--linux-gnu"
  
  %struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i32, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i32, i32, [40 x i8] }
  %struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
  
  @Substitute_Frame_Buffer.previous_temporal_reference = internal unnamed_addr global i32 0, align 4
  @Substitute_Frame_Buffer.previous_anchor_temporal_reference = internal unnamed_addr global i32 0, align 4
  @Substitute_Frame_Buffer.previous_picture_coding_type = internal unnamed_addr global i32 0, align 4
  @Substitute_Frame_Buffer.bgate = internal unnamed_addr global i1 false
  @Second_Field = external global i32, align 4
  @picture_structure = external global i32, align 4
  @picture_coding_type = external global i32, align 4
  @Substitute_Picture_Filename = external global i8*, align 4
  @forward_reference_frame = external global [3 x i8*], align 4
  @temporal_reference = external global i32, align 4
  @backward_reference_frame = external global [3 x i8*], align 4
  @current_frame = external global [3 x i8*], align 4
  @.str = private unnamed_addr constant [40 x i8] c"ERROR: framenum (%d) is less than zero\0A\00", align 1
  @Big_Picture_Flag = external global i32, align 4
  @substitute_frame = external global [3 x i8*], align 4
  @Coded_Picture_Width = external global i32, align 4
  @Coded_Picture_Height = external global i32, align 4
  @Chroma_Width = external global i32, align 4
  @Chroma_Height = external global i32, align 4
  @.str.2 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
  @Error_Text = external global [256 x i8], align 1
  @.str.3 = private unnamed_addr constant [18 x i8] c"Couldn't open %s\0A\00", align 1
  @chroma_format = external global i32, align 4
  @.str.4 = private unnamed_addr constant [42 x i8] c"ERROR: chroma_format (%d) not recognized\0A\00", align 1
  @.str.5 = private unnamed_addr constant [5 x i8] c"%s.Y\00", align 1
  @.str.6 = private unnamed_addr constant [5 x i8] c"%s.U\00", align 1
  @.str.7 = private unnamed_addr constant [5 x i8] c"%s.V\00", align 1
  @.str.9 = private unnamed_addr constant [49 x i8] c"was able to read only %d bytes of %d of file %s\0A\00", align 1
  @str = private unnamed_addr constant [31 x i8] c"was unable to substitute frame\00"
  
  ; Function Attrs: nounwind
  define void @Substitute_Frame_Buffer(i32 signext %bitstream_framenum, i32 signext %sequence_framenum) #0 {
    %1 = load i32, i32* @Second_Field, align 4
    %2 = or i32 %1, %sequence_framenum
    %3 = icmp eq i32 %2, 0
    br i1 %3, label %37, label %4
  
  ; <label>:4                                       ; preds = %0
    %5 = icmp ne i32 %1, 0
    %6 = load i32, i32* @picture_structure, align 4, !tbaa !1
    %7 = icmp ne i32 %6, 3
    %or.cond3 = and i1 %5, %7
    %8 = load i32, i32* @picture_coding_type, align 4
    br i1 %or.cond3, label %24, label %9
  
  ; <label>:9                                       ; preds = %4
    %10 = icmp eq i32 %8, 2
    br i1 %10, label %11, label %14
  
  ; <label>:11                                      ; preds = %9
    %12 = add nsw i32 %bitstream_framenum, -1
    %13 = load i8*, i8** @Substitute_Picture_Filename, align 4, !tbaa !5
    tail call fastcc void @Read_Frame(i8* %13, i8** nonnull getelementptr inbounds ([3 x i8*], [3 x i8*]* @forward_reference_frame, i32 0, i32 0), i32 signext %12)
    br label %37
  
  ; <label>:14                                      ; preds = %9
    %15 = icmp eq i32 %8, 3
    %.b = load i1, i1* @Substitute_Frame_Buffer.bgate, align 1
    %16 = xor i1 %.b, true
    %or.cond5 = and i1 %15, %16
    br i1 %or.cond5, label %17, label %37
  
  ; <label>:17                                      ; preds = %14
    %18 = load i32, i32* @Substitute_Frame_Buffer.previous_temporal_reference, align 4, !tbaa !1
    %19 = load i32, i32* @temporal_reference, align 4, !tbaa !1
    %20 = add i32 %bitstream_framenum, -1
    %21 = add i32 %20, %18
    %22 = sub i32 %21, %19
    %23 = load i8*, i8** @Substitute_Picture_Filename, align 4, !tbaa !5
    tail call fastcc void @Read_Frame(i8* %23, i8** nonnull getelementptr inbounds ([3 x i8*], [3 x i8*]* @backward_reference_frame, i32 0, i32 0), i32 signext %22)
    br label %37
  
  ; <label>:24                                      ; preds = %4
    %25 = icmp eq i32 %8, 2
    br i1 %25, label %26, label %37
  
  ; <label>:26                                      ; preds = %24
    %27 = load i32, i32* @Substitute_Frame_Buffer.previous_picture_coding_type, align 4, !tbaa !1
    %28 = icmp eq i32 %27, 1
    br i1 %28, label %35, label %29
  
  ; <label>:29                                      ; preds = %26
    %30 = load i32, i32* @temporal_reference, align 4, !tbaa !1
    %31 = load i32, i32* @Substitute_Frame_Buffer.previous_anchor_temporal_reference, align 4, !tbaa !1
    %32 = add i32 %bitstream_framenum, -1
    %33 = add i32 %32, %30
    %34 = sub i32 %33, %31
    br label %35
  
  ; <label>:35                                      ; preds = %29, %26
    %substitute_display_framenum.0 = phi i32 [ %34, %29 ], [ %bitstream_framenum, %26 ]
    %36 = load i8*, i8** @Substitute_Picture_Filename, align 4, !tbaa !5
    tail call fastcc void @Read_Frame(i8* %36, i8** nonnull getelementptr inbounds ([3 x i8*], [3 x i8*]* @current_frame, i32 0, i32 0), i32 signext %substitute_display_framenum.0)
    br label %37
  
  ; <label>:37                                      ; preds = %35, %24, %17, %14, %11, %0
    %38 = load i32, i32* @picture_coding_type, align 4, !tbaa !1
    %39 = icmp eq i32 %38, 3
    store i1 %39, i1* @Substitute_Frame_Buffer.bgate, align 1
    %40 = load i32, i32* @picture_structure, align 4, !tbaa !1
    %41 = icmp ne i32 %40, 3
    %42 = load i32, i32* @Second_Field, align 4
    %43 = icmp ne i32 %42, 0
    %or.cond11 = and i1 %41, %43
    br i1 %or.cond11, label %46, label %44
  
  ; <label>:44                                      ; preds = %37
    %45 = load i32, i32* @temporal_reference, align 4, !tbaa !1
    store i32 %45, i32* @Substitute_Frame_Buffer.previous_temporal_reference, align 4, !tbaa !1
    br label %46
  
  ; <label>:46                                      ; preds = %44, %37
    %47 = icmp ne i32 %42, 0
    %48 = icmp eq i32 %38, 3
    %.not = xor i1 %48, true
    %49 = icmp eq i32 %40, 3
    %or.cond13 = or i1 %49, %47
    %or.cond = and i1 %or.cond13, %.not
    br i1 %or.cond, label %50, label %52
  
  ; <label>:50                                      ; preds = %46
    %51 = load i32, i32* @temporal_reference, align 4, !tbaa !1
    store i32 %51, i32* @Substitute_Frame_Buffer.previous_anchor_temporal_reference, align 4, !tbaa !1
    br label %52
  
  ; <label>:52                                      ; preds = %50, %46
    store i32 %38, i32* @Substitute_Frame_Buffer.previous_picture_coding_type, align 4, !tbaa !1
    ret void
  }
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.start(i64, i8* nocapture) #1
  
  ; Function Attrs: nounwind
  define internal fastcc void @Read_Frame(i8* %fname, i8** nocapture readonly %frame, i32 signext %framenum) unnamed_addr #0 {
    %outname.i = alloca [256 x i8], align 1
    %name.i = alloca [256 x i8], align 1
    %1 = icmp slt i32 %framenum, 0
    br i1 %1, label %2, label %4
  
  ; <label>:2                                       ; preds = %0
    %3 = tail call i32 (i8*, ...) @printf(i8* nonnull getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i32 0, i32 0), i32 signext %framenum)
    br label %4
  
  ; <label>:4                                       ; preds = %2, %0
    %5 = load i32, i32* @Big_Picture_Flag, align 4, !tbaa !1
    %6 = icmp eq i32 %5, 0
    br i1 %6, label %.critedge, label %7
  
  ; <label>:7                                       ; preds = %4
    %8 = tail call %struct._IO_FILE* @fopen(i8* %fname, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0)) #4
    %9 = icmp eq %struct._IO_FILE* %8, null
    br i1 %9, label %102, label %10
  
  ; <label>:10                                      ; preds = %7
    %11 = load i32, i32* @Coded_Picture_Width, align 4, !tbaa !1
    %12 = load i32, i32* @Coded_Picture_Height, align 4, !tbaa !1
    %13 = mul nsw i32 %12, %11
    %14 = load i32, i32* @chroma_format, align 4, !tbaa !1
    switch i32 %14, label %22 [
      i32 3, label %15
      i32 2, label %17
      i32 1, label %19
    ]
  
  ; <label>:15                                      ; preds = %10
    %16 = mul nsw i32 %13, 3
    br label %24
  
  ; <label>:17                                      ; preds = %10
    %18 = shl nsw i32 %13, 1
    br label %24
  
  ; <label>:19                                      ; preds = %10
    %20 = mul nsw i32 %13, 3
    %21 = ashr i32 %20, 1
    br label %24
  
  ; <label>:22                                      ; preds = %10
    %23 = tail call i32 (i8*, ...) @printf(i8* nonnull getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i32 0, i32 0), i32 signext %14) #4
    br label %24
  
  ; <label>:24                                      ; preds = %22, %19, %17, %15
    %size.0.i = phi i32 [ %16, %15 ], [ %18, %17 ], [ %21, %19 ], [ %13, %22 ]
    %25 = mul nsw i32 %size.0.i, %framenum
    %26 = tail call i32 @fseek(%struct._IO_FILE* nonnull %8, i32 signext %25, i32 signext 0) #4
    %27 = load i32, i32* @Coded_Picture_Height, align 4, !tbaa !1
    %28 = icmp sgt i32 %27, 0
    br i1 %28, label %.lr.ph7.i, label %.preheader1.i
  
  .preheader1.i:                                    ; preds = %.lr.ph7.i, %24
    %29 = load i32, i32* @Chroma_Height, align 4, !tbaa !1
    %30 = icmp sgt i32 %29, 0
    br i1 %30, label %.lr.ph4.i, label %Extract_Components.exit
  
  .lr.ph7.i:                                        ; preds = %24, %.lr.ph7.i
    %line.05.i = phi i32 [ %36, %.lr.ph7.i ], [ 0, %24 ]
    %31 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 0), align 4, !tbaa !5
    %32 = load i32, i32* @Coded_Picture_Width, align 4, !tbaa !1
    %33 = mul nsw i32 %32, %line.05.i
    %34 = getelementptr inbounds i8, i8* %31, i32 %33
    %35 = tail call i32 @fread(i8* %34, i32 signext 1, i32 signext %32, %struct._IO_FILE* nonnull %8) #4
    %36 = add nuw nsw i32 %line.05.i, 1
    %37 = load i32, i32* @Coded_Picture_Height, align 4, !tbaa !1
    %38 = icmp slt i32 %36, %37
    br i1 %38, label %.lr.ph7.i, label %.preheader1.i
  
  .preheader.i:                                     ; preds = %.lr.ph4.i
    %39 = icmp sgt i32 %46, 0
    br i1 %39, label %.lr.ph.i, label %Extract_Components.exit
  
  .lr.ph4.i:                                        ; preds = %.preheader1.i, %.lr.ph4.i
    %line.13.i = phi i32 [ %45, %.lr.ph4.i ], [ 0, %.preheader1.i ]
    %40 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 1), align 4, !tbaa !5
    %41 = load i32, i32* @Chroma_Width, align 4, !tbaa !1
    %42 = mul nsw i32 %41, %line.13.i
    %43 = getelementptr inbounds i8, i8* %40, i32 %42
    %44 = tail call i32 @fread(i8* %43, i32 signext 1, i32 signext %41, %struct._IO_FILE* nonnull %8) #4
    %45 = add nuw nsw i32 %line.13.i, 1
    %46 = load i32, i32* @Chroma_Height, align 4, !tbaa !1
    %47 = icmp slt i32 %45, %46
    br i1 %47, label %.lr.ph4.i, label %.preheader.i
  
  .lr.ph.i:                                         ; preds = %.preheader.i, %.lr.ph.i
    %line.22.i = phi i32 [ %53, %.lr.ph.i ], [ 0, %.preheader.i ]
    %48 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 2), align 4, !tbaa !5
    %49 = load i32, i32* @Chroma_Width, align 4, !tbaa !1
    %50 = mul nsw i32 %49, %line.22.i
    %51 = getelementptr inbounds i8, i8* %48, i32 %50
    %52 = tail call i32 @fread(i8* %51, i32 signext 1, i32 signext %49, %struct._IO_FILE* nonnull %8) #4
    %53 = add nuw nsw i32 %line.22.i, 1
    %54 = load i32, i32* @Chroma_Height, align 4, !tbaa !1
    %55 = icmp slt i32 %53, %54
    br i1 %55, label %.lr.ph.i, label %Extract_Components.exit
  
  Extract_Components.exit:                          ; preds = %.lr.ph.i, %.preheader.i, %.preheader1.i
    %56 = tail call i32 @fclose(%struct._IO_FILE* nonnull %8) #4
    br label %104
  
  .critedge:                                        ; preds = %4
    %57 = bitcast [256 x i8]* %outname.i to i8*
    call void @llvm.lifetime.start(i64 256, i8* %57) #4
    %58 = bitcast [256 x i8]* %name.i to i8*
    call void @llvm.lifetime.start(i64 256, i8* %58) #4
    %59 = call i32 (i8*, i8*, ...) @sprintf(i8* %57, i8* %fname, i32 signext %framenum) #4
    %60 = call i32 (i8*, i8*, ...) @sprintf(i8* %58, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* %57) #4
    %61 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 0), align 4, !tbaa !5
    %62 = load i32, i32* @Coded_Picture_Width, align 4, !tbaa !1
    %63 = load i32, i32* @Coded_Picture_Height, align 4, !tbaa !1
    %64 = mul nsw i32 %63, %62
    %65 = call i32 (i8*, i32, ...) @open(i8* %58, i32 signext 0) #4
    %66 = call i32 bitcast (i32 (...)* @read to i32 (i32, i8*, i32)*)(i32 signext %65, i8* %61, i32 signext %64) #4
    %67 = icmp eq i32 %66, %64
    br i1 %67, label %Read_Component.exit.i, label %68
  
  ; <label>:68                                      ; preds = %.critedge
    %69 = bitcast [256 x i8]* %name.i to i8*
    %70 = call i32 (i8*, ...) @printf(i8* nonnull getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i32 0, i32 0), i32 signext %66, i32 signext %64, i8* %69) #4
    br label %Read_Component.exit.i
  
  Read_Component.exit.i:                            ; preds = %68, %.critedge
    %71 = bitcast [256 x i8]* %name.i to i8*
    %72 = bitcast [256 x i8]* %outname.i to i8*
    %73 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 signext %65) #4
    %74 = call i32 (i8*, i8*, ...) @sprintf(i8* %71, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i8* %72) #4
    %75 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 1), align 4, !tbaa !5
    %76 = load i32, i32* @Chroma_Width, align 4, !tbaa !1
    %77 = load i32, i32* @Chroma_Height, align 4, !tbaa !1
    %78 = mul nsw i32 %77, %76
    %79 = call i32 (i8*, i32, ...) @open(i8* %71, i32 signext 0) #4
    %80 = call i32 bitcast (i32 (...)* @read to i32 (i32, i8*, i32)*)(i32 signext %79, i8* %75, i32 signext %78) #4
    %81 = icmp eq i32 %80, %78
    br i1 %81, label %Read_Component.exit1.i, label %82
  
  ; <label>:82                                      ; preds = %Read_Component.exit.i
    %83 = bitcast [256 x i8]* %name.i to i8*
    %84 = call i32 (i8*, ...) @printf(i8* nonnull getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i32 0, i32 0), i32 signext %80, i32 signext %78, i8* %83) #4
    br label %Read_Component.exit1.i
  
  Read_Component.exit1.i:                           ; preds = %82, %Read_Component.exit.i
    %85 = bitcast [256 x i8]* %name.i to i8*
    %86 = bitcast [256 x i8]* %outname.i to i8*
    %87 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 signext %79) #4
    %88 = call i32 (i8*, i8*, ...) @sprintf(i8* %85, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* %86) #4
    %89 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 2), align 4, !tbaa !5
    %90 = load i32, i32* @Chroma_Width, align 4, !tbaa !1
    %91 = load i32, i32* @Chroma_Height, align 4, !tbaa !1
    %92 = mul nsw i32 %91, %90
    %93 = call i32 (i8*, i32, ...) @open(i8* %85, i32 signext 0) #4
    %94 = call i32 bitcast (i32 (...)* @read to i32 (i32, i8*, i32)*)(i32 signext %93, i8* %89, i32 signext %92) #4
    %95 = icmp eq i32 %94, %92
    br i1 %95, label %Read_Components.exit, label %96
  
  ; <label>:96                                      ; preds = %Read_Component.exit1.i
    %97 = bitcast [256 x i8]* %name.i to i8*
    %98 = call i32 (i8*, ...) @printf(i8* nonnull getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i32 0, i32 0), i32 signext %94, i32 signext %92, i8* %97) #4
    br label %Read_Components.exit
  
  Read_Components.exit:                             ; preds = %96, %Read_Component.exit1.i
    %99 = bitcast [256 x i8]* %name.i to i8*
    %100 = bitcast [256 x i8]* %outname.i to i8*
    %101 = call i32 bitcast (i32 (...)* @close to i32 (i32)*)(i32 signext %93) #4
    call void @llvm.lifetime.end(i64 256, i8* %99) #4
    call void @llvm.lifetime.end(i64 256, i8* %100) #4
    br label %104
  
  ; <label>:102                                     ; preds = %7
    %103 = tail call i32 (i8*, i8*, ...) @sprintf(i8* nonnull getelementptr inbounds ([256 x i8], [256 x i8]* @Error_Text, i32 0, i32 0), i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i32 0, i32 0), i8* %fname) #4
    %puts = tail call i32 @puts(i8* nonnull getelementptr inbounds ([31 x i8], [31 x i8]* @str, i32 0, i32 0))
    br label %104
  
  ; <label>:104                                     ; preds = %102, %Read_Components.exit, %Extract_Components.exit
    %105 = load i32, i32* @Second_Field, align 4, !tbaa !1
    %106 = icmp ne i32 %105, 0
    %107 = load i32, i32* @picture_coding_type, align 4
    %108 = icmp eq i32 %107, 2
    %or.cond = and i1 %106, %108
    br i1 %or.cond, label %109, label %113
  
  ; <label>:109                                     ; preds = %104
    %110 = load i32, i32* @picture_structure, align 4, !tbaa !1
    %111 = icmp eq i32 %110, 1
    %112 = zext i1 %111 to i32
    %phitmp = icmp eq i32 %110, 3
    br label %113
  
  ; <label>:113                                     ; preds = %109, %104
    %parity.0 = phi i32 [ %112, %109 ], [ 0, %104 ]
    %field_mode.0 = phi i1 [ %phitmp, %109 ], [ true, %104 ]
    %114 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 0), align 4, !tbaa !5
    %115 = load i8*, i8** %frame, align 4, !tbaa !5
    %116 = load i32, i32* @Coded_Picture_Width, align 4, !tbaa !1
    %117 = load i32, i32* @Coded_Picture_Height, align 4, !tbaa !1
    %incr.0.i = select i1 %field_mode.0, i32 1, i32 2
    %118 = icmp sgt i32 %117, 0
    br i1 %118, label %.preheader.lr.ph.i, label %Copy_Frame.exit
  
  .preheader.lr.ph.i:                               ; preds = %113
    %119 = icmp eq i32 %parity.0, 0
    %width..i = select i1 %119, i32 %116, i32 0
    %s.0.i = select i1 %field_mode.0, i32 0, i32 %width..i
    %120 = mul i32 %incr.0.i, %116
    %scevgep31 = getelementptr i8, i8* %114, i32 %s.0.i
    br label %.preheader.i2
  
  .preheader.i2:                                    ; preds = %._crit_edge.i4, %.preheader.lr.ph.i
    %lsr.iv32 = phi i8* [ %127, %._crit_edge.i4 ], [ %scevgep31, %.preheader.lr.ph.i ]
    %lsr.iv26 = phi i8* [ %126, %._crit_edge.i4 ], [ %115, %.preheader.lr.ph.i ]
    %row.02.i = phi i32 [ 0, %.preheader.lr.ph.i ], [ %125, %._crit_edge.i4 ]
    %121 = icmp sgt i32 %116, 0
    br i1 %121, label %.lr.ph.i3, label %._crit_edge.i4
  
  .lr.ph.i3:                                        ; preds = %.preheader.i2, %.lr.ph.i3
    %lsr.iv35 = phi i8* [ %scevgep36, %.lr.ph.i3 ], [ %lsr.iv32, %.preheader.i2 ]
    %lsr.iv29 = phi i8* [ %scevgep30, %.lr.ph.i3 ], [ %lsr.iv26, %.preheader.i2 ]
    %lsr.iv24 = phi i32 [ %lsr.iv.next25, %.lr.ph.i3 ], [ %116, %.preheader.i2 ]
    %122 = load i8, i8* %lsr.iv35, align 1, !tbaa !7
    store i8 %122, i8* %lsr.iv29, align 1, !tbaa !7
    %lsr.iv.next25 = add i32 %lsr.iv24, -1
    %scevgep30 = getelementptr i8, i8* %lsr.iv29, i32 1
    %scevgep36 = getelementptr i8, i8* %lsr.iv35, i32 1
    %exitcond.i = icmp eq i32 %lsr.iv.next25, 0
    br i1 %exitcond.i, label %._crit_edge.i4, label %.lr.ph.i3
  
  ._crit_edge.i4:                                   ; preds = %.lr.ph.i3, %.preheader.i2
    %123 = bitcast i8* %lsr.iv26 to i1*
    %124 = bitcast i8* %lsr.iv32 to i1*
    %125 = add nsw i32 %row.02.i, %incr.0.i
    %scevgep28 = getelementptr i1, i1* %123, i32 %120
    %126 = bitcast i1* %scevgep28 to i8*
    %scevgep34 = getelementptr i1, i1* %124, i32 %120
    %127 = bitcast i1* %scevgep34 to i8*
    %128 = icmp slt i32 %125, %117
    br i1 %128, label %.preheader.i2, label %Copy_Frame.exit
  
  Copy_Frame.exit:                                  ; preds = %._crit_edge.i4, %113
    %129 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 1), align 4, !tbaa !5
    %130 = getelementptr inbounds i8*, i8** %frame, i32 1
    %131 = load i8*, i8** %130, align 4, !tbaa !5
    %132 = load i32, i32* @Chroma_Width, align 4, !tbaa !1
    %133 = load i32, i32* @Chroma_Height, align 4, !tbaa !1
    %134 = icmp sgt i32 %133, 0
    br i1 %134, label %.preheader.lr.ph.i8, label %Copy_Frame.exit30
  
  .preheader.lr.ph.i8:                              ; preds = %Copy_Frame.exit
    %135 = icmp eq i32 %parity.0, 0
    %width..i6 = select i1 %135, i32 %132, i32 0
    %s.0.i7 = select i1 %field_mode.0, i32 0, i32 %width..i6
    %136 = mul i32 %incr.0.i, %132
    %scevgep18 = getelementptr i8, i8* %129, i32 %s.0.i7
    br label %.preheader.i12
  
  .preheader.i12:                                   ; preds = %._crit_edge.i16, %.preheader.lr.ph.i8
    %lsr.iv19 = phi i8* [ %143, %._crit_edge.i16 ], [ %scevgep18, %.preheader.lr.ph.i8 ]
    %lsr.iv13 = phi i8* [ %142, %._crit_edge.i16 ], [ %131, %.preheader.lr.ph.i8 ]
    %row.02.i11 = phi i32 [ 0, %.preheader.lr.ph.i8 ], [ %141, %._crit_edge.i16 ]
    %137 = icmp sgt i32 %132, 0
    br i1 %137, label %.lr.ph.i15, label %._crit_edge.i16
  
  .lr.ph.i15:                                       ; preds = %.preheader.i12, %.lr.ph.i15
    %lsr.iv22 = phi i8* [ %scevgep23, %.lr.ph.i15 ], [ %lsr.iv19, %.preheader.i12 ]
    %lsr.iv16 = phi i8* [ %scevgep17, %.lr.ph.i15 ], [ %lsr.iv13, %.preheader.i12 ]
    %lsr.iv11 = phi i32 [ %lsr.iv.next12, %.lr.ph.i15 ], [ %132, %.preheader.i12 ]
    %138 = load i8, i8* %lsr.iv22, align 1, !tbaa !7
    store i8 %138, i8* %lsr.iv16, align 1, !tbaa !7
    %lsr.iv.next12 = add i32 %lsr.iv11, -1
    %scevgep17 = getelementptr i8, i8* %lsr.iv16, i32 1
    %scevgep23 = getelementptr i8, i8* %lsr.iv22, i32 1
    %exitcond.i14 = icmp eq i32 %lsr.iv.next12, 0
    br i1 %exitcond.i14, label %._crit_edge.i16, label %.lr.ph.i15
  
  ._crit_edge.i16:                                  ; preds = %.lr.ph.i15, %.preheader.i12
    %139 = bitcast i8* %lsr.iv13 to i1*
    %140 = bitcast i8* %lsr.iv19 to i1*
    %141 = add nsw i32 %row.02.i11, %incr.0.i
    %scevgep15 = getelementptr i1, i1* %139, i32 %136
    %142 = bitcast i1* %scevgep15 to i8*
    %scevgep21 = getelementptr i1, i1* %140, i32 %136
    %143 = bitcast i1* %scevgep21 to i8*
    %144 = icmp slt i32 %141, %133
    br i1 %144, label %.preheader.i12, label %Copy_Frame.exit17
  
  Copy_Frame.exit17:                                ; preds = %._crit_edge.i16
    %.pr = load i32, i32* @Chroma_Height, align 4, !tbaa !1
    %145 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 2), align 4, !tbaa !5
    %146 = getelementptr inbounds i8*, i8** %frame, i32 2
    %147 = load i8*, i8** %146, align 4, !tbaa !5
    %148 = load i32, i32* @Chroma_Width, align 4, !tbaa !1
    %149 = icmp sgt i32 %.pr, 0
    br i1 %149, label %.preheader.lr.ph.i21, label %Copy_Frame.exit30
  
  .preheader.lr.ph.i21:                             ; preds = %Copy_Frame.exit17
    %150 = icmp eq i32 %parity.0, 0
    %width..i19 = select i1 %150, i32 %148, i32 0
    %s.0.i20 = select i1 %field_mode.0, i32 0, i32 %width..i19
    %151 = mul i32 %incr.0.i, %148
    %scevgep5 = getelementptr i8, i8* %145, i32 %s.0.i20
    br label %.preheader.i25
  
  .preheader.i25:                                   ; preds = %._crit_edge.i29, %.preheader.lr.ph.i21
    %lsr.iv6 = phi i8* [ %158, %._crit_edge.i29 ], [ %scevgep5, %.preheader.lr.ph.i21 ]
    %lsr.iv1 = phi i8* [ %157, %._crit_edge.i29 ], [ %147, %.preheader.lr.ph.i21 ]
    %row.02.i24 = phi i32 [ 0, %.preheader.lr.ph.i21 ], [ %156, %._crit_edge.i29 ]
    %152 = icmp sgt i32 %148, 0
    br i1 %152, label %.lr.ph.i28, label %._crit_edge.i29
  
  .lr.ph.i28:                                       ; preds = %.preheader.i25, %.lr.ph.i28
    %lsr.iv9 = phi i8* [ %scevgep10, %.lr.ph.i28 ], [ %lsr.iv6, %.preheader.i25 ]
    %lsr.iv3 = phi i8* [ %scevgep4, %.lr.ph.i28 ], [ %lsr.iv1, %.preheader.i25 ]
    %lsr.iv = phi i32 [ %lsr.iv.next, %.lr.ph.i28 ], [ %148, %.preheader.i25 ]
    %153 = load i8, i8* %lsr.iv9, align 1, !tbaa !7
    store i8 %153, i8* %lsr.iv3, align 1, !tbaa !7
    %lsr.iv.next = add i32 %lsr.iv, -1
    %scevgep4 = getelementptr i8, i8* %lsr.iv3, i32 1
    %scevgep10 = getelementptr i8, i8* %lsr.iv9, i32 1
    %exitcond.i27 = icmp eq i32 %lsr.iv.next, 0
    br i1 %exitcond.i27, label %._crit_edge.i29, label %.lr.ph.i28
  
  ._crit_edge.i29:                                  ; preds = %.lr.ph.i28, %.preheader.i25
    %154 = bitcast i8* %lsr.iv1 to i1*
    %155 = bitcast i8* %lsr.iv6 to i1*
    %156 = add nsw i32 %row.02.i24, %incr.0.i
    %scevgep = getelementptr i1, i1* %154, i32 %151
    %157 = bitcast i1* %scevgep to i8*
    %scevgep8 = getelementptr i1, i1* %155, i32 %151
    %158 = bitcast i1* %scevgep8 to i8*
    %159 = icmp slt i32 %156, %.pr
    br i1 %159, label %.preheader.i25, label %Copy_Frame.exit30
  
  Copy_Frame.exit30:                                ; preds = %._crit_edge.i29, %Copy_Frame.exit17, %Copy_Frame.exit
    ret void
  }
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.end(i64, i8* nocapture) #1
  
  ; Function Attrs: nounwind
  declare i32 @printf(i8* nocapture readonly, ...) #0
  
  ; Function Attrs: nounwind
  declare noalias %struct._IO_FILE* @fopen(i8* nocapture readonly, i8* nocapture readonly) #0
  
  ; Function Attrs: nounwind
  declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) #0
  
  ; Function Attrs: nounwind
  declare i32 @fseek(%struct._IO_FILE* nocapture, i32 signext, i32 signext) #0
  
  ; Function Attrs: nounwind
  declare i32 @fread(i8* nocapture, i32 signext, i32 signext, %struct._IO_FILE* nocapture) #0
  
  ; Function Attrs: nounwind
  declare i32 @fclose(%struct._IO_FILE* nocapture) #0
  
  declare i32 @open(i8* nocapture readonly, i32 signext, ...) #2
  
  declare i32 @read(...) #2
  
  declare i32 @close(...) #2
  
  ; Function Attrs: nounwind
  declare i32 @puts(i8* nocapture) #3
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { argmemonly nounwind "target-cpu"="mips32" }
  attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #3 = { nounwind "target-cpu"="mips32" }
  attributes #4 = { nounwind }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}
  !1 = !{!2, !2, i64 0}
  !2 = !{!"int", !3, i64 0}
  !3 = !{!"omnipotent char", !4, i64 0}
  !4 = !{!"Simple C/C++ TBAA"}
  !5 = !{!6, !6, i64 0}
  !6 = !{!"any pointer", !3, i64 0}
  !7 = !{!3, !3, i64 0}

...
---
name:            Read_Frame
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
  - { id: 2, class: gpr32 }
  - { id: 3, class: gpr32 }
  - { id: 4, class: gpr32 }
  - { id: 5, class: gpr32 }
  - { id: 6, class: gpr32 }
  - { id: 7, class: gpr32 }
  - { id: 8, class: gpr32 }
  - { id: 9, class: gpr32 }
  - { id: 10, class: gpr32 }
  - { id: 11, class: gpr32 }
  - { id: 12, class: gpr32 }
  - { id: 13, class: gpr32 }
  - { id: 14, class: gpr32 }
  - { id: 15, class: gpr32 }
  - { id: 16, class: gpr32 }
  - { id: 17, class: gpr32 }
  - { id: 18, class: gpr32 }
  - { id: 19, class: gpr32 }
  - { id: 20, class: gpr32 }
  - { id: 21, class: gpr32 }
  - { id: 22, class: gpr32 }
  - { id: 23, class: gpr32 }
  - { id: 24, class: gpr32 }
  - { id: 25, class: gpr32 }
  - { id: 26, class: gpr32 }
  - { id: 27, class: gpr32 }
  - { id: 28, class: gpr32 }
  - { id: 29, class: gpr32 }
  - { id: 30, class: gpr32 }
  - { id: 31, class: gpr32 }
  - { id: 32, class: gpr32 }
  - { id: 33, class: gpr32 }
  - { id: 34, class: gpr32 }
  - { id: 35, class: gpr32 }
  - { id: 36, class: gpr32 }
  - { id: 37, class: gpr32 }
  - { id: 38, class: gpr32 }
  - { id: 39, class: gpr32 }
  - { id: 40, class: gpr32 }
  - { id: 41, class: gpr32 }
  - { id: 42, class: gpr32 }
  - { id: 43, class: gpr32 }
  - { id: 44, class: gpr32 }
  - { id: 45, class: gpr32 }
  - { id: 46, class: gpr32 }
  - { id: 47, class: gpr32 }
  - { id: 48, class: gpr32 }
  - { id: 49, class: gpr32 }
  - { id: 50, class: gpr32 }
  - { id: 51, class: gpr32 }
  - { id: 52, class: gpr32 }
  - { id: 53, class: gpr32 }
  - { id: 54, class: gpr32 }
  - { id: 55, class: gpr32 }
  - { id: 56, class: gpr32 }
  - { id: 57, class: gpr32 }
  - { id: 58, class: gpr32 }
  - { id: 59, class: gpr32 }
  - { id: 60, class: gpr32 }
  - { id: 61, class: gpr32 }
  - { id: 62, class: gpr32 }
  - { id: 63, class: gpr32 }
  - { id: 64, class: gpr32 }
  - { id: 65, class: gpr32 }
  - { id: 66, class: gpr32 }
  - { id: 67, class: gpr32 }
  - { id: 68, class: gpr32 }
  - { id: 69, class: gpr32 }
  - { id: 70, class: gpr32 }
  - { id: 71, class: gpr32 }
  - { id: 72, class: gpr32 }
  - { id: 73, class: gpr32 }
  - { id: 74, class: gpr32 }
  - { id: 75, class: gpr32 }
  - { id: 76, class: gpr32 }
  - { id: 77, class: gpr32 }
  - { id: 78, class: gpr32 }
  - { id: 79, class: gpr32 }
  - { id: 80, class: gpr32 }
  - { id: 81, class: gpr32 }
  - { id: 82, class: gpr32 }
  - { id: 83, class: gpr32 }
  - { id: 84, class: gpr32 }
  - { id: 85, class: gpr32 }
  - { id: 86, class: gpr32 }
  - { id: 87, class: gpr32 }
  - { id: 88, class: gpr32 }
  - { id: 89, class: gpr32 }
  - { id: 90, class: gpr32 }
  - { id: 91, class: gpr32 }
  - { id: 92, class: gpr32 }
  - { id: 93, class: gpr32 }
  - { id: 94, class: gpr32 }
  - { id: 95, class: gpr32 }
  - { id: 96, class: gpr32 }
  - { id: 97, class: gpr32 }
  - { id: 98, class: gpr32 }
  - { id: 99, class: gpr32 }
  - { id: 100, class: gpr32 }
  - { id: 101, class: gpr32 }
  - { id: 102, class: gpr32 }
  - { id: 103, class: gpr32 }
  - { id: 104, class: gpr32 }
  - { id: 105, class: gpr32 }
  - { id: 106, class: gpr32 }
  - { id: 107, class: gpr32 }
  - { id: 108, class: gpr32 }
  - { id: 109, class: gpr32 }
  - { id: 110, class: gpr32 }
  - { id: 111, class: gpr32 }
  - { id: 112, class: gpr32 }
  - { id: 113, class: gpr32 }
  - { id: 114, class: gpr32 }
  - { id: 115, class: gpr32 }
  - { id: 116, class: gpr32 }
  - { id: 117, class: gpr32 }
  - { id: 118, class: gpr32 }
  - { id: 119, class: gpr32 }
  - { id: 120, class: gpr32 }
  - { id: 121, class: gpr32 }
  - { id: 122, class: gpr32 }
  - { id: 123, class: gpr32 }
  - { id: 124, class: gpr32 }
  - { id: 125, class: gpr32 }
  - { id: 126, class: gpr32 }
  - { id: 127, class: gpr32 }
  - { id: 128, class: gpr32 }
  - { id: 129, class: gpr32 }
  - { id: 130, class: gpr32 }
  - { id: 131, class: gpr32 }
  - { id: 132, class: gpr32 }
  - { id: 133, class: gpr32 }
  - { id: 134, class: gpr32 }
  - { id: 135, class: gpr32 }
  - { id: 136, class: gpr32 }
  - { id: 137, class: gpr32 }
  - { id: 138, class: gpr32 }
  - { id: 139, class: gpr32 }
  - { id: 140, class: gpr32 }
  - { id: 141, class: gpr32 }
  - { id: 142, class: gpr32 }
  - { id: 143, class: gpr32 }
  - { id: 144, class: gpr32 }
  - { id: 145, class: gpr32 }
  - { id: 146, class: gpr32 }
  - { id: 147, class: gpr32 }
  - { id: 148, class: gpr32 }
  - { id: 149, class: gpr32 }
  - { id: 150, class: gpr32 }
  - { id: 151, class: gpr32 }
  - { id: 152, class: gpr32 }
  - { id: 153, class: gpr32 }
  - { id: 154, class: gpr32 }
  - { id: 155, class: gpr32 }
  - { id: 156, class: gpr32 }
  - { id: 157, class: gpr32 }
  - { id: 158, class: gpr32 }
  - { id: 159, class: gpr32 }
  - { id: 160, class: gpr32 }
  - { id: 161, class: gpr32 }
  - { id: 162, class: gpr32 }
  - { id: 163, class: gpr32 }
  - { id: 164, class: gpr32 }
  - { id: 165, class: gpr32 }
  - { id: 166, class: gpr32 }
  - { id: 167, class: gpr32 }
  - { id: 168, class: gpr32 }
  - { id: 169, class: gpr32 }
  - { id: 170, class: gpr32 }
  - { id: 171, class: gpr32 }
  - { id: 172, class: gpr32 }
  - { id: 173, class: gpr32 }
  - { id: 174, class: gpr32 }
  - { id: 175, class: gpr32 }
  - { id: 176, class: gpr32 }
  - { id: 177, class: gpr32 }
  - { id: 178, class: gpr32 }
  - { id: 179, class: gpr32 }
  - { id: 180, class: gpr32 }
  - { id: 181, class: gpr32 }
  - { id: 182, class: gpr32 }
  - { id: 183, class: gpr32 }
  - { id: 184, class: gpr32 }
  - { id: 185, class: gpr32 }
  - { id: 186, class: gpr32 }
  - { id: 187, class: gpr32 }
  - { id: 188, class: gpr32 }
  - { id: 189, class: gpr32 }
  - { id: 190, class: gpr32 }
  - { id: 191, class: gpr32 }
  - { id: 192, class: gpr32 }
  - { id: 193, class: gpr32 }
  - { id: 194, class: gpr32 }
  - { id: 195, class: gpr32 }
  - { id: 196, class: gpr32 }
  - { id: 197, class: gpr32 }
  - { id: 198, class: gpr32 }
  - { id: 199, class: gpr32 }
  - { id: 200, class: gpr32 }
  - { id: 201, class: gpr32 }
  - { id: 202, class: gpr32 }
  - { id: 203, class: gpr32 }
  - { id: 204, class: gpr32 }
  - { id: 205, class: gpr32 }
  - { id: 206, class: gpr32 }
  - { id: 207, class: gpr32 }
  - { id: 208, class: gpr32 }
  - { id: 209, class: gpr32 }
  - { id: 210, class: gpr32 }
  - { id: 211, class: gpr32 }
  - { id: 212, class: gpr32 }
  - { id: 213, class: gpr32 }
  - { id: 214, class: gpr32 }
  - { id: 215, class: gpr32 }
  - { id: 216, class: gpr32 }
  - { id: 217, class: gpr32 }
  - { id: 218, class: gpr32 }
  - { id: 219, class: gpr32 }
  - { id: 220, class: gpr32 }
  - { id: 221, class: gpr32 }
  - { id: 222, class: gpr32 }
  - { id: 223, class: gpr32 }
  - { id: 224, class: gpr32 }
  - { id: 225, class: gpr32 }
  - { id: 226, class: gpr32 }
  - { id: 227, class: gpr32 }
  - { id: 228, class: gpr32 }
  - { id: 229, class: gpr32 }
  - { id: 230, class: gpr32 }
  - { id: 231, class: gpr32 }
  - { id: 232, class: gpr32 }
  - { id: 233, class: gpr32 }
  - { id: 234, class: gpr32 }
  - { id: 235, class: gpr32 }
  - { id: 236, class: gpr32 }
  - { id: 237, class: gpr32 }
  - { id: 238, class: gpr32 }
  - { id: 239, class: gpr32 }
  - { id: 240, class: gpr32 }
  - { id: 241, class: gpr32 }
  - { id: 242, class: gpr32 }
  - { id: 243, class: gpr32 }
  - { id: 244, class: gpr32 }
  - { id: 245, class: gpr32 }
  - { id: 246, class: gpr32 }
  - { id: 247, class: gpr32 }
  - { id: 248, class: gpr32 }
  - { id: 249, class: gpr32 }
  - { id: 250, class: gpr32 }
  - { id: 251, class: gpr32 }
  - { id: 252, class: gpr32 }
  - { id: 253, class: gpr32 }
  - { id: 254, class: gpr32 }
  - { id: 255, class: gpr32 }
  - { id: 256, class: gpr32 }
  - { id: 257, class: gpr32 }
  - { id: 258, class: gpr32 }
  - { id: 259, class: gpr32 }
  - { id: 260, class: gpr32 }
  - { id: 261, class: gpr32 }
  - { id: 262, class: gpr32 }
  - { id: 263, class: gpr32 }
  - { id: 264, class: gpr32 }
  - { id: 265, class: gpr32 }
  - { id: 266, class: gpr32 }
  - { id: 267, class: gpr32 }
  - { id: 268, class: gpr32 }
  - { id: 269, class: gpr32 }
  - { id: 270, class: gpr32 }
  - { id: 271, class: gpr32 }
  - { id: 272, class: gpr32 }
  - { id: 273, class: gpr32 }
  - { id: 274, class: gpr32 }
  - { id: 275, class: gpr32 }
  - { id: 276, class: gpr32 }
  - { id: 277, class: gpr32 }
  - { id: 278, class: gpr32 }
  - { id: 279, class: gpr32 }
  - { id: 280, class: gpr32 }
  - { id: 281, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%82' }
  - { reg: '%a1', virtual-reg: '%83' }
  - { reg: '%a2', virtual-reg: '%84' }
  - { reg: '%t9' }
  - { reg: '%v0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    4
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
stack:           
  - { id: 0, name: outname.i, offset: 0, size: 256, alignment: 4 }
  - { id: 1, name: name.i, offset: 0, size: 256, alignment: 4 }
body:             |
  bb.0 (%ir-block.0, freq 81):
    successors: %bb.1(37), %bb.2(62)
    liveins: %a0, %a1, %a2, %t9, %v0
  
    %85 = ADDu %v0, %t9
    %84 = COPY %a2
    %83 = COPY %a1
    %82 = COPY %a0
    BGEZ %84, %bb.2, implicit-def dead %at
    B %bb.1, implicit-def dead %at
  
  bb.1 (%ir-block.2, freq 30):
    successors: %bb.2(100)
  
    %86 = LW %85, target-flags(<unknown>) @.str, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %87 = ADDiu killed %86, target-flags(<unknown>) @.str
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %88 = LW %85, target-flags(<unknown>) @printf, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @printf)
    %a0 = COPY %87
    %a1 = COPY %84
    %gp = COPY %85
    %t9 = COPY %88
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
  
  bb.2 (%ir-block.4, freq 81):
    successors: %bb.16..critedge(37), %bb.3(62)
  
    %90 = LW %85, target-flags(<unknown>) @Big_Picture_Flag, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %91 = LW killed %90, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @Big_Picture_Flag, !tbaa !1)
    BEQ killed %91, %zero, %bb.16..critedge, implicit-def dead %at
    B %bb.3, implicit-def dead %at
  
  bb.3 (%ir-block.7, freq 51):
    successors: %bb.23(37), %bb.4(62)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %92 = LW %85, target-flags(<unknown>) @.str.2, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %93 = ADDiu killed %92, target-flags(<unknown>) @.str.2
    %94 = LW %85, target-flags(<unknown>) @fopen, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @fopen)
    %a0 = COPY %82
    %a1 = COPY %93
    %gp = COPY %85
    %t9 = COPY %94
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %95 = COPY %v0
    BEQ %95, %zero, %bb.23, implicit-def dead %at
    B %bb.4, implicit-def dead %at
  
  bb.4 (%ir-block.10, freq 32):
    successors: %bb.7(25), %bb.42(75)
  
    %0 = COPY %95
    %96 = LW %85, target-flags(<unknown>) @Coded_Picture_Width, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %97 = LW %96, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @Coded_Picture_Width, !tbaa !1)
    %98 = LW %85, target-flags(<unknown>) @Coded_Picture_Height, <0x3ba0590> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %99 = LW %98, 0, <0x3bd0f30> = !{!"unison-memory-partition", i32 3} :: (load 4 from @Coded_Picture_Height, !tbaa !1)
    %1 = MUL killed %99, killed %97, implicit-def dead %hi0, implicit-def dead %lo0
    %100 = LW %85, target-flags(<unknown>) @chroma_format, <0x3bb81b0> = !{!"unison-memory-partition", i32 4} :: (load 4 from got)
    %2 = LW killed %100, 0, <0x3ba1000> = !{!"unison-memory-partition", i32 5} :: (load 4 from @chroma_format, !tbaa !1)
    %101 = ADDiu %zero, 1
    BEQ %2, killed %101, %bb.7, implicit-def dead %at
    B %bb.42, implicit-def dead %at
  
  bb.42 (%ir-block.10, freq 24):
    successors: %bb.6(33), %bb.43(66)
  
    %102 = ADDiu %zero, 2
    BEQ %2, killed %102, %bb.6, implicit-def dead %at
    B %bb.43, implicit-def dead %at
  
  bb.43 (%ir-block.10, freq 15):
    successors: %bb.5(50), %bb.8(50)
  
    %103 = ADDiu %zero, 3
    BNE %2, killed %103, %bb.8, implicit-def dead %at
    B %bb.5, implicit-def dead %at
  
  bb.5 (%ir-block.15, freq 8):
    successors: %bb.9(100)
  
    %106 = SLL %1, 1
    %3 = ADDu killed %106, %1
    B %bb.9, implicit-def dead %at
  
  bb.6 (%ir-block.17, freq 8):
    successors: %bb.9(100)
  
    %4 = SLL %1, 1
    B %bb.9, implicit-def dead %at
  
  bb.7 (%ir-block.19, freq 8):
    successors: %bb.9(100)
  
    %104 = SLL %1, 1
    %105 = ADDu killed %104, %1
    %5 = SRA killed %105, 1
    B %bb.9, implicit-def dead %at
  
  bb.8 (%ir-block.22, freq 7):
    successors: %bb.9(100)
  
    %107 = LW %85, target-flags(<unknown>) @.str.4, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %108 = ADDiu killed %107, target-flags(<unknown>) @.str.4
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %109 = LW %85, target-flags(<unknown>) @printf, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @printf)
    %a0 = COPY %108
    %a1 = COPY %2
    %gp = COPY %85
    %t9 = COPY %109
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
  
  bb.9 (%ir-block.24, freq 32):
    successors: %bb.45(62), %bb.10..preheader1.i(37)
  
    %6 = PHI %5, %bb.7, %4, %bb.6, %3, %bb.5, %1, %bb.8
    %112 = MUL %6, %84, implicit-def dead %hi0, implicit-def dead %lo0
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %113 = LW %85, target-flags(<unknown>) @fseek, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @fseek)
    %111 = ADDiu %zero, 0
    %a0 = COPY %0
    %a1 = COPY %112
    %a2 = COPY %111
    %gp = COPY %85
    %t9 = COPY %113
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %116 = LW %98, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @Coded_Picture_Height, !tbaa !1)
    BLEZ %116, %bb.10..preheader1.i, implicit-def %at
  
  bb.45 (freq 20):
    successors: %bb.11..lr.ph7.i(100)
  
    %120 = LW %85, target-flags(<unknown>) @substitute_frame, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %123 = ADDiu %zero, 1
    B %bb.11..lr.ph7.i, implicit-def %at
  
  bb.10..preheader1.i (freq 32):
    successors: %bb.46(62), %bb.15.Extract_Components.exit(37)
  
    %130 = LW %85, target-flags(<unknown>) @Chroma_Height, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %131 = LW %130, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @Chroma_Height, !tbaa !1)
    BLEZ %131, %bb.15.Extract_Components.exit, implicit-def %at
  
  bb.46 (freq 20):
    successors: %bb.13..lr.ph4.i(100)
  
    %129 = ADDiu %zero, 0
    %132 = LW %85, target-flags(<unknown>) @Chroma_Width, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %135 = LW %85, target-flags(<unknown>) @substitute_frame, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %138 = ADDiu %zero, 1
    B %bb.13..lr.ph4.i, implicit-def %at
  
  bb.11..lr.ph7.i (freq 640):
    successors: %bb.11..lr.ph7.i(96), %bb.10..preheader1.i(3)
  
    %7 = PHI %111, %bb.45, %8, %bb.11..lr.ph7.i
    %118 = LW %96, 0, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from @Coded_Picture_Width, !tbaa !1)
    %119 = MUL %118, %7, implicit-def dead %hi0, implicit-def dead %lo0
    %121 = LW %120, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from `i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 0)`, !tbaa !5)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %122 = LW %85, target-flags(<unknown>) @fread, <0x3ba0590> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @fread)
    %124 = ADDu killed %121, killed %119
    %a0 = COPY %124
    %a1 = COPY %123
    %a2 = COPY %118
    %a3 = COPY %0
    %gp = COPY %85
    %t9 = COPY %122
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %8 = ADDiu %7, 1
    %127 = LW %98, 0, <0x3bd0f30> = !{!"unison-memory-partition", i32 3} :: (load 4 from @Coded_Picture_Height, !tbaa !1)
    %128 = SLT %8, killed %127
    BNE killed %128, %zero, %bb.11..lr.ph7.i, implicit-def dead %at
    B %bb.10..preheader1.i, implicit-def dead %at
  
  bb.12..preheader.i (freq 20):
    successors: %bb.47(62), %bb.15.Extract_Components.exit(37)
  
    BLEZ %11, %bb.15.Extract_Components.exit, implicit-def %at
  
  bb.47 (freq 12):
    successors: %bb.14..lr.ph.i(100)
  
    %143 = ADDiu %zero, 0
    %150 = ADDiu %zero, 1
    B %bb.14..lr.ph.i, implicit-def %at
  
  bb.13..lr.ph4.i (freq 640):
    successors: %bb.13..lr.ph4.i(96), %bb.12..preheader.i(3)
  
    %9 = PHI %129, %bb.46, %10, %bb.13..lr.ph4.i
    %133 = LW %132, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @Chroma_Width, !tbaa !1)
    %134 = MUL %133, %9, implicit-def dead %hi0, implicit-def dead %lo0
    %136 = LW %135, 4, <0x3ba0590> = !{!"unison-memory-partition", i32 2} :: (load 4 from `i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 1)`, !tbaa !5)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %137 = LW %85, target-flags(<unknown>) @fread, <0x3bd0f30> = !{!"unison-memory-partition", i32 3} :: (load 4 from call-entry @fread)
    %139 = ADDu killed %136, killed %134
    %a0 = COPY %139
    %a1 = COPY %138
    %a2 = COPY %133
    %a3 = COPY %0
    %gp = COPY %85
    %t9 = COPY %137
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %10 = ADDiu %9, 1
    %11 = LW %130, 0, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from @Chroma_Height, !tbaa !1)
    %142 = SLT %10, %11
    BNE killed %142, %zero, %bb.13..lr.ph4.i, implicit-def dead %at
    B %bb.12..preheader.i, implicit-def dead %at
  
  bb.14..lr.ph.i (freq 400):
    successors: %bb.14..lr.ph.i(96), %bb.15.Extract_Components.exit(3)
  
    %12 = PHI %143, %bb.47, %13, %bb.14..lr.ph.i
    %145 = LW %132, 0, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from @Chroma_Width, !tbaa !1)
    %146 = MUL %145, %12, implicit-def dead %hi0, implicit-def dead %lo0
    %148 = LW %135, 8, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from `i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 2)`, !tbaa !5)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %149 = LW %85, target-flags(<unknown>) @fread, <0x3ba0590> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @fread)
    %151 = ADDu killed %148, killed %146
    %a0 = COPY %151
    %a1 = COPY %150
    %a2 = COPY %145
    %a3 = COPY %0
    %t9 = COPY %149
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %13 = ADDiu %12, 1
    %154 = LW %130, 0, <0x3bd0f30> = !{!"unison-memory-partition", i32 3} :: (load 4 from @Chroma_Height, !tbaa !1)
    %155 = SLT %13, killed %154
    BNE killed %155, %zero, %bb.14..lr.ph.i, implicit-def dead %at
    B %bb.15.Extract_Components.exit, implicit-def dead %at
  
  bb.15.Extract_Components.exit (freq 32):
    successors: %bb.24(100)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %156 = LW %85, target-flags(<unknown>) @fclose, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @fclose)
    %a0 = COPY %0
    %gp = COPY %85
    %t9 = COPY %156
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    B %bb.24, implicit-def dead %at
  
  bb.16..critedge (freq 30):
    successors: %bb.18.Read_Component.exit.i(50), %bb.17(50)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %167 = LW %85, target-flags(<unknown>) @sprintf, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @sprintf)
    %168 = LEA_ADDiu %stack.0.outname.i, 0
    %a0 = COPY %168
    %a1 = COPY %82
    %a2 = COPY %84
    %gp = COPY %85
    %t9 = COPY %167
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %170 = LW %85, target-flags(<unknown>) @.str.5, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %171 = ADDiu killed %170, target-flags(<unknown>) @.str.5
    %172 = LEA_ADDiu %stack.1.name.i, 0
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %173 = LW %85, target-flags(<unknown>) @sprintf, <0x3ba0590> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @sprintf)
    %a0 = COPY %172
    %a1 = COPY %171
    %a2 = COPY %168
    %t9 = COPY %173
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %175 = LW %85, target-flags(<unknown>) @Coded_Picture_Width, <0x3bd0f30> = !{!"unison-memory-partition", i32 3} :: (load 4 from got)
    %176 = LW %85, target-flags(<unknown>) @Coded_Picture_Height, <0x3bb81b0> = !{!"unison-memory-partition", i32 4} :: (load 4 from got)
    %177 = LW %85, target-flags(<unknown>) @substitute_frame, <0x3ba1000> = !{!"unison-memory-partition", i32 5} :: (load 4 from got)
    %178 = ADDiu %zero, 0
    %179 = LW %177, 0, <0x3ba1110> = !{!"unison-memory-partition", i32 6} :: (load 4 from `i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 0)`, !tbaa !5)
    %180 = LW killed %176, 0, <0x3bc66e0> = !{!"unison-memory-partition", i32 7} :: (load 4 from @Coded_Picture_Height, !tbaa !1)
    %181 = LW killed %175, 0, <0x3b99740> = !{!"unison-memory-partition", i32 8} :: (load 4 from @Coded_Picture_Width, !tbaa !1)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %182 = LW %85, target-flags(<unknown>) @open, <0x3c2c170> = !{!"unison-memory-partition", i32 9} :: (load 4 from call-entry @open)
    %a0 = COPY %172
    %a1 = COPY %178
    %gp = COPY %85
    %t9 = COPY %182
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %183 = COPY %v0
    %14 = MUL killed %180, killed %181, implicit-def dead %hi0, implicit-def dead %lo0
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %184 = LW %85, target-flags(<unknown>) @read, <0x3b3d5d0> = !{!"unison-memory-partition", i32 10} :: (load 4 from call-entry @read)
    %a0 = COPY %183
    %a1 = COPY %179
    %a2 = COPY %14
    %gp = COPY %85
    %t9 = COPY %184
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %185 = COPY %v0
    %15 = COPY %183
    BEQ %185, %14, %bb.18.Read_Component.exit.i, implicit-def dead %at
    B %bb.17, implicit-def dead %at
  
  bb.17 (%ir-block.68, freq 15):
    successors: %bb.18.Read_Component.exit.i(100)
  
    %16 = COPY %185
    %186 = LW %85, target-flags(<unknown>) @.str.9, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %187 = ADDiu killed %186, target-flags(<unknown>) @.str.9
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %188 = LW %85, target-flags(<unknown>) @printf, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @printf)
    %189 = LEA_ADDiu %stack.1.name.i, 0
    %a0 = COPY %187
    %a1 = COPY %16
    %a2 = COPY %14
    %a3 = COPY %189
    %gp = COPY %85
    %t9 = COPY %188
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
  
  bb.18.Read_Component.exit.i (freq 30):
    successors: %bb.20.Read_Component.exit1.i(50), %bb.19(50)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %191 = LW %85, target-flags(<unknown>) @close, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @close)
    %a0 = COPY %15
    %gp = COPY %85
    %t9 = COPY %191
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %193 = LW %85, target-flags(<unknown>) @.str.6, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %194 = ADDiu killed %193, target-flags(<unknown>) @.str.6
    %195 = LW %85, target-flags(<unknown>) @sprintf, <0x3ba0590> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @sprintf)
    %196 = LEA_ADDiu %stack.1.name.i, 0
    %197 = LEA_ADDiu %stack.0.outname.i, 0
    %a0 = COPY %196
    %a1 = COPY %194
    %a2 = COPY %197
    %t9 = COPY %195
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %199 = LW %85, target-flags(<unknown>) @Chroma_Width, <0x3bd0f30> = !{!"unison-memory-partition", i32 3} :: (load 4 from got)
    %200 = LW %85, target-flags(<unknown>) @Chroma_Height, <0x3bb81b0> = !{!"unison-memory-partition", i32 4} :: (load 4 from got)
    %202 = ADDiu %zero, 0
    %203 = LW %177, 4, <0x3ba1000> = !{!"unison-memory-partition", i32 5} :: (load 4 from `i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 1)`, !tbaa !5)
    %204 = LW %200, 0, <0x3ba1110> = !{!"unison-memory-partition", i32 6} :: (load 4 from @Chroma_Height, !tbaa !1)
    %205 = LW %199, 0, <0x3bc66e0> = !{!"unison-memory-partition", i32 7} :: (load 4 from @Chroma_Width, !tbaa !1)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %206 = LW %85, target-flags(<unknown>) @open, <0x3b99740> = !{!"unison-memory-partition", i32 8} :: (load 4 from call-entry @open)
    %a0 = COPY %196
    %a1 = COPY %202
    %t9 = COPY %206
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %207 = COPY %v0
    %17 = MUL killed %204, killed %205, implicit-def dead %hi0, implicit-def dead %lo0
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %208 = LW %85, target-flags(<unknown>) @read, <0x3c2c170> = !{!"unison-memory-partition", i32 9} :: (load 4 from call-entry @read)
    %a0 = COPY %207
    %a1 = COPY %203
    %a2 = COPY %17
    %t9 = COPY %208
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %209 = COPY %v0
    %18 = COPY %207
    BEQ %209, %17, %bb.20.Read_Component.exit1.i, implicit-def dead %at
    B %bb.19, implicit-def dead %at
  
  bb.19 (%ir-block.82, freq 15):
    successors: %bb.20.Read_Component.exit1.i(100)
  
    %19 = COPY %209
    %210 = LW %85, target-flags(<unknown>) @.str.9, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %211 = ADDiu killed %210, target-flags(<unknown>) @.str.9
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %212 = LW %85, target-flags(<unknown>) @printf, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @printf)
    %213 = LEA_ADDiu %stack.1.name.i, 0
    %a0 = COPY %211
    %a1 = COPY %19
    %a2 = COPY %17
    %a3 = COPY %213
    %gp = COPY %85
    %t9 = COPY %212
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
  
  bb.20.Read_Component.exit1.i (freq 30):
    successors: %bb.22.Read_Components.exit(50), %bb.21(50)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %215 = LW %85, target-flags(<unknown>) @close, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @close)
    %a0 = COPY %18
    %t9 = COPY %215
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %217 = LW %85, target-flags(<unknown>) @.str.7, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %218 = ADDiu killed %217, target-flags(<unknown>) @.str.7
    %219 = LW %85, target-flags(<unknown>) @sprintf, <0x3ba0590> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @sprintf)
    %220 = LEA_ADDiu %stack.1.name.i, 0
    %221 = LEA_ADDiu %stack.0.outname.i, 0
    %a0 = COPY %220
    %a1 = COPY %218
    %a2 = COPY %221
    %t9 = COPY %219
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %226 = ADDiu %zero, 0
    %227 = LW %177, 8, <0x3bd0f30> = !{!"unison-memory-partition", i32 3} :: (load 4 from `i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 2)`, !tbaa !5)
    %228 = LW %200, 0, <0x3bb81b0> = !{!"unison-memory-partition", i32 4} :: (load 4 from @Chroma_Height, !tbaa !1)
    %229 = LW %199, 0, <0x3ba1000> = !{!"unison-memory-partition", i32 5} :: (load 4 from @Chroma_Width, !tbaa !1)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %230 = LW %85, target-flags(<unknown>) @open, <0x3ba1110> = !{!"unison-memory-partition", i32 6} :: (load 4 from call-entry @open)
    %a0 = COPY %220
    %a1 = COPY %226
    %t9 = COPY %230
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %231 = COPY %v0
    %20 = MUL killed %228, killed %229, implicit-def dead %hi0, implicit-def dead %lo0
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %232 = LW %85, target-flags(<unknown>) @read, <0x3bc66e0> = !{!"unison-memory-partition", i32 7} :: (load 4 from call-entry @read)
    %a0 = COPY %231
    %a1 = COPY %227
    %a2 = COPY %20
    %t9 = COPY %232
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %233 = COPY %v0
    %21 = COPY %231
    BEQ %233, %20, %bb.22.Read_Components.exit, implicit-def dead %at
    B %bb.21, implicit-def dead %at
  
  bb.21 (%ir-block.96, freq 15):
    successors: %bb.22.Read_Components.exit(100)
  
    %22 = COPY %233
    %234 = LW %85, target-flags(<unknown>) @.str.9, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %235 = ADDiu killed %234, target-flags(<unknown>) @.str.9
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %236 = LW %85, target-flags(<unknown>) @printf, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @printf)
    %237 = LEA_ADDiu %stack.1.name.i, 0
    %a0 = COPY %235
    %a1 = COPY %22
    %a2 = COPY %20
    %a3 = COPY %237
    %gp = COPY %85
    %t9 = COPY %236
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
  
  bb.22.Read_Components.exit (freq 30):
    successors: %bb.24(100)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %239 = LW %85, target-flags(<unknown>) @close, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @close)
    %a0 = COPY %21
    %t9 = COPY %239
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    B %bb.24, implicit-def dead %at
  
  bb.23 (%ir-block.102, freq 19):
    successors: %bb.24(100)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %158 = LW %85, target-flags(<unknown>) @.str.3, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %159 = ADDiu killed %158, target-flags(<unknown>) @.str.3
    %160 = LW %85, target-flags(<unknown>) @Error_Text, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %161 = LW %85, target-flags(<unknown>) @sprintf, <0x3ba0590> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @sprintf)
    %a0 = COPY %160
    %a1 = COPY %159
    %a2 = COPY %82
    %gp = COPY %85
    %t9 = COPY %161
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %163 = LW %85, target-flags(<unknown>) @str, <0x3bd0f30> = !{!"unison-memory-partition", i32 3} :: (load 4 from got)
    %164 = ADDiu killed %163, target-flags(<unknown>) @str
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %165 = LW %85, target-flags(<unknown>) @puts, <0x3bb81b0> = !{!"unison-memory-partition", i32 4} :: (load 4 from call-entry @puts)
    %a0 = COPY %164
    %gp = COPY %85
    %t9 = COPY %165
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
  
  bb.24 (%ir-block.104, freq 81):
    successors: %bb.44(75), %bb.26(25)
  
    %245 = LW %85, target-flags(<unknown>) @Second_Field, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %246 = LW killed %245, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @Second_Field, !tbaa !1)
    %242 = ADDiu %zero, 1
    %241 = ADDiu %zero, 0
    BEQ killed %246, %zero, %bb.26, implicit-def dead %at
    B %bb.44, implicit-def dead %at
  
  bb.44 (%ir-block.104, freq 61):
    successors: %bb.25(66), %bb.26(33)
  
    %244 = LW %85, target-flags(<unknown>) @picture_coding_type, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %243 = LW %244, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @picture_coding_type)
    %247 = ADDiu %zero, 2
    BNE %243, killed %247, %bb.26, implicit-def dead %at
    B %bb.25, implicit-def dead %at
  
  bb.25 (%ir-block.109, freq 40):
    successors: %bb.26(100)
  
    %248 = LW %85, target-flags(<unknown>) @picture_structure, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %249 = LW killed %248, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @picture_structure, !tbaa !1)
    %250 = ADDiu %zero, 3
    %251 = XOR %249, killed %250
    %252 = ADDiu %zero, 1
    %24 = SLTiu killed %251, 1
    %253 = XOR %249, killed %252
    %23 = SLTiu killed %253, 1
  
  bb.26 (%ir-block.113, freq 81):
    successors: %bb.27..preheader.lr.ph.i(62), %bb.31.Copy_Frame.exit(37)
  
    %25 = PHI %241, %bb.24, %241, %bb.44, %23, %bb.25
    %26 = PHI %242, %bb.24, %242, %bb.44, %24, %bb.25
    %255 = LW %85, target-flags(<unknown>) @Coded_Picture_Height, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %256 = ADDiu %zero, 2
    %31 = MOVN_I_I %242, %26, %256
    %30 = LW killed %255, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @Coded_Picture_Height, !tbaa !1)
    %258 = LW %85, target-flags(<unknown>) @substitute_frame, <0x3ba0590> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    BLEZ %30, %bb.31.Copy_Frame.exit, implicit-def dead %at
    B %bb.27..preheader.lr.ph.i, implicit-def dead %at
  
  bb.27..preheader.lr.ph.i (freq 51):
    successors: %bb.28..preheader.i2(100)
  
    %28 = LW %83, 0, <0x3ba0590> = !{!"unison-memory-partition", i32 2} :: (load 4 from %ir.frame, !tbaa !5)
    %254 = LW %85, target-flags(<unknown>) @Coded_Picture_Width, <0x3bd0f30> = !{!"unison-memory-partition", i32 3} :: (load 4 from got)
    %29 = LW %254, 0, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from @Coded_Picture_Width, !tbaa !1)
    %27 = LW %258, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from `i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 0)`, !tbaa !5)
    %32 = MUL %31, %29, implicit-def dead %hi0, implicit-def dead %lo0
    %259 = ADDiu %zero, 0
    %260 = MOVN_I_I %zero, %25, %29
    %261 = MOVN_I_I %zero, %26, %260
    %33 = ADDu %27, killed %261
  
  bb.28..preheader.i2 (freq 1638):
    successors: %bb.29..lr.ph.i3(62), %bb.30.._crit_edge.i4(37)
  
    %34 = PHI %33, %bb.27..preheader.lr.ph.i, %45, %bb.30.._crit_edge.i4
    %35 = PHI %28, %bb.27..preheader.lr.ph.i, %44, %bb.30.._crit_edge.i4
    %36 = PHI %259, %bb.27..preheader.lr.ph.i, %43, %bb.30.._crit_edge.i4
    BLEZ %29, %bb.30.._crit_edge.i4, implicit-def dead %at
    B %bb.29..lr.ph.i3, implicit-def dead %at
  
  bb.29..lr.ph.i3 (freq 32768):
    successors: %bb.30.._crit_edge.i4(3), %bb.29..lr.ph.i3(96)
  
    %37 = PHI %34, %bb.28..preheader.i2, %42, %bb.29..lr.ph.i3
    %38 = PHI %35, %bb.28..preheader.i2, %41, %bb.29..lr.ph.i3
    %39 = PHI %29, %bb.28..preheader.i2, %40, %bb.29..lr.ph.i3
    %262 = LBu %37, 0, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.lsr.iv35, !tbaa !7)
    SB killed %262, %38, 0, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.lsr.iv29, !tbaa !7)
    %42 = ADDiu %37, 1
    %41 = ADDiu %38, 1
    %40 = ADDiu %39, -1
    BNE %40, %zero, %bb.29..lr.ph.i3, implicit-def dead %at
    B %bb.30.._crit_edge.i4, implicit-def dead %at
  
  bb.30.._crit_edge.i4 (freq 1638):
    successors: %bb.28..preheader.i2(96), %bb.31.Copy_Frame.exit(3)
  
    %45 = ADDu %34, %32
    %44 = ADDu %35, %32
    %43 = ADDu %36, %31
    %263 = SLT %43, %30
    BNE killed %263, %zero, %bb.28..preheader.i2, implicit-def dead %at
    B %bb.31.Copy_Frame.exit, implicit-def dead %at
  
  bb.31.Copy_Frame.exit (freq 81):
    successors: %bb.32..preheader.lr.ph.i8(62), %bb.41.Copy_Frame.exit30(37)
  
    %264 = LW %85, target-flags(<unknown>) @Chroma_Height, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %49 = LW %264, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @Chroma_Height, !tbaa !1)
    BLEZ %49, %bb.41.Copy_Frame.exit30, implicit-def dead %at
    B %bb.32..preheader.lr.ph.i8, implicit-def dead %at
  
  bb.32..preheader.lr.ph.i8 (freq 51):
    successors: %bb.33..preheader.i12(100)
  
    %47 = LW %83, 4, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.130, !tbaa !5)
    %265 = LW %85, target-flags(<unknown>) @Chroma_Width, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %48 = LW %265, 0, <0x3ba0590> = !{!"unison-memory-partition", i32 2} :: (load 4 from @Chroma_Width, !tbaa !1)
    %46 = LW %258, 4, <0x3bd0f30> = !{!"unison-memory-partition", i32 3} :: (load 4 from `i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 1)`, !tbaa !5)
    %50 = MUL %31, %48, implicit-def dead %hi0, implicit-def dead %lo0
    %267 = ADDiu %zero, 0
    %268 = MOVN_I_I %zero, %25, %48
    %269 = MOVN_I_I %zero, %26, %268
    %51 = ADDu %46, killed %269
  
  bb.33..preheader.i12 (freq 1638):
    successors: %bb.34..lr.ph.i15(62), %bb.35.._crit_edge.i16(37)
  
    %52 = PHI %51, %bb.32..preheader.lr.ph.i8, %63, %bb.35.._crit_edge.i16
    %53 = PHI %47, %bb.32..preheader.lr.ph.i8, %62, %bb.35.._crit_edge.i16
    %54 = PHI %267, %bb.32..preheader.lr.ph.i8, %61, %bb.35.._crit_edge.i16
    BLEZ %48, %bb.35.._crit_edge.i16, implicit-def dead %at
    B %bb.34..lr.ph.i15, implicit-def dead %at
  
  bb.34..lr.ph.i15 (freq 32768):
    successors: %bb.35.._crit_edge.i16(3), %bb.34..lr.ph.i15(96)
  
    %55 = PHI %52, %bb.33..preheader.i12, %60, %bb.34..lr.ph.i15
    %56 = PHI %53, %bb.33..preheader.i12, %59, %bb.34..lr.ph.i15
    %57 = PHI %48, %bb.33..preheader.i12, %58, %bb.34..lr.ph.i15
    %270 = LBu %55, 0, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.lsr.iv22, !tbaa !7)
    SB killed %270, %56, 0, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.lsr.iv16, !tbaa !7)
    %60 = ADDiu %55, 1
    %59 = ADDiu %56, 1
    %58 = ADDiu %57, -1
    BNE %58, %zero, %bb.34..lr.ph.i15, implicit-def dead %at
    B %bb.35.._crit_edge.i16, implicit-def dead %at
  
  bb.35.._crit_edge.i16 (freq 1638):
    successors: %bb.33..preheader.i12(96), %bb.36.Copy_Frame.exit17(3)
  
    %63 = ADDu %52, %50
    %62 = ADDu %53, %50
    %61 = ADDu %54, %31
    %271 = SLT %61, %49
    BNE killed %271, %zero, %bb.33..preheader.i12, implicit-def dead %at
    B %bb.36.Copy_Frame.exit17, implicit-def dead %at
  
  bb.36.Copy_Frame.exit17 (freq 51):
    successors: %bb.37..preheader.lr.ph.i21(62), %bb.41.Copy_Frame.exit30(37)
  
    %64 = LW %264, 0, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from @Chroma_Height, !tbaa !1)
    BLEZ %64, %bb.41.Copy_Frame.exit30, implicit-def dead %at
    B %bb.37..preheader.lr.ph.i21, implicit-def dead %at
  
  bb.37..preheader.lr.ph.i21 (freq 32):
    successors: %bb.38..preheader.i25(100)
  
    %66 = LW %83, 8, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.146, !tbaa !5)
    %67 = LW %265, 0, <0x3b3d4b0> = !{!"unison-memory-partition", i32 1} :: (load 4 from @Chroma_Width, !tbaa !1)
    %65 = LW %258, 8, <0x3ba0590> = !{!"unison-memory-partition", i32 2} :: (load 4 from `i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @substitute_frame, i32 0, i32 2)`, !tbaa !5)
    %68 = MUL %31, %67, implicit-def dead %hi0, implicit-def dead %lo0
    %275 = ADDiu %zero, 0
    %276 = MOVN_I_I %zero, %25, %67
    %277 = MOVN_I_I %zero, %26, %276
    %69 = ADDu %65, killed %277
  
  bb.38..preheader.i25 (freq 1024):
    successors: %bb.39..lr.ph.i28(62), %bb.40.._crit_edge.i29(37)
  
    %70 = PHI %69, %bb.37..preheader.lr.ph.i21, %81, %bb.40.._crit_edge.i29
    %71 = PHI %66, %bb.37..preheader.lr.ph.i21, %80, %bb.40.._crit_edge.i29
    %72 = PHI %275, %bb.37..preheader.lr.ph.i21, %79, %bb.40.._crit_edge.i29
    BLEZ %67, %bb.40.._crit_edge.i29, implicit-def dead %at
    B %bb.39..lr.ph.i28, implicit-def dead %at
  
  bb.39..lr.ph.i28 (freq 20480):
    successors: %bb.40.._crit_edge.i29(3), %bb.39..lr.ph.i28(96)
  
    %73 = PHI %70, %bb.38..preheader.i25, %78, %bb.39..lr.ph.i28
    %74 = PHI %71, %bb.38..preheader.i25, %77, %bb.39..lr.ph.i28
    %75 = PHI %67, %bb.38..preheader.i25, %76, %bb.39..lr.ph.i28
    %278 = LBu %73, 0, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.lsr.iv9, !tbaa !7)
    SB killed %278, %74, 0, <0x3b3b680> = !{!"unison-memory-partition", i32 0} :: (store 1 into %ir.lsr.iv3, !tbaa !7)
    %78 = ADDiu %73, 1
    %77 = ADDiu %74, 1
    %76 = ADDiu %75, -1
    BNE %76, %zero, %bb.39..lr.ph.i28, implicit-def dead %at
    B %bb.40.._crit_edge.i29, implicit-def dead %at
  
  bb.40.._crit_edge.i29 (freq 1024):
    successors: %bb.38..preheader.i25(96), %bb.41.Copy_Frame.exit30(3)
  
    %81 = ADDu %70, %68
    %80 = ADDu %71, %68
    %79 = ADDu %72, %31
    %279 = SLT %79, %64
    BNE killed %279, %zero, %bb.38..preheader.i25, implicit-def dead %at
    B %bb.41.Copy_Frame.exit30, implicit-def dead %at
  
  bb.41.Copy_Frame.exit30 (freq 81):
    liveouts:
  
    RetRA

...
