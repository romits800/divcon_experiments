--- |
  ; ModuleID = '/home/romi/didaktoriko/unison/unison-experiments/experiments/mips/selected-functions/size-toplas/gcc.cse.cse_basic_block.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips--linux-gnu"
  
  %struct.qty_table_elem.1035 = type { %struct.rtx_def.1033*, %struct.rtx_def.1033*, %struct.rtx_def.1033*, i32, i32, i32, i32, i32 }
  %struct.rtx_def.1033 = type { i32, [1 x %union.rtunion_def.1034] }
  %union.rtunion_def.1034 = type { i32 }
  %struct.cse_reg_info.1036 = type { %struct.cse_reg_info.1036*, %struct.cse_reg_info.1036*, i32, i32, i32, i32 }
  %struct.table_elt.1037 = type { %struct.rtx_def.1033*, %struct.rtx_def.1033*, %struct.table_elt.1037*, %struct.table_elt.1037*, %struct.table_elt.1037*, %struct.table_elt.1037*, %struct.table_elt.1037*, %struct.table_elt.1037*, i32, i32, i32, i8, i8, i8 }
  %struct.cse_basic_block_data.1055 = type { i32, i32, i32, %struct.rtx_def.1033*, i32, [10 x %struct.branch_path.1056] }
  %struct.branch_path.1056 = type { %struct.rtx_def.1033*, i32 }
  %struct.rtvec_def.1054 = type { i32, [1 x %struct.rtx_def.1033*] }
  
  @rtx_class = external constant [153 x i8], align 1
  @cse_jumps_altered = external hidden unnamed_addr global i32, align 4
  @recorded_label_ref = external hidden unnamed_addr global i1
  @max_reg = external hidden unnamed_addr global i32, align 4
  @max_insn_uid = external hidden unnamed_addr global i32, align 4
  @flag_cse_follow_jumps = external global i32, align 4
  @flag_cse_skip_blocks = external global i32, align 4
  @cse_basic_block_start = external hidden unnamed_addr global i32, align 4
  @cse_basic_block_end = external hidden unnamed_addr global i32, align 4
  @max_qty = external hidden unnamed_addr global i32, align 4
  @qty_table = external hidden unnamed_addr global %struct.qty_table_elem.1035*, align 4
  @prev_insn = external hidden unnamed_addr global %struct.rtx_def.1033*, align 4
  @next_qty = external hidden unnamed_addr global i32, align 4
  @.str.4 = external hidden unnamed_addr constant [6 x i8], align 1
  @__FUNCTION__.cse_basic_block = external hidden unnamed_addr constant [16 x i8], align 1
  @reg_hash = external hidden unnamed_addr global [128 x %struct.cse_reg_info.1036*], align 4
  @cse_reg_info_used_list = external hidden unnamed_addr global %struct.cse_reg_info.1036*, align 4
  @cse_reg_info_free_list = external hidden unnamed_addr global %struct.cse_reg_info.1036*, align 4
  @cse_reg_info_used_list_end = external hidden unnamed_addr global %struct.cse_reg_info.1036*, align 4
  @cached_cse_reg_info = external hidden unnamed_addr global %struct.cse_reg_info.1036*, align 4
  @hard_regs_in_table = external hidden unnamed_addr global i32, align 4
  @table = external hidden unnamed_addr global [32 x %struct.table_elt.1037*], align 4
  @free_element_chain = external hidden unnamed_addr global %struct.table_elt.1037*, align 4
  @last_jump_equiv_class = external hidden unnamed_addr global %struct.table_elt.1037*, align 4
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.start(i64, i8* nocapture) #0
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.end(i64, i8* nocapture) #0
  
  ; Function Attrs: nounwind
  declare void @cse_end_of_basic_block(%struct.rtx_def.1033*, %struct.cse_basic_block_data.1055* nocapture, i32 signext, i32 signext, i32 signext) #1
  
  declare %struct.rtx_def.1033* @find_reg_note(%struct.rtx_def.1033*, i32 signext, %struct.rtx_def.1033*) #2
  
  declare noalias i8* @xmalloc(i32 signext) #2
  
  ; Function Attrs: nounwind
  define hidden fastcc %struct.rtx_def.1033* @cse_basic_block(%struct.rtx_def.1033* %from, %struct.rtx_def.1033* %to, %struct.branch_path.1056* nocapture readonly %next_branch, i32 signext %around_loop) unnamed_addr #1 {
    %val = alloca %struct.cse_basic_block_data.1055, align 4
    %1 = load i32, i32* @max_qty, align 4
    %2 = load i32, i32* @max_reg, align 4
    %3 = sub nsw i32 %1, %2
    %4 = shl i32 %3, 5
    %5 = tail call noalias i8* @xmalloc(i32 signext %4) #5
    %6 = bitcast i8* %5 to %struct.qty_table_elem.1035*
    %7 = load i32, i32* @max_reg, align 4
    %8 = sub i32 0, %7
    %9 = getelementptr inbounds %struct.qty_table_elem.1035, %struct.qty_table_elem.1035* %6, i32 %8
    store %struct.qty_table_elem.1035* %9, %struct.qty_table_elem.1035** @qty_table, align 4
    store i32 %7, i32* @next_qty, align 4
    tail call void @llvm.memset.p0i8.i32(i8* bitcast ([128 x %struct.cse_reg_info.1036*]* @reg_hash to i8*), i8 0, i32 512, i32 4, i1 false) #5
    %10 = load %struct.cse_reg_info.1036*, %struct.cse_reg_info.1036** @cse_reg_info_used_list, align 4
    %11 = icmp eq %struct.cse_reg_info.1036* %10, null
    br i1 %11, label %18, label %12
  
  ; <label>:12                                      ; preds = %0
    %13 = ptrtoint %struct.cse_reg_info.1036* %10 to i32
    %14 = load i32, i32* bitcast (%struct.cse_reg_info.1036** @cse_reg_info_free_list to i32*), align 4
    %15 = load %struct.cse_reg_info.1036*, %struct.cse_reg_info.1036** @cse_reg_info_used_list_end, align 4
    %16 = getelementptr inbounds %struct.cse_reg_info.1036, %struct.cse_reg_info.1036* %15, i32 0, i32 1
    %17 = bitcast %struct.cse_reg_info.1036** %16 to i32*
    store i32 %14, i32* %17, align 4
    store i32 %13, i32* bitcast (%struct.cse_reg_info.1036** @cse_reg_info_free_list to i32*), align 4
    store %struct.cse_reg_info.1036* null, %struct.cse_reg_info.1036** @cse_reg_info_used_list_end, align 4
    store %struct.cse_reg_info.1036* null, %struct.cse_reg_info.1036** @cse_reg_info_used_list, align 4
    br label %18
  
  ; <label>:18                                      ; preds = %12, %0
    store %struct.cse_reg_info.1036* null, %struct.cse_reg_info.1036** @cached_cse_reg_info, align 4
    store i32 0, i32* @hard_regs_in_table, align 4
    br label %19
  
  ; <label>:19                                      ; preds = %30, %18
    %i.01.i = phi i32 [ 0, %18 ], [ %31, %30 ]
    %20 = getelementptr inbounds [32 x %struct.table_elt.1037*], [32 x %struct.table_elt.1037*]* @table, i32 0, i32 %i.01.i
    %21 = load %struct.table_elt.1037*, %struct.table_elt.1037** %20, align 4
    %22 = icmp eq %struct.table_elt.1037* %21, null
    br i1 %22, label %30, label %23
  
  ; <label>:23                                      ; preds = %19
    store %struct.table_elt.1037* null, %struct.table_elt.1037** %20, align 4
    br label %24
  
  ; <label>:24                                      ; preds = %24, %23
    %last.0.i = phi %struct.table_elt.1037* [ %21, %23 ], [ %26, %24 ]
    %25 = getelementptr inbounds %struct.table_elt.1037, %struct.table_elt.1037* %last.0.i, i32 0, i32 2
    %26 = load %struct.table_elt.1037*, %struct.table_elt.1037** %25, align 4
    %27 = icmp eq %struct.table_elt.1037* %26, null
    br i1 %27, label %28, label %24
  
  ; <label>:28                                      ; preds = %24
    %29 = load i32, i32* bitcast (%struct.table_elt.1037** @free_element_chain to i32*), align 4
    %sunkaddr = ptrtoint %struct.table_elt.1037* %last.0.i to i32
    %sunkaddr4 = add i32 %sunkaddr, 8
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to i32*
    store i32 %29, i32* %sunkaddr5, align 4
    store %struct.table_elt.1037* %21, %struct.table_elt.1037** @free_element_chain, align 4
    br label %30
  
  ; <label>:30                                      ; preds = %28, %19
    %31 = add nuw nsw i32 %i.01.i, 1
    %exitcond.i = icmp eq i32 %31, 32
    br i1 %exitcond.i, label %new_basic_block.exit, label %19
  
  new_basic_block.exit:                             ; preds = %30
    %32 = icmp eq %struct.rtx_def.1033* %to, null
    br i1 %32, label %.preheader57, label %33
  
  ; <label>:33                                      ; preds = %new_basic_block.exit
    %34 = bitcast %struct.rtx_def.1033* %to to i32*
    %35 = load i32, i32* %34, align 4
    %.mask30 = and i32 %35, -65536
    %36 = icmp eq i32 %.mask30, 2359296
    br i1 %36, label %37, label %.preheader57
  
  ; <label>:37                                      ; preds = %33
    %38 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %to, i32 0, i32 1, i32 3, i32 0
    %39 = load i32, i32* %38, align 4
    %40 = add nsw i32 %39, 1
    store i32 %40, i32* %38, align 4
    br label %.preheader57
  
  .preheader57:                                     ; preds = %37, %33, %new_basic_block.exit
    %.014.ph = phi %struct.rtx_def.1033* [ %to, %33 ], [ %to, %37 ], [ null, %new_basic_block.exit ]
    %41 = icmp eq %struct.rtx_def.1033* %.014.ph, %from
    br i1 %41, label %.thread53, label %.lr.ph
  
  .lr.ph:                                           ; preds = %.preheader57
    br label %42
  
  ; <label>:42                                      ; preds = %241, %.lr.ph
    %.01475 = phi %struct.rtx_def.1033* [ %.014.ph, %.lr.ph ], [ %.317.ph, %241 ]
    %.02274 = phi %struct.branch_path.1056* [ %next_branch, %.lr.ph ], [ %.224.ph, %241 ]
    %insn.073 = phi %struct.rtx_def.1033* [ %from, %.lr.ph ], [ %244, %241 ]
    %num_insns.072 = phi i32 [ 0, %.lr.ph ], [ %num_insns.1, %241 ]
    %libcall_insn.071 = phi %struct.rtx_def.1033* [ null, %.lr.ph ], [ %libcall_insn.3.ph, %241 ]
    %to_usage.070 = phi i32 [ 0, %.lr.ph ], [ %to_usage.5.ph, %241 ]
    %43 = bitcast %struct.rtx_def.1033* %insn.073 to i32*
    %44 = load i32, i32* %43, align 4
    %45 = lshr i32 %44, 16
    %46 = icmp eq i32 %45, 37
    br i1 %46, label %flush_hash_table.exit, label %47
  
  ; <label>:47                                      ; preds = %42
    %48 = add nsw i32 %num_insns.072, 1
    %49 = icmp sgt i32 %num_insns.072, 1000
    br i1 %49, label %.preheader56, label %flush_hash_table.exit
  
  .preheader56:                                     ; preds = %47, %._crit_edge.i
    %i.03.i = phi i32 [ %62, %._crit_edge.i ], [ 0, %47 ]
    %50 = getelementptr inbounds [32 x %struct.table_elt.1037*], [32 x %struct.table_elt.1037*]* @table, i32 0, i32 %i.03.i
    %p.01.i = load %struct.table_elt.1037*, %struct.table_elt.1037** %50, align 4
    %51 = icmp eq %struct.table_elt.1037* %p.01.i, null
    br i1 %51, label %._crit_edge.i, label %.lr.ph.i31
  
  .lr.ph.i31:                                       ; preds = %.preheader56, %.backedge.i33
    %p.02.i = phi %struct.table_elt.1037* [ %p.0.i32, %.backedge.i33 ], [ %p.01.i, %.preheader56 ]
    %52 = bitcast %struct.table_elt.1037* %p.02.i to %struct.rtx_def.1033**
    %53 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %52, align 4
    %54 = bitcast %struct.rtx_def.1033* %53 to i32*
    %55 = load i32, i32* %54, align 4
    %.mask.i = and i32 %55, -65536
    %56 = icmp eq i32 %.mask.i, 3997696
    br i1 %56, label %57, label %61
  
  ; <label>:57                                      ; preds = %.lr.ph.i31
    %58 = getelementptr inbounds %struct.table_elt.1037, %struct.table_elt.1037* %p.02.i, i32 0, i32 10
    %59 = load i32, i32* %58, align 4
    tail call fastcc void @invalidate(%struct.rtx_def.1033* %53, i32 signext %59) #5
    br label %.backedge.i33
  
  .backedge.i33:                                    ; preds = %61, %57
    %p.0.i32 = load %struct.table_elt.1037*, %struct.table_elt.1037** %50, align 4
    %60 = icmp eq %struct.table_elt.1037* %p.0.i32, null
    br i1 %60, label %._crit_edge.i, label %.lr.ph.i31
  
  ; <label>:61                                      ; preds = %.lr.ph.i31
    tail call fastcc void @remove_from_table(%struct.table_elt.1037* nonnull %p.02.i, i32 signext %i.03.i) #5
    br label %.backedge.i33
  
  ._crit_edge.i:                                    ; preds = %.backedge.i33, %.preheader56
    %62 = add nuw nsw i32 %i.03.i, 1
    %exitcond.i34 = icmp eq i32 %62, 32
    br i1 %exitcond.i34, label %flush_hash_table.exit, label %.preheader56
  
  flush_hash_table.exit:                            ; preds = %._crit_edge.i, %47, %42
    %num_insns.1 = phi i32 [ %48, %47 ], [ %num_insns.072, %42 ], [ 0, %._crit_edge.i ]
    %63 = bitcast %struct.branch_path.1056* %.02274 to %struct.rtx_def.1033**
    %64 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %63, align 4
    %65 = icmp eq %struct.rtx_def.1033* %64, %insn.073
    br i1 %65, label %66, label %.thread
  
  ; <label>:66                                      ; preds = %flush_hash_table.exit
    %67 = getelementptr inbounds %struct.branch_path.1056, %struct.branch_path.1056* %.02274, i32 1
    %68 = getelementptr inbounds %struct.branch_path.1056, %struct.branch_path.1056* %.02274, i32 0, i32 1
    %69 = load i32, i32* %68, align 4
    switch i32 %69, label %71 [
      i32 1, label %.thread
      i32 0, label %70
    ]
  
  ; <label>:70                                      ; preds = %66
    tail call fastcc void @record_jump_equiv(%struct.rtx_def.1033* %insn.073, i32 signext 1)
    br label %.loopexit
  
  ; <label>:71                                      ; preds = %66
    %72 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.073, i32 0, i32 1, i32 2
    %73 = bitcast %union.rtunion_def.1034* %72 to %struct.rtx_def.1033**
    %74 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %73, align 4
    %75 = icmp eq %struct.rtx_def.1033* %74, null
    br i1 %75, label %.loopexit, label %.lr.ph.i35
  
  .lr.ph.i35:                                       ; preds = %71, %105
    %insn.01.i = phi %struct.rtx_def.1033* [ %108, %105 ], [ %74, %71 ]
    %76 = bitcast %struct.rtx_def.1033* %insn.01.i to i32*
    %77 = load i32, i32* %76, align 4
    %78 = lshr i32 %77, 16
    %79 = icmp eq i32 %78, 36
    br i1 %79, label %.loopexit, label %80
  
  ; <label>:80                                      ; preds = %.lr.ph.i35
    %81 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i32 %78
    %82 = load i8, i8* %81, align 1
    %83 = icmp eq i8 %82, 105
    br i1 %83, label %84, label %105
  
  ; <label>:84                                      ; preds = %80
    %85 = icmp eq i32 %78, 34
    br i1 %85, label %86, label %100
  
  ; <label>:86                                      ; preds = %84
    %87 = and i32 %77, 32
    %88 = icmp eq i32 %87, 0
    br i1 %88, label %.preheader.i36, label %invalidate_memory.exit.i
  
  .preheader.i36:                                   ; preds = %86, %._crit_edge.i.i
    %i.02.i.i = phi i32 [ %99, %._crit_edge.i.i ], [ 0, %86 ]
    %89 = getelementptr inbounds [32 x %struct.table_elt.1037*], [32 x %struct.table_elt.1037*]* @table, i32 0, i32 %i.02.i.i
    %90 = load %struct.table_elt.1037*, %struct.table_elt.1037** %89, align 4
    %91 = icmp eq %struct.table_elt.1037* %90, null
    br i1 %91, label %._crit_edge.i.i, label %.lr.ph.i.i
  
  .lr.ph.i.i:                                       ; preds = %.preheader.i36, %.backedge.i.i
    %p.01.i.i = phi %struct.table_elt.1037* [ %93, %.backedge.i.i ], [ %90, %.preheader.i36 ]
    %92 = getelementptr inbounds %struct.table_elt.1037, %struct.table_elt.1037* %p.01.i.i, i32 0, i32 2
    %93 = load %struct.table_elt.1037*, %struct.table_elt.1037** %92, align 4
    %94 = getelementptr inbounds %struct.table_elt.1037, %struct.table_elt.1037* %p.01.i.i, i32 0, i32 11
    %95 = load i8, i8* %94, align 4
    %96 = icmp eq i8 %95, 0
    br i1 %96, label %.backedge.i.i, label %98
  
  .backedge.i.i:                                    ; preds = %98, %.lr.ph.i.i
    %97 = icmp eq %struct.table_elt.1037* %93, null
    br i1 %97, label %._crit_edge.i.i, label %.lr.ph.i.i
  
  ; <label>:98                                      ; preds = %.lr.ph.i.i
    tail call fastcc void @remove_from_table(%struct.table_elt.1037* nonnull %p.01.i.i, i32 signext %i.02.i.i) #5
    br label %.backedge.i.i
  
  ._crit_edge.i.i:                                  ; preds = %.backedge.i.i, %.preheader.i36
    %99 = add nuw nsw i32 %i.02.i.i, 1
    %exitcond.i.i = icmp eq i32 %99, 32
    br i1 %exitcond.i.i, label %invalidate_memory.exit.i, label %.preheader.i36
  
  invalidate_memory.exit.i:                         ; preds = %._crit_edge.i.i, %86
    tail call fastcc void @invalidate_for_call() #5
    br label %100
  
  ; <label>:100                                     ; preds = %invalidate_memory.exit.i, %84
    %101 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.01.i, i32 0, i32 1, i32 3
    %102 = bitcast %union.rtunion_def.1034* %101 to %struct.rtx_def.1033**
    %103 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %102, align 4
    tail call fastcc void @invalidate_from_clobbers(%struct.rtx_def.1033* %103) #5
    %104 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %102, align 4
    tail call void @note_stores(%struct.rtx_def.1033* %104, void (%struct.rtx_def.1033*, %struct.rtx_def.1033*, i8*)* nonnull @invalidate_skipped_set, i8* null) #5
    br label %105
  
  ; <label>:105                                     ; preds = %100, %80
    %106 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.01.i, i32 0, i32 1, i32 2
    %107 = bitcast %union.rtunion_def.1034* %106 to %struct.rtx_def.1033**
    %108 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %107, align 4
    %109 = icmp eq %struct.rtx_def.1033* %108, null
    br i1 %109, label %.loopexit, label %.lr.ph.i35
  
  .loopexit:                                        ; preds = %.lr.ph.i35, %105, %71, %70
    store %struct.rtx_def.1033* %insn.073, %struct.rtx_def.1033** @prev_insn, align 4
    %110 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.073, i32 0, i32 1, i32 7
    %111 = bitcast %union.rtunion_def.1034* %110 to %struct.rtx_def.1033**
    %112 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %111, align 4
    br label %241
  
  .thread:                                          ; preds = %66, %flush_hash_table.exit
    %.123 = phi %struct.branch_path.1056* [ %.02274, %flush_hash_table.exit ], [ %67, %66 ]
    %113 = bitcast %struct.rtx_def.1033* %insn.073 to i32*
    %114 = load i32, i32* %113, align 4
    %115 = and i32 %114, 65280
    %116 = icmp eq i32 %115, 512
    br i1 %116, label %117, label %120
  
  ; <label>:117                                     ; preds = %.thread
    %118 = bitcast %struct.rtx_def.1033* %insn.073 to i32*
    %119 = and i32 %114, -65281
    store i32 %119, i32* %118, align 4
    br label %120
  
  ; <label>:120                                     ; preds = %117, %.thread
    %121 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i32 %45
    %122 = load i8, i8* %121, align 1
    %123 = icmp eq i8 %122, 105
    br i1 %123, label %124, label %152
  
  ; <label>:124                                     ; preds = %120
    %125 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.073, i32 0, i32 1, i32 6
    %126 = bitcast %union.rtunion_def.1034* %125 to %struct.rtx_def.1033**
    %127 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %126, align 4
    %128 = icmp eq %struct.rtx_def.1033* %127, null
    br i1 %128, label %.thread38, label %129
  
  ; <label>:129                                     ; preds = %124
    %130 = tail call fastcc %struct.rtx_def.1033* @cse_process_notes(%struct.rtx_def.1033* nonnull %127, %struct.rtx_def.1033* null)
    %sunkaddr6 = ptrtoint %struct.rtx_def.1033* %insn.073 to i32
    %sunkaddr7 = add i32 %sunkaddr6, 28
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to %struct.rtx_def.1033**
    store %struct.rtx_def.1033* %130, %struct.rtx_def.1033** %sunkaddr8, align 4
    %131 = icmp eq %struct.rtx_def.1033* %130, null
    br i1 %131, label %.thread38, label %132
  
  ; <label>:132                                     ; preds = %129
    %133 = tail call %struct.rtx_def.1033* @find_reg_note(%struct.rtx_def.1033* nonnull %insn.073, i32 signext 7, %struct.rtx_def.1033* null) #5
    %134 = icmp eq %struct.rtx_def.1033* %133, null
    br i1 %134, label %139, label %135
  
  ; <label>:135                                     ; preds = %132
    %136 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %133, i32 0, i32 1, i32 0
    %137 = bitcast %union.rtunion_def.1034* %136 to %struct.rtx_def.1033**
    %138 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %137, align 4
    br label %.thread38
  
  ; <label>:139                                     ; preds = %132
    %140 = tail call %struct.rtx_def.1033* @find_reg_note(%struct.rtx_def.1033* nonnull %insn.073, i32 signext 6, %struct.rtx_def.1033* null) #5
    %141 = icmp eq %struct.rtx_def.1033* %140, null
    %libcall_insn.0. = select i1 %141, %struct.rtx_def.1033* %libcall_insn.071, %struct.rtx_def.1033* null
    br label %.thread38
  
  .thread38:                                        ; preds = %139, %135, %129, %124
    %libcall_insn.1 = phi %struct.rtx_def.1033* [ %138, %135 ], [ %libcall_insn.071, %129 ], [ %libcall_insn.0., %139 ], [ %libcall_insn.071, %124 ]
    %142 = bitcast %struct.rtx_def.1033* %insn.073 to i32*
    tail call fastcc void @cse_insn(%struct.rtx_def.1033* nonnull %insn.073, %struct.rtx_def.1033* %libcall_insn.1)
    %143 = load i32, i32* %142, align 4
    %.mask29 = and i32 %143, -65536
    %144 = icmp ne i32 %.mask29, 2097152
    %.b = load i1, i1* @recorded_label_ref, align 1
    %or.cond = or i1 %.b, %144
    br i1 %or.cond, label %152, label %145
  
  ; <label>:145                                     ; preds = %.thread38
    %146 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.073, i32 0, i32 1, i32 3
    %147 = bitcast %union.rtunion_def.1034* %146 to %struct.rtx_def.1033**
    %148 = bitcast %struct.rtx_def.1033* %insn.073 to i8*
    %149 = tail call i32 @for_each_rtx(%struct.rtx_def.1033** %147, i32 (%struct.rtx_def.1033**, i8*)* nonnull @check_for_label_ref, i8* %148) #5
    %150 = icmp eq i32 %149, 0
    br i1 %150, label %152, label %151
  
  ; <label>:151                                     ; preds = %145
    store i1 true, i1* @recorded_label_ref, align 1
    br label %152
  
  ; <label>:152                                     ; preds = %151, %145, %.thread38, %120
    %libcall_insn.2 = phi %struct.rtx_def.1033* [ %libcall_insn.071, %120 ], [ %libcall_insn.1, %145 ], [ %libcall_insn.1, %.thread38 ], [ %libcall_insn.1, %151 ]
    %153 = tail call i32 @any_uncondjump_p(%struct.rtx_def.1033* nonnull %insn.073) #5
    %154 = icmp eq i32 %153, 0
    br i1 %154, label %173, label %155
  
  ; <label>:155                                     ; preds = %152
    %156 = icmp eq %struct.rtx_def.1033* %.01475, null
    br i1 %156, label %.thread52, label %161
  
  .thread52:                                        ; preds = %155
    %157 = load %struct.qty_table_elem.1035*, %struct.qty_table_elem.1035** @qty_table, align 4
    %158 = load i32, i32* @max_reg, align 4
    %159 = getelementptr inbounds %struct.qty_table_elem.1035, %struct.qty_table_elem.1035* %157, i32 %158
    %160 = bitcast %struct.qty_table_elem.1035* %159 to i8*
    tail call void @free(i8* %160) #5
    br label %372
  
  ; <label>:161                                     ; preds = %155
    %162 = bitcast %struct.rtx_def.1033* %.01475 to i32*
    %163 = load i32, i32* %162, align 4
    %164 = and i32 %163, 16
    %165 = icmp eq i32 %164, 0
    br i1 %165, label %.thread39, label %.thread53
  
  .thread39:                                        ; preds = %161
    %166 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.073, i32 0, i32 1, i32 7
    %167 = bitcast %union.rtunion_def.1034* %166 to %struct.rtx_def.1033**
    %168 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %167, align 4
    %169 = icmp eq %struct.rtx_def.1033* %168, %.01475
    %.to_usage.0 = select i1 %169, i32 1, i32 %to_usage.070
    %170 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %.01475, i32 0, i32 1, i32 1
    %171 = bitcast %union.rtunion_def.1034* %170 to %struct.rtx_def.1033**
    %172 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %171, align 4
    br label %175
  
  ; <label>:173                                     ; preds = %152
    %174 = icmp eq %struct.rtx_def.1033* %.01475, null
    br i1 %174, label %241, label %175
  
  ; <label>:175                                     ; preds = %173, %.thread39
    %insn.341 = phi %struct.rtx_def.1033* [ %172, %.thread39 ], [ %insn.073, %173 ]
    %to_usage.240 = phi i32 [ %.to_usage.0, %.thread39 ], [ %to_usage.070, %173 ]
    %176 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.341, i32 0, i32 1, i32 2
    %177 = bitcast %union.rtunion_def.1034* %176 to %struct.rtx_def.1033**
    %178 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %177, align 4
    %179 = icmp eq %struct.rtx_def.1033* %178, %.01475
    br i1 %179, label %180, label %241
  
  ; <label>:180                                     ; preds = %175
    %181 = bitcast %struct.rtx_def.1033* %.01475 to i32*
    %182 = load i32, i32* %181, align 4
    %.mask26 = and i32 %182, -65536
    %183 = icmp eq i32 %.mask26, 2359296
    br i1 %183, label %184, label %241
  
  ; <label>:184                                     ; preds = %180
    %185 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %.01475, i32 0, i32 1, i32 3, i32 0
    %186 = load i32, i32* %185, align 4
    %187 = add nsw i32 %186, -1
    store i32 %187, i32* %185, align 4
    %188 = icmp eq i32 %187, %to_usage.240
    br i1 %188, label %189, label %241
  
  ; <label>:189                                     ; preds = %184
    %190 = bitcast %struct.cse_basic_block_data.1055* %val to i8*
    call void @llvm.lifetime.start(i64 100, i8* %190) #5
    %191 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %.01475, i32 0, i32 1, i32 2
    %192 = bitcast %union.rtunion_def.1034* %191 to %struct.rtx_def.1033**
    %193 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %192, align 4
    %194 = icmp eq %struct.rtx_def.1033* %193, null
    br i1 %194, label %195, label %200
  
  ; <label>:195                                     ; preds = %189
    %196 = load %struct.qty_table_elem.1035*, %struct.qty_table_elem.1035** @qty_table, align 4
    %197 = load i32, i32* @max_reg, align 4
    %198 = getelementptr inbounds %struct.qty_table_elem.1035, %struct.qty_table_elem.1035* %196, i32 %197
    %199 = bitcast %struct.qty_table_elem.1035* %198 to i8*
    tail call void @free(i8* %199) #5
    br label %.thread54
  
  ; <label>:200                                     ; preds = %189
    %201 = tail call %struct.rtx_def.1033* @prev_nonnote_insn(%struct.rtx_def.1033* nonnull %.01475) #5
    %202 = icmp eq %struct.rtx_def.1033* %201, null
    br i1 %202, label %212, label %203
  
  ; <label>:203                                     ; preds = %200
    %204 = bitcast %struct.rtx_def.1033* %201 to i32*
    %205 = load i32, i32* %204, align 4
    %.mask28 = and i32 %205, -65536
    %206 = icmp eq i32 %.mask28, 2293760
    br i1 %206, label %207, label %212
  
  ; <label>:207                                     ; preds = %203
    %208 = load %struct.qty_table_elem.1035*, %struct.qty_table_elem.1035** @qty_table, align 4
    %209 = load i32, i32* @max_reg, align 4
    %210 = getelementptr inbounds %struct.qty_table_elem.1035, %struct.qty_table_elem.1035* %208, i32 %209
    %211 = bitcast %struct.qty_table_elem.1035* %210 to i8*
    tail call void @free(i8* %211) #5
    br label %.thread54
  
  ; <label>:212                                     ; preds = %203, %200
    %sunkaddr9 = ptrtoint %struct.cse_basic_block_data.1055* %val to i32
    %sunkaddr10 = add i32 %sunkaddr9, 16
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to i32*
    store i32 0, i32* %sunkaddr11, align 4
    call void @cse_end_of_basic_block(%struct.rtx_def.1033* nonnull %193, %struct.cse_basic_block_data.1055* nonnull %val, i32 signext 0, i32 signext 0, i32 signext 0)
    %sunkaddr12 = ptrtoint %struct.cse_basic_block_data.1055* %val to i32
    %sunkaddr13 = add i32 %sunkaddr12, 8
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to i32*
    %213 = load i32, i32* %sunkaddr14, align 4
    %214 = shl i32 %213, 1
    %215 = load i32, i32* @next_qty, align 4
    %216 = add nsw i32 %214, %215
    %217 = load i32, i32* @max_qty, align 4
    %218 = icmp sgt i32 %216, %217
    br i1 %218, label %239, label %219
  
  ; <label>:219                                     ; preds = %212
    %220 = bitcast %struct.cse_basic_block_data.1055* %val to i32*
    %221 = load i32, i32* %220, align 4
    store i32 %221, i32* @cse_basic_block_start, align 4
    %sunkaddr15 = ptrtoint %struct.cse_basic_block_data.1055* %val to i32
    %sunkaddr16 = add i32 %sunkaddr15, 4
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to i32*
    %222 = load i32, i32* %sunkaddr17, align 4
    store i32 %222, i32* @cse_basic_block_end, align 4
    %sunkaddr18 = ptrtoint %struct.cse_basic_block_data.1055* %val to i32
    %sunkaddr19 = add i32 %sunkaddr18, 12
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to %struct.rtx_def.1033**
    %223 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %sunkaddr20, align 4
    %224 = icmp eq %struct.rtx_def.1033* %223, null
    br i1 %224, label %233, label %225
  
  ; <label>:225                                     ; preds = %219
    %226 = bitcast %struct.rtx_def.1033* %223 to i32*
    %227 = load i32, i32* %226, align 4
    %.mask27 = and i32 %227, -65536
    %228 = icmp eq i32 %.mask27, 2359296
    br i1 %228, label %229, label %233
  
  ; <label>:229                                     ; preds = %225
    %230 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %223, i32 0, i32 1, i32 3, i32 0
    %231 = load i32, i32* %230, align 4
    %232 = add nsw i32 %231, 1
    store i32 %232, i32* %230, align 4
    br label %233
  
  ; <label>:233                                     ; preds = %229, %225, %219
    %234 = bitcast %struct.cse_basic_block_data.1055* %val to i8*
    %235 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %193, i32 0, i32 1, i32 1
    %236 = bitcast %union.rtunion_def.1034* %235 to %struct.rtx_def.1033**
    %237 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %236, align 4
    call void @llvm.lifetime.end(i64 100, i8* nonnull %234) #5
    br label %241
  
  .thread54:                                        ; preds = %207, %195
    %.1.ph.ph = phi %struct.rtx_def.1033* [ null, %195 ], [ %193, %207 ]
    %238 = bitcast %struct.cse_basic_block_data.1055* %val to i8*
    call void @llvm.lifetime.end(i64 100, i8* %238) #5
    br label %372
  
  ; <label>:239                                     ; preds = %212
    %240 = bitcast %struct.cse_basic_block_data.1055* %val to i8*
    call void @llvm.lifetime.end(i64 100, i8* nonnull %240) #5
    br label %.thread53
  
  ; <label>:241                                     ; preds = %233, %184, %180, %175, %173, %.loopexit
    %to_usage.5.ph = phi i32 [ %to_usage.070, %173 ], [ %to_usage.240, %175 ], [ %to_usage.240, %180 ], [ %to_usage.240, %184 ], [ 0, %233 ], [ %to_usage.070, %.loopexit ]
    %libcall_insn.3.ph = phi %struct.rtx_def.1033* [ %libcall_insn.2, %173 ], [ %libcall_insn.2, %175 ], [ %libcall_insn.2, %180 ], [ %libcall_insn.2, %184 ], [ %libcall_insn.2, %233 ], [ %libcall_insn.071, %.loopexit ]
    %insn.6.ph = phi %struct.rtx_def.1033* [ %insn.073, %173 ], [ %insn.341, %175 ], [ %insn.341, %180 ], [ %insn.341, %184 ], [ %237, %233 ], [ %112, %.loopexit ]
    %.224.ph = phi %struct.branch_path.1056* [ %.123, %173 ], [ %.123, %175 ], [ %.123, %180 ], [ %.123, %184 ], [ %.123, %233 ], [ %67, %.loopexit ]
    %.317.ph = phi %struct.rtx_def.1033* [ null, %173 ], [ %.01475, %175 ], [ %.01475, %180 ], [ %.01475, %184 ], [ %223, %233 ], [ %.01475, %.loopexit ]
    %242 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.6.ph, i32 0, i32 1, i32 2
    %243 = bitcast %union.rtunion_def.1034* %242 to %struct.rtx_def.1033**
    %244 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %243, align 4
    %245 = icmp eq %struct.rtx_def.1033* %244, %.317.ph
    br i1 %245, label %.thread53, label %42
  
  .thread53:                                        ; preds = %161, %241, %239, %.preheader57
    %.01462 = phi %struct.rtx_def.1033* [ %.01475, %239 ], [ %from, %.preheader57 ], [ %.317.ph, %241 ], [ %.01475, %161 ]
    %246 = load i32, i32* @next_qty, align 4
    %247 = load i32, i32* @max_qty, align 4
    %248 = icmp sgt i32 %246, %247
    br i1 %248, label %249, label %250
  
  ; <label>:249                                     ; preds = %.thread53
    tail call void @fancy_abort(i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i32 signext 7379, i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.cse_basic_block, i32 0, i32 0)) #6
    unreachable
  
  ; <label>:250                                     ; preds = %.thread53
    %251 = tail call %struct.rtx_def.1033* @prev_nonnote_insn(%struct.rtx_def.1033* %.01462) #5
    %252 = load i32, i32* @cse_jumps_altered, align 4
    %253 = icmp eq i32 %252, 0
    br i1 %253, label %261, label %254
  
  ; <label>:254                                     ; preds = %250
    %255 = load i32, i32* @flag_cse_follow_jumps, align 4
    %256 = load i32, i32* @flag_cse_skip_blocks, align 4
    %257 = or i32 %256, %255
    %258 = icmp eq i32 %257, 0
    %259 = icmp ne i32 %around_loop, 0
    %or.cond8 = and i1 %259, %258
    %260 = icmp ne %struct.rtx_def.1033* %.01462, null
    %or.cond11 = and i1 %260, %or.cond8
    br i1 %or.cond11, label %262, label %cse_around_loop.exit
  
  ; <label>:261                                     ; preds = %250
    %.old7 = icmp ne i32 %around_loop, 0
    %.old10 = icmp ne %struct.rtx_def.1033* %.01462, null
    %or.cond13 = and i1 %.old7, %.old10
    br i1 %or.cond13, label %262, label %cse_around_loop.exit
  
  ; <label>:262                                     ; preds = %261, %254
    %263 = bitcast %struct.rtx_def.1033* %.01462 to i32*
    %264 = load i32, i32* %263, align 4
    %.mask = and i32 %264, -65536
    %265 = icmp eq i32 %.mask, 2424832
    br i1 %265, label %266, label %cse_around_loop.exit
  
  ; <label>:266                                     ; preds = %262
    %267 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %.01462, i32 0, i32 1, i32 4, i32 0
    %268 = load i32, i32* %267, align 4
    %269 = icmp eq i32 %268, -95
    br i1 %269, label %270, label %cse_around_loop.exit
  
  ; <label>:270                                     ; preds = %266
    %271 = bitcast %struct.rtx_def.1033* %251 to i32*
    %272 = load i32, i32* %271, align 4
    %.mask25 = and i32 %272, -65536
    %273 = icmp eq i32 %.mask25, 2162688
    br i1 %273, label %274, label %cse_around_loop.exit
  
  ; <label>:274                                     ; preds = %270
    %275 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %251, i32 0, i32 1, i32 7
    %276 = bitcast %union.rtunion_def.1034* %275 to %struct.rtx_def.1033**
    %277 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %276, align 4
    %278 = icmp eq %struct.rtx_def.1033* %277, null
    br i1 %278, label %cse_around_loop.exit, label %279
  
  ; <label>:279                                     ; preds = %274
    %280 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %277, i32 0, i32 1, i32 3, i32 0
    %281 = load i32, i32* %280, align 4
    %282 = icmp eq i32 %281, 1
    br i1 %282, label %.preheader, label %cse_around_loop.exit
  
  .preheader:                                       ; preds = %279, %287
    %loop_start.pn.i = phi %struct.rtx_def.1033* [ %insn.0.i, %287 ], [ %277, %279 ]
    %insn.0.in.in.i = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %loop_start.pn.i, i32 0, i32 1, i32 1
    %insn.0.in.i = bitcast %union.rtunion_def.1034* %insn.0.in.in.i to %struct.rtx_def.1033**
    %insn.0.i = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %insn.0.in.i, align 4
    %cond.i = icmp eq %struct.rtx_def.1033* %insn.0.i, null
    br i1 %cond.i, label %cse_around_loop.exit, label %283
  
  ; <label>:283                                     ; preds = %.preheader
    %284 = bitcast %struct.rtx_def.1033* %insn.0.i to i32*
    %285 = load i32, i32* %284, align 4
    %.mask7.i = and i32 %285, -65536
    %286 = icmp eq i32 %.mask7.i, 2424832
    br i1 %286, label %287, label %cse_around_loop.exit
  
  ; <label>:287                                     ; preds = %283
    %288 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.0.i, i32 0, i32 1, i32 4, i32 0
    %289 = load i32, i32* %288, align 4
    %290 = icmp sgt i32 %289, -1
    br i1 %290, label %.preheader, label %291
  
  ; <label>:291                                     ; preds = %287
    %292 = icmp eq i32 %289, -96
    br i1 %292, label %293, label %cse_around_loop.exit
  
  ; <label>:293                                     ; preds = %291
    %294 = load %struct.table_elt.1037*, %struct.table_elt.1037** @last_jump_equiv_class, align 4
    %295 = icmp eq %struct.table_elt.1037* %294, null
    br i1 %295, label %.preheader.i, label %296
  
  ; <label>:296                                     ; preds = %293
    %297 = getelementptr inbounds %struct.table_elt.1037, %struct.table_elt.1037* %294, i32 0, i32 6
    %p.015.i = load %struct.table_elt.1037*, %struct.table_elt.1037** %297, align 4
    %298 = icmp eq %struct.table_elt.1037* %p.015.i, null
    br i1 %298, label %.preheader.i, label %.lr.ph18.i
  
  .lr.ph18.i:                                       ; preds = %296, %.thread87
    %p.016.i = phi %struct.table_elt.1037* [ %p.0.i, %.thread87 ], [ %p.015.i, %296 ]
    %299 = bitcast %struct.table_elt.1037* %p.016.i to %struct.rtx_def.1033**
    %300 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %299, align 4
    %301 = bitcast %struct.rtx_def.1033* %300 to i32*
    %302 = load i32, i32* %301, align 4
    %303 = lshr i32 %302, 16
    switch i32 %303, label %.thread87 [
      i32 66, label %310
      i32 61, label %310
      i32 63, label %304
      i32 64, label %311
      i32 133, label %311
    ]
  
  ; <label>:304                                     ; preds = %.lr.ph18.i
    %305 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %300, i32 0, i32 1, i32 0
    %306 = bitcast %union.rtunion_def.1034* %305 to i32**
    %307 = load i32*, i32** %306, align 4
    %308 = load i32, i32* %307, align 4
    %.mask6.i = and i32 %308, -65536
    %309 = icmp eq i32 %.mask6.i, 3997696
    br i1 %309, label %310, label %.thread87
  
  ; <label>:310                                     ; preds = %304, %.lr.ph18.i, %.lr.ph18.i
    tail call fastcc void @invalidate(%struct.rtx_def.1033* %300, i32 signext 0) #5
    br label %.thread87
  
  ; <label>:311                                     ; preds = %.lr.ph18.i, %.lr.ph18.i
    %312 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %300, i32 0, i32 1, i32 0
    %313 = bitcast %union.rtunion_def.1034* %312 to %struct.rtx_def.1033**
    %314 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %313, align 4
    %315 = lshr i32 %302, 8
    %316 = and i32 %315, 255
    tail call fastcc void @invalidate(%struct.rtx_def.1033* %314, i32 signext %316) #5
    br label %.thread87
  
  .thread87:                                        ; preds = %311, %310, %304, %.lr.ph18.i
    %317 = getelementptr inbounds %struct.table_elt.1037, %struct.table_elt.1037* %p.016.i, i32 0, i32 4
    %p.0.i = load %struct.table_elt.1037*, %struct.table_elt.1037** %317, align 4
    %318 = icmp eq %struct.table_elt.1037* %p.0.i, null
    br i1 %318, label %.preheader.i, label %.lr.ph18.i
  
  .preheader.i:                                     ; preds = %.critedge9.i, %342, %344, %346, %.backedge.i, %293, %296, %.thread87
    %loop_start.pn8.i = phi %struct.rtx_def.1033* [ %277, %.thread87 ], [ %277, %296 ], [ %277, %293 ], [ %insn.1.i, %.backedge.i ], [ %insn.1.i, %346 ], [ %insn.1.i, %344 ], [ %insn.1.i, %342 ], [ %insn.1.i, %.critedge9.i ]
    %insn.1.in.in.i = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %loop_start.pn8.i, i32 0, i32 1, i32 2
    %insn.1.in.i = bitcast %union.rtunion_def.1034* %insn.1.in.in.i to %struct.rtx_def.1033**
    %insn.1.i = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %insn.1.in.i, align 4
    %319 = bitcast %struct.rtx_def.1033* %insn.1.i to i32*
    %320 = load i32, i32* %319, align 4
    %321 = lshr i32 %320, 16
    switch i32 %321, label %322 [
      i32 34, label %cse_around_loop.exit
      i32 36, label %cse_around_loop.exit
    ]
  
  ; <label>:322                                     ; preds = %.preheader.i
    %323 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.1.i, i32 0, i32 1, i32 0, i32 0
    %324 = load i32, i32* %323, align 4
    %325 = load i32, i32* @max_insn_uid, align 4
    %326 = icmp slt i32 %324, %325
    br i1 %326, label %327, label %cse_around_loop.exit
  
  ; <label>:327                                     ; preds = %322
    %328 = icmp eq i32 %321, 37
    br i1 %328, label %329, label %.critedge9.i
  
  ; <label>:329                                     ; preds = %327
    %330 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.1.i, i32 0, i32 1, i32 4, i32 0
    %331 = load i32, i32* %330, align 4
    %332 = icmp eq i32 %331, -95
    br i1 %332, label %cse_around_loop.exit, label %.critedge9.i
  
  .critedge9.i:                                     ; preds = %329, %327
    %333 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i32 %321
    %334 = load i8, i8* %333, align 1
    %335 = icmp eq i8 %334, 105
    br i1 %335, label %336, label %.preheader.i
  
  ; <label>:336                                     ; preds = %.critedge9.i
    %337 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.1.i, i32 0, i32 1, i32 3
    %338 = bitcast %union.rtunion_def.1034* %337 to i32**
    %339 = load i32*, i32** %338, align 4
    %340 = load i32, i32* %339, align 4
    %341 = lshr i32 %340, 16
    switch i32 %341, label %344 [
      i32 47, label %342
      i32 49, label %342
    ]
  
  ; <label>:342                                     ; preds = %336, %336
    %343 = bitcast i32* %339 to %struct.rtx_def.1033*
    tail call fastcc void @cse_set_around_loop(%struct.rtx_def.1033* %343, %struct.rtx_def.1033* nonnull %insn.1.i, %struct.rtx_def.1033* nonnull %277) #5
    br label %.preheader.i
  
  ; <label>:344                                     ; preds = %336
    %.mask5.i = and i32 %340, -65536
    %345 = icmp eq i32 %.mask5.i, 2555904
    br i1 %345, label %346, label %.preheader.i
  
  ; <label>:346                                     ; preds = %344
    %347 = getelementptr inbounds i32, i32* %339, i32 1
    %348 = bitcast i32* %347 to %struct.rtvec_def.1054**
    %349 = load %struct.rtvec_def.1054*, %struct.rtvec_def.1054** %348, align 4
    %350 = bitcast %struct.rtvec_def.1054* %349 to i32*
    %351 = load i32, i32* %350, align 4
    %352 = icmp sgt i32 %351, 0
    br i1 %352, label %.lr.ph.i.preheader, label %.preheader.i
  
  .lr.ph.i.preheader:                               ; preds = %346
    %353 = add i32 %351, 1
    %354 = shl i32 %351, 2
    br label %.lr.ph.i
  
  .lr.ph.i:                                         ; preds = %.backedge..lr.ph_crit_edge.i, %.lr.ph.i.preheader
    %lsr.iv1 = phi i32 [ %lsr.iv.next2, %.backedge..lr.ph_crit_edge.i ], [ %354, %.lr.ph.i.preheader ]
    %lsr.iv = phi i32 [ %lsr.iv.next, %.backedge..lr.ph_crit_edge.i ], [ %353, %.lr.ph.i.preheader ]
    %355 = phi %struct.rtvec_def.1054* [ %.pre22.i, %.backedge..lr.ph_crit_edge.i ], [ %349, %.lr.ph.i.preheader ]
    %356 = bitcast %struct.rtvec_def.1054* %355 to i8*
    %uglygep = getelementptr i8, i8* %356, i32 %lsr.iv1
    %uglygep3 = bitcast i8* %uglygep to i32**
    %357 = load i32*, i32** %uglygep3, align 4
    %358 = load i32, i32* %357, align 4
    %359 = lshr i32 %358, 16
    switch i32 %359, label %.backedge.i [
      i32 47, label %361
      i32 49, label %361
    ]
  
  .backedge.i:                                      ; preds = %361, %.lr.ph.i
    %lsr.iv.next = add i32 %lsr.iv, -1
    %lsr.iv.next2 = add i32 %lsr.iv1, -4
    %360 = icmp sgt i32 %lsr.iv.next, 1
    br i1 %360, label %.backedge..lr.ph_crit_edge.i, label %.preheader.i
  
  .backedge..lr.ph_crit_edge.i:                     ; preds = %.backedge.i
    %sunkaddr21 = ptrtoint %struct.rtx_def.1033* %insn.1.i to i32
    %sunkaddr22 = add i32 %sunkaddr21, 16
    %sunkaddr23 = inttoptr i32 %sunkaddr22 to %struct.rtx_def.1033**
    %.pre.i = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %sunkaddr23, align 4
    %.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %.pre.i, i32 0, i32 1, i32 0
    %.phi.trans.insert21.i = bitcast %union.rtunion_def.1034* %.phi.trans.insert.i to %struct.rtvec_def.1054**
    %.pre22.i = load %struct.rtvec_def.1054*, %struct.rtvec_def.1054** %.phi.trans.insert21.i, align 4
    br label %.lr.ph.i
  
  ; <label>:361                                     ; preds = %.lr.ph.i, %.lr.ph.i
    %362 = bitcast i32* %357 to %struct.rtx_def.1033*
    tail call fastcc void @cse_set_around_loop(%struct.rtx_def.1033* %362, %struct.rtx_def.1033* nonnull %insn.1.i, %struct.rtx_def.1033* nonnull %277) #5
    br label %.backedge.i
  
  cse_around_loop.exit:                             ; preds = %.preheader, %283, %.preheader.i, %.preheader.i, %322, %329, %291, %279, %274, %270, %266, %262, %261, %254
    %363 = load %struct.qty_table_elem.1035*, %struct.qty_table_elem.1035** @qty_table, align 4
    %364 = load i32, i32* @max_reg, align 4
    %365 = getelementptr inbounds %struct.qty_table_elem.1035, %struct.qty_table_elem.1035* %363, i32 %364
    %366 = bitcast %struct.qty_table_elem.1035* %365 to i8*
    tail call void @free(i8* %366) #5
    %367 = icmp eq %struct.rtx_def.1033* %.01462, null
    br i1 %367, label %372, label %368
  
  ; <label>:368                                     ; preds = %cse_around_loop.exit
    %369 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %.01462, i32 0, i32 1, i32 2
    %370 = bitcast %union.rtunion_def.1034* %369 to %struct.rtx_def.1033**
    %371 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %370, align 4
    br label %372
  
  ; <label>:372                                     ; preds = %368, %cse_around_loop.exit, %.thread54, %.thread52
    %.4 = phi %struct.rtx_def.1033* [ %371, %368 ], [ null, %cse_around_loop.exit ], [ null, %.thread52 ], [ %.1.ph.ph, %.thread54 ]
    ret %struct.rtx_def.1033* %.4
  }
  
  ; Function Attrs: nounwind
  declare void @free(i8* nocapture) #1
  
  ; Function Attrs: nounwind
  declare hidden fastcc void @record_jump_equiv(%struct.rtx_def.1033*, i32 signext) unnamed_addr #1
  
  ; Function Attrs: nounwind
  declare hidden fastcc %struct.rtx_def.1033* @cse_process_notes(%struct.rtx_def.1033*, %struct.rtx_def.1033*) unnamed_addr #1
  
  ; Function Attrs: nounwind
  declare hidden fastcc void @cse_insn(%struct.rtx_def.1033*, %struct.rtx_def.1033* readonly) unnamed_addr #1
  
  declare i32 @for_each_rtx(%struct.rtx_def.1033**, i32 (%struct.rtx_def.1033**, i8*)*, i8*) #2
  
  ; Function Attrs: nounwind
  declare hidden i32 @check_for_label_ref(%struct.rtx_def.1033** nocapture readonly, i8*) #1
  
  declare i32 @any_uncondjump_p(%struct.rtx_def.1033*) #2
  
  declare %struct.rtx_def.1033* @prev_nonnote_insn(%struct.rtx_def.1033*) #2
  
  ; Function Attrs: noreturn
  declare void @fancy_abort(i8*, i32 signext, i8*) #3
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.memset.p0i8.i32(i8* nocapture, i8, i32, i32, i1) #0
  
  ; Function Attrs: nounwind
  declare hidden fastcc void @invalidate(%struct.rtx_def.1033*, i32 signext) unnamed_addr #1
  
  ; Function Attrs: norecurse nounwind
  declare hidden fastcc void @remove_from_table(%struct.table_elt.1037*, i32 signext) unnamed_addr #4
  
  ; Function Attrs: nounwind
  declare hidden fastcc void @invalidate_for_call() unnamed_addr #1
  
  ; Function Attrs: nounwind
  declare hidden fastcc void @invalidate_from_clobbers(%struct.rtx_def.1033* nocapture readonly) unnamed_addr #1
  
  declare void @note_stores(%struct.rtx_def.1033*, void (%struct.rtx_def.1033*, %struct.rtx_def.1033*, i8*)*, i8*) #2
  
  ; Function Attrs: nounwind
  declare hidden void @invalidate_skipped_set(%struct.rtx_def.1033*, %struct.rtx_def.1033* nocapture readonly, i8* nocapture readnone) #1
  
  ; Function Attrs: nounwind
  declare hidden fastcc void @cse_set_around_loop(%struct.rtx_def.1033*, %struct.rtx_def.1033*, %struct.rtx_def.1033*) unnamed_addr #1
  
  attributes #0 = { argmemonly nounwind "target-cpu"="mips32" }
  attributes #1 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #3 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #4 = { norecurse nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #5 = { nounwind }
  attributes #6 = { noreturn nounwind }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            cse_basic_block
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
  - { id: 2, class: gpr32 }
  - { id: 3, class: gpr32 }
  - { id: 4, class: gpr32 }
  - { id: 5, class: gpr32 }
  - { id: 6, class: gpr32 }
  - { id: 7, class: gpr32 }
  - { id: 8, class: gpr32 }
  - { id: 9, class: gpr32 }
  - { id: 10, class: gpr32 }
  - { id: 11, class: gpr32 }
  - { id: 12, class: gpr32 }
  - { id: 13, class: gpr32 }
  - { id: 14, class: gpr32 }
  - { id: 15, class: gpr32 }
  - { id: 16, class: gpr32 }
  - { id: 17, class: gpr32 }
  - { id: 18, class: gpr32 }
  - { id: 19, class: gpr32 }
  - { id: 20, class: gpr32 }
  - { id: 21, class: gpr32 }
  - { id: 22, class: gpr32 }
  - { id: 23, class: gpr32 }
  - { id: 24, class: gpr32 }
  - { id: 25, class: gpr32 }
  - { id: 26, class: gpr32 }
  - { id: 27, class: gpr32 }
  - { id: 28, class: gpr32 }
  - { id: 29, class: gpr32 }
  - { id: 30, class: gpr32 }
  - { id: 31, class: gpr32 }
  - { id: 32, class: gpr32 }
  - { id: 33, class: gpr32 }
  - { id: 34, class: gpr32 }
  - { id: 35, class: gpr32 }
  - { id: 36, class: gpr32 }
  - { id: 37, class: gpr32 }
  - { id: 38, class: gpr32 }
  - { id: 39, class: gpr32 }
  - { id: 40, class: gpr32 }
  - { id: 41, class: gpr32 }
  - { id: 42, class: gpr32 }
  - { id: 43, class: gpr32 }
  - { id: 44, class: gpr32 }
  - { id: 45, class: gpr32 }
  - { id: 46, class: gpr32 }
  - { id: 47, class: gpr32 }
  - { id: 48, class: gpr32 }
  - { id: 49, class: gpr32 }
  - { id: 50, class: gpr32 }
  - { id: 51, class: gpr32 }
  - { id: 52, class: gpr32 }
  - { id: 53, class: gpr32 }
  - { id: 54, class: gpr32 }
  - { id: 55, class: gpr32 }
  - { id: 56, class: gpr32 }
  - { id: 57, class: gpr32 }
  - { id: 58, class: gpr32 }
  - { id: 59, class: gpr32 }
  - { id: 60, class: gpr32 }
  - { id: 61, class: gpr32 }
  - { id: 62, class: gpr32 }
  - { id: 63, class: gpr32 }
  - { id: 64, class: gpr32 }
  - { id: 65, class: gpr32 }
  - { id: 66, class: gpr32 }
  - { id: 67, class: gpr32 }
  - { id: 68, class: gpr32 }
  - { id: 69, class: gpr32 }
  - { id: 70, class: gpr32 }
  - { id: 71, class: gpr32 }
  - { id: 72, class: gpr32 }
  - { id: 73, class: gpr32 }
  - { id: 74, class: gpr32 }
  - { id: 75, class: gpr32 }
  - { id: 76, class: gpr32 }
  - { id: 77, class: gpr32 }
  - { id: 78, class: gpr32 }
  - { id: 79, class: gpr32 }
  - { id: 80, class: gpr32 }
  - { id: 81, class: gpr32 }
  - { id: 82, class: gpr32 }
  - { id: 83, class: gpr32 }
  - { id: 84, class: gpr32 }
  - { id: 85, class: gpr32 }
  - { id: 86, class: gpr32 }
  - { id: 87, class: gpr32 }
  - { id: 88, class: gpr32 }
  - { id: 89, class: gpr32 }
  - { id: 90, class: gpr32 }
  - { id: 91, class: gpr32 }
  - { id: 92, class: gpr32 }
  - { id: 93, class: gpr32 }
  - { id: 94, class: gpr32 }
  - { id: 95, class: gpr32 }
  - { id: 96, class: gpr32 }
  - { id: 97, class: gpr32 }
  - { id: 98, class: gpr32 }
  - { id: 99, class: gpr32 }
  - { id: 100, class: gpr32 }
  - { id: 101, class: gpr32 }
  - { id: 102, class: gpr32 }
  - { id: 103, class: gpr32 }
  - { id: 104, class: gpr32 }
  - { id: 105, class: gpr32 }
  - { id: 106, class: gpr32 }
  - { id: 107, class: gpr32 }
  - { id: 108, class: gpr32 }
  - { id: 109, class: gpr32 }
  - { id: 110, class: gpr32 }
  - { id: 111, class: gpr32 }
  - { id: 112, class: gpr32 }
  - { id: 113, class: gpr32 }
  - { id: 114, class: gpr32 }
  - { id: 115, class: gpr32 }
  - { id: 116, class: gpr32 }
  - { id: 117, class: gpr32 }
  - { id: 118, class: gpr32 }
  - { id: 119, class: gpr32 }
  - { id: 120, class: gpr32 }
  - { id: 121, class: gpr32 }
  - { id: 122, class: gpr32 }
  - { id: 123, class: gpr32 }
  - { id: 124, class: gpr32 }
  - { id: 125, class: gpr32 }
  - { id: 126, class: gpr32 }
  - { id: 127, class: gpr32 }
  - { id: 128, class: gpr32 }
  - { id: 129, class: gpr32 }
  - { id: 130, class: gpr32 }
  - { id: 131, class: gpr32 }
  - { id: 132, class: gpr32 }
  - { id: 133, class: gpr32 }
  - { id: 134, class: gpr32 }
  - { id: 135, class: gpr32 }
  - { id: 136, class: gpr32 }
  - { id: 137, class: gpr32 }
  - { id: 138, class: gpr32 }
  - { id: 139, class: gpr32 }
  - { id: 140, class: gpr32 }
  - { id: 141, class: gpr32 }
  - { id: 142, class: gpr32 }
  - { id: 143, class: gpr32 }
  - { id: 144, class: gpr32 }
  - { id: 145, class: gpr32 }
  - { id: 146, class: gpr32 }
  - { id: 147, class: gpr32 }
  - { id: 148, class: gpr32 }
  - { id: 149, class: gpr32 }
  - { id: 150, class: gpr32 }
  - { id: 151, class: gpr32 }
  - { id: 152, class: gpr32 }
  - { id: 153, class: gpr32 }
  - { id: 154, class: gpr32 }
  - { id: 155, class: gpr32 }
  - { id: 156, class: gpr32 }
  - { id: 157, class: gpr32 }
  - { id: 158, class: gpr32 }
  - { id: 159, class: gpr32 }
  - { id: 160, class: gpr32 }
  - { id: 161, class: gpr32 }
  - { id: 162, class: gpr32 }
  - { id: 163, class: gpr32 }
  - { id: 164, class: gpr32 }
  - { id: 165, class: gpr32 }
  - { id: 166, class: gpr32 }
  - { id: 167, class: gpr32 }
  - { id: 168, class: gpr32 }
  - { id: 169, class: gpr32 }
  - { id: 170, class: gpr32 }
  - { id: 171, class: gpr32 }
  - { id: 172, class: gpr32 }
  - { id: 173, class: gpr32 }
  - { id: 174, class: gpr32 }
  - { id: 175, class: gpr32 }
  - { id: 176, class: gpr32 }
  - { id: 177, class: gpr32 }
  - { id: 178, class: gpr32 }
  - { id: 179, class: gpr32 }
  - { id: 180, class: gpr32 }
  - { id: 181, class: gpr32 }
  - { id: 182, class: gpr32 }
  - { id: 183, class: gpr32 }
  - { id: 184, class: gpr32 }
  - { id: 185, class: gpr32 }
  - { id: 186, class: gpr32 }
  - { id: 187, class: gpr32 }
  - { id: 188, class: gpr32 }
  - { id: 189, class: gpr32 }
  - { id: 190, class: gpr32 }
  - { id: 191, class: gpr32 }
  - { id: 192, class: gpr32 }
  - { id: 193, class: gpr32 }
  - { id: 194, class: gpr32 }
  - { id: 195, class: gpr32 }
  - { id: 196, class: gpr32 }
  - { id: 197, class: gpr32 }
  - { id: 198, class: gpr32 }
  - { id: 199, class: gpr32 }
  - { id: 200, class: gpr32 }
  - { id: 201, class: gpr32 }
  - { id: 202, class: gpr32 }
  - { id: 203, class: gpr32 }
  - { id: 204, class: gpr32 }
  - { id: 205, class: gpr32 }
  - { id: 206, class: gpr32 }
  - { id: 207, class: gpr32 }
  - { id: 208, class: gpr32 }
  - { id: 209, class: gpr32 }
  - { id: 210, class: gpr32 }
  - { id: 211, class: gpr32 }
  - { id: 212, class: gpr32 }
  - { id: 213, class: gpr32 }
  - { id: 214, class: gpr32 }
  - { id: 215, class: gpr32 }
  - { id: 216, class: gpr32 }
  - { id: 217, class: gpr32 }
  - { id: 218, class: gpr32 }
  - { id: 219, class: gpr32 }
  - { id: 220, class: gpr32 }
  - { id: 221, class: gpr32 }
  - { id: 222, class: gpr32 }
  - { id: 223, class: gpr32 }
  - { id: 224, class: gpr32 }
  - { id: 225, class: gpr32 }
  - { id: 226, class: gpr32 }
  - { id: 227, class: gpr32 }
  - { id: 228, class: gpr32 }
  - { id: 229, class: gpr32 }
  - { id: 230, class: gpr32 }
  - { id: 231, class: gpr32 }
  - { id: 232, class: gpr32 }
  - { id: 233, class: gpr32 }
  - { id: 234, class: gpr32 }
  - { id: 235, class: gpr32 }
  - { id: 236, class: gpr32 }
  - { id: 237, class: gpr32 }
  - { id: 238, class: gpr32 }
  - { id: 239, class: gpr32 }
  - { id: 240, class: gpr32 }
  - { id: 241, class: gpr32 }
  - { id: 242, class: gpr32 }
  - { id: 243, class: gpr32 }
  - { id: 244, class: gpr32 }
  - { id: 245, class: gpr32 }
  - { id: 246, class: gpr32 }
  - { id: 247, class: gpr32 }
  - { id: 248, class: gpr32 }
  - { id: 249, class: gpr32 }
  - { id: 250, class: gpr32 }
  - { id: 251, class: gpr32 }
  - { id: 252, class: gpr32 }
  - { id: 253, class: gpr32 }
  - { id: 254, class: gpr32 }
  - { id: 255, class: gpr32 }
  - { id: 256, class: gpr32 }
  - { id: 257, class: gpr32 }
  - { id: 258, class: gpr32 }
  - { id: 259, class: gpr32 }
  - { id: 260, class: gpr32 }
  - { id: 261, class: gpr32 }
  - { id: 262, class: gpr32 }
  - { id: 263, class: gpr32 }
  - { id: 264, class: gpr32 }
  - { id: 265, class: gpr32 }
  - { id: 266, class: gpr32 }
  - { id: 267, class: gpr32 }
  - { id: 268, class: gpr32 }
  - { id: 269, class: gpr32 }
  - { id: 270, class: gpr32 }
  - { id: 271, class: gpr32 }
  - { id: 272, class: gpr32 }
  - { id: 273, class: gpr32 }
  - { id: 274, class: gpr32 }
  - { id: 275, class: gpr32 }
  - { id: 276, class: gpr32 }
  - { id: 277, class: gpr32 }
  - { id: 278, class: gpr32 }
  - { id: 279, class: gpr32 }
  - { id: 280, class: gpr32 }
  - { id: 281, class: gpr32 }
  - { id: 282, class: gpr32 }
  - { id: 283, class: gpr32 }
  - { id: 284, class: gpr32 }
  - { id: 285, class: gpr32 }
  - { id: 286, class: gpr32 }
  - { id: 287, class: gpr32 }
  - { id: 288, class: gpr32 }
  - { id: 289, class: gpr32 }
  - { id: 290, class: gpr32 }
  - { id: 291, class: gpr32 }
  - { id: 292, class: gpr32 }
  - { id: 293, class: gpr32 }
  - { id: 294, class: gpr32 }
  - { id: 295, class: gpr32 }
  - { id: 296, class: gpr32 }
  - { id: 297, class: gpr32 }
  - { id: 298, class: gpr32 }
  - { id: 299, class: gpr32 }
  - { id: 300, class: gpr32 }
  - { id: 301, class: gpr32 }
  - { id: 302, class: gpr32 }
  - { id: 303, class: gpr32 }
  - { id: 304, class: gpr32 }
  - { id: 305, class: gpr32 }
  - { id: 306, class: gpr32 }
  - { id: 307, class: gpr32 }
  - { id: 308, class: gpr32 }
  - { id: 309, class: gpr32 }
  - { id: 310, class: gpr32 }
  - { id: 311, class: gpr32 }
  - { id: 312, class: gpr32 }
  - { id: 313, class: gpr32 }
  - { id: 314, class: gpr32 }
  - { id: 315, class: gpr32 }
  - { id: 316, class: gpr32 }
  - { id: 317, class: gpr32 }
  - { id: 318, class: gpr32 }
  - { id: 319, class: gpr32 }
  - { id: 320, class: gpr32 }
  - { id: 321, class: gpr32 }
  - { id: 322, class: gpr32 }
  - { id: 323, class: gpr32 }
  - { id: 324, class: gpr32 }
  - { id: 325, class: gpr32 }
  - { id: 326, class: gpr32 }
  - { id: 327, class: gpr32 }
  - { id: 328, class: gpr32 }
  - { id: 329, class: gpr32 }
  - { id: 330, class: gpr32 }
  - { id: 331, class: gpr32 }
  - { id: 332, class: gpr32 }
  - { id: 333, class: gpr32 }
  - { id: 334, class: gpr32 }
  - { id: 335, class: gpr32 }
  - { id: 336, class: gpr32 }
  - { id: 337, class: gpr32 }
  - { id: 338, class: gpr32 }
  - { id: 339, class: gpr32 }
  - { id: 340, class: gpr32 }
  - { id: 341, class: gpr32 }
  - { id: 342, class: gpr32 }
  - { id: 343, class: gpr32 }
  - { id: 344, class: gpr32 }
  - { id: 345, class: gpr32 }
  - { id: 346, class: gpr32 }
  - { id: 347, class: gpr32 }
  - { id: 348, class: gpr32 }
  - { id: 349, class: gpr32 }
  - { id: 350, class: gpr32 }
  - { id: 351, class: gpr32 }
  - { id: 352, class: gpr32 }
  - { id: 353, class: gpr32 }
  - { id: 354, class: gpr32 }
  - { id: 355, class: gpr32 }
  - { id: 356, class: gpr32 }
  - { id: 357, class: gpr32 }
  - { id: 358, class: gpr32 }
  - { id: 359, class: gpr32 }
  - { id: 360, class: gpr32 }
  - { id: 361, class: gpr32 }
  - { id: 362, class: gpr32 }
  - { id: 363, class: gpr32 }
  - { id: 364, class: gpr32 }
  - { id: 365, class: gpr32 }
  - { id: 366, class: gpr32 }
  - { id: 367, class: gpr32 }
  - { id: 368, class: gpr32 }
  - { id: 369, class: gpr32 }
  - { id: 370, class: gpr32 }
  - { id: 371, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%89' }
  - { reg: '%a1', virtual-reg: '%90' }
  - { reg: '%a2', virtual-reg: '%91' }
  - { reg: '%a3', virtual-reg: '%92' }
  - { reg: '%t9' }
  - { reg: '%v0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    8
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
stack:           
  - { id: 0, name: val, offset: 0, size: 100, alignment: 8 }
jumpTable:       
  kind:            gp-rel32-block-address
  entries:         
    - id:              0
      blocks:          [ '%bb.89', '%bb.91..thread87', '%bb.88', '%bb.90', 
                         '%bb.91..thread87', '%bb.89' ]
body:             |
  bb.0 (%ir-block.0, freq 10134418):
    successors: %bb.2(37), %bb.1(62)
    liveins: %a0, %a1, %a2, %a3, %t9, %v0
  
    %93 = ADDu %v0, %t9
    %92 = COPY %a3
    %91 = COPY %a2
    %90 = COPY %a1
    %89 = COPY %a0
    %94 = LW %93, target-flags(<unknown>) @max_reg, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %95 = LW %94, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from @max_reg)
    %96 = LW %93, target-flags(<unknown>) @max_qty, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %97 = LW %96, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from @max_qty)
    %98 = SUBu killed %97, killed %95
    %99 = SLL killed %98, 5
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %100 = LW %93, target-flags(<unknown>) @xmalloc, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @xmalloc)
    %a0 = COPY %99
    %gp = COPY %93
    %t9 = COPY %100
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %101 = COPY %v0
    %102 = LW %93, target-flags(<unknown>) @reg_hash, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %103 = LW %93, target-flags(<unknown>) @next_qty, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %104 = LW %93, target-flags(<unknown>) @qty_table, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %105 = ADDiu %zero, 0
    %106 = ADDiu %zero, 512
    %107 = LW %94, 0, <0x4a626a0> = !{!"unison-memory-partition", i32 3} :: (load 4 from @max_reg)
    %108 = SLL %107, 5
    %109 = SUBu %101, killed %108
    SW killed %109, %104, 0, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (store 4 into @qty_table)
    SW %107, %103, 0, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (store 4 into @next_qty)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %110 = LW %93, target-flags(<unknown>) $memset, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry $memset)
    %a0 = COPY %102
    %a1 = COPY %105
    %a2 = COPY %106
    %gp = COPY %93
    %t9 = COPY %110
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %111 = LW %93, target-flags(<unknown>) @cse_reg_info_used_list, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %0 = LW %111, 0, <0x4a62790> = !{!"unison-memory-partition", i32 4} :: (load 4 from @cse_reg_info_used_list)
    BEQ %0, %zero, %bb.2, implicit-def dead %at
    B %bb.1, implicit-def dead %at
  
  bb.1 (%ir-block.12, freq 6334011):
    successors: %bb.2(100)
  
    %112 = LW %93, target-flags(<unknown>) @cse_reg_info_used_list_end, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %113 = LW %112, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from @cse_reg_info_used_list_end)
    %114 = LW %93, target-flags(<unknown>) @cse_reg_info_free_list, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %115 = LW %114, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from `i32* bitcast (%struct.cse_reg_info.1036** @cse_reg_info_free_list to i32*)`)
    SW killed %115, killed %113, 4, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.17)
    SW %0, %114, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into `i32* bitcast (%struct.cse_reg_info.1036** @cse_reg_info_free_list to i32*)`)
    SW %zero, %112, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into @cse_reg_info_used_list_end)
    SW %zero, %111, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into @cse_reg_info_used_list)
  
  bb.2 (%ir-block.18, freq 10134418):
    successors: %bb.3(100)
  
    %118 = LW %93, target-flags(<unknown>) @cached_cse_reg_info, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    SW %zero, killed %118, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into @cached_cse_reg_info)
    %119 = LW %93, target-flags(<unknown>) @hard_regs_in_table, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    SW %zero, killed %119, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into @hard_regs_in_table)
    %121 = LW %93, target-flags(<unknown>) @table, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %124 = ADDiu %zero, 32
    %122 = LW %93, target-flags(<unknown>) @free_element_chain, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
  
  bb.3 (%ir-block.19, freq 324301386):
    successors: %bb.7(37), %bb.4(62)
  
    %1 = PHI %105, %bb.2, %6, %bb.7
    %120 = SLL %1, 2
    %2 = ADDu %121, killed %120
    %3 = LW %2, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.20)
    BEQ %3, %zero, %bb.7, implicit-def dead %at
    B %bb.4, implicit-def dead %at
  
  bb.4 (%ir-block.23, freq 202688366):
    successors: %bb.5(100)
  
    SW %zero, %2, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.20)
  
  bb.5 (%ir-block.24, freq 6486027721):
    successors: %bb.6(3), %bb.5(96)
  
    %4 = PHI %3, %bb.4, %5, %bb.5
    %5 = LW %4, 8, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.25)
    BNE %5, %zero, %bb.5, implicit-def dead %at
    B %bb.6, implicit-def dead %at
  
  bb.6 (%ir-block.28, freq 202688366):
    successors: %bb.7(100)
  
    %123 = LW %122, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from `i32* bitcast (%struct.table_elt.1037** @free_element_chain to i32*)`)
    SW killed %123, %4, 8, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr5)
    SW %3, %122, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into @free_element_chain)
  
  bb.7 (%ir-block.30, freq 324301386):
    successors: %bb.8.new_basic_block.exit(3), %bb.3(96)
  
    %6 = ADDiu %1, 1
    BNE %6, %124, %bb.3, implicit-def dead %at
    B %bb.8.new_basic_block.exit, implicit-def dead %at
  
  bb.8.new_basic_block.exit (freq 10134418):
    successors: %bb.11..preheader57(37), %bb.9(62)
  
    %125 = ADDiu %zero, 0
    BEQ %90, %zero, %bb.11..preheader57, implicit-def dead %at
    B %bb.9, implicit-def dead %at
  
  bb.9 (%ir-block.33, freq 6334011):
    successors: %bb.10(50), %bb.11..preheader57(50)
  
    %126 = LW %90, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.34)
    %127 = LUi 65535
    %128 = AND killed %126, killed %127
    %129 = LUi 36
    BNE killed %128, killed %129, %bb.11..preheader57, implicit-def dead %at
    B %bb.10, implicit-def dead %at
  
  bb.10 (%ir-block.37, freq 3167005):
    successors: %bb.11..preheader57(100)
  
    %130 = LW %90, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.38)
    %131 = ADDiu killed %130, 1
    SW killed %131, %90, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.38)
  
  bb.11..preheader57 (freq 10134418):
    successors: %bb.71..thread53(37), %bb.12..lr.ph(62)
  
    %7 = PHI %125, %bb.8.new_basic_block.exit, %90, %bb.9, %90, %bb.10
    BEQ %7, %89, %bb.71..thread53, implicit-def dead %at
    B %bb.12..lr.ph, implicit-def dead %at
  
  bb.12..lr.ph (freq 6334011):
    successors: %bb.13(100)
  
    %133 = ADDiu %zero, 0
    %132 = COPY %133
    %135 = ADDiu %zero, 37
    %151 = ADDiu %zero, 1
    %275 = LW %93, target-flags(<unknown>) @prev_insn, <0x4a62800> = !{!"unison-memory-partition", i32 5} :: (load 4 from got)
    %254 = ADDiu %zero, 36
    %255 = LW %93, target-flags(<unknown>) @rtx_class, <0x4a626a0> = !{!"unison-memory-partition", i32 3} :: (load 4 from got)
    %258 = ADDiu %zero, 105
    %259 = ADDiu %zero, 34
    %267 = ADDiu %zero, 32
    %272 = LW %93, target-flags(<unknown>) @invalidate_skipped_set, <0x4a62790> = !{!"unison-memory-partition", i32 4} :: (load 4 from got)
    %155 = ADDiu %zero, 512
    %156 = LUi 65535
    %157 = ORi %156, 255
    %177 = LW %93, target-flags(<unknown>) @recorded_label_ref, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %180 = LUi 32
    %182 = LW %93, target-flags(<unknown>) @check_for_label_ref, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %167 = ADDiu %zero, 7
    %171 = ADDiu %zero, 6
    %207 = LUi 36
    %226 = LEA_ADDiu %stack.0.val, 0
    %236 = LW %93, target-flags(<unknown>) @cse_basic_block_start, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %215 = LUi 35
    %143 = LUi 61
  
  bb.13 (%ir-block.42, freq 99508356):
    successors: %bb.21.flush_hash_table.exit(50), %bb.14(50)
  
    %8 = PHI %7, %bb.12..lr.ph, %57, %bb.70
    %9 = PHI %91, %bb.12..lr.ph, %56, %bb.70
    %10 = PHI %89, %bb.12..lr.ph, %58, %bb.70
    %11 = PHI %132, %bb.12..lr.ph, %23, %bb.70
    %12 = PHI %133, %bb.12..lr.ph, %54, %bb.70
    %13 = PHI %132, %bb.12..lr.ph, %53, %bb.70
    %134 = LW %10, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.43)
    %14 = SRL killed %134, 16
    BEQ %14, %135, %bb.21.flush_hash_table.exit, implicit-def dead %at
    B %bb.14, implicit-def dead %at
  
  bb.14 (%ir-block.47, freq 49754178):
    successors: %bb.15..preheader56(50), %bb.21.flush_hash_table.exit(50)
  
    %15 = ADDiu %11, 1
    %137 = SLTi %11, 1001
    %136 = ADDiu %zero, 0
    BNE killed %137, %zero, %bb.21.flush_hash_table.exit, implicit-def dead %at
    B %bb.15..preheader56, implicit-def dead %at
  
  bb.15..preheader56 (freq 796066851):
    successors: %bb.20.._crit_edge.i(37), %bb.16..lr.ph.i31(62)
  
    %16 = PHI %136, %bb.14, %22, %bb.20.._crit_edge.i
    %138 = SLL %16, 2
    %17 = ADDu %121, killed %138
    %18 = LW %17, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.50)
    BEQ %18, %zero, %bb.20.._crit_edge.i, implicit-def dead %at
    B %bb.16..lr.ph.i31, implicit-def dead %at
  
  bb.16..lr.ph.i31 (freq 15921337020):
    successors: %bb.17(50), %bb.19(50)
  
    %19 = PHI %18, %bb.15..preheader56, %21, %bb.18..backedge.i33
    %20 = LW %19, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.52)
    %140 = LW %20, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.54)
    %142 = AND killed %140, %156
    BNE killed %142, %143, %bb.19, implicit-def dead %at
    B %bb.17, implicit-def dead %at
  
  bb.17 (%ir-block.57, freq 7960668510):
    successors: %bb.18..backedge.i33(100)
  
    %145 = LW %19, 40, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.58)
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %146 = LW %93, target-flags(<unknown>) @invalidate, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @invalidate)
    %a0 = COPY %20
    %a1 = COPY %145
    %gp = COPY %93
    %t9 = COPY %146
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
  
  bb.18..backedge.i33 (freq 15921337020):
    successors: %bb.20.._crit_edge.i(3), %bb.16..lr.ph.i31(96)
  
    %21 = LW %17, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.50)
    BEQ %21, %zero, %bb.20.._crit_edge.i, implicit-def dead %at
    B %bb.16..lr.ph.i31, implicit-def dead %at
  
  bb.19 (%ir-block.61, freq 7960668510):
    successors: %bb.18..backedge.i33(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %144 = LW %93, target-flags(<unknown>) @remove_from_table, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @remove_from_table)
    %a0 = COPY %19
    %a1 = COPY %16
    %gp = COPY %93
    %t9 = COPY %144
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.18..backedge.i33, implicit-def dead %at
  
  bb.20.._crit_edge.i (freq 796066851):
    successors: %bb.21.flush_hash_table.exit(3), %bb.15..preheader56(96)
  
    %22 = ADDiu %16, 1
    %147 = ADDiu %zero, 0
    BNE %22, %267, %bb.15..preheader56, implicit-def dead %at
    B %bb.21.flush_hash_table.exit, implicit-def dead %at
  
  bb.21.flush_hash_table.exit (freq 99508356):
    successors: %bb.22(37), %bb.38..thread(62)
  
    %23 = PHI %11, %bb.13, %15, %bb.14, %147, %bb.20.._crit_edge.i
    %149 = LW %9, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.63)
    BNE killed %149, %10, %bb.38..thread, implicit-def dead %at
    B %bb.22, implicit-def dead %at
  
  bb.22 (%ir-block.66, freq 37315633):
    successors: %bb.38..thread(33), %bb.109(66)
  
    %150 = LW %9, 4, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.68)
    %24 = ADDiu %9, 8
    BEQ %150, %151, %bb.38..thread, implicit-def dead %at
    B %bb.109, implicit-def dead %at
  
  bb.109 (%ir-block.66, freq 24877089):
    successors: %bb.23(50), %bb.24(49)
  
    BNE %150, %zero, %bb.24, implicit-def dead %at
    B %bb.23, implicit-def dead %at
  
  bb.23 (%ir-block.70, freq 12438544):
    successors: %bb.37..loopexit(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %152 = LW %93, target-flags(<unknown>) @record_jump_equiv, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @record_jump_equiv)
    %a0 = COPY %10
    %a1 = COPY %151
    %gp = COPY %93
    %t9 = COPY %152
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.37..loopexit, implicit-def dead %at
  
  bb.24 (%ir-block.71, freq 12438544):
    successors: %bb.37..loopexit(37), %bb.25..lr.ph.i35(62)
  
    %25 = LW %10, 12, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.73)
    BEQ %25, %zero, %bb.37..loopexit, implicit-def dead %at
    B %bb.25..lr.ph.i35, implicit-def dead %at
  
  bb.25..lr.ph.i35 (freq 126359817):
    successors: %bb.37..loopexit(3), %bb.26(96)
  
    %26 = PHI %25, %bb.24, %34, %bb.36
    %27 = LW %26, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.76)
    %28 = SRL %27, 16
    BEQ %28, %254, %bb.37..loopexit, implicit-def dead %at
    B %bb.26, implicit-def dead %at
  
  bb.26 (%ir-block.80, freq 122411073):
    successors: %bb.27(50), %bb.36(50)
  
    %256 = ADDu %255, %28
    %257 = LBu killed %256, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.81)
    BNE killed %257, %258, %bb.36, implicit-def dead %at
    B %bb.27, implicit-def dead %at
  
  bb.27 (%ir-block.84, freq 61205536):
    successors: %bb.28(50), %bb.35(50)
  
    BNE %28, %259, %bb.35, implicit-def dead %at
    B %bb.28, implicit-def dead %at
  
  bb.28 (%ir-block.86, freq 30602768):
    successors: %bb.29..preheader.i36(50), %bb.34.invalidate_memory.exit.i(50)
  
    %261 = ANDi %27, 32
    %260 = ADDiu %zero, 0
    BNE killed %261, %zero, %bb.34.invalidate_memory.exit.i, implicit-def dead %at
    B %bb.29..preheader.i36, implicit-def dead %at
  
  bb.29..preheader.i36 (freq 489644292):
    successors: %bb.33.._crit_edge.i.i(37), %bb.30..lr.ph.i.i(62)
  
    %29 = PHI %260, %bb.28, %33, %bb.33.._crit_edge.i.i
    %262 = SLL %29, 2
    %264 = ADDu %121, killed %262
    %30 = LW killed %264, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.89)
    BEQ %30, %zero, %bb.33.._crit_edge.i.i, implicit-def dead %at
    B %bb.30..lr.ph.i.i, implicit-def dead %at
  
  bb.30..lr.ph.i.i (freq 9792885854):
    successors: %bb.31..backedge.i.i(37), %bb.32(62)
  
    %31 = PHI %30, %bb.29..preheader.i36, %32, %bb.31..backedge.i.i
    %32 = LW %31, 8, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.92)
    %265 = LBu %31, 44, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.94, align 4)
    BNE killed %265, %zero, %bb.32, implicit-def dead %at
    B %bb.31..backedge.i.i, implicit-def dead %at
  
  bb.31..backedge.i.i (freq 9792885854):
    successors: %bb.33.._crit_edge.i.i(3), %bb.30..lr.ph.i.i(96)
  
    BEQ %32, %zero, %bb.33.._crit_edge.i.i, implicit-def dead %at
    B %bb.30..lr.ph.i.i, implicit-def dead %at
  
  bb.32 (%ir-block.98, freq 6120553659):
    successors: %bb.31..backedge.i.i(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %266 = LW %93, target-flags(<unknown>) @remove_from_table, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @remove_from_table)
    %a0 = COPY %31
    %a1 = COPY %29
    %gp = COPY %93
    %t9 = COPY %266
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.31..backedge.i.i, implicit-def dead %at
  
  bb.33.._crit_edge.i.i (freq 489644292):
    successors: %bb.34.invalidate_memory.exit.i(3), %bb.29..preheader.i36(96)
  
    %33 = ADDiu %29, 1
    BNE %33, %267, %bb.29..preheader.i36, implicit-def dead %at
    B %bb.34.invalidate_memory.exit.i, implicit-def dead %at
  
  bb.34.invalidate_memory.exit.i (freq 30602768):
    successors: %bb.35(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %268 = LW %93, target-flags(<unknown>) @invalidate_for_call, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @invalidate_for_call)
    %gp = COPY %93
    %t9 = COPY %268
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
  
  bb.35 (%ir-block.100, freq 61205536):
    successors: %bb.36(100)
  
    %269 = LW %26, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.102)
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %270 = LW %93, target-flags(<unknown>) @invalidate_from_clobbers, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @invalidate_from_clobbers)
    %a0 = COPY %269
    %gp = COPY %93
    %t9 = COPY %270
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    %271 = LW %26, 16, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from %ir.102)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %274 = LW %93, target-flags(<unknown>) @note_stores, <0x4a626a0> = !{!"unison-memory-partition", i32 3} :: (load 4 from call-entry @note_stores)
    %a0 = COPY %271
    %a1 = COPY %272
    %a2 = COPY %133
    %gp = COPY %93
    %t9 = COPY %274
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
  
  bb.36 (%ir-block.105, freq 122411073):
    successors: %bb.37..loopexit(3), %bb.25..lr.ph.i35(96)
  
    %34 = LW %26, 12, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.107)
    BNE %34, %zero, %bb.25..lr.ph.i35, implicit-def dead %at
    B %bb.37..loopexit, implicit-def dead %at
  
  bb.37..loopexit (freq 24877089):
    successors: %bb.70(100)
  
    SW %10, %275, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into @prev_insn)
    %35 = LW %10, 32, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.111)
    B %bb.70, implicit-def dead %at
  
  bb.38..thread (freq 74631267):
    successors: %bb.39(50), %bb.40(50)
  
    %36 = PHI %9, %bb.21.flush_hash_table.exit, %24, %bb.22
    %37 = LW %10, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.113)
    %154 = ANDi %37, 65280
    BNE killed %154, %155, %bb.40, implicit-def dead %at
    B %bb.39, implicit-def dead %at
  
  bb.39 (%ir-block.117, freq 37315633):
    successors: %bb.40(100)
  
    %158 = AND %37, %157
    SW killed %158, %10, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.118)
  
  bb.40 (%ir-block.120, freq 74631267):
    successors: %bb.41(50), %bb.49(50)
  
    %160 = ADDu %255, %14
    %161 = LBu killed %160, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.121)
    BNE killed %161, %258, %bb.49, implicit-def dead %at
    B %bb.41, implicit-def dead %at
  
  bb.41 (%ir-block.124, freq 37315633):
    successors: %bb.46..thread38(37), %bb.42(62)
  
    %38 = LW %10, 28, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.126)
    BEQ %38, %zero, %bb.46..thread38, implicit-def dead %at
    B %bb.42, implicit-def dead %at
  
  bb.42 (%ir-block.129, freq 23322271):
    successors: %bb.46..thread38(37), %bb.43(62)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %163 = LW %93, target-flags(<unknown>) @cse_process_notes, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @cse_process_notes)
    %a0 = COPY %38
    %a1 = COPY %133
    %gp = COPY %93
    %t9 = COPY %163
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    %165 = COPY %v0
    SW %165, %10, 28, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr8)
    BEQ %165, %zero, %bb.46..thread38, implicit-def dead %at
    B %bb.43, implicit-def dead %at
  
  bb.43 (%ir-block.132, freq 14576419):
    successors: %bb.45(37), %bb.44(62)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %166 = LW %93, target-flags(<unknown>) @find_reg_note, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @find_reg_note)
    %a0 = COPY %10
    %a1 = COPY %167
    %a2 = COPY %133
    %gp = COPY %93
    %t9 = COPY %166
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %169 = COPY %v0
    BEQ %169, %zero, %bb.45, implicit-def dead %at
    B %bb.44, implicit-def dead %at
  
  bb.44 (%ir-block.135, freq 9110262):
    successors: %bb.46..thread38(100)
  
    %39 = COPY %169
    %40 = LW %39, 4, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.137)
    B %bb.46..thread38, implicit-def dead %at
  
  bb.45 (%ir-block.139, freq 5466157):
    successors: %bb.46..thread38(100)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %170 = LW %93, target-flags(<unknown>) @find_reg_note, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @find_reg_note)
    %a0 = COPY %10
    %a1 = COPY %171
    %a2 = COPY %133
    %t9 = COPY %170
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %173 = COPY %v0
    %41 = MOVN_I_I %zero, %173, %12
  
  bb.46..thread38 (freq 37315633):
    successors: %bb.49(25), %bb.110..thread38(75)
  
    %42 = PHI %12, %bb.41, %12, %bb.42, %40, %bb.44, %41, %bb.45
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %175 = LW %93, target-flags(<unknown>) @cse_insn, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @cse_insn)
    %a0 = COPY %10
    %a1 = COPY %42
    %gp = COPY %93
    %t9 = COPY %175
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    %179 = LBu %177, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 1 from @recorded_label_ref)
    BNE killed %179, %zero, %bb.49, implicit-def dead %at
    B %bb.110..thread38, implicit-def dead %at
  
  bb.110..thread38 (freq 27986725):
    successors: %bb.49(33), %bb.47(66)
  
    %176 = LW %10, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.142)
    %174 = AND %176, %156
    BNE %174, %180, %bb.49, implicit-def dead %at
    B %bb.47, implicit-def dead %at
  
  bb.47 (%ir-block.145, freq 18657816):
    successors: %bb.49(37), %bb.48(62)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %181 = ADDiu %10, 16
    %183 = LW %93, target-flags(<unknown>) @for_each_rtx, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @for_each_rtx)
    %a0 = COPY %181
    %a1 = COPY %182
    %a2 = COPY %10
    %gp = COPY %93
    %t9 = COPY %183
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %184 = COPY %v0
    BEQ %184, %zero, %bb.49, implicit-def dead %at
    B %bb.48, implicit-def dead %at
  
  bb.48 (%ir-block.151, freq 11661135):
    successors: %bb.49(100)
  
    SB %151, %177, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 1 into @recorded_label_ref)
  
  bb.49 (%ir-block.152, freq 74631267):
    successors: %bb.54(37), %bb.50(62)
  
    %43 = PHI %12, %bb.40, %42, %bb.46..thread38, %42, %bb.110..thread38, %42, %bb.47, %42, %bb.48
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %187 = LW %93, target-flags(<unknown>) @any_uncondjump_p, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @any_uncondjump_p)
    %a0 = COPY %10
    %gp = COPY %93
    %t9 = COPY %187
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %188 = COPY %v0
    BEQ %188, %zero, %bb.54, implicit-def dead %at
    B %bb.50, implicit-def dead %at
  
  bb.50 (%ir-block.155, freq 46644542):
    successors: %bb.51..thread52(3), %bb.52(96)
  
    BNE %8, %zero, %bb.52, implicit-def dead %at
    B %bb.51..thread52, implicit-def dead %at
  
  bb.51..thread52 (freq 1457641):
    successors: %bb.108(100)
  
    %196 = LW %104, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from @qty_table)
    %198 = LW %94, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from @max_reg)
    %199 = SLL killed %198, 5
    %200 = ADDu killed %196, killed %199
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %201 = LW %93, target-flags(<unknown>) @free, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @free)
    %a0 = COPY %200
    %gp = COPY %93
    %t9 = COPY %201
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %194 = ADDiu %zero, 0
    B %bb.108, implicit-def dead %at
  
  bb.52 (%ir-block.161, freq 45186900):
    successors: %bb.53..thread39(96), %bb.71..thread53(3)
  
    %189 = LBu %8, 3, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.162 + 3)
    %190 = ANDi killed %189, 16
    BNE killed %190, %zero, %bb.71..thread53, implicit-def dead %at
    B %bb.53..thread39, implicit-def dead %at
  
  bb.53..thread39 (freq 43774809):
    successors: %bb.55(100)
  
    %191 = LW %10, 32, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.167)
    %192 = XOR killed %191, %8
    %44 = MOVZ_I_I %151, killed %192, %13
    %45 = LW %8, 8, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.171)
    B %bb.55, implicit-def dead %at
  
  bb.54 (%ir-block.173, freq 27986725):
    successors: %bb.70(37), %bb.55(62)
  
    %202 = ADDiu %zero, 0
    BEQ %8, %zero, %bb.70, implicit-def dead %at
    B %bb.55, implicit-def dead %at
  
  bb.55 (%ir-block.175, freq 61266512):
    successors: %bb.56(37), %bb.70(62)
  
    %46 = PHI %45, %bb.53..thread39, %10, %bb.54
    %47 = PHI %44, %bb.53..thread39, %13, %bb.54
    %203 = LW %46, 12, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.177)
    BNE killed %203, %8, %bb.70, implicit-def dead %at
    B %bb.56, implicit-def dead %at
  
  bb.56 (%ir-block.180, freq 22974942):
    successors: %bb.57(50), %bb.70(50)
  
    %204 = LW %8, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.181)
    %206 = AND killed %204, %156
    BNE killed %206, %207, %bb.70, implicit-def dead %at
    B %bb.57, implicit-def dead %at
  
  bb.57 (%ir-block.184, freq 11487471):
    successors: %bb.58(50), %bb.70(50)
  
    %208 = LW %8, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.185)
    %209 = ADDiu killed %208, -1
    SW %209, %8, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.185)
    BNE %209, %47, %bb.70, implicit-def dead %at
    B %bb.58, implicit-def dead %at
  
  bb.58 (%ir-block.189, freq 5743735):
    successors: %bb.59(3), %bb.60(96)
  
    %48 = LW %8, 12, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.192)
    BNE %48, %zero, %bb.60, implicit-def dead %at
    B %bb.59, implicit-def dead %at
  
  bb.59 (%ir-block.195, freq 179491):
    successors: %bb.108(100)
  
    %248 = LW %104, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from @qty_table)
    %250 = LW %94, 0, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from @max_reg)
    %251 = SLL killed %250, 5
    %252 = ADDu killed %248, killed %251
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %253 = LW %93, target-flags(<unknown>) @free, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @free)
    %a0 = COPY %252
    %gp = COPY %93
    %t9 = COPY %253
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %246 = ADDiu %zero, 0
    B %bb.108, implicit-def dead %at
  
  bb.60 (%ir-block.200, freq 5564243):
    successors: %bb.63(37), %bb.61(62)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %210 = LW %93, target-flags(<unknown>) @prev_nonnote_insn, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @prev_nonnote_insn)
    %a0 = COPY %8
    %gp = COPY %93
    %t9 = COPY %210
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %211 = COPY %v0
    BEQ %211, %zero, %bb.63, implicit-def dead %at
    B %bb.61, implicit-def dead %at
  
  bb.61 (%ir-block.203, freq 3477652):
    successors: %bb.62(3), %bb.63(96)
  
    %49 = COPY %211
    %212 = LW %49, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.204)
    %214 = AND killed %212, %156
    BNE killed %214, %215, %bb.63, implicit-def dead %at
    B %bb.62, implicit-def dead %at
  
  bb.62 (%ir-block.207, freq 108676):
    successors: %bb.108(100)
  
    %217 = LW %104, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from @qty_table)
    %219 = LW %94, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from @max_reg)
    %220 = SLL killed %219, 5
    %221 = ADDu killed %217, killed %220
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %222 = LW %93, target-flags(<unknown>) @free, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @free)
    %a0 = COPY %221
    %gp = COPY %93
    %t9 = COPY %222
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %370 = COPY %48
    B %bb.108, implicit-def dead %at
  
  bb.63 (%ir-block.212, freq 5455567):
    successors: %bb.69(3), %bb.64(96)
  
    SW %zero, %stack.0.val, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr11, align 8)
    ADJCALLSTACKDOWN 24, implicit-def dead %sp, implicit %sp
    %223 = COPY %sp
    SW %zero, %223, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into unknown)
    %224 = LW %93, target-flags(<unknown>) @cse_end_of_basic_block, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @cse_end_of_basic_block)
    %a0 = COPY %48
    %a1 = COPY %226
    %a2 = COPY %133
    %a3 = COPY %133
    %gp = COPY %93
    %t9 = COPY %224
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 24, 0, implicit-def dead %sp, implicit %sp
    %229 = LW %103, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from @next_qty)
    %230 = LW %stack.0.val, 8, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr14, align 8)
    %231 = SLL killed %230, 1
    %232 = ADDu killed %231, killed %229
    %233 = LW %96, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from @max_qty)
    %234 = SLT killed %233, killed %232
    BNE killed %234, %zero, %bb.69, implicit-def dead %at
    B %bb.64, implicit-def dead %at
  
  bb.64 (%ir-block.219, freq 5285080):
    successors: %bb.67(37), %bb.65(62)
  
    %235 = LW %stack.0.val, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.220, align 8)
    SW killed %235, %236, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (store 4 into @cse_basic_block_start)
    %237 = LW %93, target-flags(<unknown>) @cse_basic_block_end, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %238 = LW %stack.0.val, 4, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.sunkaddr17)
    SW killed %238, killed %237, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (store 4 into @cse_basic_block_end)
    %50 = LW %stack.0.val, 12, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.sunkaddr20)
    BEQ %50, %zero, %bb.67, implicit-def dead %at
    B %bb.65, implicit-def dead %at
  
  bb.65 (%ir-block.225, freq 3303175):
    successors: %bb.66(50), %bb.67(50)
  
    %239 = LW %50, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.226)
    %241 = AND killed %239, %156
    BNE killed %241, %207, %bb.67, implicit-def dead %at
    B %bb.66, implicit-def dead %at
  
  bb.66 (%ir-block.229, freq 1651587):
    successors: %bb.67(100)
  
    %243 = LW %50, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.230)
    %244 = ADDiu killed %243, 1
    SW killed %244, %50, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.230)
  
  bb.67 (%ir-block.233, freq 5285080):
    successors: %bb.70(100)
  
    %51 = LW %48, 8, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.236)
    %245 = ADDiu %zero, 0
    B %bb.70, implicit-def dead %at
  
  bb.69 (%ir-block.239, freq 170486):
    successors: %bb.71..thread53(100)
  
    B %bb.71..thread53, implicit-def dead %at
  
  bb.70 (%ir-block.241, freq 96179968):
    successors: %bb.71..thread53(3), %bb.13(96)
  
    %53 = PHI %13, %bb.54, %47, %bb.55, %47, %bb.56, %47, %bb.57, %245, %bb.67, %13, %bb.37..loopexit
    %54 = PHI %43, %bb.54, %43, %bb.55, %43, %bb.56, %43, %bb.57, %43, %bb.67, %12, %bb.37..loopexit
    %55 = PHI %10, %bb.54, %46, %bb.55, %46, %bb.56, %46, %bb.57, %51, %bb.67, %35, %bb.37..loopexit
    %56 = PHI %36, %bb.54, %36, %bb.55, %36, %bb.56, %36, %bb.57, %36, %bb.67, %24, %bb.37..loopexit
    %57 = PHI %202, %bb.54, %8, %bb.55, %8, %bb.56, %8, %bb.57, %50, %bb.67, %8, %bb.37..loopexit
    %58 = LW %55, 12, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.243)
    BNE %58, %57, %bb.13, implicit-def dead %at
    B %bb.71..thread53, implicit-def dead %at
  
  bb.71..thread53 (freq 8388607):
    successors: %bb.72(0), %bb.73(99)
  
    %59 = PHI %89, %bb.11..preheader57, %8, %bb.52, %8, %bb.69, %57, %bb.70
    %277 = LW %103, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from @next_qty)
    %279 = LW %96, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from @max_qty)
    %280 = SLT killed %279, killed %277
    BEQ killed %280, %zero, %bb.73, implicit-def dead %at
    B %bb.72, implicit-def dead %at
  
  bb.72 (%ir-block.249, freq 8):
    exit
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %364 = LW %93, target-flags(<unknown>) @.str.4, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %365 = LW %93, target-flags(<unknown>) @__FUNCTION__.cse_basic_block, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %366 = LW %93, target-flags(<unknown>) @fancy_abort, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @fancy_abort)
    %367 = ADDiu %zero, 7379
    %a0 = COPY %364
    %a1 = COPY %367
    %a2 = COPY %365
    %gp = COPY %93
    %t9 = COPY %366
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
  
  bb.73 (%ir-block.250, freq 8388599):
    successors: %bb.75(37), %bb.74(62)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %281 = LW %93, target-flags(<unknown>) @prev_nonnote_insn, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @prev_nonnote_insn)
    %a0 = COPY %59
    %gp = COPY %93
    %t9 = COPY %281
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %282 = COPY %v0
    %283 = LW %93, target-flags(<unknown>) @cse_jumps_altered, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %284 = LW killed %283, 0, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from @cse_jumps_altered)
    BEQ killed %284, %zero, %bb.75, implicit-def dead %at
    B %bb.74, implicit-def dead %at
  
  bb.74 (%ir-block.254, freq 5242874):
    successors: %bb.111(75), %bb.106.cse_around_loop.exit(25)
  
    BEQ %59, %zero, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.111, implicit-def dead %at
  
  bb.111 (%ir-block.254, freq 3932156):
    successors: %bb.112(83), %bb.106.cse_around_loop.exit(16)
  
    BEQ %92, %zero, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.112, implicit-def dead %at
  
  bb.112 (%ir-block.254, freq 3276796):
    successors: %bb.76(80), %bb.106.cse_around_loop.exit(19)
  
    %286 = LW %93, target-flags(<unknown>) @flag_cse_follow_jumps, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %287 = LW %286, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from @flag_cse_follow_jumps)
    %288 = LW %93, target-flags(<unknown>) @flag_cse_skip_blocks, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %289 = LW %288, 0, <0x4a626a0> = !{!"unison-memory-partition", i32 3} :: (load 4 from @flag_cse_skip_blocks)
    %285 = OR %289, %287
    BEQ %285, %zero, %bb.76, implicit-def dead %at
    B %bb.106.cse_around_loop.exit, implicit-def dead %at
  
  bb.75 (%ir-block.261, freq 3145724):
    successors: %bb.113(75), %bb.106.cse_around_loop.exit(25)
  
    BEQ %92, %zero, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.113, implicit-def dead %at
  
  bb.113 (%ir-block.261, freq 2359293):
    successors: %bb.76(66), %bb.106.cse_around_loop.exit(33)
  
    BEQ %59, %zero, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.76, implicit-def dead %at
  
  bb.76 (%ir-block.262, freq 4194300):
    successors: %bb.77(50), %bb.106.cse_around_loop.exit(50)
  
    %290 = LW %59, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.263)
    %291 = LUi 65535
    %292 = AND killed %290, killed %291
    %293 = LUi 37
    BNE killed %292, killed %293, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.77, implicit-def dead %at
  
  bb.77 (%ir-block.266, freq 2097150):
    successors: %bb.78(50), %bb.106.cse_around_loop.exit(50)
  
    %294 = LW %59, 20, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.267)
    %295 = ADDiu %zero, -95
    BNE killed %294, killed %295, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.78, implicit-def dead %at
  
  bb.78 (%ir-block.270, freq 1048575):
    successors: %bb.79(50), %bb.106.cse_around_loop.exit(50)
  
    %60 = COPY %282
    %296 = LW %60, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.271)
    %297 = LUi 65535
    %298 = AND killed %296, killed %297
    %299 = LUi 33
    BNE killed %298, killed %299, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.79, implicit-def dead %at
  
  bb.79 (%ir-block.274, freq 524287):
    successors: %bb.106.cse_around_loop.exit(37), %bb.80(62)
  
    %61 = LW %60, 32, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.276)
    BEQ %61, %zero, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.80, implicit-def dead %at
  
  bb.80 (%ir-block.279, freq 327679):
    successors: %bb.119(50), %bb.106.cse_around_loop.exit(50)
  
    %300 = LW %61, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.280)
    %301 = ADDiu %zero, 1
    BNE %300, %301, %bb.106.cse_around_loop.exit, implicit-def %at
  
  bb.119 (freq 163839):
    successors: %bb.81..preheader(100)
  
    %303 = LUi 65535
    %305 = LUi 37
  
  bb.81..preheader (freq 1803394):
    successors: %bb.106.cse_around_loop.exit(3), %bb.82(96)
  
    %62 = PHI %61, %bb.119, %63, %bb.83
    %63 = LW %62, 8, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.insn.0.in.i)
    BEQ %63, %zero, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.82, implicit-def dead %at
  
  bb.82 (%ir-block.283, freq 1747037):
    successors: %bb.83(96), %bb.106.cse_around_loop.exit(3)
  
    %302 = LW %63, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.284)
    %304 = AND killed %302, %303
    BNE killed %304, %305, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.83, implicit-def dead %at
  
  bb.83 (%ir-block.287, freq 1692443):
    successors: %bb.81..preheader(96), %bb.84(3)
  
    %64 = LW %63, 20, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.288)
    BGEZ %64, %bb.81..preheader, implicit-def dead %at
    B %bb.84, implicit-def dead %at
  
  bb.84 (%ir-block.291, freq 52888):
    successors: %bb.85(50), %bb.106.cse_around_loop.exit(50)
  
    %306 = ADDiu %zero, -96
    BNE %64, killed %306, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.85, implicit-def dead %at
  
  bb.85 (%ir-block.293, freq 26444):
    successors: %bb.92..preheader.i(37), %bb.86(62)
  
    %307 = LW %93, target-flags(<unknown>) @last_jump_equiv_class, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %65 = LW killed %307, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from @last_jump_equiv_class)
    BEQ %65, %zero, %bb.92..preheader.i, implicit-def dead %at
    B %bb.86, implicit-def dead %at
  
  bb.86 (%ir-block.296, freq 16527):
    successors: %bb.92..preheader.i(37), %bb.120(62)
  
    %66 = LW %65, 24, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.297)
    BEQ %66, %zero, %bb.92..preheader.i, implicit-def %at
  
  bb.120 (freq 10329):
    successors: %bb.87..lr.ph18.i(100)
  
    %316 = ADDiu %zero, 133
    %312 = LW %93, target-flags(<unknown>) %jump-table.0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %326 = ADDiu %zero, 0
    %322 = LUi 65535
    %324 = LUi 61
  
  bb.87..lr.ph18.i (freq 330555):
    successors: %bb.114..lr.ph18.i(25), %bb.115..lr.ph18.i(74)
  
    %67 = PHI %66, %bb.120, %70, %bb.91..thread87
    %68 = LW %67, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.299)
    %69 = LW %68, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.301)
    %308 = SRL %69, 16
    %309 = ADDiu %308, -61
    %310 = SLTiu %309, 6
    BEQ killed %310, %zero, %bb.114..lr.ph18.i, implicit-def dead %at
    B %bb.115..lr.ph18.i, implicit-def dead %at
  
  bb.114..lr.ph18.i (freq 82638):
    successors: %bb.90(50), %bb.91..thread87(50)
  
    BEQ %308, %316, %bb.90, implicit-def dead %at
    B %bb.91..thread87, implicit-def dead %at
  
  bb.115..lr.ph18.i (freq 247916):
    successors: %bb.89(45), %bb.91..thread87(9), %bb.88(22), %bb.90(22)
  
    %311 = SLL %309, 2
    %313 = ADDu killed %311, %312
    %314 = LW killed %313, target-flags(<unknown>) %jump-table.0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from jump-table)
    %315 = ADDu killed %314, %93
    PseudoIndirectBranch killed %315
  
  bb.88 (%ir-block.304, freq 56132):
    successors: %bb.89(50), %bb.91..thread87(50)
  
    %320 = LW %68, 4, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.306)
    %321 = LW killed %320, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.307)
    %323 = AND killed %321, %322
    BNE killed %323, %324, %bb.91..thread87, implicit-def dead %at
    B %bb.89, implicit-def dead %at
  
  bb.89 (%ir-block.310, freq 140330):
    successors: %bb.91..thread87(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %325 = LW %93, target-flags(<unknown>) @invalidate, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @invalidate)
    %a0 = COPY %68
    %a1 = COPY %326
    %gp = COPY %93
    %t9 = COPY %325
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.91..thread87, implicit-def dead %at
  
  bb.90 (%ir-block.311, freq 97451):
    successors: %bb.91..thread87(100)
  
    %317 = LW %68, 4, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.313)
    %318 = EXT %69, 8, 8
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %319 = LW %93, target-flags(<unknown>) @invalidate, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @invalidate)
    %a0 = COPY %317
    %a1 = COPY %318
    %gp = COPY %93
    %t9 = COPY %319
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
  
  bb.91..thread87 (freq 330555):
    successors: %bb.92..preheader.i(3), %bb.87..lr.ph18.i(96)
  
    %70 = LW %67, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.317)
    BNE %70, %zero, %bb.87..lr.ph18.i, implicit-def dead %at
    B %bb.92..preheader.i, implicit-def dead %at
  
  bb.92..preheader.i (freq 347098):
    successors: %bb.106.cse_around_loop.exit(1), %bb.116..preheader.i(98)
  
    %71 = PHI %61, %bb.85, %61, %bb.86, %61, %bb.91..thread87, %72, %bb.96..critedge9.i, %72, %bb.98, %72, %bb.99, %72, %bb.100, %72, %bb.103..backedge.i
    %72 = LW %71, 12, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.insn.1.in.i)
    %327 = LW %72, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.319)
    %73 = SRL killed %327, 16
    %328 = ADDiu %zero, 34
    BEQ %73, killed %328, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.116..preheader.i, implicit-def dead %at
  
  bb.116..preheader.i (freq 341674):
    successors: %bb.106.cse_around_loop.exit(1), %bb.93(98)
  
    %329 = ADDiu %zero, 36
    BEQ %73, killed %329, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.93, implicit-def dead %at
  
  bb.93 (%ir-block.322, freq 336251):
    successors: %bb.94(96), %bb.106.cse_around_loop.exit(3)
  
    %330 = LW %72, 4, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.323)
    %331 = LW %93, target-flags(<unknown>) @max_insn_uid, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %332 = LW killed %331, 0, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from @max_insn_uid)
    %333 = SLT killed %330, killed %332
    BEQ killed %333, %zero, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.94, implicit-def dead %at
  
  bb.94 (%ir-block.327, freq 325743):
    successors: %bb.95(50), %bb.96..critedge9.i(50)
  
    %334 = ADDiu %zero, 37
    BNE %73, killed %334, %bb.96..critedge9.i, implicit-def dead %at
    B %bb.95, implicit-def dead %at
  
  bb.95 (%ir-block.329, freq 162871):
    successors: %bb.106.cse_around_loop.exit(3), %bb.96..critedge9.i(96)
  
    %335 = LW %72, 20, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.330)
    %336 = ADDiu %zero, -95
    BEQ killed %335, killed %336, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.96..critedge9.i, implicit-def dead %at
  
  bb.96..critedge9.i (freq 320653):
    successors: %bb.97(50), %bb.92..preheader.i(50)
  
    %337 = LW %93, target-flags(<unknown>) @rtx_class, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %338 = ADDu killed %337, %73
    %339 = LBu killed %338, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.333)
    %340 = ADDiu %zero, 105
    BNE killed %339, killed %340, %bb.92..preheader.i, implicit-def dead %at
    B %bb.97, implicit-def dead %at
  
  bb.97 (%ir-block.336, freq 160326):
    successors: %bb.98(33), %bb.117(66)
  
    %74 = LW %72, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.338)
    %75 = LW %74, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.339)
    %341 = SRL %75, 16
    %342 = ADDiu %zero, 49
    BEQ %341, killed %342, %bb.98, implicit-def dead %at
    B %bb.117, implicit-def dead %at
  
  bb.117 (%ir-block.336, freq 106884):
    successors: %bb.98(50), %bb.99(49)
  
    %343 = ADDiu %zero, 47
    BNE %341, killed %343, %bb.99, implicit-def dead %at
    B %bb.98, implicit-def dead %at
  
  bb.98 (%ir-block.342, freq 106884):
    successors: %bb.92..preheader.i(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %344 = LW %93, target-flags(<unknown>) @cse_set_around_loop, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @cse_set_around_loop)
    %a0 = COPY %74
    %a1 = COPY %72
    %a2 = COPY %61
    %gp = COPY %93
    %t9 = COPY %344
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.92..preheader.i, implicit-def dead %at
  
  bb.99 (%ir-block.344, freq 53442):
    successors: %bb.100(50), %bb.92..preheader.i(50)
  
    %345 = LUi 65535
    %346 = AND %75, killed %345
    %347 = LUi 39
    BNE killed %346, killed %347, %bb.92..preheader.i, implicit-def dead %at
    B %bb.100, implicit-def dead %at
  
  bb.100 (%ir-block.346, freq 26721):
    successors: %bb.101..lr.ph.i.preheader(50), %bb.92..preheader.i(50)
  
    %76 = LW %74, 4, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.348)
    %77 = LW %76, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.350)
    BLEZ %77, %bb.92..preheader.i, implicit-def dead %at
    B %bb.101..lr.ph.i.preheader, implicit-def dead %at
  
  bb.101..lr.ph.i.preheader (freq 13360):
    successors: %bb.102..lr.ph.i(100)
  
    %79 = SLL %77, 2
    %78 = ADDiu %77, 1
    %351 = ADDiu %zero, 47
    %352 = ADDiu %zero, 49
  
  bb.102..lr.ph.i (freq 427538):
    successors: %bb.105(33), %bb.118..lr.ph.i(66)
  
    %80 = PHI %79, %bb.101..lr.ph.i.preheader, %85, %bb.104..backedge..lr.ph_crit_edge.i
    %81 = PHI %78, %bb.101..lr.ph.i.preheader, %84, %bb.104..backedge..lr.ph_crit_edge.i
    %82 = PHI %76, %bb.101..lr.ph.i.preheader, %86, %bb.104..backedge..lr.ph_crit_edge.i
    %349 = ADDu %82, %80
    %83 = LW killed %349, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.uglygep3)
    %350 = LW %83, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.357)
    %348 = SRL killed %350, 16
    BEQ %348, %351, %bb.105, implicit-def dead %at
    B %bb.118..lr.ph.i, implicit-def dead %at
  
  bb.118..lr.ph.i (freq 285025):
    successors: %bb.105(50), %bb.103..backedge.i(49)
  
    BEQ %348, %352, %bb.105, implicit-def dead %at
    B %bb.103..backedge.i, implicit-def dead %at
  
  bb.103..backedge.i (freq 427538):
    successors: %bb.104..backedge..lr.ph_crit_edge.i(96), %bb.92..preheader.i(3)
  
    %85 = ADDiu %80, -4
    %84 = ADDiu %81, -1
    %354 = SLTi %84, 2
    BNE killed %354, %zero, %bb.92..preheader.i, implicit-def dead %at
    B %bb.104..backedge..lr.ph_crit_edge.i, implicit-def dead %at
  
  bb.104..backedge..lr.ph_crit_edge.i (freq 414177):
    successors: %bb.102..lr.ph.i(100)
  
    %355 = LW %72, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr23)
    %86 = LW killed %355, 4, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir..phi.trans.insert21.i)
    B %bb.102..lr.ph.i, implicit-def dead %at
  
  bb.105 (%ir-block.361, freq 285025):
    successors: %bb.103..backedge.i(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %353 = LW %93, target-flags(<unknown>) @cse_set_around_loop, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @cse_set_around_loop)
    %a0 = COPY %83
    %a1 = COPY %72
    %a2 = COPY %61
    %gp = COPY %93
    %t9 = COPY %353
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.103..backedge.i, implicit-def dead %at
  
  bb.106.cse_around_loop.exit (freq 8388599):
    successors: %bb.108(37), %bb.107(62)
  
    %358 = LW %104, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from @qty_table)
    %360 = LW %94, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from @max_reg)
    %361 = SLL killed %360, 5
    %362 = ADDu killed %358, killed %361
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %363 = LW %93, target-flags(<unknown>) @free, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @free)
    %a0 = COPY %362
    %gp = COPY %93
    %t9 = COPY %363
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %356 = ADDiu %zero, 0
    BEQ %59, %zero, %bb.108, implicit-def dead %at
    B %bb.107, implicit-def dead %at
  
  bb.107 (%ir-block.368, freq 5242874):
    successors: %bb.108(100)
  
    %87 = LW %59, 12, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.370)
  
  bb.108 (%ir-block.372, freq 10134410):
    liveouts: %v0
  
    %88 = PHI %194, %bb.51..thread52, %370, %bb.62, %356, %bb.106.cse_around_loop.exit, %87, %bb.107, %246, %bb.59
    %v0 = COPY %88
    RetRA implicit %v0

...
--- |
  ; ModuleID = '/home/romi/didaktoriko/unison/unison-experiments/experiments/mips/selected-functions/size-toplas/gcc.cse.cse_basic_block.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips--linux-gnu"
  
  %struct.qty_table_elem.1035 = type { %struct.rtx_def.1033*, %struct.rtx_def.1033*, %struct.rtx_def.1033*, i32, i32, i32, i32, i32 }
  %struct.rtx_def.1033 = type { i32, [1 x %union.rtunion_def.1034] }
  %union.rtunion_def.1034 = type { i32 }
  %struct.cse_reg_info.1036 = type { %struct.cse_reg_info.1036*, %struct.cse_reg_info.1036*, i32, i32, i32, i32 }
  %struct.table_elt.1037 = type { %struct.rtx_def.1033*, %struct.rtx_def.1033*, %struct.table_elt.1037*, %struct.table_elt.1037*, %struct.table_elt.1037*, %struct.table_elt.1037*, %struct.table_elt.1037*, %struct.table_elt.1037*, i32, i32, i32, i8, i8, i8 }
  %struct.cse_basic_block_data.1055 = type { i32, i32, i32, %struct.rtx_def.1033*, i32, [10 x %struct.branch_path.1056] }
  %struct.branch_path.1056 = type { %struct.rtx_def.1033*, i32 }
  %struct.rtvec_def.1054 = type { i32, [1 x %struct.rtx_def.1033*] }
  
  @rtx_class = external constant [153 x i8], align 1
  @cse_jumps_altered = external hidden unnamed_addr global i32, align 4
  @recorded_label_ref = external hidden unnamed_addr global i1
  @max_reg = external hidden unnamed_addr global i32, align 4
  @max_insn_uid = external hidden unnamed_addr global i32, align 4
  @flag_cse_follow_jumps = external global i32, align 4
  @flag_cse_skip_blocks = external global i32, align 4
  @cse_basic_block_start = external hidden unnamed_addr global i32, align 4
  @cse_basic_block_end = external hidden unnamed_addr global i32, align 4
  @max_qty = external hidden unnamed_addr global i32, align 4
  @qty_table = external hidden unnamed_addr global %struct.qty_table_elem.1035*, align 4
  @prev_insn = external hidden unnamed_addr global %struct.rtx_def.1033*, align 4
  @next_qty = external hidden unnamed_addr global i32, align 4
  @.str.4 = external hidden unnamed_addr constant [6 x i8], align 1
  @__FUNCTION__.cse_basic_block = external hidden unnamed_addr constant [16 x i8], align 1
  @reg_hash = external hidden unnamed_addr global [128 x %struct.cse_reg_info.1036*], align 4
  @cse_reg_info_used_list = external hidden unnamed_addr global %struct.cse_reg_info.1036*, align 4
  @cse_reg_info_free_list = external hidden unnamed_addr global %struct.cse_reg_info.1036*, align 4
  @cse_reg_info_used_list_end = external hidden unnamed_addr global %struct.cse_reg_info.1036*, align 4
  @cached_cse_reg_info = external hidden unnamed_addr global %struct.cse_reg_info.1036*, align 4
  @hard_regs_in_table = external hidden unnamed_addr global i32, align 4
  @table = external hidden unnamed_addr global [32 x %struct.table_elt.1037*], align 4
  @free_element_chain = external hidden unnamed_addr global %struct.table_elt.1037*, align 4
  @last_jump_equiv_class = external hidden unnamed_addr global %struct.table_elt.1037*, align 4
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.start(i64, i8* nocapture) #0
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.lifetime.end(i64, i8* nocapture) #0
  
  ; Function Attrs: nounwind
  declare void @cse_end_of_basic_block(%struct.rtx_def.1033*, %struct.cse_basic_block_data.1055* nocapture, i32 signext, i32 signext, i32 signext) #1
  
  declare %struct.rtx_def.1033* @find_reg_note(%struct.rtx_def.1033*, i32 signext, %struct.rtx_def.1033*) #2
  
  declare noalias i8* @xmalloc(i32 signext) #2
  
  ; Function Attrs: nounwind
  define hidden fastcc %struct.rtx_def.1033* @cse_basic_block(%struct.rtx_def.1033* %from, %struct.rtx_def.1033* %to, %struct.branch_path.1056* nocapture readonly %next_branch, i32 signext %around_loop) unnamed_addr #1 {
    %val = alloca %struct.cse_basic_block_data.1055, align 4
    %1 = load i32, i32* @max_qty, align 4
    %2 = load i32, i32* @max_reg, align 4
    %3 = sub nsw i32 %1, %2
    %4 = shl i32 %3, 5
    %5 = tail call noalias i8* @xmalloc(i32 signext %4) #5
    %6 = bitcast i8* %5 to %struct.qty_table_elem.1035*
    %7 = load i32, i32* @max_reg, align 4
    %8 = sub i32 0, %7
    %9 = getelementptr inbounds %struct.qty_table_elem.1035, %struct.qty_table_elem.1035* %6, i32 %8
    store %struct.qty_table_elem.1035* %9, %struct.qty_table_elem.1035** @qty_table, align 4
    store i32 %7, i32* @next_qty, align 4
    tail call void @llvm.memset.p0i8.i32(i8* bitcast ([128 x %struct.cse_reg_info.1036*]* @reg_hash to i8*), i8 0, i32 512, i32 4, i1 false) #5
    %10 = load %struct.cse_reg_info.1036*, %struct.cse_reg_info.1036** @cse_reg_info_used_list, align 4
    %11 = icmp eq %struct.cse_reg_info.1036* %10, null
    br i1 %11, label %18, label %12
  
  ; <label>:12                                      ; preds = %0
    %13 = ptrtoint %struct.cse_reg_info.1036* %10 to i32
    %14 = load i32, i32* bitcast (%struct.cse_reg_info.1036** @cse_reg_info_free_list to i32*), align 4
    %15 = load %struct.cse_reg_info.1036*, %struct.cse_reg_info.1036** @cse_reg_info_used_list_end, align 4
    %16 = getelementptr inbounds %struct.cse_reg_info.1036, %struct.cse_reg_info.1036* %15, i32 0, i32 1
    %17 = bitcast %struct.cse_reg_info.1036** %16 to i32*
    store i32 %14, i32* %17, align 4
    store i32 %13, i32* bitcast (%struct.cse_reg_info.1036** @cse_reg_info_free_list to i32*), align 4
    store %struct.cse_reg_info.1036* null, %struct.cse_reg_info.1036** @cse_reg_info_used_list_end, align 4
    store %struct.cse_reg_info.1036* null, %struct.cse_reg_info.1036** @cse_reg_info_used_list, align 4
    br label %18
  
  ; <label>:18                                      ; preds = %12, %0
    store %struct.cse_reg_info.1036* null, %struct.cse_reg_info.1036** @cached_cse_reg_info, align 4
    store i32 0, i32* @hard_regs_in_table, align 4
    br label %19
  
  ; <label>:19                                      ; preds = %30, %18
    %i.01.i = phi i32 [ 0, %18 ], [ %31, %30 ]
    %20 = getelementptr inbounds [32 x %struct.table_elt.1037*], [32 x %struct.table_elt.1037*]* @table, i32 0, i32 %i.01.i
    %21 = load %struct.table_elt.1037*, %struct.table_elt.1037** %20, align 4
    %22 = icmp eq %struct.table_elt.1037* %21, null
    br i1 %22, label %30, label %23
  
  ; <label>:23                                      ; preds = %19
    store %struct.table_elt.1037* null, %struct.table_elt.1037** %20, align 4
    br label %24
  
  ; <label>:24                                      ; preds = %24, %23
    %last.0.i = phi %struct.table_elt.1037* [ %21, %23 ], [ %26, %24 ]
    %25 = getelementptr inbounds %struct.table_elt.1037, %struct.table_elt.1037* %last.0.i, i32 0, i32 2
    %26 = load %struct.table_elt.1037*, %struct.table_elt.1037** %25, align 4
    %27 = icmp eq %struct.table_elt.1037* %26, null
    br i1 %27, label %28, label %24
  
  ; <label>:28                                      ; preds = %24
    %29 = load i32, i32* bitcast (%struct.table_elt.1037** @free_element_chain to i32*), align 4
    %sunkaddr = ptrtoint %struct.table_elt.1037* %last.0.i to i32
    %sunkaddr4 = add i32 %sunkaddr, 8
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to i32*
    store i32 %29, i32* %sunkaddr5, align 4
    store %struct.table_elt.1037* %21, %struct.table_elt.1037** @free_element_chain, align 4
    br label %30
  
  ; <label>:30                                      ; preds = %28, %19
    %31 = add nuw nsw i32 %i.01.i, 1
    %exitcond.i = icmp eq i32 %31, 32
    br i1 %exitcond.i, label %new_basic_block.exit, label %19
  
  new_basic_block.exit:                             ; preds = %30
    %32 = icmp eq %struct.rtx_def.1033* %to, null
    br i1 %32, label %.preheader57, label %33
  
  ; <label>:33                                      ; preds = %new_basic_block.exit
    %34 = bitcast %struct.rtx_def.1033* %to to i32*
    %35 = load i32, i32* %34, align 4
    %.mask30 = and i32 %35, -65536
    %36 = icmp eq i32 %.mask30, 2359296
    br i1 %36, label %37, label %.preheader57
  
  ; <label>:37                                      ; preds = %33
    %38 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %to, i32 0, i32 1, i32 3, i32 0
    %39 = load i32, i32* %38, align 4
    %40 = add nsw i32 %39, 1
    store i32 %40, i32* %38, align 4
    br label %.preheader57
  
  .preheader57:                                     ; preds = %37, %33, %new_basic_block.exit
    %.014.ph = phi %struct.rtx_def.1033* [ %to, %33 ], [ %to, %37 ], [ null, %new_basic_block.exit ]
    %41 = icmp eq %struct.rtx_def.1033* %.014.ph, %from
    br i1 %41, label %.thread53, label %.lr.ph
  
  .lr.ph:                                           ; preds = %.preheader57
    br label %42
  
  ; <label>:42                                      ; preds = %241, %.lr.ph
    %.01475 = phi %struct.rtx_def.1033* [ %.014.ph, %.lr.ph ], [ %.317.ph, %241 ]
    %.02274 = phi %struct.branch_path.1056* [ %next_branch, %.lr.ph ], [ %.224.ph, %241 ]
    %insn.073 = phi %struct.rtx_def.1033* [ %from, %.lr.ph ], [ %244, %241 ]
    %num_insns.072 = phi i32 [ 0, %.lr.ph ], [ %num_insns.1, %241 ]
    %libcall_insn.071 = phi %struct.rtx_def.1033* [ null, %.lr.ph ], [ %libcall_insn.3.ph, %241 ]
    %to_usage.070 = phi i32 [ 0, %.lr.ph ], [ %to_usage.5.ph, %241 ]
    %43 = bitcast %struct.rtx_def.1033* %insn.073 to i32*
    %44 = load i32, i32* %43, align 4
    %45 = lshr i32 %44, 16
    %46 = icmp eq i32 %45, 37
    br i1 %46, label %flush_hash_table.exit, label %47
  
  ; <label>:47                                      ; preds = %42
    %48 = add nsw i32 %num_insns.072, 1
    %49 = icmp sgt i32 %num_insns.072, 1000
    br i1 %49, label %.preheader56, label %flush_hash_table.exit
  
  .preheader56:                                     ; preds = %47, %._crit_edge.i
    %i.03.i = phi i32 [ %62, %._crit_edge.i ], [ 0, %47 ]
    %50 = getelementptr inbounds [32 x %struct.table_elt.1037*], [32 x %struct.table_elt.1037*]* @table, i32 0, i32 %i.03.i
    %p.01.i = load %struct.table_elt.1037*, %struct.table_elt.1037** %50, align 4
    %51 = icmp eq %struct.table_elt.1037* %p.01.i, null
    br i1 %51, label %._crit_edge.i, label %.lr.ph.i31
  
  .lr.ph.i31:                                       ; preds = %.preheader56, %.backedge.i33
    %p.02.i = phi %struct.table_elt.1037* [ %p.0.i32, %.backedge.i33 ], [ %p.01.i, %.preheader56 ]
    %52 = bitcast %struct.table_elt.1037* %p.02.i to %struct.rtx_def.1033**
    %53 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %52, align 4
    %54 = bitcast %struct.rtx_def.1033* %53 to i32*
    %55 = load i32, i32* %54, align 4
    %.mask.i = and i32 %55, -65536
    %56 = icmp eq i32 %.mask.i, 3997696
    br i1 %56, label %57, label %61
  
  ; <label>:57                                      ; preds = %.lr.ph.i31
    %58 = getelementptr inbounds %struct.table_elt.1037, %struct.table_elt.1037* %p.02.i, i32 0, i32 10
    %59 = load i32, i32* %58, align 4
    tail call fastcc void @invalidate(%struct.rtx_def.1033* %53, i32 signext %59) #5
    br label %.backedge.i33
  
  .backedge.i33:                                    ; preds = %61, %57
    %p.0.i32 = load %struct.table_elt.1037*, %struct.table_elt.1037** %50, align 4
    %60 = icmp eq %struct.table_elt.1037* %p.0.i32, null
    br i1 %60, label %._crit_edge.i, label %.lr.ph.i31
  
  ; <label>:61                                      ; preds = %.lr.ph.i31
    tail call fastcc void @remove_from_table(%struct.table_elt.1037* nonnull %p.02.i, i32 signext %i.03.i) #5
    br label %.backedge.i33
  
  ._crit_edge.i:                                    ; preds = %.backedge.i33, %.preheader56
    %62 = add nuw nsw i32 %i.03.i, 1
    %exitcond.i34 = icmp eq i32 %62, 32
    br i1 %exitcond.i34, label %flush_hash_table.exit, label %.preheader56
  
  flush_hash_table.exit:                            ; preds = %._crit_edge.i, %47, %42
    %num_insns.1 = phi i32 [ %48, %47 ], [ %num_insns.072, %42 ], [ 0, %._crit_edge.i ]
    %63 = bitcast %struct.branch_path.1056* %.02274 to %struct.rtx_def.1033**
    %64 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %63, align 4
    %65 = icmp eq %struct.rtx_def.1033* %64, %insn.073
    br i1 %65, label %66, label %.thread
  
  ; <label>:66                                      ; preds = %flush_hash_table.exit
    %67 = getelementptr inbounds %struct.branch_path.1056, %struct.branch_path.1056* %.02274, i32 1
    %68 = getelementptr inbounds %struct.branch_path.1056, %struct.branch_path.1056* %.02274, i32 0, i32 1
    %69 = load i32, i32* %68, align 4
    switch i32 %69, label %71 [
      i32 1, label %.thread
      i32 0, label %70
    ]
  
  ; <label>:70                                      ; preds = %66
    tail call fastcc void @record_jump_equiv(%struct.rtx_def.1033* %insn.073, i32 signext 1)
    br label %.loopexit
  
  ; <label>:71                                      ; preds = %66
    %72 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.073, i32 0, i32 1, i32 2
    %73 = bitcast %union.rtunion_def.1034* %72 to %struct.rtx_def.1033**
    %74 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %73, align 4
    %75 = icmp eq %struct.rtx_def.1033* %74, null
    br i1 %75, label %.loopexit, label %.lr.ph.i35
  
  .lr.ph.i35:                                       ; preds = %71, %105
    %insn.01.i = phi %struct.rtx_def.1033* [ %108, %105 ], [ %74, %71 ]
    %76 = bitcast %struct.rtx_def.1033* %insn.01.i to i32*
    %77 = load i32, i32* %76, align 4
    %78 = lshr i32 %77, 16
    %79 = icmp eq i32 %78, 36
    br i1 %79, label %.loopexit, label %80
  
  ; <label>:80                                      ; preds = %.lr.ph.i35
    %81 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i32 %78
    %82 = load i8, i8* %81, align 1
    %83 = icmp eq i8 %82, 105
    br i1 %83, label %84, label %105
  
  ; <label>:84                                      ; preds = %80
    %85 = icmp eq i32 %78, 34
    br i1 %85, label %86, label %100
  
  ; <label>:86                                      ; preds = %84
    %87 = and i32 %77, 32
    %88 = icmp eq i32 %87, 0
    br i1 %88, label %.preheader.i36, label %invalidate_memory.exit.i
  
  .preheader.i36:                                   ; preds = %86, %._crit_edge.i.i
    %i.02.i.i = phi i32 [ %99, %._crit_edge.i.i ], [ 0, %86 ]
    %89 = getelementptr inbounds [32 x %struct.table_elt.1037*], [32 x %struct.table_elt.1037*]* @table, i32 0, i32 %i.02.i.i
    %90 = load %struct.table_elt.1037*, %struct.table_elt.1037** %89, align 4
    %91 = icmp eq %struct.table_elt.1037* %90, null
    br i1 %91, label %._crit_edge.i.i, label %.lr.ph.i.i
  
  .lr.ph.i.i:                                       ; preds = %.preheader.i36, %.backedge.i.i
    %p.01.i.i = phi %struct.table_elt.1037* [ %93, %.backedge.i.i ], [ %90, %.preheader.i36 ]
    %92 = getelementptr inbounds %struct.table_elt.1037, %struct.table_elt.1037* %p.01.i.i, i32 0, i32 2
    %93 = load %struct.table_elt.1037*, %struct.table_elt.1037** %92, align 4
    %94 = getelementptr inbounds %struct.table_elt.1037, %struct.table_elt.1037* %p.01.i.i, i32 0, i32 11
    %95 = load i8, i8* %94, align 4
    %96 = icmp eq i8 %95, 0
    br i1 %96, label %.backedge.i.i, label %98
  
  .backedge.i.i:                                    ; preds = %98, %.lr.ph.i.i
    %97 = icmp eq %struct.table_elt.1037* %93, null
    br i1 %97, label %._crit_edge.i.i, label %.lr.ph.i.i
  
  ; <label>:98                                      ; preds = %.lr.ph.i.i
    tail call fastcc void @remove_from_table(%struct.table_elt.1037* nonnull %p.01.i.i, i32 signext %i.02.i.i) #5
    br label %.backedge.i.i
  
  ._crit_edge.i.i:                                  ; preds = %.backedge.i.i, %.preheader.i36
    %99 = add nuw nsw i32 %i.02.i.i, 1
    %exitcond.i.i = icmp eq i32 %99, 32
    br i1 %exitcond.i.i, label %invalidate_memory.exit.i, label %.preheader.i36
  
  invalidate_memory.exit.i:                         ; preds = %._crit_edge.i.i, %86
    tail call fastcc void @invalidate_for_call() #5
    br label %100
  
  ; <label>:100                                     ; preds = %invalidate_memory.exit.i, %84
    %101 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.01.i, i32 0, i32 1, i32 3
    %102 = bitcast %union.rtunion_def.1034* %101 to %struct.rtx_def.1033**
    %103 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %102, align 4
    tail call fastcc void @invalidate_from_clobbers(%struct.rtx_def.1033* %103) #5
    %104 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %102, align 4
    tail call void @note_stores(%struct.rtx_def.1033* %104, void (%struct.rtx_def.1033*, %struct.rtx_def.1033*, i8*)* nonnull @invalidate_skipped_set, i8* null) #5
    br label %105
  
  ; <label>:105                                     ; preds = %100, %80
    %106 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.01.i, i32 0, i32 1, i32 2
    %107 = bitcast %union.rtunion_def.1034* %106 to %struct.rtx_def.1033**
    %108 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %107, align 4
    %109 = icmp eq %struct.rtx_def.1033* %108, null
    br i1 %109, label %.loopexit, label %.lr.ph.i35
  
  .loopexit:                                        ; preds = %.lr.ph.i35, %105, %71, %70
    store %struct.rtx_def.1033* %insn.073, %struct.rtx_def.1033** @prev_insn, align 4
    %110 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.073, i32 0, i32 1, i32 7
    %111 = bitcast %union.rtunion_def.1034* %110 to %struct.rtx_def.1033**
    %112 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %111, align 4
    br label %241
  
  .thread:                                          ; preds = %66, %flush_hash_table.exit
    %.123 = phi %struct.branch_path.1056* [ %.02274, %flush_hash_table.exit ], [ %67, %66 ]
    %113 = bitcast %struct.rtx_def.1033* %insn.073 to i32*
    %114 = load i32, i32* %113, align 4
    %115 = and i32 %114, 65280
    %116 = icmp eq i32 %115, 512
    br i1 %116, label %117, label %120
  
  ; <label>:117                                     ; preds = %.thread
    %118 = bitcast %struct.rtx_def.1033* %insn.073 to i32*
    %119 = and i32 %114, -65281
    store i32 %119, i32* %118, align 4
    br label %120
  
  ; <label>:120                                     ; preds = %117, %.thread
    %121 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i32 %45
    %122 = load i8, i8* %121, align 1
    %123 = icmp eq i8 %122, 105
    br i1 %123, label %124, label %152
  
  ; <label>:124                                     ; preds = %120
    %125 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.073, i32 0, i32 1, i32 6
    %126 = bitcast %union.rtunion_def.1034* %125 to %struct.rtx_def.1033**
    %127 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %126, align 4
    %128 = icmp eq %struct.rtx_def.1033* %127, null
    br i1 %128, label %.thread38, label %129
  
  ; <label>:129                                     ; preds = %124
    %130 = tail call fastcc %struct.rtx_def.1033* @cse_process_notes(%struct.rtx_def.1033* nonnull %127, %struct.rtx_def.1033* null)
    %sunkaddr6 = ptrtoint %struct.rtx_def.1033* %insn.073 to i32
    %sunkaddr7 = add i32 %sunkaddr6, 28
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to %struct.rtx_def.1033**
    store %struct.rtx_def.1033* %130, %struct.rtx_def.1033** %sunkaddr8, align 4
    %131 = icmp eq %struct.rtx_def.1033* %130, null
    br i1 %131, label %.thread38, label %132
  
  ; <label>:132                                     ; preds = %129
    %133 = tail call %struct.rtx_def.1033* @find_reg_note(%struct.rtx_def.1033* nonnull %insn.073, i32 signext 7, %struct.rtx_def.1033* null) #5
    %134 = icmp eq %struct.rtx_def.1033* %133, null
    br i1 %134, label %139, label %135
  
  ; <label>:135                                     ; preds = %132
    %136 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %133, i32 0, i32 1, i32 0
    %137 = bitcast %union.rtunion_def.1034* %136 to %struct.rtx_def.1033**
    %138 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %137, align 4
    br label %.thread38
  
  ; <label>:139                                     ; preds = %132
    %140 = tail call %struct.rtx_def.1033* @find_reg_note(%struct.rtx_def.1033* nonnull %insn.073, i32 signext 6, %struct.rtx_def.1033* null) #5
    %141 = icmp eq %struct.rtx_def.1033* %140, null
    %libcall_insn.0. = select i1 %141, %struct.rtx_def.1033* %libcall_insn.071, %struct.rtx_def.1033* null
    br label %.thread38
  
  .thread38:                                        ; preds = %139, %135, %129, %124
    %libcall_insn.1 = phi %struct.rtx_def.1033* [ %138, %135 ], [ %libcall_insn.071, %129 ], [ %libcall_insn.0., %139 ], [ %libcall_insn.071, %124 ]
    %142 = bitcast %struct.rtx_def.1033* %insn.073 to i32*
    tail call fastcc void @cse_insn(%struct.rtx_def.1033* nonnull %insn.073, %struct.rtx_def.1033* %libcall_insn.1)
    %143 = load i32, i32* %142, align 4
    %.mask29 = and i32 %143, -65536
    %144 = icmp ne i32 %.mask29, 2097152
    %.b = load i1, i1* @recorded_label_ref, align 1
    %or.cond = or i1 %.b, %144
    br i1 %or.cond, label %152, label %145
  
  ; <label>:145                                     ; preds = %.thread38
    %146 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.073, i32 0, i32 1, i32 3
    %147 = bitcast %union.rtunion_def.1034* %146 to %struct.rtx_def.1033**
    %148 = bitcast %struct.rtx_def.1033* %insn.073 to i8*
    %149 = tail call i32 @for_each_rtx(%struct.rtx_def.1033** %147, i32 (%struct.rtx_def.1033**, i8*)* nonnull @check_for_label_ref, i8* %148) #5
    %150 = icmp eq i32 %149, 0
    br i1 %150, label %152, label %151
  
  ; <label>:151                                     ; preds = %145
    store i1 true, i1* @recorded_label_ref, align 1
    br label %152
  
  ; <label>:152                                     ; preds = %151, %145, %.thread38, %120
    %libcall_insn.2 = phi %struct.rtx_def.1033* [ %libcall_insn.071, %120 ], [ %libcall_insn.1, %145 ], [ %libcall_insn.1, %.thread38 ], [ %libcall_insn.1, %151 ]
    %153 = tail call i32 @any_uncondjump_p(%struct.rtx_def.1033* nonnull %insn.073) #5
    %154 = icmp eq i32 %153, 0
    br i1 %154, label %173, label %155
  
  ; <label>:155                                     ; preds = %152
    %156 = icmp eq %struct.rtx_def.1033* %.01475, null
    br i1 %156, label %.thread52, label %161
  
  .thread52:                                        ; preds = %155
    %157 = load %struct.qty_table_elem.1035*, %struct.qty_table_elem.1035** @qty_table, align 4
    %158 = load i32, i32* @max_reg, align 4
    %159 = getelementptr inbounds %struct.qty_table_elem.1035, %struct.qty_table_elem.1035* %157, i32 %158
    %160 = bitcast %struct.qty_table_elem.1035* %159 to i8*
    tail call void @free(i8* %160) #5
    br label %372
  
  ; <label>:161                                     ; preds = %155
    %162 = bitcast %struct.rtx_def.1033* %.01475 to i32*
    %163 = load i32, i32* %162, align 4
    %164 = and i32 %163, 16
    %165 = icmp eq i32 %164, 0
    br i1 %165, label %.thread39, label %.thread53
  
  .thread39:                                        ; preds = %161
    %166 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.073, i32 0, i32 1, i32 7
    %167 = bitcast %union.rtunion_def.1034* %166 to %struct.rtx_def.1033**
    %168 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %167, align 4
    %169 = icmp eq %struct.rtx_def.1033* %168, %.01475
    %.to_usage.0 = select i1 %169, i32 1, i32 %to_usage.070
    %170 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %.01475, i32 0, i32 1, i32 1
    %171 = bitcast %union.rtunion_def.1034* %170 to %struct.rtx_def.1033**
    %172 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %171, align 4
    br label %175
  
  ; <label>:173                                     ; preds = %152
    %174 = icmp eq %struct.rtx_def.1033* %.01475, null
    br i1 %174, label %241, label %175
  
  ; <label>:175                                     ; preds = %173, %.thread39
    %insn.341 = phi %struct.rtx_def.1033* [ %172, %.thread39 ], [ %insn.073, %173 ]
    %to_usage.240 = phi i32 [ %.to_usage.0, %.thread39 ], [ %to_usage.070, %173 ]
    %176 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.341, i32 0, i32 1, i32 2
    %177 = bitcast %union.rtunion_def.1034* %176 to %struct.rtx_def.1033**
    %178 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %177, align 4
    %179 = icmp eq %struct.rtx_def.1033* %178, %.01475
    br i1 %179, label %180, label %241
  
  ; <label>:180                                     ; preds = %175
    %181 = bitcast %struct.rtx_def.1033* %.01475 to i32*
    %182 = load i32, i32* %181, align 4
    %.mask26 = and i32 %182, -65536
    %183 = icmp eq i32 %.mask26, 2359296
    br i1 %183, label %184, label %241
  
  ; <label>:184                                     ; preds = %180
    %185 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %.01475, i32 0, i32 1, i32 3, i32 0
    %186 = load i32, i32* %185, align 4
    %187 = add nsw i32 %186, -1
    store i32 %187, i32* %185, align 4
    %188 = icmp eq i32 %187, %to_usage.240
    br i1 %188, label %189, label %241
  
  ; <label>:189                                     ; preds = %184
    %190 = bitcast %struct.cse_basic_block_data.1055* %val to i8*
    call void @llvm.lifetime.start(i64 100, i8* %190) #5
    %191 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %.01475, i32 0, i32 1, i32 2
    %192 = bitcast %union.rtunion_def.1034* %191 to %struct.rtx_def.1033**
    %193 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %192, align 4
    %194 = icmp eq %struct.rtx_def.1033* %193, null
    br i1 %194, label %195, label %200
  
  ; <label>:195                                     ; preds = %189
    %196 = load %struct.qty_table_elem.1035*, %struct.qty_table_elem.1035** @qty_table, align 4
    %197 = load i32, i32* @max_reg, align 4
    %198 = getelementptr inbounds %struct.qty_table_elem.1035, %struct.qty_table_elem.1035* %196, i32 %197
    %199 = bitcast %struct.qty_table_elem.1035* %198 to i8*
    tail call void @free(i8* %199) #5
    br label %.thread54
  
  ; <label>:200                                     ; preds = %189
    %201 = tail call %struct.rtx_def.1033* @prev_nonnote_insn(%struct.rtx_def.1033* nonnull %.01475) #5
    %202 = icmp eq %struct.rtx_def.1033* %201, null
    br i1 %202, label %212, label %203
  
  ; <label>:203                                     ; preds = %200
    %204 = bitcast %struct.rtx_def.1033* %201 to i32*
    %205 = load i32, i32* %204, align 4
    %.mask28 = and i32 %205, -65536
    %206 = icmp eq i32 %.mask28, 2293760
    br i1 %206, label %207, label %212
  
  ; <label>:207                                     ; preds = %203
    %208 = load %struct.qty_table_elem.1035*, %struct.qty_table_elem.1035** @qty_table, align 4
    %209 = load i32, i32* @max_reg, align 4
    %210 = getelementptr inbounds %struct.qty_table_elem.1035, %struct.qty_table_elem.1035* %208, i32 %209
    %211 = bitcast %struct.qty_table_elem.1035* %210 to i8*
    tail call void @free(i8* %211) #5
    br label %.thread54
  
  ; <label>:212                                     ; preds = %203, %200
    %sunkaddr9 = ptrtoint %struct.cse_basic_block_data.1055* %val to i32
    %sunkaddr10 = add i32 %sunkaddr9, 16
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to i32*
    store i32 0, i32* %sunkaddr11, align 4
    call void @cse_end_of_basic_block(%struct.rtx_def.1033* nonnull %193, %struct.cse_basic_block_data.1055* nonnull %val, i32 signext 0, i32 signext 0, i32 signext 0)
    %sunkaddr12 = ptrtoint %struct.cse_basic_block_data.1055* %val to i32
    %sunkaddr13 = add i32 %sunkaddr12, 8
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to i32*
    %213 = load i32, i32* %sunkaddr14, align 4
    %214 = shl i32 %213, 1
    %215 = load i32, i32* @next_qty, align 4
    %216 = add nsw i32 %214, %215
    %217 = load i32, i32* @max_qty, align 4
    %218 = icmp sgt i32 %216, %217
    br i1 %218, label %239, label %219
  
  ; <label>:219                                     ; preds = %212
    %220 = bitcast %struct.cse_basic_block_data.1055* %val to i32*
    %221 = load i32, i32* %220, align 4
    store i32 %221, i32* @cse_basic_block_start, align 4
    %sunkaddr15 = ptrtoint %struct.cse_basic_block_data.1055* %val to i32
    %sunkaddr16 = add i32 %sunkaddr15, 4
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to i32*
    %222 = load i32, i32* %sunkaddr17, align 4
    store i32 %222, i32* @cse_basic_block_end, align 4
    %sunkaddr18 = ptrtoint %struct.cse_basic_block_data.1055* %val to i32
    %sunkaddr19 = add i32 %sunkaddr18, 12
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to %struct.rtx_def.1033**
    %223 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %sunkaddr20, align 4
    %224 = icmp eq %struct.rtx_def.1033* %223, null
    br i1 %224, label %233, label %225
  
  ; <label>:225                                     ; preds = %219
    %226 = bitcast %struct.rtx_def.1033* %223 to i32*
    %227 = load i32, i32* %226, align 4
    %.mask27 = and i32 %227, -65536
    %228 = icmp eq i32 %.mask27, 2359296
    br i1 %228, label %229, label %233
  
  ; <label>:229                                     ; preds = %225
    %230 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %223, i32 0, i32 1, i32 3, i32 0
    %231 = load i32, i32* %230, align 4
    %232 = add nsw i32 %231, 1
    store i32 %232, i32* %230, align 4
    br label %233
  
  ; <label>:233                                     ; preds = %229, %225, %219
    %234 = bitcast %struct.cse_basic_block_data.1055* %val to i8*
    %235 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %193, i32 0, i32 1, i32 1
    %236 = bitcast %union.rtunion_def.1034* %235 to %struct.rtx_def.1033**
    %237 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %236, align 4
    call void @llvm.lifetime.end(i64 100, i8* nonnull %234) #5
    br label %241
  
  .thread54:                                        ; preds = %207, %195
    %.1.ph.ph = phi %struct.rtx_def.1033* [ null, %195 ], [ %193, %207 ]
    %238 = bitcast %struct.cse_basic_block_data.1055* %val to i8*
    call void @llvm.lifetime.end(i64 100, i8* %238) #5
    br label %372
  
  ; <label>:239                                     ; preds = %212
    %240 = bitcast %struct.cse_basic_block_data.1055* %val to i8*
    call void @llvm.lifetime.end(i64 100, i8* nonnull %240) #5
    br label %.thread53
  
  ; <label>:241                                     ; preds = %233, %184, %180, %175, %173, %.loopexit
    %to_usage.5.ph = phi i32 [ %to_usage.070, %173 ], [ %to_usage.240, %175 ], [ %to_usage.240, %180 ], [ %to_usage.240, %184 ], [ 0, %233 ], [ %to_usage.070, %.loopexit ]
    %libcall_insn.3.ph = phi %struct.rtx_def.1033* [ %libcall_insn.2, %173 ], [ %libcall_insn.2, %175 ], [ %libcall_insn.2, %180 ], [ %libcall_insn.2, %184 ], [ %libcall_insn.2, %233 ], [ %libcall_insn.071, %.loopexit ]
    %insn.6.ph = phi %struct.rtx_def.1033* [ %insn.073, %173 ], [ %insn.341, %175 ], [ %insn.341, %180 ], [ %insn.341, %184 ], [ %237, %233 ], [ %112, %.loopexit ]
    %.224.ph = phi %struct.branch_path.1056* [ %.123, %173 ], [ %.123, %175 ], [ %.123, %180 ], [ %.123, %184 ], [ %.123, %233 ], [ %67, %.loopexit ]
    %.317.ph = phi %struct.rtx_def.1033* [ null, %173 ], [ %.01475, %175 ], [ %.01475, %180 ], [ %.01475, %184 ], [ %223, %233 ], [ %.01475, %.loopexit ]
    %242 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.6.ph, i32 0, i32 1, i32 2
    %243 = bitcast %union.rtunion_def.1034* %242 to %struct.rtx_def.1033**
    %244 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %243, align 4
    %245 = icmp eq %struct.rtx_def.1033* %244, %.317.ph
    br i1 %245, label %.thread53, label %42
  
  .thread53:                                        ; preds = %161, %241, %239, %.preheader57
    %.01462 = phi %struct.rtx_def.1033* [ %.01475, %239 ], [ %from, %.preheader57 ], [ %.317.ph, %241 ], [ %.01475, %161 ]
    %246 = load i32, i32* @next_qty, align 4
    %247 = load i32, i32* @max_qty, align 4
    %248 = icmp sgt i32 %246, %247
    br i1 %248, label %249, label %250
  
  ; <label>:249                                     ; preds = %.thread53
    tail call void @fancy_abort(i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i32 signext 7379, i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @__FUNCTION__.cse_basic_block, i32 0, i32 0)) #6
    unreachable
  
  ; <label>:250                                     ; preds = %.thread53
    %251 = tail call %struct.rtx_def.1033* @prev_nonnote_insn(%struct.rtx_def.1033* %.01462) #5
    %252 = load i32, i32* @cse_jumps_altered, align 4
    %253 = icmp eq i32 %252, 0
    br i1 %253, label %261, label %254
  
  ; <label>:254                                     ; preds = %250
    %255 = load i32, i32* @flag_cse_follow_jumps, align 4
    %256 = load i32, i32* @flag_cse_skip_blocks, align 4
    %257 = or i32 %256, %255
    %258 = icmp eq i32 %257, 0
    %259 = icmp ne i32 %around_loop, 0
    %or.cond8 = and i1 %259, %258
    %260 = icmp ne %struct.rtx_def.1033* %.01462, null
    %or.cond11 = and i1 %260, %or.cond8
    br i1 %or.cond11, label %262, label %cse_around_loop.exit
  
  ; <label>:261                                     ; preds = %250
    %.old7 = icmp ne i32 %around_loop, 0
    %.old10 = icmp ne %struct.rtx_def.1033* %.01462, null
    %or.cond13 = and i1 %.old7, %.old10
    br i1 %or.cond13, label %262, label %cse_around_loop.exit
  
  ; <label>:262                                     ; preds = %261, %254
    %263 = bitcast %struct.rtx_def.1033* %.01462 to i32*
    %264 = load i32, i32* %263, align 4
    %.mask = and i32 %264, -65536
    %265 = icmp eq i32 %.mask, 2424832
    br i1 %265, label %266, label %cse_around_loop.exit
  
  ; <label>:266                                     ; preds = %262
    %267 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %.01462, i32 0, i32 1, i32 4, i32 0
    %268 = load i32, i32* %267, align 4
    %269 = icmp eq i32 %268, -95
    br i1 %269, label %270, label %cse_around_loop.exit
  
  ; <label>:270                                     ; preds = %266
    %271 = bitcast %struct.rtx_def.1033* %251 to i32*
    %272 = load i32, i32* %271, align 4
    %.mask25 = and i32 %272, -65536
    %273 = icmp eq i32 %.mask25, 2162688
    br i1 %273, label %274, label %cse_around_loop.exit
  
  ; <label>:274                                     ; preds = %270
    %275 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %251, i32 0, i32 1, i32 7
    %276 = bitcast %union.rtunion_def.1034* %275 to %struct.rtx_def.1033**
    %277 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %276, align 4
    %278 = icmp eq %struct.rtx_def.1033* %277, null
    br i1 %278, label %cse_around_loop.exit, label %279
  
  ; <label>:279                                     ; preds = %274
    %280 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %277, i32 0, i32 1, i32 3, i32 0
    %281 = load i32, i32* %280, align 4
    %282 = icmp eq i32 %281, 1
    br i1 %282, label %.preheader, label %cse_around_loop.exit
  
  .preheader:                                       ; preds = %279, %287
    %loop_start.pn.i = phi %struct.rtx_def.1033* [ %insn.0.i, %287 ], [ %277, %279 ]
    %insn.0.in.in.i = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %loop_start.pn.i, i32 0, i32 1, i32 1
    %insn.0.in.i = bitcast %union.rtunion_def.1034* %insn.0.in.in.i to %struct.rtx_def.1033**
    %insn.0.i = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %insn.0.in.i, align 4
    %cond.i = icmp eq %struct.rtx_def.1033* %insn.0.i, null
    br i1 %cond.i, label %cse_around_loop.exit, label %283
  
  ; <label>:283                                     ; preds = %.preheader
    %284 = bitcast %struct.rtx_def.1033* %insn.0.i to i32*
    %285 = load i32, i32* %284, align 4
    %.mask7.i = and i32 %285, -65536
    %286 = icmp eq i32 %.mask7.i, 2424832
    br i1 %286, label %287, label %cse_around_loop.exit
  
  ; <label>:287                                     ; preds = %283
    %288 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.0.i, i32 0, i32 1, i32 4, i32 0
    %289 = load i32, i32* %288, align 4
    %290 = icmp sgt i32 %289, -1
    br i1 %290, label %.preheader, label %291
  
  ; <label>:291                                     ; preds = %287
    %292 = icmp eq i32 %289, -96
    br i1 %292, label %293, label %cse_around_loop.exit
  
  ; <label>:293                                     ; preds = %291
    %294 = load %struct.table_elt.1037*, %struct.table_elt.1037** @last_jump_equiv_class, align 4
    %295 = icmp eq %struct.table_elt.1037* %294, null
    br i1 %295, label %.preheader.i, label %296
  
  ; <label>:296                                     ; preds = %293
    %297 = getelementptr inbounds %struct.table_elt.1037, %struct.table_elt.1037* %294, i32 0, i32 6
    %p.015.i = load %struct.table_elt.1037*, %struct.table_elt.1037** %297, align 4
    %298 = icmp eq %struct.table_elt.1037* %p.015.i, null
    br i1 %298, label %.preheader.i, label %.lr.ph18.i
  
  .lr.ph18.i:                                       ; preds = %296, %.thread87
    %p.016.i = phi %struct.table_elt.1037* [ %p.0.i, %.thread87 ], [ %p.015.i, %296 ]
    %299 = bitcast %struct.table_elt.1037* %p.016.i to %struct.rtx_def.1033**
    %300 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %299, align 4
    %301 = bitcast %struct.rtx_def.1033* %300 to i32*
    %302 = load i32, i32* %301, align 4
    %303 = lshr i32 %302, 16
    switch i32 %303, label %.thread87 [
      i32 66, label %310
      i32 61, label %310
      i32 63, label %304
      i32 64, label %311
      i32 133, label %311
    ]
  
  ; <label>:304                                     ; preds = %.lr.ph18.i
    %305 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %300, i32 0, i32 1, i32 0
    %306 = bitcast %union.rtunion_def.1034* %305 to i32**
    %307 = load i32*, i32** %306, align 4
    %308 = load i32, i32* %307, align 4
    %.mask6.i = and i32 %308, -65536
    %309 = icmp eq i32 %.mask6.i, 3997696
    br i1 %309, label %310, label %.thread87
  
  ; <label>:310                                     ; preds = %304, %.lr.ph18.i, %.lr.ph18.i
    tail call fastcc void @invalidate(%struct.rtx_def.1033* %300, i32 signext 0) #5
    br label %.thread87
  
  ; <label>:311                                     ; preds = %.lr.ph18.i, %.lr.ph18.i
    %312 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %300, i32 0, i32 1, i32 0
    %313 = bitcast %union.rtunion_def.1034* %312 to %struct.rtx_def.1033**
    %314 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %313, align 4
    %315 = lshr i32 %302, 8
    %316 = and i32 %315, 255
    tail call fastcc void @invalidate(%struct.rtx_def.1033* %314, i32 signext %316) #5
    br label %.thread87
  
  .thread87:                                        ; preds = %311, %310, %304, %.lr.ph18.i
    %317 = getelementptr inbounds %struct.table_elt.1037, %struct.table_elt.1037* %p.016.i, i32 0, i32 4
    %p.0.i = load %struct.table_elt.1037*, %struct.table_elt.1037** %317, align 4
    %318 = icmp eq %struct.table_elt.1037* %p.0.i, null
    br i1 %318, label %.preheader.i, label %.lr.ph18.i
  
  .preheader.i:                                     ; preds = %.critedge9.i, %342, %344, %346, %.backedge.i, %293, %296, %.thread87
    %loop_start.pn8.i = phi %struct.rtx_def.1033* [ %277, %.thread87 ], [ %277, %296 ], [ %277, %293 ], [ %insn.1.i, %.backedge.i ], [ %insn.1.i, %346 ], [ %insn.1.i, %344 ], [ %insn.1.i, %342 ], [ %insn.1.i, %.critedge9.i ]
    %insn.1.in.in.i = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %loop_start.pn8.i, i32 0, i32 1, i32 2
    %insn.1.in.i = bitcast %union.rtunion_def.1034* %insn.1.in.in.i to %struct.rtx_def.1033**
    %insn.1.i = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %insn.1.in.i, align 4
    %319 = bitcast %struct.rtx_def.1033* %insn.1.i to i32*
    %320 = load i32, i32* %319, align 4
    %321 = lshr i32 %320, 16
    switch i32 %321, label %322 [
      i32 34, label %cse_around_loop.exit
      i32 36, label %cse_around_loop.exit
    ]
  
  ; <label>:322                                     ; preds = %.preheader.i
    %323 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.1.i, i32 0, i32 1, i32 0, i32 0
    %324 = load i32, i32* %323, align 4
    %325 = load i32, i32* @max_insn_uid, align 4
    %326 = icmp slt i32 %324, %325
    br i1 %326, label %327, label %cse_around_loop.exit
  
  ; <label>:327                                     ; preds = %322
    %328 = icmp eq i32 %321, 37
    br i1 %328, label %329, label %.critedge9.i
  
  ; <label>:329                                     ; preds = %327
    %330 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.1.i, i32 0, i32 1, i32 4, i32 0
    %331 = load i32, i32* %330, align 4
    %332 = icmp eq i32 %331, -95
    br i1 %332, label %cse_around_loop.exit, label %.critedge9.i
  
  .critedge9.i:                                     ; preds = %329, %327
    %333 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_class, i32 0, i32 %321
    %334 = load i8, i8* %333, align 1
    %335 = icmp eq i8 %334, 105
    br i1 %335, label %336, label %.preheader.i
  
  ; <label>:336                                     ; preds = %.critedge9.i
    %337 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %insn.1.i, i32 0, i32 1, i32 3
    %338 = bitcast %union.rtunion_def.1034* %337 to i32**
    %339 = load i32*, i32** %338, align 4
    %340 = load i32, i32* %339, align 4
    %341 = lshr i32 %340, 16
    switch i32 %341, label %344 [
      i32 47, label %342
      i32 49, label %342
    ]
  
  ; <label>:342                                     ; preds = %336, %336
    %343 = bitcast i32* %339 to %struct.rtx_def.1033*
    tail call fastcc void @cse_set_around_loop(%struct.rtx_def.1033* %343, %struct.rtx_def.1033* nonnull %insn.1.i, %struct.rtx_def.1033* nonnull %277) #5
    br label %.preheader.i
  
  ; <label>:344                                     ; preds = %336
    %.mask5.i = and i32 %340, -65536
    %345 = icmp eq i32 %.mask5.i, 2555904
    br i1 %345, label %346, label %.preheader.i
  
  ; <label>:346                                     ; preds = %344
    %347 = getelementptr inbounds i32, i32* %339, i32 1
    %348 = bitcast i32* %347 to %struct.rtvec_def.1054**
    %349 = load %struct.rtvec_def.1054*, %struct.rtvec_def.1054** %348, align 4
    %350 = bitcast %struct.rtvec_def.1054* %349 to i32*
    %351 = load i32, i32* %350, align 4
    %352 = icmp sgt i32 %351, 0
    br i1 %352, label %.lr.ph.i.preheader, label %.preheader.i
  
  .lr.ph.i.preheader:                               ; preds = %346
    %353 = add i32 %351, 1
    %354 = shl i32 %351, 2
    br label %.lr.ph.i
  
  .lr.ph.i:                                         ; preds = %.backedge..lr.ph_crit_edge.i, %.lr.ph.i.preheader
    %lsr.iv1 = phi i32 [ %lsr.iv.next2, %.backedge..lr.ph_crit_edge.i ], [ %354, %.lr.ph.i.preheader ]
    %lsr.iv = phi i32 [ %lsr.iv.next, %.backedge..lr.ph_crit_edge.i ], [ %353, %.lr.ph.i.preheader ]
    %355 = phi %struct.rtvec_def.1054* [ %.pre22.i, %.backedge..lr.ph_crit_edge.i ], [ %349, %.lr.ph.i.preheader ]
    %356 = bitcast %struct.rtvec_def.1054* %355 to i8*
    %uglygep = getelementptr i8, i8* %356, i32 %lsr.iv1
    %uglygep3 = bitcast i8* %uglygep to i32**
    %357 = load i32*, i32** %uglygep3, align 4
    %358 = load i32, i32* %357, align 4
    %359 = lshr i32 %358, 16
    switch i32 %359, label %.backedge.i [
      i32 47, label %361
      i32 49, label %361
    ]
  
  .backedge.i:                                      ; preds = %361, %.lr.ph.i
    %lsr.iv.next = add i32 %lsr.iv, -1
    %lsr.iv.next2 = add i32 %lsr.iv1, -4
    %360 = icmp sgt i32 %lsr.iv.next, 1
    br i1 %360, label %.backedge..lr.ph_crit_edge.i, label %.preheader.i
  
  .backedge..lr.ph_crit_edge.i:                     ; preds = %.backedge.i
    %sunkaddr21 = ptrtoint %struct.rtx_def.1033* %insn.1.i to i32
    %sunkaddr22 = add i32 %sunkaddr21, 16
    %sunkaddr23 = inttoptr i32 %sunkaddr22 to %struct.rtx_def.1033**
    %.pre.i = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %sunkaddr23, align 4
    %.phi.trans.insert.i = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %.pre.i, i32 0, i32 1, i32 0
    %.phi.trans.insert21.i = bitcast %union.rtunion_def.1034* %.phi.trans.insert.i to %struct.rtvec_def.1054**
    %.pre22.i = load %struct.rtvec_def.1054*, %struct.rtvec_def.1054** %.phi.trans.insert21.i, align 4
    br label %.lr.ph.i
  
  ; <label>:361                                     ; preds = %.lr.ph.i, %.lr.ph.i
    %362 = bitcast i32* %357 to %struct.rtx_def.1033*
    tail call fastcc void @cse_set_around_loop(%struct.rtx_def.1033* %362, %struct.rtx_def.1033* nonnull %insn.1.i, %struct.rtx_def.1033* nonnull %277) #5
    br label %.backedge.i
  
  cse_around_loop.exit:                             ; preds = %.preheader, %283, %.preheader.i, %.preheader.i, %322, %329, %291, %279, %274, %270, %266, %262, %261, %254
    %363 = load %struct.qty_table_elem.1035*, %struct.qty_table_elem.1035** @qty_table, align 4
    %364 = load i32, i32* @max_reg, align 4
    %365 = getelementptr inbounds %struct.qty_table_elem.1035, %struct.qty_table_elem.1035* %363, i32 %364
    %366 = bitcast %struct.qty_table_elem.1035* %365 to i8*
    tail call void @free(i8* %366) #5
    %367 = icmp eq %struct.rtx_def.1033* %.01462, null
    br i1 %367, label %372, label %368
  
  ; <label>:368                                     ; preds = %cse_around_loop.exit
    %369 = getelementptr inbounds %struct.rtx_def.1033, %struct.rtx_def.1033* %.01462, i32 0, i32 1, i32 2
    %370 = bitcast %union.rtunion_def.1034* %369 to %struct.rtx_def.1033**
    %371 = load %struct.rtx_def.1033*, %struct.rtx_def.1033** %370, align 4
    br label %372
  
  ; <label>:372                                     ; preds = %368, %cse_around_loop.exit, %.thread54, %.thread52
    %.4 = phi %struct.rtx_def.1033* [ %371, %368 ], [ null, %cse_around_loop.exit ], [ null, %.thread52 ], [ %.1.ph.ph, %.thread54 ]
    ret %struct.rtx_def.1033* %.4
  }
  
  ; Function Attrs: nounwind
  declare void @free(i8* nocapture) #1
  
  ; Function Attrs: nounwind
  declare hidden fastcc void @record_jump_equiv(%struct.rtx_def.1033*, i32 signext) unnamed_addr #1
  
  ; Function Attrs: nounwind
  declare hidden fastcc %struct.rtx_def.1033* @cse_process_notes(%struct.rtx_def.1033*, %struct.rtx_def.1033*) unnamed_addr #1
  
  ; Function Attrs: nounwind
  declare hidden fastcc void @cse_insn(%struct.rtx_def.1033*, %struct.rtx_def.1033* readonly) unnamed_addr #1
  
  declare i32 @for_each_rtx(%struct.rtx_def.1033**, i32 (%struct.rtx_def.1033**, i8*)*, i8*) #2
  
  ; Function Attrs: nounwind
  declare hidden i32 @check_for_label_ref(%struct.rtx_def.1033** nocapture readonly, i8*) #1
  
  declare i32 @any_uncondjump_p(%struct.rtx_def.1033*) #2
  
  declare %struct.rtx_def.1033* @prev_nonnote_insn(%struct.rtx_def.1033*) #2
  
  ; Function Attrs: noreturn
  declare void @fancy_abort(i8*, i32 signext, i8*) #3
  
  ; Function Attrs: argmemonly nounwind
  declare void @llvm.memset.p0i8.i32(i8* nocapture, i8, i32, i32, i1) #0
  
  ; Function Attrs: nounwind
  declare hidden fastcc void @invalidate(%struct.rtx_def.1033*, i32 signext) unnamed_addr #1
  
  ; Function Attrs: norecurse nounwind
  declare hidden fastcc void @remove_from_table(%struct.table_elt.1037*, i32 signext) unnamed_addr #4
  
  ; Function Attrs: nounwind
  declare hidden fastcc void @invalidate_for_call() unnamed_addr #1
  
  ; Function Attrs: nounwind
  declare hidden fastcc void @invalidate_from_clobbers(%struct.rtx_def.1033* nocapture readonly) unnamed_addr #1
  
  declare void @note_stores(%struct.rtx_def.1033*, void (%struct.rtx_def.1033*, %struct.rtx_def.1033*, i8*)*, i8*) #2
  
  ; Function Attrs: nounwind
  declare hidden void @invalidate_skipped_set(%struct.rtx_def.1033*, %struct.rtx_def.1033* nocapture readonly, i8* nocapture readnone) #1
  
  ; Function Attrs: nounwind
  declare hidden fastcc void @cse_set_around_loop(%struct.rtx_def.1033*, %struct.rtx_def.1033*, %struct.rtx_def.1033*) unnamed_addr #1
  
  attributes #0 = { argmemonly nounwind "target-cpu"="mips32" }
  attributes #1 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #3 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #4 = { norecurse nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #5 = { nounwind }
  attributes #6 = { noreturn nounwind }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            cse_basic_block
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
  - { id: 2, class: gpr32 }
  - { id: 3, class: gpr32 }
  - { id: 4, class: gpr32 }
  - { id: 5, class: gpr32 }
  - { id: 6, class: gpr32 }
  - { id: 7, class: gpr32 }
  - { id: 8, class: gpr32 }
  - { id: 9, class: gpr32 }
  - { id: 10, class: gpr32 }
  - { id: 11, class: gpr32 }
  - { id: 12, class: gpr32 }
  - { id: 13, class: gpr32 }
  - { id: 14, class: gpr32 }
  - { id: 15, class: gpr32 }
  - { id: 16, class: gpr32 }
  - { id: 17, class: gpr32 }
  - { id: 18, class: gpr32 }
  - { id: 19, class: gpr32 }
  - { id: 20, class: gpr32 }
  - { id: 21, class: gpr32 }
  - { id: 22, class: gpr32 }
  - { id: 23, class: gpr32 }
  - { id: 24, class: gpr32 }
  - { id: 25, class: gpr32 }
  - { id: 26, class: gpr32 }
  - { id: 27, class: gpr32 }
  - { id: 28, class: gpr32 }
  - { id: 29, class: gpr32 }
  - { id: 30, class: gpr32 }
  - { id: 31, class: gpr32 }
  - { id: 32, class: gpr32 }
  - { id: 33, class: gpr32 }
  - { id: 34, class: gpr32 }
  - { id: 35, class: gpr32 }
  - { id: 36, class: gpr32 }
  - { id: 37, class: gpr32 }
  - { id: 38, class: gpr32 }
  - { id: 39, class: gpr32 }
  - { id: 40, class: gpr32 }
  - { id: 41, class: gpr32 }
  - { id: 42, class: gpr32 }
  - { id: 43, class: gpr32 }
  - { id: 44, class: gpr32 }
  - { id: 45, class: gpr32 }
  - { id: 46, class: gpr32 }
  - { id: 47, class: gpr32 }
  - { id: 48, class: gpr32 }
  - { id: 49, class: gpr32 }
  - { id: 50, class: gpr32 }
  - { id: 51, class: gpr32 }
  - { id: 52, class: gpr32 }
  - { id: 53, class: gpr32 }
  - { id: 54, class: gpr32 }
  - { id: 55, class: gpr32 }
  - { id: 56, class: gpr32 }
  - { id: 57, class: gpr32 }
  - { id: 58, class: gpr32 }
  - { id: 59, class: gpr32 }
  - { id: 60, class: gpr32 }
  - { id: 61, class: gpr32 }
  - { id: 62, class: gpr32 }
  - { id: 63, class: gpr32 }
  - { id: 64, class: gpr32 }
  - { id: 65, class: gpr32 }
  - { id: 66, class: gpr32 }
  - { id: 67, class: gpr32 }
  - { id: 68, class: gpr32 }
  - { id: 69, class: gpr32 }
  - { id: 70, class: gpr32 }
  - { id: 71, class: gpr32 }
  - { id: 72, class: gpr32 }
  - { id: 73, class: gpr32 }
  - { id: 74, class: gpr32 }
  - { id: 75, class: gpr32 }
  - { id: 76, class: gpr32 }
  - { id: 77, class: gpr32 }
  - { id: 78, class: gpr32 }
  - { id: 79, class: gpr32 }
  - { id: 80, class: gpr32 }
  - { id: 81, class: gpr32 }
  - { id: 82, class: gpr32 }
  - { id: 83, class: gpr32 }
  - { id: 84, class: gpr32 }
  - { id: 85, class: gpr32 }
  - { id: 86, class: gpr32 }
  - { id: 87, class: gpr32 }
  - { id: 88, class: gpr32 }
  - { id: 89, class: gpr32 }
  - { id: 90, class: gpr32 }
  - { id: 91, class: gpr32 }
  - { id: 92, class: gpr32 }
  - { id: 93, class: gpr32 }
  - { id: 94, class: gpr32 }
  - { id: 95, class: gpr32 }
  - { id: 96, class: gpr32 }
  - { id: 97, class: gpr32 }
  - { id: 98, class: gpr32 }
  - { id: 99, class: gpr32 }
  - { id: 100, class: gpr32 }
  - { id: 101, class: gpr32 }
  - { id: 102, class: gpr32 }
  - { id: 103, class: gpr32 }
  - { id: 104, class: gpr32 }
  - { id: 105, class: gpr32 }
  - { id: 106, class: gpr32 }
  - { id: 107, class: gpr32 }
  - { id: 108, class: gpr32 }
  - { id: 109, class: gpr32 }
  - { id: 110, class: gpr32 }
  - { id: 111, class: gpr32 }
  - { id: 112, class: gpr32 }
  - { id: 113, class: gpr32 }
  - { id: 114, class: gpr32 }
  - { id: 115, class: gpr32 }
  - { id: 116, class: gpr32 }
  - { id: 117, class: gpr32 }
  - { id: 118, class: gpr32 }
  - { id: 119, class: gpr32 }
  - { id: 120, class: gpr32 }
  - { id: 121, class: gpr32 }
  - { id: 122, class: gpr32 }
  - { id: 123, class: gpr32 }
  - { id: 124, class: gpr32 }
  - { id: 125, class: gpr32 }
  - { id: 126, class: gpr32 }
  - { id: 127, class: gpr32 }
  - { id: 128, class: gpr32 }
  - { id: 129, class: gpr32 }
  - { id: 130, class: gpr32 }
  - { id: 131, class: gpr32 }
  - { id: 132, class: gpr32 }
  - { id: 133, class: gpr32 }
  - { id: 134, class: gpr32 }
  - { id: 135, class: gpr32 }
  - { id: 136, class: gpr32 }
  - { id: 137, class: gpr32 }
  - { id: 138, class: gpr32 }
  - { id: 139, class: gpr32 }
  - { id: 140, class: gpr32 }
  - { id: 141, class: gpr32 }
  - { id: 142, class: gpr32 }
  - { id: 143, class: gpr32 }
  - { id: 144, class: gpr32 }
  - { id: 145, class: gpr32 }
  - { id: 146, class: gpr32 }
  - { id: 147, class: gpr32 }
  - { id: 148, class: gpr32 }
  - { id: 149, class: gpr32 }
  - { id: 150, class: gpr32 }
  - { id: 151, class: gpr32 }
  - { id: 152, class: gpr32 }
  - { id: 153, class: gpr32 }
  - { id: 154, class: gpr32 }
  - { id: 155, class: gpr32 }
  - { id: 156, class: gpr32 }
  - { id: 157, class: gpr32 }
  - { id: 158, class: gpr32 }
  - { id: 159, class: gpr32 }
  - { id: 160, class: gpr32 }
  - { id: 161, class: gpr32 }
  - { id: 162, class: gpr32 }
  - { id: 163, class: gpr32 }
  - { id: 164, class: gpr32 }
  - { id: 165, class: gpr32 }
  - { id: 166, class: gpr32 }
  - { id: 167, class: gpr32 }
  - { id: 168, class: gpr32 }
  - { id: 169, class: gpr32 }
  - { id: 170, class: gpr32 }
  - { id: 171, class: gpr32 }
  - { id: 172, class: gpr32 }
  - { id: 173, class: gpr32 }
  - { id: 174, class: gpr32 }
  - { id: 175, class: gpr32 }
  - { id: 176, class: gpr32 }
  - { id: 177, class: gpr32 }
  - { id: 178, class: gpr32 }
  - { id: 179, class: gpr32 }
  - { id: 180, class: gpr32 }
  - { id: 181, class: gpr32 }
  - { id: 182, class: gpr32 }
  - { id: 183, class: gpr32 }
  - { id: 184, class: gpr32 }
  - { id: 185, class: gpr32 }
  - { id: 186, class: gpr32 }
  - { id: 187, class: gpr32 }
  - { id: 188, class: gpr32 }
  - { id: 189, class: gpr32 }
  - { id: 190, class: gpr32 }
  - { id: 191, class: gpr32 }
  - { id: 192, class: gpr32 }
  - { id: 193, class: gpr32 }
  - { id: 194, class: gpr32 }
  - { id: 195, class: gpr32 }
  - { id: 196, class: gpr32 }
  - { id: 197, class: gpr32 }
  - { id: 198, class: gpr32 }
  - { id: 199, class: gpr32 }
  - { id: 200, class: gpr32 }
  - { id: 201, class: gpr32 }
  - { id: 202, class: gpr32 }
  - { id: 203, class: gpr32 }
  - { id: 204, class: gpr32 }
  - { id: 205, class: gpr32 }
  - { id: 206, class: gpr32 }
  - { id: 207, class: gpr32 }
  - { id: 208, class: gpr32 }
  - { id: 209, class: gpr32 }
  - { id: 210, class: gpr32 }
  - { id: 211, class: gpr32 }
  - { id: 212, class: gpr32 }
  - { id: 213, class: gpr32 }
  - { id: 214, class: gpr32 }
  - { id: 215, class: gpr32 }
  - { id: 216, class: gpr32 }
  - { id: 217, class: gpr32 }
  - { id: 218, class: gpr32 }
  - { id: 219, class: gpr32 }
  - { id: 220, class: gpr32 }
  - { id: 221, class: gpr32 }
  - { id: 222, class: gpr32 }
  - { id: 223, class: gpr32 }
  - { id: 224, class: gpr32 }
  - { id: 225, class: gpr32 }
  - { id: 226, class: gpr32 }
  - { id: 227, class: gpr32 }
  - { id: 228, class: gpr32 }
  - { id: 229, class: gpr32 }
  - { id: 230, class: gpr32 }
  - { id: 231, class: gpr32 }
  - { id: 232, class: gpr32 }
  - { id: 233, class: gpr32 }
  - { id: 234, class: gpr32 }
  - { id: 235, class: gpr32 }
  - { id: 236, class: gpr32 }
  - { id: 237, class: gpr32 }
  - { id: 238, class: gpr32 }
  - { id: 239, class: gpr32 }
  - { id: 240, class: gpr32 }
  - { id: 241, class: gpr32 }
  - { id: 242, class: gpr32 }
  - { id: 243, class: gpr32 }
  - { id: 244, class: gpr32 }
  - { id: 245, class: gpr32 }
  - { id: 246, class: gpr32 }
  - { id: 247, class: gpr32 }
  - { id: 248, class: gpr32 }
  - { id: 249, class: gpr32 }
  - { id: 250, class: gpr32 }
  - { id: 251, class: gpr32 }
  - { id: 252, class: gpr32 }
  - { id: 253, class: gpr32 }
  - { id: 254, class: gpr32 }
  - { id: 255, class: gpr32 }
  - { id: 256, class: gpr32 }
  - { id: 257, class: gpr32 }
  - { id: 258, class: gpr32 }
  - { id: 259, class: gpr32 }
  - { id: 260, class: gpr32 }
  - { id: 261, class: gpr32 }
  - { id: 262, class: gpr32 }
  - { id: 263, class: gpr32 }
  - { id: 264, class: gpr32 }
  - { id: 265, class: gpr32 }
  - { id: 266, class: gpr32 }
  - { id: 267, class: gpr32 }
  - { id: 268, class: gpr32 }
  - { id: 269, class: gpr32 }
  - { id: 270, class: gpr32 }
  - { id: 271, class: gpr32 }
  - { id: 272, class: gpr32 }
  - { id: 273, class: gpr32 }
  - { id: 274, class: gpr32 }
  - { id: 275, class: gpr32 }
  - { id: 276, class: gpr32 }
  - { id: 277, class: gpr32 }
  - { id: 278, class: gpr32 }
  - { id: 279, class: gpr32 }
  - { id: 280, class: gpr32 }
  - { id: 281, class: gpr32 }
  - { id: 282, class: gpr32 }
  - { id: 283, class: gpr32 }
  - { id: 284, class: gpr32 }
  - { id: 285, class: gpr32 }
  - { id: 286, class: gpr32 }
  - { id: 287, class: gpr32 }
  - { id: 288, class: gpr32 }
  - { id: 289, class: gpr32 }
  - { id: 290, class: gpr32 }
  - { id: 291, class: gpr32 }
  - { id: 292, class: gpr32 }
  - { id: 293, class: gpr32 }
  - { id: 294, class: gpr32 }
  - { id: 295, class: gpr32 }
  - { id: 296, class: gpr32 }
  - { id: 297, class: gpr32 }
  - { id: 298, class: gpr32 }
  - { id: 299, class: gpr32 }
  - { id: 300, class: gpr32 }
  - { id: 301, class: gpr32 }
  - { id: 302, class: gpr32 }
  - { id: 303, class: gpr32 }
  - { id: 304, class: gpr32 }
  - { id: 305, class: gpr32 }
  - { id: 306, class: gpr32 }
  - { id: 307, class: gpr32 }
  - { id: 308, class: gpr32 }
  - { id: 309, class: gpr32 }
  - { id: 310, class: gpr32 }
  - { id: 311, class: gpr32 }
  - { id: 312, class: gpr32 }
  - { id: 313, class: gpr32 }
  - { id: 314, class: gpr32 }
  - { id: 315, class: gpr32 }
  - { id: 316, class: gpr32 }
  - { id: 317, class: gpr32 }
  - { id: 318, class: gpr32 }
  - { id: 319, class: gpr32 }
  - { id: 320, class: gpr32 }
  - { id: 321, class: gpr32 }
  - { id: 322, class: gpr32 }
  - { id: 323, class: gpr32 }
  - { id: 324, class: gpr32 }
  - { id: 325, class: gpr32 }
  - { id: 326, class: gpr32 }
  - { id: 327, class: gpr32 }
  - { id: 328, class: gpr32 }
  - { id: 329, class: gpr32 }
  - { id: 330, class: gpr32 }
  - { id: 331, class: gpr32 }
  - { id: 332, class: gpr32 }
  - { id: 333, class: gpr32 }
  - { id: 334, class: gpr32 }
  - { id: 335, class: gpr32 }
  - { id: 336, class: gpr32 }
  - { id: 337, class: gpr32 }
  - { id: 338, class: gpr32 }
  - { id: 339, class: gpr32 }
  - { id: 340, class: gpr32 }
  - { id: 341, class: gpr32 }
  - { id: 342, class: gpr32 }
  - { id: 343, class: gpr32 }
  - { id: 344, class: gpr32 }
  - { id: 345, class: gpr32 }
  - { id: 346, class: gpr32 }
  - { id: 347, class: gpr32 }
  - { id: 348, class: gpr32 }
  - { id: 349, class: gpr32 }
  - { id: 350, class: gpr32 }
  - { id: 351, class: gpr32 }
  - { id: 352, class: gpr32 }
  - { id: 353, class: gpr32 }
  - { id: 354, class: gpr32 }
  - { id: 355, class: gpr32 }
  - { id: 356, class: gpr32 }
  - { id: 357, class: gpr32 }
  - { id: 358, class: gpr32 }
  - { id: 359, class: gpr32 }
  - { id: 360, class: gpr32 }
  - { id: 361, class: gpr32 }
  - { id: 362, class: gpr32 }
  - { id: 363, class: gpr32 }
  - { id: 364, class: gpr32 }
  - { id: 365, class: gpr32 }
  - { id: 366, class: gpr32 }
  - { id: 367, class: gpr32 }
  - { id: 368, class: gpr32 }
  - { id: 369, class: gpr32 }
  - { id: 370, class: gpr32 }
  - { id: 371, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%89' }
  - { reg: '%a1', virtual-reg: '%90' }
  - { reg: '%a2', virtual-reg: '%91' }
  - { reg: '%a3', virtual-reg: '%92' }
  - { reg: '%t9' }
  - { reg: '%v0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    8
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
stack:           
  - { id: 0, name: val, offset: 0, size: 100, alignment: 8 }
jumpTable:       
  kind:            gp-rel32-block-address
  entries:         
    - id:              0
      blocks:          [ '%bb.89', '%bb.91..thread87', '%bb.88', '%bb.90', 
                         '%bb.91..thread87', '%bb.89' ]
body:             |
  bb.0 (%ir-block.0, freq 10134418):
    successors: %bb.2(37), %bb.1(62)
    liveins: %a0, %a1, %a2, %a3, %t9, %v0
  
    %93 = ADDu %v0, %t9
    %92 = COPY %a3
    %91 = COPY %a2
    %90 = COPY %a1
    %89 = COPY %a0
    %94 = LW %93, target-flags(<unknown>) @max_reg, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %95 = LW %94, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from @max_reg)
    %96 = LW %93, target-flags(<unknown>) @max_qty, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %97 = LW %96, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from @max_qty)
    %98 = SUBu killed %97, killed %95
    %99 = SLL killed %98, 5
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %100 = LW %93, target-flags(<unknown>) @xmalloc, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @xmalloc)
    %a0 = COPY %99
    %gp = COPY %93
    %t9 = COPY %100
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %101 = COPY %v0
    %102 = LW %93, target-flags(<unknown>) @reg_hash, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %103 = LW %93, target-flags(<unknown>) @next_qty, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %104 = LW %93, target-flags(<unknown>) @qty_table, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %105 = ADDiu %zero, 0
    %106 = ADDiu %zero, 512
    %107 = LW %94, 0, <0x4a626a0> = !{!"unison-memory-partition", i32 3} :: (load 4 from @max_reg)
    %108 = SLL %107, 5
    %109 = SUBu %101, killed %108
    SW killed %109, %104, 0, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (store 4 into @qty_table)
    SW %107, %103, 0, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (store 4 into @next_qty)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %110 = LW %93, target-flags(<unknown>) $memset, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry $memset)
    %a0 = COPY %102
    %a1 = COPY %105
    %a2 = COPY %106
    %gp = COPY %93
    %t9 = COPY %110
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %111 = LW %93, target-flags(<unknown>) @cse_reg_info_used_list, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %0 = LW %111, 0, <0x4a62790> = !{!"unison-memory-partition", i32 4} :: (load 4 from @cse_reg_info_used_list)
    BEQ %0, %zero, %bb.2, implicit-def dead %at
    B %bb.1, implicit-def dead %at
  
  bb.1 (%ir-block.12, freq 6334011):
    successors: %bb.2(100)
  
    %112 = LW %93, target-flags(<unknown>) @cse_reg_info_used_list_end, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %113 = LW %112, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from @cse_reg_info_used_list_end)
    %114 = LW %93, target-flags(<unknown>) @cse_reg_info_free_list, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %115 = LW %114, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from `i32* bitcast (%struct.cse_reg_info.1036** @cse_reg_info_free_list to i32*)`)
    SW killed %115, killed %113, 4, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.17)
    SW %0, %114, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into `i32* bitcast (%struct.cse_reg_info.1036** @cse_reg_info_free_list to i32*)`)
    SW %zero, %112, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into @cse_reg_info_used_list_end)
    SW %zero, %111, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into @cse_reg_info_used_list)
  
  bb.2 (%ir-block.18, freq 10134418):
    successors: %bb.3(100)
  
    %118 = LW %93, target-flags(<unknown>) @cached_cse_reg_info, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    SW %zero, killed %118, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into @cached_cse_reg_info)
    %119 = LW %93, target-flags(<unknown>) @hard_regs_in_table, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    SW %zero, killed %119, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into @hard_regs_in_table)
    %121 = LW %93, target-flags(<unknown>) @table, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %124 = ADDiu %zero, 32
    %122 = LW %93, target-flags(<unknown>) @free_element_chain, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
  
  bb.3 (%ir-block.19, freq 324301386):
    successors: %bb.7(37), %bb.4(62)
  
    %1 = PHI %105, %bb.2, %6, %bb.7
    %120 = SLL %1, 2
    %2 = ADDu %121, killed %120
    %3 = LW %2, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.20)
    BEQ %3, %zero, %bb.7, implicit-def dead %at
    B %bb.4, implicit-def dead %at
  
  bb.4 (%ir-block.23, freq 202688366):
    successors: %bb.5(100)
  
    SW %zero, %2, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.20)
  
  bb.5 (%ir-block.24, freq 6486027721):
    successors: %bb.6(3), %bb.5(96)
  
    %4 = PHI %3, %bb.4, %5, %bb.5
    %5 = LW %4, 8, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.25)
    BNE %5, %zero, %bb.5, implicit-def dead %at
    B %bb.6, implicit-def dead %at
  
  bb.6 (%ir-block.28, freq 202688366):
    successors: %bb.7(100)
  
    %123 = LW %122, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from `i32* bitcast (%struct.table_elt.1037** @free_element_chain to i32*)`)
    SW killed %123, %4, 8, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr5)
    SW %3, %122, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into @free_element_chain)
  
  bb.7 (%ir-block.30, freq 324301386):
    successors: %bb.8.new_basic_block.exit(3), %bb.3(96)
  
    %6 = ADDiu %1, 1
    BNE %6, %124, %bb.3, implicit-def dead %at
    B %bb.8.new_basic_block.exit, implicit-def dead %at
  
  bb.8.new_basic_block.exit (freq 10134418):
    successors: %bb.11..preheader57(37), %bb.9(62)
  
    %125 = ADDiu %zero, 0
    BEQ %90, %zero, %bb.11..preheader57, implicit-def dead %at
    B %bb.9, implicit-def dead %at
  
  bb.9 (%ir-block.33, freq 6334011):
    successors: %bb.10(50), %bb.11..preheader57(50)
  
    %126 = LW %90, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.34)
    %127 = LUi 65535
    %128 = AND killed %126, killed %127
    %129 = LUi 36
    BNE killed %128, killed %129, %bb.11..preheader57, implicit-def dead %at
    B %bb.10, implicit-def dead %at
  
  bb.10 (%ir-block.37, freq 3167005):
    successors: %bb.11..preheader57(100)
  
    %130 = LW %90, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.38)
    %131 = ADDiu killed %130, 1
    SW killed %131, %90, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.38)
  
  bb.11..preheader57 (freq 10134418):
    successors: %bb.71..thread53(37), %bb.12..lr.ph(62)
  
    %7 = PHI %125, %bb.8.new_basic_block.exit, %90, %bb.9, %90, %bb.10
    BEQ %7, %89, %bb.71..thread53, implicit-def dead %at
    B %bb.12..lr.ph, implicit-def dead %at
  
  bb.12..lr.ph (freq 6334011):
    successors: %bb.13(100)
  
    %133 = ADDiu %zero, 0
    %132 = COPY %133
    %135 = ADDiu %zero, 37
    %151 = ADDiu %zero, 1
    %275 = LW %93, target-flags(<unknown>) @prev_insn, <0x4a62800> = !{!"unison-memory-partition", i32 5} :: (load 4 from got)
    %254 = ADDiu %zero, 36
    %255 = LW %93, target-flags(<unknown>) @rtx_class, <0x4a626a0> = !{!"unison-memory-partition", i32 3} :: (load 4 from got)
    %258 = ADDiu %zero, 105
    %259 = ADDiu %zero, 34
    %267 = ADDiu %zero, 32
    %272 = LW %93, target-flags(<unknown>) @invalidate_skipped_set, <0x4a62790> = !{!"unison-memory-partition", i32 4} :: (load 4 from got)
    %155 = ADDiu %zero, 512
    %156 = LUi 65535
    %157 = ORi %156, 255
    %177 = LW %93, target-flags(<unknown>) @recorded_label_ref, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %180 = LUi 32
    %182 = LW %93, target-flags(<unknown>) @check_for_label_ref, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %167 = ADDiu %zero, 7
    %171 = ADDiu %zero, 6
    %207 = LUi 36
    %226 = LEA_ADDiu %stack.0.val, 0
    %236 = LW %93, target-flags(<unknown>) @cse_basic_block_start, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %215 = LUi 35
    %143 = LUi 61
  
  bb.13 (%ir-block.42, freq 99508356):
    successors: %bb.21.flush_hash_table.exit(50), %bb.14(50)
  
    %8 = PHI %7, %bb.12..lr.ph, %57, %bb.70
    %9 = PHI %91, %bb.12..lr.ph, %56, %bb.70
    %10 = PHI %89, %bb.12..lr.ph, %58, %bb.70
    %11 = PHI %132, %bb.12..lr.ph, %23, %bb.70
    %12 = PHI %133, %bb.12..lr.ph, %54, %bb.70
    %13 = PHI %132, %bb.12..lr.ph, %53, %bb.70
    %134 = LW %10, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.43)
    %14 = SRL killed %134, 16
    BEQ %14, %135, %bb.21.flush_hash_table.exit, implicit-def dead %at
    B %bb.14, implicit-def dead %at
  
  bb.14 (%ir-block.47, freq 49754178):
    successors: %bb.15..preheader56(50), %bb.21.flush_hash_table.exit(50)
  
    %15 = ADDiu %11, 1
    %137 = SLTi %11, 1001
    %136 = ADDiu %zero, 0
    BNE killed %137, %zero, %bb.21.flush_hash_table.exit, implicit-def dead %at
    B %bb.15..preheader56, implicit-def dead %at
  
  bb.15..preheader56 (freq 796066851):
    successors: %bb.20.._crit_edge.i(37), %bb.16..lr.ph.i31(62)
  
    %16 = PHI %136, %bb.14, %22, %bb.20.._crit_edge.i
    %138 = SLL %16, 2
    %17 = ADDu %121, killed %138
    %18 = LW %17, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.50)
    BEQ %18, %zero, %bb.20.._crit_edge.i, implicit-def dead %at
    B %bb.16..lr.ph.i31, implicit-def dead %at
  
  bb.16..lr.ph.i31 (freq 15921337020):
    successors: %bb.17(50), %bb.19(50)
  
    %19 = PHI %18, %bb.15..preheader56, %21, %bb.18..backedge.i33
    %20 = LW %19, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.52)
    %140 = LW %20, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.54)
    %142 = AND killed %140, %156
    BNE killed %142, %143, %bb.19, implicit-def dead %at
    B %bb.17, implicit-def dead %at
  
  bb.17 (%ir-block.57, freq 7960668510):
    successors: %bb.18..backedge.i33(100)
  
    %145 = LW %19, 40, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.58)
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %146 = LW %93, target-flags(<unknown>) @invalidate, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @invalidate)
    %a0 = COPY %20
    %a1 = COPY %145
    %gp = COPY %93
    %t9 = COPY %146
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
  
  bb.18..backedge.i33 (freq 15921337020):
    successors: %bb.20.._crit_edge.i(3), %bb.16..lr.ph.i31(96)
  
    %21 = LW %17, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.50)
    BEQ %21, %zero, %bb.20.._crit_edge.i, implicit-def dead %at
    B %bb.16..lr.ph.i31, implicit-def dead %at
  
  bb.19 (%ir-block.61, freq 7960668510):
    successors: %bb.18..backedge.i33(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %144 = LW %93, target-flags(<unknown>) @remove_from_table, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @remove_from_table)
    %a0 = COPY %19
    %a1 = COPY %16
    %gp = COPY %93
    %t9 = COPY %144
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.18..backedge.i33, implicit-def dead %at
  
  bb.20.._crit_edge.i (freq 796066851):
    successors: %bb.21.flush_hash_table.exit(3), %bb.15..preheader56(96)
  
    %22 = ADDiu %16, 1
    %147 = ADDiu %zero, 0
    BNE %22, %267, %bb.15..preheader56, implicit-def dead %at
    B %bb.21.flush_hash_table.exit, implicit-def dead %at
  
  bb.21.flush_hash_table.exit (freq 99508356):
    successors: %bb.22(37), %bb.38..thread(62)
  
    %23 = PHI %11, %bb.13, %15, %bb.14, %147, %bb.20.._crit_edge.i
    %149 = LW %9, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.63)
    BNE killed %149, %10, %bb.38..thread, implicit-def dead %at
    B %bb.22, implicit-def dead %at
  
  bb.22 (%ir-block.66, freq 37315633):
    successors: %bb.38..thread(33), %bb.109(66)
  
    %150 = LW %9, 4, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.68)
    %24 = ADDiu %9, 8
    BEQ %150, %151, %bb.38..thread, implicit-def dead %at
    B %bb.109, implicit-def dead %at
  
  bb.109 (%ir-block.66, freq 24877089):
    successors: %bb.23(50), %bb.24(49)
  
    BNE %150, %zero, %bb.24, implicit-def dead %at
    B %bb.23, implicit-def dead %at
  
  bb.23 (%ir-block.70, freq 12438544):
    successors: %bb.37..loopexit(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %152 = LW %93, target-flags(<unknown>) @record_jump_equiv, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @record_jump_equiv)
    %a0 = COPY %10
    %a1 = COPY %151
    %gp = COPY %93
    %t9 = COPY %152
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.37..loopexit, implicit-def dead %at
  
  bb.24 (%ir-block.71, freq 12438544):
    successors: %bb.37..loopexit(37), %bb.25..lr.ph.i35(62)
  
    %25 = LW %10, 12, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.73)
    BEQ %25, %zero, %bb.37..loopexit, implicit-def dead %at
    B %bb.25..lr.ph.i35, implicit-def dead %at
  
  bb.25..lr.ph.i35 (freq 126359817):
    successors: %bb.37..loopexit(3), %bb.26(96)
  
    %26 = PHI %25, %bb.24, %34, %bb.36
    %27 = LW %26, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.76)
    %28 = SRL %27, 16
    BEQ %28, %254, %bb.37..loopexit, implicit-def dead %at
    B %bb.26, implicit-def dead %at
  
  bb.26 (%ir-block.80, freq 122411073):
    successors: %bb.27(50), %bb.36(50)
  
    %256 = ADDu %255, %28
    %257 = LBu killed %256, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.81)
    BNE killed %257, %258, %bb.36, implicit-def dead %at
    B %bb.27, implicit-def dead %at
  
  bb.27 (%ir-block.84, freq 61205536):
    successors: %bb.28(50), %bb.35(50)
  
    BNE %28, %259, %bb.35, implicit-def dead %at
    B %bb.28, implicit-def dead %at
  
  bb.28 (%ir-block.86, freq 30602768):
    successors: %bb.29..preheader.i36(50), %bb.34.invalidate_memory.exit.i(50)
  
    %261 = ANDi %27, 32
    %260 = ADDiu %zero, 0
    BNE killed %261, %zero, %bb.34.invalidate_memory.exit.i, implicit-def dead %at
    B %bb.29..preheader.i36, implicit-def dead %at
  
  bb.29..preheader.i36 (freq 489644292):
    successors: %bb.33.._crit_edge.i.i(37), %bb.30..lr.ph.i.i(62)
  
    %29 = PHI %260, %bb.28, %33, %bb.33.._crit_edge.i.i
    %262 = SLL %29, 2
    %264 = ADDu %121, killed %262
    %30 = LW killed %264, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.89)
    BEQ %30, %zero, %bb.33.._crit_edge.i.i, implicit-def dead %at
    B %bb.30..lr.ph.i.i, implicit-def dead %at
  
  bb.30..lr.ph.i.i (freq 9792885854):
    successors: %bb.31..backedge.i.i(37), %bb.32(62)
  
    %31 = PHI %30, %bb.29..preheader.i36, %32, %bb.31..backedge.i.i
    %32 = LW %31, 8, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.92)
    %265 = LBu %31, 44, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.94, align 4)
    BNE killed %265, %zero, %bb.32, implicit-def dead %at
    B %bb.31..backedge.i.i, implicit-def dead %at
  
  bb.31..backedge.i.i (freq 9792885854):
    successors: %bb.33.._crit_edge.i.i(3), %bb.30..lr.ph.i.i(96)
  
    BEQ %32, %zero, %bb.33.._crit_edge.i.i, implicit-def dead %at
    B %bb.30..lr.ph.i.i, implicit-def dead %at
  
  bb.32 (%ir-block.98, freq 6120553659):
    successors: %bb.31..backedge.i.i(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %266 = LW %93, target-flags(<unknown>) @remove_from_table, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @remove_from_table)
    %a0 = COPY %31
    %a1 = COPY %29
    %gp = COPY %93
    %t9 = COPY %266
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.31..backedge.i.i, implicit-def dead %at
  
  bb.33.._crit_edge.i.i (freq 489644292):
    successors: %bb.34.invalidate_memory.exit.i(3), %bb.29..preheader.i36(96)
  
    %33 = ADDiu %29, 1
    BNE %33, %267, %bb.29..preheader.i36, implicit-def dead %at
    B %bb.34.invalidate_memory.exit.i, implicit-def dead %at
  
  bb.34.invalidate_memory.exit.i (freq 30602768):
    successors: %bb.35(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %268 = LW %93, target-flags(<unknown>) @invalidate_for_call, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @invalidate_for_call)
    %gp = COPY %93
    %t9 = COPY %268
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
  
  bb.35 (%ir-block.100, freq 61205536):
    successors: %bb.36(100)
  
    %269 = LW %26, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.102)
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %270 = LW %93, target-flags(<unknown>) @invalidate_from_clobbers, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @invalidate_from_clobbers)
    %a0 = COPY %269
    %gp = COPY %93
    %t9 = COPY %270
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    %271 = LW %26, 16, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from %ir.102)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %274 = LW %93, target-flags(<unknown>) @note_stores, <0x4a626a0> = !{!"unison-memory-partition", i32 3} :: (load 4 from call-entry @note_stores)
    %a0 = COPY %271
    %a1 = COPY %272
    %a2 = COPY %133
    %gp = COPY %93
    %t9 = COPY %274
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
  
  bb.36 (%ir-block.105, freq 122411073):
    successors: %bb.37..loopexit(3), %bb.25..lr.ph.i35(96)
  
    %34 = LW %26, 12, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.107)
    BNE %34, %zero, %bb.25..lr.ph.i35, implicit-def dead %at
    B %bb.37..loopexit, implicit-def dead %at
  
  bb.37..loopexit (freq 24877089):
    successors: %bb.70(100)
  
    SW %10, %275, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into @prev_insn)
    %35 = LW %10, 32, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.111)
    B %bb.70, implicit-def dead %at
  
  bb.38..thread (freq 74631267):
    successors: %bb.39(50), %bb.40(50)
  
    %36 = PHI %9, %bb.21.flush_hash_table.exit, %24, %bb.22
    %37 = LW %10, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.113)
    %154 = ANDi %37, 65280
    BNE killed %154, %155, %bb.40, implicit-def dead %at
    B %bb.39, implicit-def dead %at
  
  bb.39 (%ir-block.117, freq 37315633):
    successors: %bb.40(100)
  
    %158 = AND %37, %157
    SW killed %158, %10, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.118)
  
  bb.40 (%ir-block.120, freq 74631267):
    successors: %bb.41(50), %bb.49(50)
  
    %160 = ADDu %255, %14
    %161 = LBu killed %160, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.121)
    BNE killed %161, %258, %bb.49, implicit-def dead %at
    B %bb.41, implicit-def dead %at
  
  bb.41 (%ir-block.124, freq 37315633):
    successors: %bb.46..thread38(37), %bb.42(62)
  
    %38 = LW %10, 28, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.126)
    BEQ %38, %zero, %bb.46..thread38, implicit-def dead %at
    B %bb.42, implicit-def dead %at
  
  bb.42 (%ir-block.129, freq 23322271):
    successors: %bb.46..thread38(37), %bb.43(62)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %163 = LW %93, target-flags(<unknown>) @cse_process_notes, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @cse_process_notes)
    %a0 = COPY %38
    %a1 = COPY %133
    %gp = COPY %93
    %t9 = COPY %163
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    %165 = COPY %v0
    SW %165, %10, 28, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr8)
    BEQ %165, %zero, %bb.46..thread38, implicit-def dead %at
    B %bb.43, implicit-def dead %at
  
  bb.43 (%ir-block.132, freq 14576419):
    successors: %bb.45(37), %bb.44(62)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %166 = LW %93, target-flags(<unknown>) @find_reg_note, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @find_reg_note)
    %a0 = COPY %10
    %a1 = COPY %167
    %a2 = COPY %133
    %gp = COPY %93
    %t9 = COPY %166
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %169 = COPY %v0
    BEQ %169, %zero, %bb.45, implicit-def dead %at
    B %bb.44, implicit-def dead %at
  
  bb.44 (%ir-block.135, freq 9110262):
    successors: %bb.46..thread38(100)
  
    %39 = COPY %169
    %40 = LW %39, 4, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.137)
    B %bb.46..thread38, implicit-def dead %at
  
  bb.45 (%ir-block.139, freq 5466157):
    successors: %bb.46..thread38(100)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %170 = LW %93, target-flags(<unknown>) @find_reg_note, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @find_reg_note)
    %a0 = COPY %10
    %a1 = COPY %171
    %a2 = COPY %133
    %t9 = COPY %170
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %173 = COPY %v0
    %41 = MOVN_I_I %zero, %173, %12
  
  bb.46..thread38 (freq 37315633):
    successors: %bb.49(25), %bb.110..thread38(75)
  
    %42 = PHI %12, %bb.41, %12, %bb.42, %40, %bb.44, %41, %bb.45
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %175 = LW %93, target-flags(<unknown>) @cse_insn, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @cse_insn)
    %a0 = COPY %10
    %a1 = COPY %42
    %gp = COPY %93
    %t9 = COPY %175
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    %179 = LBu %177, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 1 from @recorded_label_ref)
    BNE killed %179, %zero, %bb.49, implicit-def dead %at
    B %bb.110..thread38, implicit-def dead %at
  
  bb.110..thread38 (freq 27986725):
    successors: %bb.49(33), %bb.47(66)
  
    %176 = LW %10, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.142)
    %174 = AND %176, %156
    BNE %174, %180, %bb.49, implicit-def dead %at
    B %bb.47, implicit-def dead %at
  
  bb.47 (%ir-block.145, freq 18657816):
    successors: %bb.49(37), %bb.48(62)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %181 = ADDiu %10, 16
    %183 = LW %93, target-flags(<unknown>) @for_each_rtx, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @for_each_rtx)
    %a0 = COPY %181
    %a1 = COPY %182
    %a2 = COPY %10
    %gp = COPY %93
    %t9 = COPY %183
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %184 = COPY %v0
    BEQ %184, %zero, %bb.49, implicit-def dead %at
    B %bb.48, implicit-def dead %at
  
  bb.48 (%ir-block.151, freq 11661135):
    successors: %bb.49(100)
  
    SB %151, %177, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 1 into @recorded_label_ref)
  
  bb.49 (%ir-block.152, freq 74631267):
    successors: %bb.54(37), %bb.50(62)
  
    %43 = PHI %12, %bb.40, %42, %bb.46..thread38, %42, %bb.110..thread38, %42, %bb.47, %42, %bb.48
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %187 = LW %93, target-flags(<unknown>) @any_uncondjump_p, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @any_uncondjump_p)
    %a0 = COPY %10
    %gp = COPY %93
    %t9 = COPY %187
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %188 = COPY %v0
    BEQ %188, %zero, %bb.54, implicit-def dead %at
    B %bb.50, implicit-def dead %at
  
  bb.50 (%ir-block.155, freq 46644542):
    successors: %bb.51..thread52(3), %bb.52(96)
  
    BNE %8, %zero, %bb.52, implicit-def dead %at
    B %bb.51..thread52, implicit-def dead %at
  
  bb.51..thread52 (freq 1457641):
    successors: %bb.108(100)
  
    %196 = LW %104, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from @qty_table)
    %198 = LW %94, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from @max_reg)
    %199 = SLL killed %198, 5
    %200 = ADDu killed %196, killed %199
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %201 = LW %93, target-flags(<unknown>) @free, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @free)
    %a0 = COPY %200
    %gp = COPY %93
    %t9 = COPY %201
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %194 = ADDiu %zero, 0
    B %bb.108, implicit-def dead %at
  
  bb.52 (%ir-block.161, freq 45186900):
    successors: %bb.53..thread39(96), %bb.71..thread53(3)
  
    %189 = LBu %8, 3, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.162 + 3)
    %190 = ANDi killed %189, 16
    BNE killed %190, %zero, %bb.71..thread53, implicit-def dead %at
    B %bb.53..thread39, implicit-def dead %at
  
  bb.53..thread39 (freq 43774809):
    successors: %bb.55(100)
  
    %191 = LW %10, 32, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.167)
    %192 = XOR killed %191, %8
    %44 = MOVZ_I_I %151, killed %192, %13
    %45 = LW %8, 8, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.171)
    B %bb.55, implicit-def dead %at
  
  bb.54 (%ir-block.173, freq 27986725):
    successors: %bb.70(37), %bb.55(62)
  
    %202 = ADDiu %zero, 0
    BEQ %8, %zero, %bb.70, implicit-def dead %at
    B %bb.55, implicit-def dead %at
  
  bb.55 (%ir-block.175, freq 61266512):
    successors: %bb.56(37), %bb.70(62)
  
    %46 = PHI %45, %bb.53..thread39, %10, %bb.54
    %47 = PHI %44, %bb.53..thread39, %13, %bb.54
    %203 = LW %46, 12, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.177)
    BNE killed %203, %8, %bb.70, implicit-def dead %at
    B %bb.56, implicit-def dead %at
  
  bb.56 (%ir-block.180, freq 22974942):
    successors: %bb.57(50), %bb.70(50)
  
    %204 = LW %8, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.181)
    %206 = AND killed %204, %156
    BNE killed %206, %207, %bb.70, implicit-def dead %at
    B %bb.57, implicit-def dead %at
  
  bb.57 (%ir-block.184, freq 11487471):
    successors: %bb.58(50), %bb.70(50)
  
    %208 = LW %8, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.185)
    %209 = ADDiu killed %208, -1
    SW %209, %8, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.185)
    BNE %209, %47, %bb.70, implicit-def dead %at
    B %bb.58, implicit-def dead %at
  
  bb.58 (%ir-block.189, freq 5743735):
    successors: %bb.59(3), %bb.60(96)
  
    %48 = LW %8, 12, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.192)
    BNE %48, %zero, %bb.60, implicit-def dead %at
    B %bb.59, implicit-def dead %at
  
  bb.59 (%ir-block.195, freq 179491):
    successors: %bb.108(100)
  
    %248 = LW %104, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from @qty_table)
    %250 = LW %94, 0, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from @max_reg)
    %251 = SLL killed %250, 5
    %252 = ADDu killed %248, killed %251
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %253 = LW %93, target-flags(<unknown>) @free, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @free)
    %a0 = COPY %252
    %gp = COPY %93
    %t9 = COPY %253
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %246 = ADDiu %zero, 0
    B %bb.108, implicit-def dead %at
  
  bb.60 (%ir-block.200, freq 5564243):
    successors: %bb.63(37), %bb.61(62)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %210 = LW %93, target-flags(<unknown>) @prev_nonnote_insn, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @prev_nonnote_insn)
    %a0 = COPY %8
    %gp = COPY %93
    %t9 = COPY %210
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %211 = COPY %v0
    BEQ %211, %zero, %bb.63, implicit-def dead %at
    B %bb.61, implicit-def dead %at
  
  bb.61 (%ir-block.203, freq 3477652):
    successors: %bb.62(3), %bb.63(96)
  
    %49 = COPY %211
    %212 = LW %49, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.204)
    %214 = AND killed %212, %156
    BNE killed %214, %215, %bb.63, implicit-def dead %at
    B %bb.62, implicit-def dead %at
  
  bb.62 (%ir-block.207, freq 108676):
    successors: %bb.108(100)
  
    %217 = LW %104, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from @qty_table)
    %219 = LW %94, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from @max_reg)
    %220 = SLL killed %219, 5
    %221 = ADDu killed %217, killed %220
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %222 = LW %93, target-flags(<unknown>) @free, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @free)
    %a0 = COPY %221
    %gp = COPY %93
    %t9 = COPY %222
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %370 = COPY %48
    B %bb.108, implicit-def dead %at
  
  bb.63 (%ir-block.212, freq 5455567):
    successors: %bb.69(3), %bb.64(96)
  
    SW %zero, %stack.0.val, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr11, align 8)
    ADJCALLSTACKDOWN 24, implicit-def dead %sp, implicit %sp
    %223 = COPY %sp
    SW %zero, %223, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into unknown)
    %224 = LW %93, target-flags(<unknown>) @cse_end_of_basic_block, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @cse_end_of_basic_block)
    %a0 = COPY %48
    %a1 = COPY %226
    %a2 = COPY %133
    %a3 = COPY %133
    %gp = COPY %93
    %t9 = COPY %224
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 24, 0, implicit-def dead %sp, implicit %sp
    %229 = LW %103, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from @next_qty)
    %230 = LW %stack.0.val, 8, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr14, align 8)
    %231 = SLL killed %230, 1
    %232 = ADDu killed %231, killed %229
    %233 = LW %96, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from @max_qty)
    %234 = SLT killed %233, killed %232
    BNE killed %234, %zero, %bb.69, implicit-def dead %at
    B %bb.64, implicit-def dead %at
  
  bb.64 (%ir-block.219, freq 5285080):
    successors: %bb.67(37), %bb.65(62)
  
    %235 = LW %stack.0.val, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.220, align 8)
    SW killed %235, %236, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (store 4 into @cse_basic_block_start)
    %237 = LW %93, target-flags(<unknown>) @cse_basic_block_end, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %238 = LW %stack.0.val, 4, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.sunkaddr17)
    SW killed %238, killed %237, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (store 4 into @cse_basic_block_end)
    %50 = LW %stack.0.val, 12, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.sunkaddr20)
    BEQ %50, %zero, %bb.67, implicit-def dead %at
    B %bb.65, implicit-def dead %at
  
  bb.65 (%ir-block.225, freq 3303175):
    successors: %bb.66(50), %bb.67(50)
  
    %239 = LW %50, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.226)
    %241 = AND killed %239, %156
    BNE killed %241, %207, %bb.67, implicit-def dead %at
    B %bb.66, implicit-def dead %at
  
  bb.66 (%ir-block.229, freq 1651587):
    successors: %bb.67(100)
  
    %243 = LW %50, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.230)
    %244 = ADDiu killed %243, 1
    SW killed %244, %50, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.230)
  
  bb.67 (%ir-block.233, freq 5285080):
    successors: %bb.70(100)
  
    %51 = LW %48, 8, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.236)
    %245 = ADDiu %zero, 0
    B %bb.70, implicit-def dead %at
  
  bb.69 (%ir-block.239, freq 170486):
    successors: %bb.71..thread53(100)
  
    B %bb.71..thread53, implicit-def dead %at
  
  bb.70 (%ir-block.241, freq 96179968):
    successors: %bb.71..thread53(3), %bb.13(96)
  
    %53 = PHI %13, %bb.54, %47, %bb.55, %47, %bb.56, %47, %bb.57, %245, %bb.67, %13, %bb.37..loopexit
    %54 = PHI %43, %bb.54, %43, %bb.55, %43, %bb.56, %43, %bb.57, %43, %bb.67, %12, %bb.37..loopexit
    %55 = PHI %10, %bb.54, %46, %bb.55, %46, %bb.56, %46, %bb.57, %51, %bb.67, %35, %bb.37..loopexit
    %56 = PHI %36, %bb.54, %36, %bb.55, %36, %bb.56, %36, %bb.57, %36, %bb.67, %24, %bb.37..loopexit
    %57 = PHI %202, %bb.54, %8, %bb.55, %8, %bb.56, %8, %bb.57, %50, %bb.67, %8, %bb.37..loopexit
    %58 = LW %55, 12, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.243)
    BNE %58, %57, %bb.13, implicit-def dead %at
    B %bb.71..thread53, implicit-def dead %at
  
  bb.71..thread53 (freq 8388607):
    successors: %bb.72(0), %bb.73(99)
  
    %59 = PHI %89, %bb.11..preheader57, %8, %bb.52, %8, %bb.69, %57, %bb.70
    %277 = LW %103, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from @next_qty)
    %279 = LW %96, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from @max_qty)
    %280 = SLT killed %279, killed %277
    BEQ killed %280, %zero, %bb.73, implicit-def dead %at
    B %bb.72, implicit-def dead %at
  
  bb.72 (%ir-block.249, freq 8):
    exit
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %364 = LW %93, target-flags(<unknown>) @.str.4, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %365 = LW %93, target-flags(<unknown>) @__FUNCTION__.cse_basic_block, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %366 = LW %93, target-flags(<unknown>) @fancy_abort, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @fancy_abort)
    %367 = ADDiu %zero, 7379
    %a0 = COPY %364
    %a1 = COPY %367
    %a2 = COPY %365
    %gp = COPY %93
    %t9 = COPY %366
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
  
  bb.73 (%ir-block.250, freq 8388599):
    successors: %bb.75(37), %bb.74(62)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %281 = LW %93, target-flags(<unknown>) @prev_nonnote_insn, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @prev_nonnote_insn)
    %a0 = COPY %59
    %gp = COPY %93
    %t9 = COPY %281
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %282 = COPY %v0
    %283 = LW %93, target-flags(<unknown>) @cse_jumps_altered, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %284 = LW killed %283, 0, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from @cse_jumps_altered)
    BEQ killed %284, %zero, %bb.75, implicit-def dead %at
    B %bb.74, implicit-def dead %at
  
  bb.74 (%ir-block.254, freq 5242874):
    successors: %bb.111(75), %bb.106.cse_around_loop.exit(25)
  
    BEQ %59, %zero, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.111, implicit-def dead %at
  
  bb.111 (%ir-block.254, freq 3932156):
    successors: %bb.112(83), %bb.106.cse_around_loop.exit(16)
  
    BEQ %92, %zero, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.112, implicit-def dead %at
  
  bb.112 (%ir-block.254, freq 3276796):
    successors: %bb.76(80), %bb.106.cse_around_loop.exit(19)
  
    %286 = LW %93, target-flags(<unknown>) @flag_cse_follow_jumps, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %287 = LW %286, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from @flag_cse_follow_jumps)
    %288 = LW %93, target-flags(<unknown>) @flag_cse_skip_blocks, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %289 = LW %288, 0, <0x4a626a0> = !{!"unison-memory-partition", i32 3} :: (load 4 from @flag_cse_skip_blocks)
    %285 = OR %289, %287
    BEQ %285, %zero, %bb.76, implicit-def dead %at
    B %bb.106.cse_around_loop.exit, implicit-def dead %at
  
  bb.75 (%ir-block.261, freq 3145724):
    successors: %bb.113(75), %bb.106.cse_around_loop.exit(25)
  
    BEQ %92, %zero, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.113, implicit-def dead %at
  
  bb.113 (%ir-block.261, freq 2359293):
    successors: %bb.76(66), %bb.106.cse_around_loop.exit(33)
  
    BEQ %59, %zero, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.76, implicit-def dead %at
  
  bb.76 (%ir-block.262, freq 4194300):
    successors: %bb.77(50), %bb.106.cse_around_loop.exit(50)
  
    %290 = LW %59, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.263)
    %291 = LUi 65535
    %292 = AND killed %290, killed %291
    %293 = LUi 37
    BNE killed %292, killed %293, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.77, implicit-def dead %at
  
  bb.77 (%ir-block.266, freq 2097150):
    successors: %bb.78(50), %bb.106.cse_around_loop.exit(50)
  
    %294 = LW %59, 20, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.267)
    %295 = ADDiu %zero, -95
    BNE killed %294, killed %295, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.78, implicit-def dead %at
  
  bb.78 (%ir-block.270, freq 1048575):
    successors: %bb.79(50), %bb.106.cse_around_loop.exit(50)
  
    %60 = COPY %282
    %296 = LW %60, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.271)
    %297 = LUi 65535
    %298 = AND killed %296, killed %297
    %299 = LUi 33
    BNE killed %298, killed %299, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.79, implicit-def dead %at
  
  bb.79 (%ir-block.274, freq 524287):
    successors: %bb.106.cse_around_loop.exit(37), %bb.80(62)
  
    %61 = LW %60, 32, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.276)
    BEQ %61, %zero, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.80, implicit-def dead %at
  
  bb.80 (%ir-block.279, freq 327679):
    successors: %bb.119(50), %bb.106.cse_around_loop.exit(50)
  
    %300 = LW %61, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.280)
    %301 = ADDiu %zero, 1
    BNE %300, %301, %bb.106.cse_around_loop.exit, implicit-def %at
  
  bb.119 (freq 163839):
    successors: %bb.81..preheader(100)
  
    %303 = LUi 65535
    %305 = LUi 37
  
  bb.81..preheader (freq 1803394):
    successors: %bb.106.cse_around_loop.exit(3), %bb.82(96)
  
    %62 = PHI %61, %bb.119, %63, %bb.83
    %63 = LW %62, 8, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.insn.0.in.i)
    BEQ %63, %zero, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.82, implicit-def dead %at
  
  bb.82 (%ir-block.283, freq 1747037):
    successors: %bb.83(96), %bb.106.cse_around_loop.exit(3)
  
    %302 = LW %63, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.284)
    %304 = AND killed %302, %303
    BNE killed %304, %305, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.83, implicit-def dead %at
  
  bb.83 (%ir-block.287, freq 1692443):
    successors: %bb.81..preheader(96), %bb.84(3)
  
    %64 = LW %63, 20, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.288)
    BGEZ %64, %bb.81..preheader, implicit-def dead %at
    B %bb.84, implicit-def dead %at
  
  bb.84 (%ir-block.291, freq 52888):
    successors: %bb.85(50), %bb.106.cse_around_loop.exit(50)
  
    %306 = ADDiu %zero, -96
    BNE %64, killed %306, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.85, implicit-def dead %at
  
  bb.85 (%ir-block.293, freq 26444):
    successors: %bb.92..preheader.i(37), %bb.86(62)
  
    %307 = LW %93, target-flags(<unknown>) @last_jump_equiv_class, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %65 = LW killed %307, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from @last_jump_equiv_class)
    BEQ %65, %zero, %bb.92..preheader.i, implicit-def dead %at
    B %bb.86, implicit-def dead %at
  
  bb.86 (%ir-block.296, freq 16527):
    successors: %bb.92..preheader.i(37), %bb.120(62)
  
    %66 = LW %65, 24, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.297)
    BEQ %66, %zero, %bb.92..preheader.i, implicit-def %at
  
  bb.120 (freq 10329):
    successors: %bb.87..lr.ph18.i(100)
  
    %316 = ADDiu %zero, 133
    %312 = LW %93, target-flags(<unknown>) %jump-table.0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %326 = ADDiu %zero, 0
    %322 = LUi 65535
    %324 = LUi 61
  
  bb.87..lr.ph18.i (freq 330555):
    successors: %bb.114..lr.ph18.i(25), %bb.115..lr.ph18.i(74)
  
    %67 = PHI %66, %bb.120, %70, %bb.91..thread87
    %68 = LW %67, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.299)
    %69 = LW %68, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.301)
    %308 = SRL %69, 16
    %309 = ADDiu %308, -61
    %310 = SLTiu %309, 6
    BEQ killed %310, %zero, %bb.114..lr.ph18.i, implicit-def dead %at
    B %bb.115..lr.ph18.i, implicit-def dead %at
  
  bb.114..lr.ph18.i (freq 82638):
    successors: %bb.90(50), %bb.91..thread87(50)
  
    BEQ %308, %316, %bb.90, implicit-def dead %at
    B %bb.91..thread87, implicit-def dead %at
  
  bb.115..lr.ph18.i (freq 247916):
    successors: %bb.89(45), %bb.91..thread87(9), %bb.88(22), %bb.90(22)
  
    %311 = SLL %309, 2
    %313 = ADDu killed %311, %312
    %314 = LW killed %313, target-flags(<unknown>) %jump-table.0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from jump-table)
    %315 = ADDu killed %314, %93
    PseudoIndirectBranch killed %315
  
  bb.88 (%ir-block.304, freq 56132):
    successors: %bb.89(50), %bb.91..thread87(50)
  
    %320 = LW %68, 4, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.306)
    %321 = LW killed %320, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.307)
    %323 = AND killed %321, %322
    BNE killed %323, %324, %bb.91..thread87, implicit-def dead %at
    B %bb.89, implicit-def dead %at
  
  bb.89 (%ir-block.310, freq 140330):
    successors: %bb.91..thread87(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %325 = LW %93, target-flags(<unknown>) @invalidate, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @invalidate)
    %a0 = COPY %68
    %a1 = COPY %326
    %gp = COPY %93
    %t9 = COPY %325
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.91..thread87, implicit-def dead %at
  
  bb.90 (%ir-block.311, freq 97451):
    successors: %bb.91..thread87(100)
  
    %317 = LW %68, 4, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.313)
    %318 = EXT %69, 8, 8
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %319 = LW %93, target-flags(<unknown>) @invalidate, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @invalidate)
    %a0 = COPY %317
    %a1 = COPY %318
    %gp = COPY %93
    %t9 = COPY %319
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
  
  bb.91..thread87 (freq 330555):
    successors: %bb.92..preheader.i(3), %bb.87..lr.ph18.i(96)
  
    %70 = LW %67, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.317)
    BNE %70, %zero, %bb.87..lr.ph18.i, implicit-def dead %at
    B %bb.92..preheader.i, implicit-def dead %at
  
  bb.92..preheader.i (freq 347098):
    successors: %bb.106.cse_around_loop.exit(1), %bb.116..preheader.i(98)
  
    %71 = PHI %61, %bb.85, %61, %bb.86, %61, %bb.91..thread87, %72, %bb.96..critedge9.i, %72, %bb.98, %72, %bb.99, %72, %bb.100, %72, %bb.103..backedge.i
    %72 = LW %71, 12, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.insn.1.in.i)
    %327 = LW %72, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.319)
    %73 = SRL killed %327, 16
    %328 = ADDiu %zero, 34
    BEQ %73, killed %328, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.116..preheader.i, implicit-def dead %at
  
  bb.116..preheader.i (freq 341674):
    successors: %bb.106.cse_around_loop.exit(1), %bb.93(98)
  
    %329 = ADDiu %zero, 36
    BEQ %73, killed %329, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.93, implicit-def dead %at
  
  bb.93 (%ir-block.322, freq 336251):
    successors: %bb.94(96), %bb.106.cse_around_loop.exit(3)
  
    %330 = LW %72, 4, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.323)
    %331 = LW %93, target-flags(<unknown>) @max_insn_uid, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %332 = LW killed %331, 0, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from @max_insn_uid)
    %333 = SLT killed %330, killed %332
    BEQ killed %333, %zero, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.94, implicit-def dead %at
  
  bb.94 (%ir-block.327, freq 325743):
    successors: %bb.95(50), %bb.96..critedge9.i(50)
  
    %334 = ADDiu %zero, 37
    BNE %73, killed %334, %bb.96..critedge9.i, implicit-def dead %at
    B %bb.95, implicit-def dead %at
  
  bb.95 (%ir-block.329, freq 162871):
    successors: %bb.106.cse_around_loop.exit(3), %bb.96..critedge9.i(96)
  
    %335 = LW %72, 20, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.330)
    %336 = ADDiu %zero, -95
    BEQ killed %335, killed %336, %bb.106.cse_around_loop.exit, implicit-def dead %at
    B %bb.96..critedge9.i, implicit-def dead %at
  
  bb.96..critedge9.i (freq 320653):
    successors: %bb.97(50), %bb.92..preheader.i(50)
  
    %337 = LW %93, target-flags(<unknown>) @rtx_class, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %338 = ADDu killed %337, %73
    %339 = LBu killed %338, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.333)
    %340 = ADDiu %zero, 105
    BNE killed %339, killed %340, %bb.92..preheader.i, implicit-def dead %at
    B %bb.97, implicit-def dead %at
  
  bb.97 (%ir-block.336, freq 160326):
    successors: %bb.98(33), %bb.117(66)
  
    %74 = LW %72, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.338)
    %75 = LW %74, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.339)
    %341 = SRL %75, 16
    %342 = ADDiu %zero, 49
    BEQ %341, killed %342, %bb.98, implicit-def dead %at
    B %bb.117, implicit-def dead %at
  
  bb.117 (%ir-block.336, freq 106884):
    successors: %bb.98(50), %bb.99(49)
  
    %343 = ADDiu %zero, 47
    BNE %341, killed %343, %bb.99, implicit-def dead %at
    B %bb.98, implicit-def dead %at
  
  bb.98 (%ir-block.342, freq 106884):
    successors: %bb.92..preheader.i(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %344 = LW %93, target-flags(<unknown>) @cse_set_around_loop, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @cse_set_around_loop)
    %a0 = COPY %74
    %a1 = COPY %72
    %a2 = COPY %61
    %gp = COPY %93
    %t9 = COPY %344
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.92..preheader.i, implicit-def dead %at
  
  bb.99 (%ir-block.344, freq 53442):
    successors: %bb.100(50), %bb.92..preheader.i(50)
  
    %345 = LUi 65535
    %346 = AND %75, killed %345
    %347 = LUi 39
    BNE killed %346, killed %347, %bb.92..preheader.i, implicit-def dead %at
    B %bb.100, implicit-def dead %at
  
  bb.100 (%ir-block.346, freq 26721):
    successors: %bb.101..lr.ph.i.preheader(50), %bb.92..preheader.i(50)
  
    %76 = LW %74, 4, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.348)
    %77 = LW %76, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.350)
    BLEZ %77, %bb.92..preheader.i, implicit-def dead %at
    B %bb.101..lr.ph.i.preheader, implicit-def dead %at
  
  bb.101..lr.ph.i.preheader (freq 13360):
    successors: %bb.102..lr.ph.i(100)
  
    %79 = SLL %77, 2
    %78 = ADDiu %77, 1
    %351 = ADDiu %zero, 47
    %352 = ADDiu %zero, 49
  
  bb.102..lr.ph.i (freq 427538):
    successors: %bb.105(33), %bb.118..lr.ph.i(66)
  
    %80 = PHI %79, %bb.101..lr.ph.i.preheader, %85, %bb.104..backedge..lr.ph_crit_edge.i
    %81 = PHI %78, %bb.101..lr.ph.i.preheader, %84, %bb.104..backedge..lr.ph_crit_edge.i
    %82 = PHI %76, %bb.101..lr.ph.i.preheader, %86, %bb.104..backedge..lr.ph_crit_edge.i
    %349 = ADDu %82, %80
    %83 = LW killed %349, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.uglygep3)
    %350 = LW %83, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.357)
    %348 = SRL killed %350, 16
    BEQ %348, %351, %bb.105, implicit-def dead %at
    B %bb.118..lr.ph.i, implicit-def dead %at
  
  bb.118..lr.ph.i (freq 285025):
    successors: %bb.105(50), %bb.103..backedge.i(49)
  
    BEQ %348, %352, %bb.105, implicit-def dead %at
    B %bb.103..backedge.i, implicit-def dead %at
  
  bb.103..backedge.i (freq 427538):
    successors: %bb.104..backedge..lr.ph_crit_edge.i(96), %bb.92..preheader.i(3)
  
    %85 = ADDiu %80, -4
    %84 = ADDiu %81, -1
    %354 = SLTi %84, 2
    BNE killed %354, %zero, %bb.92..preheader.i, implicit-def dead %at
    B %bb.104..backedge..lr.ph_crit_edge.i, implicit-def dead %at
  
  bb.104..backedge..lr.ph_crit_edge.i (freq 414177):
    successors: %bb.102..lr.ph.i(100)
  
    %355 = LW %72, 16, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr23)
    %86 = LW killed %355, 4, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir..phi.trans.insert21.i)
    B %bb.102..lr.ph.i, implicit-def dead %at
  
  bb.105 (%ir-block.361, freq 285025):
    successors: %bb.103..backedge.i(100)
  
    ADJCALLSTACKDOWN 0, implicit-def dead %sp, implicit %sp
    %353 = LW %93, target-flags(<unknown>) @cse_set_around_loop, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @cse_set_around_loop)
    %a0 = COPY %83
    %a1 = COPY %72
    %a2 = COPY %61
    %gp = COPY %93
    %t9 = COPY %353
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 0, 0, implicit-def dead %sp, implicit %sp
    B %bb.103..backedge.i, implicit-def dead %at
  
  bb.106.cse_around_loop.exit (freq 8388599):
    successors: %bb.108(37), %bb.107(62)
  
    %358 = LW %104, 0, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from @qty_table)
    %360 = LW %94, 0, <0x4ac5320> = !{!"unison-memory-partition", i32 1} :: (load 4 from @max_reg)
    %361 = SLL killed %360, 5
    %362 = ADDu killed %358, killed %361
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %363 = LW %93, target-flags(<unknown>) @free, <0x4ad86a0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @free)
    %a0 = COPY %362
    %gp = COPY %93
    %t9 = COPY %363
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %356 = ADDiu %zero, 0
    BEQ %59, %zero, %bb.108, implicit-def dead %at
    B %bb.107, implicit-def dead %at
  
  bb.107 (%ir-block.368, freq 5242874):
    successors: %bb.108(100)
  
    %87 = LW %59, 12, <0x4aad710> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.370)
  
  bb.108 (%ir-block.372, freq 10134410):
    liveouts: %v0
  
    %88 = PHI %194, %bb.51..thread52, %370, %bb.62, %356, %bb.106.cse_around_loop.exit, %87, %bb.107, %246, %bb.59
    %v0 = COPY %88
    RetRA implicit %v0

...
