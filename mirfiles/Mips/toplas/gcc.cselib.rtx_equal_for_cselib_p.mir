--- |
  ; ModuleID = '/home/romi/didaktoriko/unison/unison-experiments/experiments/mips/selected-functions/size-toplas/gcc.cselib.rtx_equal_for_cselib_p.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips--linux-gnu"
  
  %struct.rtx_def.45 = type { i32, [1 x %union.rtunion_def.46] }
  %union.rtunion_def.46 = type { i32 }
  %struct.cselib_val_struct.50 = type { i32, %union.anon.51, %struct.elt_loc_list.52*, %struct.elt_list.53* }
  %union.anon.51 = type { %struct.rtx_def.45* }
  %struct.elt_loc_list.52 = type { %struct.elt_loc_list.52*, %struct.rtx_def.45*, %struct.rtx_def.45* }
  %struct.elt_list.53 = type { %struct.elt_list.53*, %struct.cselib_val_struct.50* }
  %struct.rtvec_def.54 = type { i32, [1 x %struct.rtx_def.45*] }
  
  @rtx_format = external constant [153 x i8*], align 4
  @rtx_length = external constant [153 x i8], align 1
  @.str = external hidden unnamed_addr constant [9 x i8], align 1
  @__FUNCTION__.rtx_equal_for_cselib_p = external hidden unnamed_addr constant [23 x i8], align 1
  
  ; Function Attrs: nounwind
  define i32 @rtx_equal_for_cselib_p(%struct.rtx_def.45* %x, %struct.rtx_def.45* %y) #0 {
    %1 = bitcast %struct.rtx_def.45* %x to i32*
    %2 = load i32, i32* %1, align 4
    %3 = lshr i32 %2, 16
    switch i32 %3, label %12 [
      i32 61, label %4
      i32 66, label %4
    ]
  
  ; <label>:4                                       ; preds = %0, %0
    %5 = lshr i32 %2, 8
    %6 = and i32 %5, 255
    %7 = tail call %struct.cselib_val_struct.50* @cselib_lookup(%struct.rtx_def.45* nonnull %x, i32 signext %6, i32 signext 0)
    %8 = icmp eq %struct.cselib_val_struct.50* %7, null
    br i1 %8, label %12, label %9
  
  ; <label>:9                                       ; preds = %4
    %10 = getelementptr inbounds %struct.cselib_val_struct.50, %struct.cselib_val_struct.50* %7, i32 0, i32 1, i32 0
    %11 = load %struct.rtx_def.45*, %struct.rtx_def.45** %10, align 4
    br label %12
  
  ; <label>:12                                      ; preds = %9, %4, %0
    %.19 = phi %struct.rtx_def.45* [ %x, %0 ], [ %11, %9 ], [ %x, %4 ]
    %13 = bitcast %struct.rtx_def.45* %y to i32*
    %14 = load i32, i32* %13, align 4
    %15 = lshr i32 %14, 16
    switch i32 %15, label %24 [
      i32 61, label %16
      i32 66, label %16
    ]
  
  ; <label>:16                                      ; preds = %12, %12
    %17 = lshr i32 %14, 8
    %18 = and i32 %17, 255
    %19 = tail call %struct.cselib_val_struct.50* @cselib_lookup(%struct.rtx_def.45* nonnull %y, i32 signext %18, i32 signext 0)
    %20 = icmp eq %struct.cselib_val_struct.50* %19, null
    br i1 %20, label %24, label %21
  
  ; <label>:21                                      ; preds = %16
    %22 = getelementptr inbounds %struct.cselib_val_struct.50, %struct.cselib_val_struct.50* %19, i32 0, i32 1, i32 0
    %23 = load %struct.rtx_def.45*, %struct.rtx_def.45** %22, align 4
    br label %24
  
  ; <label>:24                                      ; preds = %21, %16, %12
    %.111 = phi %struct.rtx_def.45* [ %y, %12 ], [ %23, %21 ], [ %y, %16 ]
    %25 = icmp eq %struct.rtx_def.45* %.19, %.111
    br i1 %25, label %.loopexit, label %26
  
  ; <label>:26                                      ; preds = %24
    %27 = bitcast %struct.rtx_def.45* %.19 to i32*
    %28 = load i32, i32* %27, align 4
    %.mask = and i32 %28, -65536
    %29 = icmp eq i32 %.mask, 3932160
    br i1 %29, label %30, label %42
  
  ; <label>:30                                      ; preds = %26
    %31 = bitcast %struct.rtx_def.45* %.111 to i32*
    %32 = load i32, i32* %31, align 4
    %.mask15 = and i32 %32, -65536
    %33 = icmp eq i32 %.mask15, 3932160
    br i1 %33, label %34, label %42
  
  ; <label>:34                                      ; preds = %30
    %35 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.19, i32 0, i32 1, i32 0
    %36 = bitcast %union.rtunion_def.46* %35 to %struct.cselib_val_struct.50**
    %37 = load %struct.cselib_val_struct.50*, %struct.cselib_val_struct.50** %36, align 4
    %38 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.111, i32 0, i32 1, i32 0
    %39 = bitcast %union.rtunion_def.46* %38 to %struct.cselib_val_struct.50**
    %40 = load %struct.cselib_val_struct.50*, %struct.cselib_val_struct.50** %39, align 4
    %41 = icmp eq %struct.cselib_val_struct.50* %37, %40
    br label %.loopexit
  
  ; <label>:42                                      ; preds = %30, %26
    %43 = lshr i32 %28, 16
    %44 = icmp eq i32 %43, 60
    br i1 %44, label %45, label %61
  
  ; <label>:45                                      ; preds = %42
    %46 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.19, i32 0, i32 1, i32 0
    %47 = bitcast %union.rtunion_def.46* %46 to %struct.cselib_val_struct.50**
    %48 = load %struct.cselib_val_struct.50*, %struct.cselib_val_struct.50** %47, align 4
    %49 = getelementptr inbounds %struct.cselib_val_struct.50, %struct.cselib_val_struct.50* %48, i32 0, i32 2
    %l.024 = load %struct.elt_loc_list.52*, %struct.elt_loc_list.52** %49, align 4
    %50 = icmp eq %struct.elt_loc_list.52* %l.024, null
    br i1 %50, label %.loopexit, label %.lr.ph
  
  .lr.ph:                                           ; preds = %45, %.thread
    %l.025 = phi %struct.elt_loc_list.52* [ %l.0, %.thread ], [ %l.024, %45 ]
    %51 = getelementptr inbounds %struct.elt_loc_list.52, %struct.elt_loc_list.52* %l.025, i32 0, i32 1
    %52 = load %struct.rtx_def.45*, %struct.rtx_def.45** %51, align 4
    %53 = bitcast %struct.rtx_def.45* %52 to i32*
    %54 = load i32, i32* %53, align 4
    %55 = lshr i32 %54, 16
    switch i32 %55, label %56 [
      i32 61, label %.thread
      i32 66, label %.thread
    ]
  
  ; <label>:56                                      ; preds = %.lr.ph
    %57 = tail call i32 @rtx_equal_for_cselib_p(%struct.rtx_def.45* %52, %struct.rtx_def.45* %.111)
    %58 = icmp eq i32 %57, 0
    br i1 %58, label %.thread, label %.loopexit
  
  .thread:                                          ; preds = %56, %.lr.ph, %.lr.ph
    %59 = bitcast %struct.elt_loc_list.52* %l.025 to %struct.elt_loc_list.52**
    %l.0 = load %struct.elt_loc_list.52*, %struct.elt_loc_list.52** %59, align 4
    %60 = icmp eq %struct.elt_loc_list.52* %l.0, null
    br i1 %60, label %.loopexit, label %.lr.ph
  
  ; <label>:61                                      ; preds = %42
    %62 = bitcast %struct.rtx_def.45* %.111 to i32*
    %63 = load i32, i32* %62, align 4
    %64 = lshr i32 %63, 16
    %65 = icmp eq i32 %64, 60
    br i1 %65, label %66, label %82
  
  ; <label>:66                                      ; preds = %61
    %67 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.111, i32 0, i32 1, i32 0
    %68 = bitcast %union.rtunion_def.46* %67 to %struct.cselib_val_struct.50**
    %69 = load %struct.cselib_val_struct.50*, %struct.cselib_val_struct.50** %68, align 4
    %70 = getelementptr inbounds %struct.cselib_val_struct.50, %struct.cselib_val_struct.50* %69, i32 0, i32 2
    %l4.028 = load %struct.elt_loc_list.52*, %struct.elt_loc_list.52** %70, align 4
    %71 = icmp eq %struct.elt_loc_list.52* %l4.028, null
    br i1 %71, label %.loopexit, label %.lr.ph30
  
  .lr.ph30:                                         ; preds = %66, %.thread18
    %l4.029 = phi %struct.elt_loc_list.52* [ %l4.0, %.thread18 ], [ %l4.028, %66 ]
    %72 = getelementptr inbounds %struct.elt_loc_list.52, %struct.elt_loc_list.52* %l4.029, i32 0, i32 1
    %73 = load %struct.rtx_def.45*, %struct.rtx_def.45** %72, align 4
    %74 = bitcast %struct.rtx_def.45* %73 to i32*
    %75 = load i32, i32* %74, align 4
    %76 = lshr i32 %75, 16
    switch i32 %76, label %77 [
      i32 61, label %.thread18
      i32 66, label %.thread18
    ]
  
  ; <label>:77                                      ; preds = %.lr.ph30
    %78 = tail call i32 @rtx_equal_for_cselib_p(%struct.rtx_def.45* %.19, %struct.rtx_def.45* %73)
    %79 = icmp eq i32 %78, 0
    br i1 %79, label %.thread18, label %.loopexit
  
  .thread18:                                        ; preds = %77, %.lr.ph30, %.lr.ph30
    %80 = bitcast %struct.elt_loc_list.52* %l4.029 to %struct.elt_loc_list.52**
    %l4.0 = load %struct.elt_loc_list.52*, %struct.elt_loc_list.52** %80, align 4
    %81 = icmp eq %struct.elt_loc_list.52* %l4.0, null
    br i1 %81, label %.loopexit, label %.lr.ph30
  
  ; <label>:82                                      ; preds = %61
    %83 = icmp eq i32 %43, %64
    br i1 %83, label %84, label %.loopexit
  
  ; <label>:84                                      ; preds = %82
    %85 = xor i32 %63, %28
    %86 = and i32 %85, 65280
    %87 = icmp eq i32 %86, 0
    br i1 %87, label %88, label %.loopexit
  
  ; <label>:88                                      ; preds = %84
    %89 = icmp eq i32 %43, 67
    br i1 %89, label %90, label %98
  
  ; <label>:90                                      ; preds = %88
    %91 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.19, i32 0, i32 1, i32 0
    %92 = bitcast %union.rtunion_def.46* %91 to %struct.rtx_def.45**
    %93 = load %struct.rtx_def.45*, %struct.rtx_def.45** %92, align 4
    %94 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.111, i32 0, i32 1, i32 0
    %95 = bitcast %union.rtunion_def.46* %94 to %struct.rtx_def.45**
    %96 = load %struct.rtx_def.45*, %struct.rtx_def.45** %95, align 4
    %97 = icmp eq %struct.rtx_def.45* %93, %96
    br label %.loopexit
  
  ; <label>:98                                      ; preds = %88
    %99 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i32 %43
    %100 = load i8*, i8** %99, align 4
    %101 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i32 %43
    %102 = load i8, i8* %101, align 1
    %103 = zext i8 %102 to i32
    %104 = icmp eq i8 %102, 0
    br i1 %104, label %.loopexit, label %.lr.ph38.preheader
  
  .lr.ph38.preheader:                               ; preds = %98
    br label %.lr.ph38
  
  .lr.ph38:                                         ; preds = %.critedge.backedge, %.lr.ph38.preheader
    %i.037.in = phi i32 [ %i.037, %.critedge.backedge ], [ %103, %.lr.ph38.preheader ]
    %i.037 = add nsw i32 %i.037.in, -1
    %105 = getelementptr inbounds i8, i8* %100, i32 %i.037
    %106 = load i8, i8* %105, align 1
    %107 = sext i8 %106 to i32
    switch i32 %107, label %169 [
      i32 119, label %109
      i32 110, label %115
      i32 105, label %115
      i32 86, label %121
      i32 69, label %121
      i32 101, label %151
      i32 83, label %160
      i32 115, label %160
      i32 117, label %.critedge.backedge
      i32 48, label %.critedge.backedge
      i32 116, label %.critedge.backedge
    ]
  
  .critedge.backedge:                               ; preds = %.lr.ph64, %160, %151, %.preheader, %115, %109, %.lr.ph38, %.lr.ph38, %.lr.ph38
    %108 = icmp sgt i32 %i.037.in, 1
    br i1 %108, label %.lr.ph38, label %.loopexit
  
  ; <label>:109                                     ; preds = %.lr.ph38
    %110 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.19, i32 0, i32 1, i32 %i.037, i32 0
    %111 = load i32, i32* %110, align 4
    %112 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.111, i32 0, i32 1, i32 %i.037, i32 0
    %113 = load i32, i32* %112, align 4
    %114 = icmp eq i32 %111, %113
    br i1 %114, label %.critedge.backedge, label %.loopexit
  
  ; <label>:115                                     ; preds = %.lr.ph38, %.lr.ph38
    %116 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.19, i32 0, i32 1, i32 %i.037, i32 0
    %117 = load i32, i32* %116, align 4
    %118 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.111, i32 0, i32 1, i32 %i.037, i32 0
    %119 = load i32, i32* %118, align 4
    %120 = icmp eq i32 %117, %119
    br i1 %120, label %.critedge.backedge, label %.loopexit
  
  ; <label>:121                                     ; preds = %.lr.ph38, %.lr.ph38
    %122 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.19, i32 0, i32 1, i32 %i.037
    %123 = bitcast %union.rtunion_def.46* %122 to %struct.rtvec_def.54**
    %124 = load %struct.rtvec_def.54*, %struct.rtvec_def.54** %123, align 4
    %125 = bitcast %struct.rtvec_def.54* %124 to i32*
    %126 = load i32, i32* %125, align 4
    %127 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.111, i32 0, i32 1, i32 %i.037
    %128 = bitcast %union.rtunion_def.46* %127 to %struct.rtvec_def.54**
    %129 = load %struct.rtvec_def.54*, %struct.rtvec_def.54** %128, align 4
    %130 = bitcast %struct.rtvec_def.54* %129 to i32*
    %131 = load i32, i32* %130, align 4
    %132 = icmp eq i32 %126, %131
    br i1 %132, label %.preheader, label %.loopexit
  
  .preheader:                                       ; preds = %121
    %133 = icmp sgt i32 %126, 0
    br i1 %133, label %.lr.ph35.preheader, label %.critedge.backedge
  
  .lr.ph35.preheader:                               ; preds = %.preheader
    %134 = getelementptr inbounds %struct.rtvec_def.54, %struct.rtvec_def.54* %124, i32 0, i32 1, i32 0
    %135 = load %struct.rtx_def.45*, %struct.rtx_def.45** %134, align 4
    %136 = getelementptr inbounds %struct.rtvec_def.54, %struct.rtvec_def.54* %129, i32 0, i32 1, i32 0
    %137 = load %struct.rtx_def.45*, %struct.rtx_def.45** %136, align 4
    %138 = tail call i32 @rtx_equal_for_cselib_p(%struct.rtx_def.45* %135, %struct.rtx_def.45* %137)
    %139 = icmp eq i32 %138, 0
    br i1 %139, label %.loopexit, label %.lr.ph64
  
  .lr.ph64:                                         ; preds = %.lr.ph35.preheader, %..lr.ph35_crit_edge
    %lsr.iv5 = phi i32 [ %lsr.iv.next6, %..lr.ph35_crit_edge ], [ 0, %.lr.ph35.preheader ]
    %lsr.iv = phi i32 [ %lsr.iv.next, %..lr.ph35_crit_edge ], [ 8, %.lr.ph35.preheader ]
    %140 = bitcast %union.rtunion_def.46* %122 to %struct.rtvec_def.54**
    %141 = load %struct.rtvec_def.54*, %struct.rtvec_def.54** %140, align 4
    %142 = bitcast %struct.rtvec_def.54* %141 to i32*
    %143 = load i32, i32* %142, align 4
    %lsr.iv.next = add i32 %lsr.iv, 4
    %lsr.iv.next6 = add nuw nsw i32 %lsr.iv5, 1
    %144 = icmp slt i32 %lsr.iv.next6, %143
    br i1 %144, label %..lr.ph35_crit_edge, label %.critedge.backedge
  
  ..lr.ph35_crit_edge:                              ; preds = %.lr.ph64
    %145 = bitcast %struct.rtvec_def.54* %141 to i8*
    %146 = bitcast %union.rtunion_def.46* %127 to %struct.rtvec_def.54**
    %.pre = load %struct.rtvec_def.54*, %struct.rtvec_def.54** %146, align 4
    %.pre1 = bitcast %struct.rtvec_def.54* %.pre to i8*
    %uglygep3 = getelementptr i8, i8* %145, i32 %lsr.iv
    %uglygep34 = bitcast i8* %uglygep3 to %struct.rtx_def.45**
    %147 = load %struct.rtx_def.45*, %struct.rtx_def.45** %uglygep34, align 4
    %uglygep = getelementptr i8, i8* %.pre1, i32 %lsr.iv
    %uglygep2 = bitcast i8* %uglygep to %struct.rtx_def.45**
    %148 = load %struct.rtx_def.45*, %struct.rtx_def.45** %uglygep2, align 4
    %149 = tail call i32 @rtx_equal_for_cselib_p(%struct.rtx_def.45* %147, %struct.rtx_def.45* %148)
    %150 = icmp eq i32 %149, 0
    br i1 %150, label %.loopexit, label %.lr.ph64
  
  ; <label>:151                                     ; preds = %.lr.ph38
    %152 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.19, i32 0, i32 1, i32 %i.037
    %153 = bitcast %union.rtunion_def.46* %152 to %struct.rtx_def.45**
    %154 = load %struct.rtx_def.45*, %struct.rtx_def.45** %153, align 4
    %155 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.111, i32 0, i32 1, i32 %i.037
    %156 = bitcast %union.rtunion_def.46* %155 to %struct.rtx_def.45**
    %157 = load %struct.rtx_def.45*, %struct.rtx_def.45** %156, align 4
    %158 = tail call i32 @rtx_equal_for_cselib_p(%struct.rtx_def.45* %154, %struct.rtx_def.45* %157)
    %159 = icmp eq i32 %158, 0
    br i1 %159, label %.loopexit, label %.critedge.backedge
  
  ; <label>:160                                     ; preds = %.lr.ph38, %.lr.ph38
    %161 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.19, i32 0, i32 1, i32 %i.037
    %162 = bitcast %union.rtunion_def.46* %161 to i8**
    %163 = load i8*, i8** %162, align 4
    %164 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.111, i32 0, i32 1, i32 %i.037
    %165 = bitcast %union.rtunion_def.46* %164 to i8**
    %166 = load i8*, i8** %165, align 4
    %167 = tail call i32 @strcmp(i8* %163, i8* %166) #3
    %168 = icmp eq i32 %167, 0
    br i1 %168, label %.critedge.backedge, label %.loopexit
  
  ; <label>:169                                     ; preds = %.lr.ph38
    tail call void @fancy_abort(i8* nonnull getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 signext 530, i8* nonnull getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.rtx_equal_for_cselib_p, i32 0, i32 0)) #4
    unreachable
  
  .loopexit:                                        ; preds = %.critedge.backedge, %109, %115, %121, %.lr.ph35.preheader, %151, %160, %..lr.ph35_crit_edge, %77, %.thread18, %56, %.thread, %98, %90, %84, %82, %66, %45, %34, %24
    %.8.shrunk = phi i1 [ %41, %34 ], [ %97, %90 ], [ true, %24 ], [ false, %84 ], [ false, %82 ], [ false, %45 ], [ false, %66 ], [ true, %98 ], [ false, %.thread ], [ true, %56 ], [ false, %.thread18 ], [ true, %77 ], [ false, %..lr.ph35_crit_edge ], [ false, %160 ], [ false, %151 ], [ false, %121 ], [ false, %115 ], [ false, %109 ], [ true, %.critedge.backedge ], [ false, %.lr.ph35.preheader ]
    %.8 = zext i1 %.8.shrunk to i32
    ret i32 %.8
  }
  
  ; Function Attrs: nounwind
  declare %struct.cselib_val_struct.50* @cselib_lookup(%struct.rtx_def.45*, i32 signext, i32 signext) #0
  
  ; Function Attrs: nounwind readonly
  declare i32 @strcmp(i8* nocapture, i8* nocapture) #1
  
  ; Function Attrs: noreturn
  declare void @fancy_abort(i8*, i32 signext, i8*) #2
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #2 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #3 = { nounwind }
  attributes #4 = { noreturn nounwind }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            rtx_equal_for_cselib_p
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
  - { id: 2, class: gpr32 }
  - { id: 3, class: gpr32 }
  - { id: 4, class: gpr32 }
  - { id: 5, class: gpr32 }
  - { id: 6, class: gpr32 }
  - { id: 7, class: gpr32 }
  - { id: 8, class: gpr32 }
  - { id: 9, class: gpr32 }
  - { id: 10, class: gpr32 }
  - { id: 11, class: gpr32 }
  - { id: 12, class: gpr32 }
  - { id: 13, class: gpr32 }
  - { id: 14, class: gpr32 }
  - { id: 15, class: gpr32 }
  - { id: 16, class: gpr32 }
  - { id: 17, class: gpr32 }
  - { id: 18, class: gpr32 }
  - { id: 19, class: gpr32 }
  - { id: 20, class: gpr32 }
  - { id: 21, class: gpr32 }
  - { id: 22, class: gpr32 }
  - { id: 23, class: gpr32 }
  - { id: 24, class: gpr32 }
  - { id: 25, class: gpr32 }
  - { id: 26, class: gpr32 }
  - { id: 27, class: gpr32 }
  - { id: 28, class: gpr32 }
  - { id: 29, class: gpr32 }
  - { id: 30, class: gpr32 }
  - { id: 31, class: gpr32 }
  - { id: 32, class: gpr32 }
  - { id: 33, class: gpr32 }
  - { id: 34, class: gpr32 }
  - { id: 35, class: gpr32 }
  - { id: 36, class: gpr32 }
  - { id: 37, class: gpr32 }
  - { id: 38, class: gpr32 }
  - { id: 39, class: gpr32 }
  - { id: 40, class: gpr32 }
  - { id: 41, class: gpr32 }
  - { id: 42, class: gpr32 }
  - { id: 43, class: gpr32 }
  - { id: 44, class: gpr32 }
  - { id: 45, class: gpr32 }
  - { id: 46, class: gpr32 }
  - { id: 47, class: gpr32 }
  - { id: 48, class: gpr32 }
  - { id: 49, class: gpr32 }
  - { id: 50, class: gpr32 }
  - { id: 51, class: gpr32 }
  - { id: 52, class: gpr32 }
  - { id: 53, class: gpr32 }
  - { id: 54, class: gpr32 }
  - { id: 55, class: gpr32 }
  - { id: 56, class: gpr32 }
  - { id: 57, class: gpr32 }
  - { id: 58, class: gpr32 }
  - { id: 59, class: gpr32 }
  - { id: 60, class: gpr32 }
  - { id: 61, class: gpr32 }
  - { id: 62, class: gpr32 }
  - { id: 63, class: gpr32 }
  - { id: 64, class: gpr32 }
  - { id: 65, class: gpr32 }
  - { id: 66, class: gpr32 }
  - { id: 67, class: gpr32 }
  - { id: 68, class: gpr32 }
  - { id: 69, class: gpr32 }
  - { id: 70, class: gpr32 }
  - { id: 71, class: gpr32 }
  - { id: 72, class: gpr32 }
  - { id: 73, class: gpr32 }
  - { id: 74, class: gpr32 }
  - { id: 75, class: gpr32 }
  - { id: 76, class: gpr32 }
  - { id: 77, class: gpr32 }
  - { id: 78, class: gpr32 }
  - { id: 79, class: gpr32 }
  - { id: 80, class: gpr32 }
  - { id: 81, class: gpr32 }
  - { id: 82, class: gpr32 }
  - { id: 83, class: gpr32 }
  - { id: 84, class: gpr32 }
  - { id: 85, class: gpr32 }
  - { id: 86, class: gpr32 }
  - { id: 87, class: gpr32 }
  - { id: 88, class: gpr32 }
  - { id: 89, class: gpr32 }
  - { id: 90, class: gpr32 }
  - { id: 91, class: gpr32 }
  - { id: 92, class: gpr32 }
  - { id: 93, class: gpr32 }
  - { id: 94, class: gpr32 }
  - { id: 95, class: gpr32 }
  - { id: 96, class: gpr32 }
  - { id: 97, class: gpr32 }
  - { id: 98, class: gpr32 }
  - { id: 99, class: gpr32 }
  - { id: 100, class: gpr32 }
  - { id: 101, class: gpr32 }
  - { id: 102, class: gpr32 }
  - { id: 103, class: gpr32 }
  - { id: 104, class: gpr32 }
  - { id: 105, class: gpr32 }
  - { id: 106, class: gpr32 }
  - { id: 107, class: gpr32 }
  - { id: 108, class: gpr32 }
  - { id: 109, class: gpr32 }
  - { id: 110, class: gpr32 }
  - { id: 111, class: gpr32 }
  - { id: 112, class: gpr32 }
  - { id: 113, class: gpr32 }
  - { id: 114, class: gpr32 }
  - { id: 115, class: gpr32 }
  - { id: 116, class: gpr32 }
  - { id: 117, class: gpr32 }
  - { id: 118, class: gpr32 }
  - { id: 119, class: gpr32 }
  - { id: 120, class: gpr32 }
  - { id: 121, class: gpr32 }
  - { id: 122, class: gpr32 }
  - { id: 123, class: gpr32 }
  - { id: 124, class: gpr32 }
  - { id: 125, class: gpr32 }
  - { id: 126, class: gpr32 }
  - { id: 127, class: gpr32 }
  - { id: 128, class: gpr32 }
  - { id: 129, class: gpr32 }
  - { id: 130, class: gpr32 }
  - { id: 131, class: gpr32 }
  - { id: 132, class: gpr32 }
  - { id: 133, class: gpr32 }
  - { id: 134, class: gpr32 }
  - { id: 135, class: gpr32 }
  - { id: 136, class: gpr32 }
  - { id: 137, class: gpr32 }
  - { id: 138, class: gpr32 }
  - { id: 139, class: gpr32 }
  - { id: 140, class: gpr32 }
  - { id: 141, class: gpr32 }
  - { id: 142, class: gpr32 }
  - { id: 143, class: gpr32 }
  - { id: 144, class: gpr32 }
  - { id: 145, class: gpr32 }
  - { id: 146, class: gpr32 }
  - { id: 147, class: gpr32 }
  - { id: 148, class: gpr32 }
  - { id: 149, class: gpr32 }
  - { id: 150, class: gpr32 }
  - { id: 151, class: gpr32 }
  - { id: 152, class: gpr32 }
  - { id: 153, class: gpr32 }
  - { id: 154, class: gpr32 }
  - { id: 155, class: gpr32 }
  - { id: 156, class: gpr32 }
  - { id: 157, class: gpr32 }
  - { id: 158, class: gpr32 }
  - { id: 159, class: gpr32 }
  - { id: 160, class: gpr32 }
  - { id: 161, class: gpr32 }
  - { id: 162, class: gpr32 }
  - { id: 163, class: gpr32 }
  - { id: 164, class: gpr32 }
  - { id: 165, class: gpr32 }
  - { id: 166, class: gpr32 }
  - { id: 167, class: gpr32 }
  - { id: 168, class: gpr32 }
  - { id: 169, class: gpr32 }
  - { id: 170, class: gpr32 }
  - { id: 171, class: gpr32 }
  - { id: 172, class: gpr32 }
  - { id: 173, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%37' }
  - { reg: '%a1', virtual-reg: '%38' }
  - { reg: '%t9' }
  - { reg: '%v0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
jumpTable:       
  kind:            gp-rel32-block-address
  entries:         
    - id:              0
      blocks:          [ '%bb.29', '%bb.37', '%bb.37', '%bb.37', '%bb.37', 
                         '%bb.29', '%bb.37', '%bb.37', '%bb.37', '%bb.37', 
                         '%bb.36', '%bb.27..critedge.backedge', '%bb.27..critedge.backedge', 
                         '%bb.37', '%bb.28' ]
body:             |
  bb.0 (%ir-block.0, freq 110239680):
    successors: %bb.1(33), %bb.39(66)
    liveins: %a0, %a1, %t9, %v0
  
    %42 = ADDu %v0, %t9
    %38 = COPY %a1
    %37 = COPY %a0
    %0 = LW %37, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1)
    %39 = SRL %0, 16
    %40 = ADDiu %zero, 66
    BEQ %39, killed %40, %bb.1, implicit-def dead %at
    B %bb.39, implicit-def dead %at
  
  bb.39 (%ir-block.0, freq 73493120):
    successors: %bb.1(50), %bb.3(49)
  
    %41 = ADDiu %zero, 61
    BNE %39, killed %41, %bb.3, implicit-def dead %at
    B %bb.1, implicit-def dead %at
  
  bb.1 (%ir-block.4, freq 73493120):
    successors: %bb.3(37), %bb.2(62)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %43 = EXT %0, 8, 8
    %44 = LW %42, target-flags(<unknown>) @cselib_lookup, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @cselib_lookup)
    %45 = ADDiu %zero, 0
    %a0 = COPY %37
    %a1 = COPY %43
    %a2 = COPY %45
    %gp = COPY %42
    %t9 = COPY %44
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %46 = COPY %v0
    BEQ %46, %zero, %bb.3, implicit-def dead %at
    B %bb.2, implicit-def dead %at
  
  bb.2 (%ir-block.9, freq 45933200):
    successors: %bb.3(100)
  
    %1 = COPY %46
    %2 = LW %1, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.10)
  
  bb.3 (%ir-block.12, freq 110239680):
    successors: %bb.4(33), %bb.40(66)
  
    %3 = PHI %37, %bb.39, %37, %bb.1, %2, %bb.2
    %4 = LW %38, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.13)
    %47 = SRL %4, 16
    %48 = ADDiu %zero, 66
    BEQ %47, killed %48, %bb.4, implicit-def dead %at
    B %bb.40, implicit-def dead %at
  
  bb.40 (%ir-block.12, freq 73493120):
    successors: %bb.4(50), %bb.6(49)
  
    %49 = ADDiu %zero, 61
    BNE %47, killed %49, %bb.6, implicit-def dead %at
    B %bb.4, implicit-def dead %at
  
  bb.4 (%ir-block.16, freq 73493120):
    successors: %bb.6(37), %bb.5(62)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %50 = EXT %4, 8, 8
    %51 = LW %42, target-flags(<unknown>) @cselib_lookup, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @cselib_lookup)
    %52 = ADDiu %zero, 0
    %a0 = COPY %38
    %a1 = COPY %50
    %a2 = COPY %52
    %gp = COPY %42
    %t9 = COPY %51
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %53 = COPY %v0
    BEQ %53, %zero, %bb.6, implicit-def dead %at
    B %bb.5, implicit-def dead %at
  
  bb.5 (%ir-block.21, freq 45933200):
    successors: %bb.6(100)
  
    %5 = COPY %53
    %6 = LW %5, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.22)
  
  bb.6 (%ir-block.24, freq 110239680):
    successors: %bb.38..loopexit(37), %bb.7(62)
  
    %7 = PHI %38, %bb.40, %38, %bb.4, %6, %bb.5
    %54 = ADDiu %zero, 1
    BEQ %3, %7, %bb.38..loopexit, implicit-def dead %at
    B %bb.7, implicit-def dead %at
  
  bb.7 (%ir-block.26, freq 68899800):
    successors: %bb.8(50), %bb.10(50)
  
    %8 = LW %3, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.27)
    %55 = LUi 65535
    %56 = AND %8, %55
    %57 = LUi 60
    BNE killed %56, %57, %bb.10, implicit-def dead %at
    B %bb.8, implicit-def dead %at
  
  bb.8 (%ir-block.30, freq 34449900):
    successors: %bb.9(50), %bb.10(50)
  
    %58 = LW %7, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.31)
    %60 = AND killed %58, %55
    BNE killed %60, %57, %bb.10, implicit-def dead %at
    B %bb.9, implicit-def dead %at
  
  bb.9 (%ir-block.34, freq 17224950):
    successors: %bb.38..loopexit(100)
  
    %169 = LW %7, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.39)
    %170 = LW %3, 4, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.36)
    %171 = XOR killed %170, killed %169
    %9 = SLTiu killed %171, 1
    B %bb.38..loopexit, implicit-def dead %at
  
  bb.10 (%ir-block.42, freq 51674850):
    successors: %bb.11(50), %bb.15(50)
  
    %10 = SRL %8, 16
    %62 = ADDiu %zero, 60
    BNE %10, %62, %bb.15, implicit-def dead %at
    B %bb.11, implicit-def dead %at
  
  bb.11 (%ir-block.45, freq 25837425):
    successors: %bb.38..loopexit(37), %bb.51(62)
  
    %160 = LW %3, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.47)
    %11 = LW killed %160, 8, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.49)
    %159 = ADDiu %zero, 0
    BEQ %11, %zero, %bb.38..loopexit, implicit-def %at
  
  bb.51 (freq 16148390):
    successors: %bb.12..lr.ph(100)
  
    %163 = ADDiu %zero, 61
    %164 = ADDiu %zero, 66
  
  bb.12..lr.ph (freq 390613041):
    successors: %bb.14..thread(33), %bb.49..lr.ph(66)
  
    %12 = PHI %11, %bb.51, %14, %bb.14..thread
    %13 = LW %12, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.51)
    %162 = LW %13, 0, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.53)
    %161 = SRL killed %162, 16
    BEQ %161, %163, %bb.14..thread, implicit-def dead %at
    B %bb.49..lr.ph, implicit-def dead %at
  
  bb.49..lr.ph (freq 260408694):
    successors: %bb.14..thread(50), %bb.13(49)
  
    BEQ %161, %164, %bb.14..thread, implicit-def dead %at
    B %bb.13, implicit-def dead %at
  
  bb.13 (%ir-block.56, freq 130204347):
    successors: %bb.14..thread(96), %bb.38..loopexit(3)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %166 = LW %42, target-flags(<unknown>) @rtx_equal_for_cselib_p, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @rtx_equal_for_cselib_p)
    %a0 = COPY %13
    %a1 = COPY %7
    %gp = COPY %42
    %t9 = COPY %166
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %167 = COPY %v0
    BNE %167, %zero, %bb.38..loopexit, implicit-def dead %at
    B %bb.14..thread, implicit-def dead %at
  
  bb.14..thread (freq 386544156):
    successors: %bb.38..loopexit(3), %bb.12..lr.ph(96)
  
    %14 = LW %12, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.59)
    BEQ %14, %zero, %bb.38..loopexit, implicit-def dead %at
    B %bb.12..lr.ph, implicit-def dead %at
  
  bb.15 (%ir-block.61, freq 25837425):
    successors: %bb.16(50), %bb.20(50)
  
    %15 = LW %7, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.62)
    %16 = SRL %15, 16
    BNE %16, %62, %bb.20, implicit-def dead %at
    B %bb.16, implicit-def dead %at
  
  bb.16 (%ir-block.66, freq 12918712):
    successors: %bb.38..loopexit(37), %bb.50(62)
  
    %150 = LW %7, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.68)
    %17 = LW killed %150, 8, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.70)
    %149 = ADDiu %zero, 0
    BEQ %17, %zero, %bb.38..loopexit, implicit-def %at
  
  bb.50 (freq 8074195):
    successors: %bb.17..lr.ph30(100)
  
    %153 = ADDiu %zero, 61
    %154 = ADDiu %zero, 66
  
  bb.17..lr.ph30 (freq 195306520):
    successors: %bb.19..thread18(33), %bb.48..lr.ph30(66)
  
    %18 = PHI %17, %bb.50, %20, %bb.19..thread18
    %19 = LW %18, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.72)
    %152 = LW %19, 0, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.74)
    %151 = SRL killed %152, 16
    BEQ %151, %153, %bb.19..thread18, implicit-def dead %at
    B %bb.48..lr.ph30, implicit-def dead %at
  
  bb.48..lr.ph30 (freq 130204347):
    successors: %bb.19..thread18(50), %bb.18(49)
  
    BEQ %151, %154, %bb.19..thread18, implicit-def dead %at
    B %bb.18, implicit-def dead %at
  
  bb.18 (%ir-block.77, freq 65102173):
    successors: %bb.19..thread18(96), %bb.38..loopexit(3)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %156 = LW %42, target-flags(<unknown>) @rtx_equal_for_cselib_p, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @rtx_equal_for_cselib_p)
    %a0 = COPY %3
    %a1 = COPY %19
    %gp = COPY %42
    %t9 = COPY %156
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %157 = COPY %v0
    BNE %157, %zero, %bb.38..loopexit, implicit-def dead %at
    B %bb.19..thread18, implicit-def dead %at
  
  bb.19..thread18 (freq 193272078):
    successors: %bb.38..loopexit(3), %bb.17..lr.ph30(96)
  
    %20 = LW %18, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.80)
    BEQ %20, %zero, %bb.38..loopexit, implicit-def dead %at
    B %bb.17..lr.ph30, implicit-def dead %at
  
  bb.20 (%ir-block.82, freq 12918712):
    successors: %bb.21(50), %bb.38..loopexit(50)
  
    %64 = ADDiu %zero, 0
    BNE %10, %16, %bb.38..loopexit, implicit-def dead %at
    B %bb.21, implicit-def dead %at
  
  bb.21 (%ir-block.84, freq 6459356):
    successors: %bb.22(37), %bb.38..loopexit(62)
  
    %66 = XOR %15, %8
    %67 = ANDi killed %66, 65280
    BNE killed %67, %zero, %bb.38..loopexit, implicit-def dead %at
    B %bb.22, implicit-def dead %at
  
  bb.22 (%ir-block.88, freq 2422258):
    successors: %bb.23(50), %bb.24(50)
  
    %68 = ADDiu %zero, 67
    BNE %10, killed %68, %bb.24, implicit-def dead %at
    B %bb.23, implicit-def dead %at
  
  bb.23 (%ir-block.90, freq 1211129):
    successors: %bb.38..loopexit(100)
  
    %146 = LW %7, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.95)
    %147 = LW %3, 4, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.92)
    %148 = XOR killed %147, killed %146
    %21 = SLTiu killed %148, 1
    B %bb.38..loopexit, implicit-def dead %at
  
  bb.24 (%ir-block.98, freq 1211129):
    successors: %bb.38..loopexit(37), %bb.25..lr.ph38.preheader(62)
  
    %70 = LW %42, target-flags(<unknown>) @rtx_length, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %71 = ADDu killed %70, %10
    %23 = LBu killed %71, 0, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.101)
    BEQ %23, %zero, %bb.38..loopexit, implicit-def dead %at
    B %bb.25..lr.ph38.preheader, implicit-def dead %at
  
  bb.25..lr.ph38.preheader (freq 756955):
    successors: %bb.26..lr.ph38(100)
  
    %72 = SLL %10, 2
    %73 = LW %42, target-flags(<unknown>) @rtx_format, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %74 = ADDu %73, %72
    %22 = LW %74, 0, <0x3670da0> = !{!"unison-memory-partition", i32 2} :: (load 4 from %ir.99)
    %87 = ADDiu %zero, 48
    %88 = ADDiu %zero, 69
    %89 = ADDiu %zero, 83
    %85 = ADDiu %zero, 86
    %86 = ADDiu %zero, 101
    %81 = LW %42, target-flags(<unknown>) %jump-table.0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
  
  bb.26..lr.ph38 (freq 6400584):
    successors: %bb.41..lr.ph38(45), %bb.42..lr.ph38(54)
  
    %24 = PHI %23, %bb.25..lr.ph38.preheader, %25, %bb.27..critedge.backedge
    %25 = ADDiu %24, -1
    %76 = ADDu %22, %25
    %75 = LB killed %76, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.105)
    %77 = SLTi %75, 86
    BEQ killed %77, %zero, %bb.42..lr.ph38, implicit-def dead %at
    B %bb.41..lr.ph38, implicit-def dead %at
  
  bb.41..lr.ph38 (freq 2909357):
    successors: %bb.27..critedge.backedge(33), %bb.46..lr.ph38(66)
  
    BEQ %75, %87, %bb.27..critedge.backedge, implicit-def dead %at
    B %bb.46..lr.ph38, implicit-def dead %at
  
  bb.46..lr.ph38 (freq 1939573):
    successors: %bb.30(49), %bb.47..lr.ph38(50)
  
    BEQ %75, %88, %bb.30, implicit-def dead %at
    B %bb.47..lr.ph38, implicit-def dead %at
  
  bb.47..lr.ph38 (freq 969789):
    successors: %bb.36(99), %bb.37(0)
  
    BEQ %75, %89, %bb.36, implicit-def dead %at
    B %bb.37, implicit-def dead %at
  
  bb.42..lr.ph38 (freq 3491227):
    successors: %bb.43..lr.ph38(25), %bb.44..lr.ph38(74)
  
    %78 = ADDiu %75, -105
    %79 = SLTiu %78, 15
    BEQ killed %79, %zero, %bb.43..lr.ph38, implicit-def dead %at
    B %bb.44..lr.ph38, implicit-def dead %at
  
  bb.43..lr.ph38 (freq 872807):
    successors: %bb.30(49), %bb.45..lr.ph38(50)
  
    BEQ %75, %85, %bb.30, implicit-def dead %at
    B %bb.45..lr.ph38, implicit-def dead %at
  
  bb.44..lr.ph38 (freq 2618420):
    successors: %bb.29(33), %bb.37(0), %bb.36(16), %bb.27..critedge.backedge(33), %bb.28(16)
  
    %80 = SLL %78, 2
    %82 = ADDu killed %80, %81
    %83 = LW killed %82, target-flags(<unknown>) %jump-table.0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from jump-table)
    %84 = ADDu killed %83, %42
    PseudoIndirectBranch killed %84
  
  bb.45..lr.ph38 (freq 436404):
    successors: %bb.35(99), %bb.37(0)
  
    BEQ %75, %86, %bb.35, implicit-def dead %at
    B %bb.37, implicit-def dead %at
  
  bb.27..critedge.backedge (freq 5825681):
    successors: %bb.26..lr.ph38(96), %bb.38..loopexit(3)
  
    %141 = SLTi %24, 2
    BEQ killed %141, %zero, %bb.26..lr.ph38, implicit-def dead %at
    B %bb.38..loopexit, implicit-def dead %at
  
  bb.28 (%ir-block.109, freq 436403):
    successors: %bb.27..critedge.backedge(96), %bb.38..loopexit(3)
  
    %135 = SLL %25, 2
    %136 = ADDu %7, %135
    %137 = LW killed %136, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.112)
    %138 = ADDu %3, %135
    %139 = LW killed %138, 4, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.110)
    BEQ killed %139, killed %137, %bb.27..critedge.backedge, implicit-def dead %at
    B %bb.38..loopexit, implicit-def dead %at
  
  bb.29 (%ir-block.115, freq 872806):
    successors: %bb.27..critedge.backedge(96), %bb.38..loopexit(3)
  
    %129 = SLL %25, 2
    %130 = ADDu %7, %129
    %131 = LW killed %130, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.118)
    %132 = ADDu %3, %129
    %133 = LW killed %132, 4, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.116)
    BEQ killed %133, killed %131, %bb.27..critedge.backedge, implicit-def dead %at
    B %bb.38..loopexit, implicit-def dead %at
  
  bb.30 (%ir-block.121, freq 1406186):
    successors: %bb.31..preheader(96), %bb.38..loopexit(3)
  
    %107 = SLL %25, 2
    %108 = ADDu %3, %107
    %109 = ADDu %7, %107
    %30 = LW %109, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.128)
    %27 = LW %108, 4, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.123)
    %28 = LW %27, 0, <0x3670da0> = !{!"unison-memory-partition", i32 2} :: (load 4 from %ir.125)
    %110 = LW %30, 0, <0x35d25c0> = !{!"unison-memory-partition", i32 3} :: (load 4 from %ir.130)
    BNE %28, killed %110, %bb.38..loopexit, implicit-def dead %at
    B %bb.31..preheader, implicit-def dead %at
  
  bb.31..preheader (freq 1362243):
    successors: %bb.32..lr.ph35.preheader(62), %bb.27..critedge.backedge(37)
  
    BLEZ %28, %bb.27..critedge.backedge, implicit-def dead %at
    B %bb.32..lr.ph35.preheader, implicit-def dead %at
  
  bb.32..lr.ph35.preheader (freq 851402):
    successors: %bb.38..loopexit(3), %bb.52(96)
  
    %114 = LW %30, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.136)
    %115 = LW %27, 4, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.134)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %116 = LW %42, target-flags(<unknown>) @rtx_equal_for_cselib_p, <0x3670da0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @rtx_equal_for_cselib_p)
    %a0 = COPY %115
    %a1 = COPY %114
    %gp = COPY %42
    %t9 = COPY %116
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %117 = COPY %v0
    %112 = ADDiu %zero, 0
    %111 = COPY %112
    BEQ %117, %zero, %bb.38..loopexit, implicit-def %at
  
  bb.52 (freq 824795):
    successors: %bb.33..lr.ph64(100)
  
    %29 = ADDiu %109, 4
    %26 = ADDiu %108, 4
    %113 = ADDiu %zero, 8
  
  bb.33..lr.ph64 (freq 13406203):
    successors: %bb.34...lr.ph35_crit_edge(96), %bb.27..critedge.backedge(3)
  
    %31 = PHI %112, %bb.52, %35, %bb.34...lr.ph35_crit_edge
    %32 = PHI %113, %bb.52, %34, %bb.34...lr.ph35_crit_edge
    %33 = LW %26, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.140)
    %118 = LW %33, 0, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.142)
    %35 = ADDiu %31, 1
    %119 = SLT %35, killed %118
    BEQ killed %119, %zero, %bb.27..critedge.backedge, implicit-def dead %at
    B %bb.34...lr.ph35_crit_edge, implicit-def dead %at
  
  bb.34...lr.ph35_crit_edge (freq 12987259):
    successors: %bb.38..loopexit(3), %bb.33..lr.ph64(96)
  
    %34 = ADDiu %32, 4
    %121 = ADDu %33, %32
    %122 = LW killed %121, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.uglygep34)
    %123 = LW %29, 0, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.146)
    %124 = ADDu killed %123, %32
    %125 = LW killed %124, 0, <0x3670da0> = !{!"unison-memory-partition", i32 2} :: (load 4 from %ir.uglygep2)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %126 = LW %42, target-flags(<unknown>) @rtx_equal_for_cselib_p, <0x35d25c0> = !{!"unison-memory-partition", i32 3} :: (load 4 from call-entry @rtx_equal_for_cselib_p)
    %a0 = COPY %122
    %a1 = COPY %125
    %t9 = COPY %126
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %127 = COPY %v0
    %120 = ADDiu %zero, 0
    BEQ %127, %zero, %bb.38..loopexit, implicit-def dead %at
    B %bb.33..lr.ph64, implicit-def dead %at
  
  bb.35 (%ir-block.151, freq 436402):
    successors: %bb.38..loopexit(3), %bb.27..critedge.backedge(96)
  
    %99 = SLL %25, 2
    %100 = ADDu %7, %99
    %101 = LW killed %100, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.156)
    %102 = ADDu %3, %99
    %103 = LW killed %102, 4, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.153)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %104 = LW %42, target-flags(<unknown>) @rtx_equal_for_cselib_p, <0x3670da0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @rtx_equal_for_cselib_p)
    %a0 = COPY %103
    %a1 = COPY %101
    %gp = COPY %42
    %t9 = COPY %104
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %105 = COPY %v0
    BEQ %105, %zero, %bb.38..loopexit, implicit-def dead %at
    B %bb.27..critedge.backedge, implicit-def dead %at
  
  bb.36 (%ir-block.160, freq 1406187):
    successors: %bb.27..critedge.backedge(96), %bb.38..loopexit(3)
  
    %91 = SLL %25, 2
    %92 = ADDu %7, %91
    %93 = LW killed %92, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.165)
    %94 = ADDu %3, %91
    %95 = LW killed %94, 4, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.162)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %96 = LW %42, target-flags(<unknown>) @strcmp, <0x3670da0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @strcmp)
    %a0 = COPY %95
    %a1 = COPY %93
    %gp = COPY %42
    %t9 = COPY %96
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %97 = COPY %v0
    BEQ %97, %zero, %bb.27..critedge.backedge, implicit-def dead %at
    B %bb.38..loopexit, implicit-def dead %at
  
  bb.37 (%ir-block.169, freq 8):
    exit
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %142 = LW %42, target-flags(<unknown>) @.str, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %143 = LW %42, target-flags(<unknown>) @__FUNCTION__.rtx_equal_for_cselib_p, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %144 = LW %42, target-flags(<unknown>) @fancy_abort, <0x3670da0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @fancy_abort)
    %145 = ADDiu %zero, 530
    %a0 = COPY %142
    %a1 = COPY %145
    %a2 = COPY %143
    %gp = COPY %42
    %t9 = COPY %144
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
  
  bb.38..loopexit (freq 110239672):
    liveouts: %v0
  
    %36 = PHI %54, %bb.6, %64, %bb.20, %64, %bb.21, %54, %bb.24, %64, %bb.36, %64, %bb.35, %64, %bb.30, %111, %bb.32..lr.ph35.preheader, %120, %bb.34...lr.ph35_crit_edge, %64, %bb.29, %64, %bb.28, %54, %bb.27..critedge.backedge, %21, %bb.23, %149, %bb.16, %54, %bb.18, %149, %bb.19..thread18, %159, %bb.11, %54, %bb.13, %159, %bb.14..thread, %9, %bb.9
    %v0 = COPY %36
    RetRA implicit %v0

...
--- |
  ; ModuleID = '/home/romi/didaktoriko/unison/unison-experiments/experiments/mips/selected-functions/size-toplas/gcc.cselib.rtx_equal_for_cselib_p.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips--linux-gnu"
  
  %struct.rtx_def.45 = type { i32, [1 x %union.rtunion_def.46] }
  %union.rtunion_def.46 = type { i32 }
  %struct.cselib_val_struct.50 = type { i32, %union.anon.51, %struct.elt_loc_list.52*, %struct.elt_list.53* }
  %union.anon.51 = type { %struct.rtx_def.45* }
  %struct.elt_loc_list.52 = type { %struct.elt_loc_list.52*, %struct.rtx_def.45*, %struct.rtx_def.45* }
  %struct.elt_list.53 = type { %struct.elt_list.53*, %struct.cselib_val_struct.50* }
  %struct.rtvec_def.54 = type { i32, [1 x %struct.rtx_def.45*] }
  
  @rtx_format = external constant [153 x i8*], align 4
  @rtx_length = external constant [153 x i8], align 1
  @.str = external hidden unnamed_addr constant [9 x i8], align 1
  @__FUNCTION__.rtx_equal_for_cselib_p = external hidden unnamed_addr constant [23 x i8], align 1
  
  ; Function Attrs: nounwind
  define i32 @rtx_equal_for_cselib_p(%struct.rtx_def.45* %x, %struct.rtx_def.45* %y) #0 {
    %1 = bitcast %struct.rtx_def.45* %x to i32*
    %2 = load i32, i32* %1, align 4
    %3 = lshr i32 %2, 16
    switch i32 %3, label %12 [
      i32 61, label %4
      i32 66, label %4
    ]
  
  ; <label>:4                                       ; preds = %0, %0
    %5 = lshr i32 %2, 8
    %6 = and i32 %5, 255
    %7 = tail call %struct.cselib_val_struct.50* @cselib_lookup(%struct.rtx_def.45* nonnull %x, i32 signext %6, i32 signext 0)
    %8 = icmp eq %struct.cselib_val_struct.50* %7, null
    br i1 %8, label %12, label %9
  
  ; <label>:9                                       ; preds = %4
    %10 = getelementptr inbounds %struct.cselib_val_struct.50, %struct.cselib_val_struct.50* %7, i32 0, i32 1, i32 0
    %11 = load %struct.rtx_def.45*, %struct.rtx_def.45** %10, align 4
    br label %12
  
  ; <label>:12                                      ; preds = %9, %4, %0
    %.19 = phi %struct.rtx_def.45* [ %x, %0 ], [ %11, %9 ], [ %x, %4 ]
    %13 = bitcast %struct.rtx_def.45* %y to i32*
    %14 = load i32, i32* %13, align 4
    %15 = lshr i32 %14, 16
    switch i32 %15, label %24 [
      i32 61, label %16
      i32 66, label %16
    ]
  
  ; <label>:16                                      ; preds = %12, %12
    %17 = lshr i32 %14, 8
    %18 = and i32 %17, 255
    %19 = tail call %struct.cselib_val_struct.50* @cselib_lookup(%struct.rtx_def.45* nonnull %y, i32 signext %18, i32 signext 0)
    %20 = icmp eq %struct.cselib_val_struct.50* %19, null
    br i1 %20, label %24, label %21
  
  ; <label>:21                                      ; preds = %16
    %22 = getelementptr inbounds %struct.cselib_val_struct.50, %struct.cselib_val_struct.50* %19, i32 0, i32 1, i32 0
    %23 = load %struct.rtx_def.45*, %struct.rtx_def.45** %22, align 4
    br label %24
  
  ; <label>:24                                      ; preds = %21, %16, %12
    %.111 = phi %struct.rtx_def.45* [ %y, %12 ], [ %23, %21 ], [ %y, %16 ]
    %25 = icmp eq %struct.rtx_def.45* %.19, %.111
    br i1 %25, label %.loopexit, label %26
  
  ; <label>:26                                      ; preds = %24
    %27 = bitcast %struct.rtx_def.45* %.19 to i32*
    %28 = load i32, i32* %27, align 4
    %.mask = and i32 %28, -65536
    %29 = icmp eq i32 %.mask, 3932160
    br i1 %29, label %30, label %42
  
  ; <label>:30                                      ; preds = %26
    %31 = bitcast %struct.rtx_def.45* %.111 to i32*
    %32 = load i32, i32* %31, align 4
    %.mask15 = and i32 %32, -65536
    %33 = icmp eq i32 %.mask15, 3932160
    br i1 %33, label %34, label %42
  
  ; <label>:34                                      ; preds = %30
    %35 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.19, i32 0, i32 1, i32 0
    %36 = bitcast %union.rtunion_def.46* %35 to %struct.cselib_val_struct.50**
    %37 = load %struct.cselib_val_struct.50*, %struct.cselib_val_struct.50** %36, align 4
    %38 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.111, i32 0, i32 1, i32 0
    %39 = bitcast %union.rtunion_def.46* %38 to %struct.cselib_val_struct.50**
    %40 = load %struct.cselib_val_struct.50*, %struct.cselib_val_struct.50** %39, align 4
    %41 = icmp eq %struct.cselib_val_struct.50* %37, %40
    br label %.loopexit
  
  ; <label>:42                                      ; preds = %30, %26
    %43 = lshr i32 %28, 16
    %44 = icmp eq i32 %43, 60
    br i1 %44, label %45, label %61
  
  ; <label>:45                                      ; preds = %42
    %46 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.19, i32 0, i32 1, i32 0
    %47 = bitcast %union.rtunion_def.46* %46 to %struct.cselib_val_struct.50**
    %48 = load %struct.cselib_val_struct.50*, %struct.cselib_val_struct.50** %47, align 4
    %49 = getelementptr inbounds %struct.cselib_val_struct.50, %struct.cselib_val_struct.50* %48, i32 0, i32 2
    %l.024 = load %struct.elt_loc_list.52*, %struct.elt_loc_list.52** %49, align 4
    %50 = icmp eq %struct.elt_loc_list.52* %l.024, null
    br i1 %50, label %.loopexit, label %.lr.ph
  
  .lr.ph:                                           ; preds = %45, %.thread
    %l.025 = phi %struct.elt_loc_list.52* [ %l.0, %.thread ], [ %l.024, %45 ]
    %51 = getelementptr inbounds %struct.elt_loc_list.52, %struct.elt_loc_list.52* %l.025, i32 0, i32 1
    %52 = load %struct.rtx_def.45*, %struct.rtx_def.45** %51, align 4
    %53 = bitcast %struct.rtx_def.45* %52 to i32*
    %54 = load i32, i32* %53, align 4
    %55 = lshr i32 %54, 16
    switch i32 %55, label %56 [
      i32 61, label %.thread
      i32 66, label %.thread
    ]
  
  ; <label>:56                                      ; preds = %.lr.ph
    %57 = tail call i32 @rtx_equal_for_cselib_p(%struct.rtx_def.45* %52, %struct.rtx_def.45* %.111)
    %58 = icmp eq i32 %57, 0
    br i1 %58, label %.thread, label %.loopexit
  
  .thread:                                          ; preds = %56, %.lr.ph, %.lr.ph
    %59 = bitcast %struct.elt_loc_list.52* %l.025 to %struct.elt_loc_list.52**
    %l.0 = load %struct.elt_loc_list.52*, %struct.elt_loc_list.52** %59, align 4
    %60 = icmp eq %struct.elt_loc_list.52* %l.0, null
    br i1 %60, label %.loopexit, label %.lr.ph
  
  ; <label>:61                                      ; preds = %42
    %62 = bitcast %struct.rtx_def.45* %.111 to i32*
    %63 = load i32, i32* %62, align 4
    %64 = lshr i32 %63, 16
    %65 = icmp eq i32 %64, 60
    br i1 %65, label %66, label %82
  
  ; <label>:66                                      ; preds = %61
    %67 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.111, i32 0, i32 1, i32 0
    %68 = bitcast %union.rtunion_def.46* %67 to %struct.cselib_val_struct.50**
    %69 = load %struct.cselib_val_struct.50*, %struct.cselib_val_struct.50** %68, align 4
    %70 = getelementptr inbounds %struct.cselib_val_struct.50, %struct.cselib_val_struct.50* %69, i32 0, i32 2
    %l4.028 = load %struct.elt_loc_list.52*, %struct.elt_loc_list.52** %70, align 4
    %71 = icmp eq %struct.elt_loc_list.52* %l4.028, null
    br i1 %71, label %.loopexit, label %.lr.ph30
  
  .lr.ph30:                                         ; preds = %66, %.thread18
    %l4.029 = phi %struct.elt_loc_list.52* [ %l4.0, %.thread18 ], [ %l4.028, %66 ]
    %72 = getelementptr inbounds %struct.elt_loc_list.52, %struct.elt_loc_list.52* %l4.029, i32 0, i32 1
    %73 = load %struct.rtx_def.45*, %struct.rtx_def.45** %72, align 4
    %74 = bitcast %struct.rtx_def.45* %73 to i32*
    %75 = load i32, i32* %74, align 4
    %76 = lshr i32 %75, 16
    switch i32 %76, label %77 [
      i32 61, label %.thread18
      i32 66, label %.thread18
    ]
  
  ; <label>:77                                      ; preds = %.lr.ph30
    %78 = tail call i32 @rtx_equal_for_cselib_p(%struct.rtx_def.45* %.19, %struct.rtx_def.45* %73)
    %79 = icmp eq i32 %78, 0
    br i1 %79, label %.thread18, label %.loopexit
  
  .thread18:                                        ; preds = %77, %.lr.ph30, %.lr.ph30
    %80 = bitcast %struct.elt_loc_list.52* %l4.029 to %struct.elt_loc_list.52**
    %l4.0 = load %struct.elt_loc_list.52*, %struct.elt_loc_list.52** %80, align 4
    %81 = icmp eq %struct.elt_loc_list.52* %l4.0, null
    br i1 %81, label %.loopexit, label %.lr.ph30
  
  ; <label>:82                                      ; preds = %61
    %83 = icmp eq i32 %43, %64
    br i1 %83, label %84, label %.loopexit
  
  ; <label>:84                                      ; preds = %82
    %85 = xor i32 %63, %28
    %86 = and i32 %85, 65280
    %87 = icmp eq i32 %86, 0
    br i1 %87, label %88, label %.loopexit
  
  ; <label>:88                                      ; preds = %84
    %89 = icmp eq i32 %43, 67
    br i1 %89, label %90, label %98
  
  ; <label>:90                                      ; preds = %88
    %91 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.19, i32 0, i32 1, i32 0
    %92 = bitcast %union.rtunion_def.46* %91 to %struct.rtx_def.45**
    %93 = load %struct.rtx_def.45*, %struct.rtx_def.45** %92, align 4
    %94 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.111, i32 0, i32 1, i32 0
    %95 = bitcast %union.rtunion_def.46* %94 to %struct.rtx_def.45**
    %96 = load %struct.rtx_def.45*, %struct.rtx_def.45** %95, align 4
    %97 = icmp eq %struct.rtx_def.45* %93, %96
    br label %.loopexit
  
  ; <label>:98                                      ; preds = %88
    %99 = getelementptr inbounds [153 x i8*], [153 x i8*]* @rtx_format, i32 0, i32 %43
    %100 = load i8*, i8** %99, align 4
    %101 = getelementptr inbounds [153 x i8], [153 x i8]* @rtx_length, i32 0, i32 %43
    %102 = load i8, i8* %101, align 1
    %103 = zext i8 %102 to i32
    %104 = icmp eq i8 %102, 0
    br i1 %104, label %.loopexit, label %.lr.ph38.preheader
  
  .lr.ph38.preheader:                               ; preds = %98
    br label %.lr.ph38
  
  .lr.ph38:                                         ; preds = %.critedge.backedge, %.lr.ph38.preheader
    %i.037.in = phi i32 [ %i.037, %.critedge.backedge ], [ %103, %.lr.ph38.preheader ]
    %i.037 = add nsw i32 %i.037.in, -1
    %105 = getelementptr inbounds i8, i8* %100, i32 %i.037
    %106 = load i8, i8* %105, align 1
    %107 = sext i8 %106 to i32
    switch i32 %107, label %169 [
      i32 119, label %109
      i32 110, label %115
      i32 105, label %115
      i32 86, label %121
      i32 69, label %121
      i32 101, label %151
      i32 83, label %160
      i32 115, label %160
      i32 117, label %.critedge.backedge
      i32 48, label %.critedge.backedge
      i32 116, label %.critedge.backedge
    ]
  
  .critedge.backedge:                               ; preds = %.lr.ph64, %160, %151, %.preheader, %115, %109, %.lr.ph38, %.lr.ph38, %.lr.ph38
    %108 = icmp sgt i32 %i.037.in, 1
    br i1 %108, label %.lr.ph38, label %.loopexit
  
  ; <label>:109                                     ; preds = %.lr.ph38
    %110 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.19, i32 0, i32 1, i32 %i.037, i32 0
    %111 = load i32, i32* %110, align 4
    %112 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.111, i32 0, i32 1, i32 %i.037, i32 0
    %113 = load i32, i32* %112, align 4
    %114 = icmp eq i32 %111, %113
    br i1 %114, label %.critedge.backedge, label %.loopexit
  
  ; <label>:115                                     ; preds = %.lr.ph38, %.lr.ph38
    %116 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.19, i32 0, i32 1, i32 %i.037, i32 0
    %117 = load i32, i32* %116, align 4
    %118 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.111, i32 0, i32 1, i32 %i.037, i32 0
    %119 = load i32, i32* %118, align 4
    %120 = icmp eq i32 %117, %119
    br i1 %120, label %.critedge.backedge, label %.loopexit
  
  ; <label>:121                                     ; preds = %.lr.ph38, %.lr.ph38
    %122 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.19, i32 0, i32 1, i32 %i.037
    %123 = bitcast %union.rtunion_def.46* %122 to %struct.rtvec_def.54**
    %124 = load %struct.rtvec_def.54*, %struct.rtvec_def.54** %123, align 4
    %125 = bitcast %struct.rtvec_def.54* %124 to i32*
    %126 = load i32, i32* %125, align 4
    %127 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.111, i32 0, i32 1, i32 %i.037
    %128 = bitcast %union.rtunion_def.46* %127 to %struct.rtvec_def.54**
    %129 = load %struct.rtvec_def.54*, %struct.rtvec_def.54** %128, align 4
    %130 = bitcast %struct.rtvec_def.54* %129 to i32*
    %131 = load i32, i32* %130, align 4
    %132 = icmp eq i32 %126, %131
    br i1 %132, label %.preheader, label %.loopexit
  
  .preheader:                                       ; preds = %121
    %133 = icmp sgt i32 %126, 0
    br i1 %133, label %.lr.ph35.preheader, label %.critedge.backedge
  
  .lr.ph35.preheader:                               ; preds = %.preheader
    %134 = getelementptr inbounds %struct.rtvec_def.54, %struct.rtvec_def.54* %124, i32 0, i32 1, i32 0
    %135 = load %struct.rtx_def.45*, %struct.rtx_def.45** %134, align 4
    %136 = getelementptr inbounds %struct.rtvec_def.54, %struct.rtvec_def.54* %129, i32 0, i32 1, i32 0
    %137 = load %struct.rtx_def.45*, %struct.rtx_def.45** %136, align 4
    %138 = tail call i32 @rtx_equal_for_cselib_p(%struct.rtx_def.45* %135, %struct.rtx_def.45* %137)
    %139 = icmp eq i32 %138, 0
    br i1 %139, label %.loopexit, label %.lr.ph64
  
  .lr.ph64:                                         ; preds = %.lr.ph35.preheader, %..lr.ph35_crit_edge
    %lsr.iv5 = phi i32 [ %lsr.iv.next6, %..lr.ph35_crit_edge ], [ 0, %.lr.ph35.preheader ]
    %lsr.iv = phi i32 [ %lsr.iv.next, %..lr.ph35_crit_edge ], [ 8, %.lr.ph35.preheader ]
    %140 = bitcast %union.rtunion_def.46* %122 to %struct.rtvec_def.54**
    %141 = load %struct.rtvec_def.54*, %struct.rtvec_def.54** %140, align 4
    %142 = bitcast %struct.rtvec_def.54* %141 to i32*
    %143 = load i32, i32* %142, align 4
    %lsr.iv.next = add i32 %lsr.iv, 4
    %lsr.iv.next6 = add nuw nsw i32 %lsr.iv5, 1
    %144 = icmp slt i32 %lsr.iv.next6, %143
    br i1 %144, label %..lr.ph35_crit_edge, label %.critedge.backedge
  
  ..lr.ph35_crit_edge:                              ; preds = %.lr.ph64
    %145 = bitcast %struct.rtvec_def.54* %141 to i8*
    %146 = bitcast %union.rtunion_def.46* %127 to %struct.rtvec_def.54**
    %.pre = load %struct.rtvec_def.54*, %struct.rtvec_def.54** %146, align 4
    %.pre1 = bitcast %struct.rtvec_def.54* %.pre to i8*
    %uglygep3 = getelementptr i8, i8* %145, i32 %lsr.iv
    %uglygep34 = bitcast i8* %uglygep3 to %struct.rtx_def.45**
    %147 = load %struct.rtx_def.45*, %struct.rtx_def.45** %uglygep34, align 4
    %uglygep = getelementptr i8, i8* %.pre1, i32 %lsr.iv
    %uglygep2 = bitcast i8* %uglygep to %struct.rtx_def.45**
    %148 = load %struct.rtx_def.45*, %struct.rtx_def.45** %uglygep2, align 4
    %149 = tail call i32 @rtx_equal_for_cselib_p(%struct.rtx_def.45* %147, %struct.rtx_def.45* %148)
    %150 = icmp eq i32 %149, 0
    br i1 %150, label %.loopexit, label %.lr.ph64
  
  ; <label>:151                                     ; preds = %.lr.ph38
    %152 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.19, i32 0, i32 1, i32 %i.037
    %153 = bitcast %union.rtunion_def.46* %152 to %struct.rtx_def.45**
    %154 = load %struct.rtx_def.45*, %struct.rtx_def.45** %153, align 4
    %155 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.111, i32 0, i32 1, i32 %i.037
    %156 = bitcast %union.rtunion_def.46* %155 to %struct.rtx_def.45**
    %157 = load %struct.rtx_def.45*, %struct.rtx_def.45** %156, align 4
    %158 = tail call i32 @rtx_equal_for_cselib_p(%struct.rtx_def.45* %154, %struct.rtx_def.45* %157)
    %159 = icmp eq i32 %158, 0
    br i1 %159, label %.loopexit, label %.critedge.backedge
  
  ; <label>:160                                     ; preds = %.lr.ph38, %.lr.ph38
    %161 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.19, i32 0, i32 1, i32 %i.037
    %162 = bitcast %union.rtunion_def.46* %161 to i8**
    %163 = load i8*, i8** %162, align 4
    %164 = getelementptr inbounds %struct.rtx_def.45, %struct.rtx_def.45* %.111, i32 0, i32 1, i32 %i.037
    %165 = bitcast %union.rtunion_def.46* %164 to i8**
    %166 = load i8*, i8** %165, align 4
    %167 = tail call i32 @strcmp(i8* %163, i8* %166) #3
    %168 = icmp eq i32 %167, 0
    br i1 %168, label %.critedge.backedge, label %.loopexit
  
  ; <label>:169                                     ; preds = %.lr.ph38
    tail call void @fancy_abort(i8* nonnull getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i32 signext 530, i8* nonnull getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.rtx_equal_for_cselib_p, i32 0, i32 0)) #4
    unreachable
  
  .loopexit:                                        ; preds = %.critedge.backedge, %109, %115, %121, %.lr.ph35.preheader, %151, %160, %..lr.ph35_crit_edge, %77, %.thread18, %56, %.thread, %98, %90, %84, %82, %66, %45, %34, %24
    %.8.shrunk = phi i1 [ %41, %34 ], [ %97, %90 ], [ true, %24 ], [ false, %84 ], [ false, %82 ], [ false, %45 ], [ false, %66 ], [ true, %98 ], [ false, %.thread ], [ true, %56 ], [ false, %.thread18 ], [ true, %77 ], [ false, %..lr.ph35_crit_edge ], [ false, %160 ], [ false, %151 ], [ false, %121 ], [ false, %115 ], [ false, %109 ], [ true, %.critedge.backedge ], [ false, %.lr.ph35.preheader ]
    %.8 = zext i1 %.8.shrunk to i32
    ret i32 %.8
  }
  
  ; Function Attrs: nounwind
  declare %struct.cselib_val_struct.50* @cselib_lookup(%struct.rtx_def.45*, i32 signext, i32 signext) #0
  
  ; Function Attrs: nounwind readonly
  declare i32 @strcmp(i8* nocapture, i8* nocapture) #1
  
  ; Function Attrs: noreturn
  declare void @fancy_abort(i8*, i32 signext, i8*) #2
  
  attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #2 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #3 = { nounwind }
  attributes #4 = { noreturn nounwind }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            rtx_equal_for_cselib_p
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
  - { id: 2, class: gpr32 }
  - { id: 3, class: gpr32 }
  - { id: 4, class: gpr32 }
  - { id: 5, class: gpr32 }
  - { id: 6, class: gpr32 }
  - { id: 7, class: gpr32 }
  - { id: 8, class: gpr32 }
  - { id: 9, class: gpr32 }
  - { id: 10, class: gpr32 }
  - { id: 11, class: gpr32 }
  - { id: 12, class: gpr32 }
  - { id: 13, class: gpr32 }
  - { id: 14, class: gpr32 }
  - { id: 15, class: gpr32 }
  - { id: 16, class: gpr32 }
  - { id: 17, class: gpr32 }
  - { id: 18, class: gpr32 }
  - { id: 19, class: gpr32 }
  - { id: 20, class: gpr32 }
  - { id: 21, class: gpr32 }
  - { id: 22, class: gpr32 }
  - { id: 23, class: gpr32 }
  - { id: 24, class: gpr32 }
  - { id: 25, class: gpr32 }
  - { id: 26, class: gpr32 }
  - { id: 27, class: gpr32 }
  - { id: 28, class: gpr32 }
  - { id: 29, class: gpr32 }
  - { id: 30, class: gpr32 }
  - { id: 31, class: gpr32 }
  - { id: 32, class: gpr32 }
  - { id: 33, class: gpr32 }
  - { id: 34, class: gpr32 }
  - { id: 35, class: gpr32 }
  - { id: 36, class: gpr32 }
  - { id: 37, class: gpr32 }
  - { id: 38, class: gpr32 }
  - { id: 39, class: gpr32 }
  - { id: 40, class: gpr32 }
  - { id: 41, class: gpr32 }
  - { id: 42, class: gpr32 }
  - { id: 43, class: gpr32 }
  - { id: 44, class: gpr32 }
  - { id: 45, class: gpr32 }
  - { id: 46, class: gpr32 }
  - { id: 47, class: gpr32 }
  - { id: 48, class: gpr32 }
  - { id: 49, class: gpr32 }
  - { id: 50, class: gpr32 }
  - { id: 51, class: gpr32 }
  - { id: 52, class: gpr32 }
  - { id: 53, class: gpr32 }
  - { id: 54, class: gpr32 }
  - { id: 55, class: gpr32 }
  - { id: 56, class: gpr32 }
  - { id: 57, class: gpr32 }
  - { id: 58, class: gpr32 }
  - { id: 59, class: gpr32 }
  - { id: 60, class: gpr32 }
  - { id: 61, class: gpr32 }
  - { id: 62, class: gpr32 }
  - { id: 63, class: gpr32 }
  - { id: 64, class: gpr32 }
  - { id: 65, class: gpr32 }
  - { id: 66, class: gpr32 }
  - { id: 67, class: gpr32 }
  - { id: 68, class: gpr32 }
  - { id: 69, class: gpr32 }
  - { id: 70, class: gpr32 }
  - { id: 71, class: gpr32 }
  - { id: 72, class: gpr32 }
  - { id: 73, class: gpr32 }
  - { id: 74, class: gpr32 }
  - { id: 75, class: gpr32 }
  - { id: 76, class: gpr32 }
  - { id: 77, class: gpr32 }
  - { id: 78, class: gpr32 }
  - { id: 79, class: gpr32 }
  - { id: 80, class: gpr32 }
  - { id: 81, class: gpr32 }
  - { id: 82, class: gpr32 }
  - { id: 83, class: gpr32 }
  - { id: 84, class: gpr32 }
  - { id: 85, class: gpr32 }
  - { id: 86, class: gpr32 }
  - { id: 87, class: gpr32 }
  - { id: 88, class: gpr32 }
  - { id: 89, class: gpr32 }
  - { id: 90, class: gpr32 }
  - { id: 91, class: gpr32 }
  - { id: 92, class: gpr32 }
  - { id: 93, class: gpr32 }
  - { id: 94, class: gpr32 }
  - { id: 95, class: gpr32 }
  - { id: 96, class: gpr32 }
  - { id: 97, class: gpr32 }
  - { id: 98, class: gpr32 }
  - { id: 99, class: gpr32 }
  - { id: 100, class: gpr32 }
  - { id: 101, class: gpr32 }
  - { id: 102, class: gpr32 }
  - { id: 103, class: gpr32 }
  - { id: 104, class: gpr32 }
  - { id: 105, class: gpr32 }
  - { id: 106, class: gpr32 }
  - { id: 107, class: gpr32 }
  - { id: 108, class: gpr32 }
  - { id: 109, class: gpr32 }
  - { id: 110, class: gpr32 }
  - { id: 111, class: gpr32 }
  - { id: 112, class: gpr32 }
  - { id: 113, class: gpr32 }
  - { id: 114, class: gpr32 }
  - { id: 115, class: gpr32 }
  - { id: 116, class: gpr32 }
  - { id: 117, class: gpr32 }
  - { id: 118, class: gpr32 }
  - { id: 119, class: gpr32 }
  - { id: 120, class: gpr32 }
  - { id: 121, class: gpr32 }
  - { id: 122, class: gpr32 }
  - { id: 123, class: gpr32 }
  - { id: 124, class: gpr32 }
  - { id: 125, class: gpr32 }
  - { id: 126, class: gpr32 }
  - { id: 127, class: gpr32 }
  - { id: 128, class: gpr32 }
  - { id: 129, class: gpr32 }
  - { id: 130, class: gpr32 }
  - { id: 131, class: gpr32 }
  - { id: 132, class: gpr32 }
  - { id: 133, class: gpr32 }
  - { id: 134, class: gpr32 }
  - { id: 135, class: gpr32 }
  - { id: 136, class: gpr32 }
  - { id: 137, class: gpr32 }
  - { id: 138, class: gpr32 }
  - { id: 139, class: gpr32 }
  - { id: 140, class: gpr32 }
  - { id: 141, class: gpr32 }
  - { id: 142, class: gpr32 }
  - { id: 143, class: gpr32 }
  - { id: 144, class: gpr32 }
  - { id: 145, class: gpr32 }
  - { id: 146, class: gpr32 }
  - { id: 147, class: gpr32 }
  - { id: 148, class: gpr32 }
  - { id: 149, class: gpr32 }
  - { id: 150, class: gpr32 }
  - { id: 151, class: gpr32 }
  - { id: 152, class: gpr32 }
  - { id: 153, class: gpr32 }
  - { id: 154, class: gpr32 }
  - { id: 155, class: gpr32 }
  - { id: 156, class: gpr32 }
  - { id: 157, class: gpr32 }
  - { id: 158, class: gpr32 }
  - { id: 159, class: gpr32 }
  - { id: 160, class: gpr32 }
  - { id: 161, class: gpr32 }
  - { id: 162, class: gpr32 }
  - { id: 163, class: gpr32 }
  - { id: 164, class: gpr32 }
  - { id: 165, class: gpr32 }
  - { id: 166, class: gpr32 }
  - { id: 167, class: gpr32 }
  - { id: 168, class: gpr32 }
  - { id: 169, class: gpr32 }
  - { id: 170, class: gpr32 }
  - { id: 171, class: gpr32 }
  - { id: 172, class: gpr32 }
  - { id: 173, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%37' }
  - { reg: '%a1', virtual-reg: '%38' }
  - { reg: '%t9' }
  - { reg: '%v0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
jumpTable:       
  kind:            gp-rel32-block-address
  entries:         
    - id:              0
      blocks:          [ '%bb.29', '%bb.37', '%bb.37', '%bb.37', '%bb.37', 
                         '%bb.29', '%bb.37', '%bb.37', '%bb.37', '%bb.37', 
                         '%bb.36', '%bb.27..critedge.backedge', '%bb.27..critedge.backedge', 
                         '%bb.37', '%bb.28' ]
body:             |
  bb.0 (%ir-block.0, freq 110239680):
    successors: %bb.1(33), %bb.39(66)
    liveins: %a0, %a1, %t9, %v0
  
    %42 = ADDu %v0, %t9
    %38 = COPY %a1
    %37 = COPY %a0
    %0 = LW %37, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.1)
    %39 = SRL %0, 16
    %40 = ADDiu %zero, 66
    BEQ %39, killed %40, %bb.1, implicit-def dead %at
    B %bb.39, implicit-def dead %at
  
  bb.39 (%ir-block.0, freq 73493120):
    successors: %bb.1(50), %bb.3(49)
  
    %41 = ADDiu %zero, 61
    BNE %39, killed %41, %bb.3, implicit-def dead %at
    B %bb.1, implicit-def dead %at
  
  bb.1 (%ir-block.4, freq 73493120):
    successors: %bb.3(37), %bb.2(62)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %43 = EXT %0, 8, 8
    %44 = LW %42, target-flags(<unknown>) @cselib_lookup, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @cselib_lookup)
    %45 = ADDiu %zero, 0
    %a0 = COPY %37
    %a1 = COPY %43
    %a2 = COPY %45
    %gp = COPY %42
    %t9 = COPY %44
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %46 = COPY %v0
    BEQ %46, %zero, %bb.3, implicit-def dead %at
    B %bb.2, implicit-def dead %at
  
  bb.2 (%ir-block.9, freq 45933200):
    successors: %bb.3(100)
  
    %1 = COPY %46
    %2 = LW %1, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.10)
  
  bb.3 (%ir-block.12, freq 110239680):
    successors: %bb.4(33), %bb.40(66)
  
    %3 = PHI %37, %bb.39, %37, %bb.1, %2, %bb.2
    %4 = LW %38, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.13)
    %47 = SRL %4, 16
    %48 = ADDiu %zero, 66
    BEQ %47, killed %48, %bb.4, implicit-def dead %at
    B %bb.40, implicit-def dead %at
  
  bb.40 (%ir-block.12, freq 73493120):
    successors: %bb.4(50), %bb.6(49)
  
    %49 = ADDiu %zero, 61
    BNE %47, killed %49, %bb.6, implicit-def dead %at
    B %bb.4, implicit-def dead %at
  
  bb.4 (%ir-block.16, freq 73493120):
    successors: %bb.6(37), %bb.5(62)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %50 = EXT %4, 8, 8
    %51 = LW %42, target-flags(<unknown>) @cselib_lookup, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @cselib_lookup)
    %52 = ADDiu %zero, 0
    %a0 = COPY %38
    %a1 = COPY %50
    %a2 = COPY %52
    %gp = COPY %42
    %t9 = COPY %51
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %53 = COPY %v0
    BEQ %53, %zero, %bb.6, implicit-def dead %at
    B %bb.5, implicit-def dead %at
  
  bb.5 (%ir-block.21, freq 45933200):
    successors: %bb.6(100)
  
    %5 = COPY %53
    %6 = LW %5, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.22)
  
  bb.6 (%ir-block.24, freq 110239680):
    successors: %bb.38..loopexit(37), %bb.7(62)
  
    %7 = PHI %38, %bb.40, %38, %bb.4, %6, %bb.5
    %54 = ADDiu %zero, 1
    BEQ %3, %7, %bb.38..loopexit, implicit-def dead %at
    B %bb.7, implicit-def dead %at
  
  bb.7 (%ir-block.26, freq 68899800):
    successors: %bb.8(50), %bb.10(50)
  
    %8 = LW %3, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.27)
    %55 = LUi 65535
    %56 = AND %8, %55
    %57 = LUi 60
    BNE killed %56, %57, %bb.10, implicit-def dead %at
    B %bb.8, implicit-def dead %at
  
  bb.8 (%ir-block.30, freq 34449900):
    successors: %bb.9(50), %bb.10(50)
  
    %58 = LW %7, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.31)
    %60 = AND killed %58, %55
    BNE killed %60, %57, %bb.10, implicit-def dead %at
    B %bb.9, implicit-def dead %at
  
  bb.9 (%ir-block.34, freq 17224950):
    successors: %bb.38..loopexit(100)
  
    %169 = LW %7, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.39)
    %170 = LW %3, 4, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.36)
    %171 = XOR killed %170, killed %169
    %9 = SLTiu killed %171, 1
    B %bb.38..loopexit, implicit-def dead %at
  
  bb.10 (%ir-block.42, freq 51674850):
    successors: %bb.11(50), %bb.15(50)
  
    %10 = SRL %8, 16
    %62 = ADDiu %zero, 60
    BNE %10, %62, %bb.15, implicit-def dead %at
    B %bb.11, implicit-def dead %at
  
  bb.11 (%ir-block.45, freq 25837425):
    successors: %bb.38..loopexit(37), %bb.51(62)
  
    %160 = LW %3, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.47)
    %11 = LW killed %160, 8, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.49)
    %159 = ADDiu %zero, 0
    BEQ %11, %zero, %bb.38..loopexit, implicit-def %at
  
  bb.51 (freq 16148390):
    successors: %bb.12..lr.ph(100)
  
    %163 = ADDiu %zero, 61
    %164 = ADDiu %zero, 66
  
  bb.12..lr.ph (freq 390613041):
    successors: %bb.14..thread(33), %bb.49..lr.ph(66)
  
    %12 = PHI %11, %bb.51, %14, %bb.14..thread
    %13 = LW %12, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.51)
    %162 = LW %13, 0, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.53)
    %161 = SRL killed %162, 16
    BEQ %161, %163, %bb.14..thread, implicit-def dead %at
    B %bb.49..lr.ph, implicit-def dead %at
  
  bb.49..lr.ph (freq 260408694):
    successors: %bb.14..thread(50), %bb.13(49)
  
    BEQ %161, %164, %bb.14..thread, implicit-def dead %at
    B %bb.13, implicit-def dead %at
  
  bb.13 (%ir-block.56, freq 130204347):
    successors: %bb.14..thread(96), %bb.38..loopexit(3)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %166 = LW %42, target-flags(<unknown>) @rtx_equal_for_cselib_p, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @rtx_equal_for_cselib_p)
    %a0 = COPY %13
    %a1 = COPY %7
    %gp = COPY %42
    %t9 = COPY %166
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %167 = COPY %v0
    BNE %167, %zero, %bb.38..loopexit, implicit-def dead %at
    B %bb.14..thread, implicit-def dead %at
  
  bb.14..thread (freq 386544156):
    successors: %bb.38..loopexit(3), %bb.12..lr.ph(96)
  
    %14 = LW %12, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.59)
    BEQ %14, %zero, %bb.38..loopexit, implicit-def dead %at
    B %bb.12..lr.ph, implicit-def dead %at
  
  bb.15 (%ir-block.61, freq 25837425):
    successors: %bb.16(50), %bb.20(50)
  
    %15 = LW %7, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.62)
    %16 = SRL %15, 16
    BNE %16, %62, %bb.20, implicit-def dead %at
    B %bb.16, implicit-def dead %at
  
  bb.16 (%ir-block.66, freq 12918712):
    successors: %bb.38..loopexit(37), %bb.50(62)
  
    %150 = LW %7, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.68)
    %17 = LW killed %150, 8, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.70)
    %149 = ADDiu %zero, 0
    BEQ %17, %zero, %bb.38..loopexit, implicit-def %at
  
  bb.50 (freq 8074195):
    successors: %bb.17..lr.ph30(100)
  
    %153 = ADDiu %zero, 61
    %154 = ADDiu %zero, 66
  
  bb.17..lr.ph30 (freq 195306520):
    successors: %bb.19..thread18(33), %bb.48..lr.ph30(66)
  
    %18 = PHI %17, %bb.50, %20, %bb.19..thread18
    %19 = LW %18, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.72)
    %152 = LW %19, 0, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.74)
    %151 = SRL killed %152, 16
    BEQ %151, %153, %bb.19..thread18, implicit-def dead %at
    B %bb.48..lr.ph30, implicit-def dead %at
  
  bb.48..lr.ph30 (freq 130204347):
    successors: %bb.19..thread18(50), %bb.18(49)
  
    BEQ %151, %154, %bb.19..thread18, implicit-def dead %at
    B %bb.18, implicit-def dead %at
  
  bb.18 (%ir-block.77, freq 65102173):
    successors: %bb.19..thread18(96), %bb.38..loopexit(3)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %156 = LW %42, target-flags(<unknown>) @rtx_equal_for_cselib_p, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @rtx_equal_for_cselib_p)
    %a0 = COPY %3
    %a1 = COPY %19
    %gp = COPY %42
    %t9 = COPY %156
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %157 = COPY %v0
    BNE %157, %zero, %bb.38..loopexit, implicit-def dead %at
    B %bb.19..thread18, implicit-def dead %at
  
  bb.19..thread18 (freq 193272078):
    successors: %bb.38..loopexit(3), %bb.17..lr.ph30(96)
  
    %20 = LW %18, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.80)
    BEQ %20, %zero, %bb.38..loopexit, implicit-def dead %at
    B %bb.17..lr.ph30, implicit-def dead %at
  
  bb.20 (%ir-block.82, freq 12918712):
    successors: %bb.21(50), %bb.38..loopexit(50)
  
    %64 = ADDiu %zero, 0
    BNE %10, %16, %bb.38..loopexit, implicit-def dead %at
    B %bb.21, implicit-def dead %at
  
  bb.21 (%ir-block.84, freq 6459356):
    successors: %bb.22(37), %bb.38..loopexit(62)
  
    %66 = XOR %15, %8
    %67 = ANDi killed %66, 65280
    BNE killed %67, %zero, %bb.38..loopexit, implicit-def dead %at
    B %bb.22, implicit-def dead %at
  
  bb.22 (%ir-block.88, freq 2422258):
    successors: %bb.23(50), %bb.24(50)
  
    %68 = ADDiu %zero, 67
    BNE %10, killed %68, %bb.24, implicit-def dead %at
    B %bb.23, implicit-def dead %at
  
  bb.23 (%ir-block.90, freq 1211129):
    successors: %bb.38..loopexit(100)
  
    %146 = LW %7, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.95)
    %147 = LW %3, 4, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.92)
    %148 = XOR killed %147, killed %146
    %21 = SLTiu killed %148, 1
    B %bb.38..loopexit, implicit-def dead %at
  
  bb.24 (%ir-block.98, freq 1211129):
    successors: %bb.38..loopexit(37), %bb.25..lr.ph38.preheader(62)
  
    %70 = LW %42, target-flags(<unknown>) @rtx_length, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %71 = ADDu killed %70, %10
    %23 = LBu killed %71, 0, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.101)
    BEQ %23, %zero, %bb.38..loopexit, implicit-def dead %at
    B %bb.25..lr.ph38.preheader, implicit-def dead %at
  
  bb.25..lr.ph38.preheader (freq 756955):
    successors: %bb.26..lr.ph38(100)
  
    %72 = SLL %10, 2
    %73 = LW %42, target-flags(<unknown>) @rtx_format, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %74 = ADDu %73, %72
    %22 = LW %74, 0, <0x3670da0> = !{!"unison-memory-partition", i32 2} :: (load 4 from %ir.99)
    %87 = ADDiu %zero, 48
    %88 = ADDiu %zero, 69
    %89 = ADDiu %zero, 83
    %85 = ADDiu %zero, 86
    %86 = ADDiu %zero, 101
    %81 = LW %42, target-flags(<unknown>) %jump-table.0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
  
  bb.26..lr.ph38 (freq 6400584):
    successors: %bb.41..lr.ph38(45), %bb.42..lr.ph38(54)
  
    %24 = PHI %23, %bb.25..lr.ph38.preheader, %25, %bb.27..critedge.backedge
    %25 = ADDiu %24, -1
    %76 = ADDu %22, %25
    %75 = LB killed %76, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 1 from %ir.105)
    %77 = SLTi %75, 86
    BEQ killed %77, %zero, %bb.42..lr.ph38, implicit-def dead %at
    B %bb.41..lr.ph38, implicit-def dead %at
  
  bb.41..lr.ph38 (freq 2909357):
    successors: %bb.27..critedge.backedge(33), %bb.46..lr.ph38(66)
  
    BEQ %75, %87, %bb.27..critedge.backedge, implicit-def dead %at
    B %bb.46..lr.ph38, implicit-def dead %at
  
  bb.46..lr.ph38 (freq 1939573):
    successors: %bb.30(49), %bb.47..lr.ph38(50)
  
    BEQ %75, %88, %bb.30, implicit-def dead %at
    B %bb.47..lr.ph38, implicit-def dead %at
  
  bb.47..lr.ph38 (freq 969789):
    successors: %bb.36(99), %bb.37(0)
  
    BEQ %75, %89, %bb.36, implicit-def dead %at
    B %bb.37, implicit-def dead %at
  
  bb.42..lr.ph38 (freq 3491227):
    successors: %bb.43..lr.ph38(25), %bb.44..lr.ph38(74)
  
    %78 = ADDiu %75, -105
    %79 = SLTiu %78, 15
    BEQ killed %79, %zero, %bb.43..lr.ph38, implicit-def dead %at
    B %bb.44..lr.ph38, implicit-def dead %at
  
  bb.43..lr.ph38 (freq 872807):
    successors: %bb.30(49), %bb.45..lr.ph38(50)
  
    BEQ %75, %85, %bb.30, implicit-def dead %at
    B %bb.45..lr.ph38, implicit-def dead %at
  
  bb.44..lr.ph38 (freq 2618420):
    successors: %bb.29(33), %bb.37(0), %bb.36(16), %bb.27..critedge.backedge(33), %bb.28(16)
  
    %80 = SLL %78, 2
    %82 = ADDu killed %80, %81
    %83 = LW killed %82, target-flags(<unknown>) %jump-table.0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from jump-table)
    %84 = ADDu killed %83, %42
    PseudoIndirectBranch killed %84
  
  bb.45..lr.ph38 (freq 436404):
    successors: %bb.35(99), %bb.37(0)
  
    BEQ %75, %86, %bb.35, implicit-def dead %at
    B %bb.37, implicit-def dead %at
  
  bb.27..critedge.backedge (freq 5825681):
    successors: %bb.26..lr.ph38(96), %bb.38..loopexit(3)
  
    %141 = SLTi %24, 2
    BEQ killed %141, %zero, %bb.26..lr.ph38, implicit-def dead %at
    B %bb.38..loopexit, implicit-def dead %at
  
  bb.28 (%ir-block.109, freq 436403):
    successors: %bb.27..critedge.backedge(96), %bb.38..loopexit(3)
  
    %135 = SLL %25, 2
    %136 = ADDu %7, %135
    %137 = LW killed %136, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.112)
    %138 = ADDu %3, %135
    %139 = LW killed %138, 4, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.110)
    BEQ killed %139, killed %137, %bb.27..critedge.backedge, implicit-def dead %at
    B %bb.38..loopexit, implicit-def dead %at
  
  bb.29 (%ir-block.115, freq 872806):
    successors: %bb.27..critedge.backedge(96), %bb.38..loopexit(3)
  
    %129 = SLL %25, 2
    %130 = ADDu %7, %129
    %131 = LW killed %130, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.118)
    %132 = ADDu %3, %129
    %133 = LW killed %132, 4, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.116)
    BEQ killed %133, killed %131, %bb.27..critedge.backedge, implicit-def dead %at
    B %bb.38..loopexit, implicit-def dead %at
  
  bb.30 (%ir-block.121, freq 1406186):
    successors: %bb.31..preheader(96), %bb.38..loopexit(3)
  
    %107 = SLL %25, 2
    %108 = ADDu %3, %107
    %109 = ADDu %7, %107
    %30 = LW %109, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.128)
    %27 = LW %108, 4, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.123)
    %28 = LW %27, 0, <0x3670da0> = !{!"unison-memory-partition", i32 2} :: (load 4 from %ir.125)
    %110 = LW %30, 0, <0x35d25c0> = !{!"unison-memory-partition", i32 3} :: (load 4 from %ir.130)
    BNE %28, killed %110, %bb.38..loopexit, implicit-def dead %at
    B %bb.31..preheader, implicit-def dead %at
  
  bb.31..preheader (freq 1362243):
    successors: %bb.32..lr.ph35.preheader(62), %bb.27..critedge.backedge(37)
  
    BLEZ %28, %bb.27..critedge.backedge, implicit-def dead %at
    B %bb.32..lr.ph35.preheader, implicit-def dead %at
  
  bb.32..lr.ph35.preheader (freq 851402):
    successors: %bb.38..loopexit(3), %bb.52(96)
  
    %114 = LW %30, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.136)
    %115 = LW %27, 4, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.134)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %116 = LW %42, target-flags(<unknown>) @rtx_equal_for_cselib_p, <0x3670da0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @rtx_equal_for_cselib_p)
    %a0 = COPY %115
    %a1 = COPY %114
    %gp = COPY %42
    %t9 = COPY %116
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %117 = COPY %v0
    %112 = ADDiu %zero, 0
    %111 = COPY %112
    BEQ %117, %zero, %bb.38..loopexit, implicit-def %at
  
  bb.52 (freq 824795):
    successors: %bb.33..lr.ph64(100)
  
    %29 = ADDiu %109, 4
    %26 = ADDiu %108, 4
    %113 = ADDiu %zero, 8
  
  bb.33..lr.ph64 (freq 13406203):
    successors: %bb.34...lr.ph35_crit_edge(96), %bb.27..critedge.backedge(3)
  
    %31 = PHI %112, %bb.52, %35, %bb.34...lr.ph35_crit_edge
    %32 = PHI %113, %bb.52, %34, %bb.34...lr.ph35_crit_edge
    %33 = LW %26, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.140)
    %118 = LW %33, 0, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.142)
    %35 = ADDiu %31, 1
    %119 = SLT %35, killed %118
    BEQ killed %119, %zero, %bb.27..critedge.backedge, implicit-def dead %at
    B %bb.34...lr.ph35_crit_edge, implicit-def dead %at
  
  bb.34...lr.ph35_crit_edge (freq 12987259):
    successors: %bb.38..loopexit(3), %bb.33..lr.ph64(96)
  
    %34 = ADDiu %32, 4
    %121 = ADDu %33, %32
    %122 = LW killed %121, 0, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.uglygep34)
    %123 = LW %29, 0, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.146)
    %124 = ADDu killed %123, %32
    %125 = LW killed %124, 0, <0x3670da0> = !{!"unison-memory-partition", i32 2} :: (load 4 from %ir.uglygep2)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %126 = LW %42, target-flags(<unknown>) @rtx_equal_for_cselib_p, <0x35d25c0> = !{!"unison-memory-partition", i32 3} :: (load 4 from call-entry @rtx_equal_for_cselib_p)
    %a0 = COPY %122
    %a1 = COPY %125
    %t9 = COPY %126
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %127 = COPY %v0
    %120 = ADDiu %zero, 0
    BEQ %127, %zero, %bb.38..loopexit, implicit-def dead %at
    B %bb.33..lr.ph64, implicit-def dead %at
  
  bb.35 (%ir-block.151, freq 436402):
    successors: %bb.38..loopexit(3), %bb.27..critedge.backedge(96)
  
    %99 = SLL %25, 2
    %100 = ADDu %7, %99
    %101 = LW killed %100, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.156)
    %102 = ADDu %3, %99
    %103 = LW killed %102, 4, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.153)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %104 = LW %42, target-flags(<unknown>) @rtx_equal_for_cselib_p, <0x3670da0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @rtx_equal_for_cselib_p)
    %a0 = COPY %103
    %a1 = COPY %101
    %gp = COPY %42
    %t9 = COPY %104
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %105 = COPY %v0
    BEQ %105, %zero, %bb.38..loopexit, implicit-def dead %at
    B %bb.27..critedge.backedge, implicit-def dead %at
  
  bb.36 (%ir-block.160, freq 1406187):
    successors: %bb.27..critedge.backedge(96), %bb.38..loopexit(3)
  
    %91 = SLL %25, 2
    %92 = ADDu %7, %91
    %93 = LW killed %92, 4, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.165)
    %94 = ADDu %3, %91
    %95 = LW killed %94, 4, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.162)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %96 = LW %42, target-flags(<unknown>) @strcmp, <0x3670da0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @strcmp)
    %a0 = COPY %95
    %a1 = COPY %93
    %gp = COPY %42
    %t9 = COPY %96
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %97 = COPY %v0
    BEQ %97, %zero, %bb.27..critedge.backedge, implicit-def dead %at
    B %bb.38..loopexit, implicit-def dead %at
  
  bb.37 (%ir-block.169, freq 8):
    exit
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %142 = LW %42, target-flags(<unknown>) @.str, <0x3678610> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %143 = LW %42, target-flags(<unknown>) @__FUNCTION__.rtx_equal_for_cselib_p, <0x3650370> = !{!"unison-memory-partition", i32 1} :: (load 4 from got)
    %144 = LW %42, target-flags(<unknown>) @fancy_abort, <0x3670da0> = !{!"unison-memory-partition", i32 2} :: (load 4 from call-entry @fancy_abort)
    %145 = ADDiu %zero, 530
    %a0 = COPY %142
    %a1 = COPY %145
    %a2 = COPY %143
    %gp = COPY %42
    %t9 = COPY %144
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
  
  bb.38..loopexit (freq 110239672):
    liveouts: %v0
  
    %36 = PHI %54, %bb.6, %64, %bb.20, %64, %bb.21, %54, %bb.24, %64, %bb.36, %64, %bb.35, %64, %bb.30, %111, %bb.32..lr.ph35.preheader, %120, %bb.34...lr.ph35_crit_edge, %64, %bb.29, %64, %bb.28, %54, %bb.27..critedge.backedge, %21, %bb.23, %149, %bb.16, %54, %bb.18, %149, %bb.19..thread18, %159, %bb.11, %54, %bb.13, %159, %bb.14..thread, %9, %bb.9
    %v0 = COPY %36
    RetRA implicit %v0

...
