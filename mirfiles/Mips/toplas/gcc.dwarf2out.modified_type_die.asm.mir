--- |
  ; ModuleID = '/home/romi/didaktoriko/unison/unison-experiments/experiments/mips/selected-functions/size-toplas/gcc.dwarf2out.modified_type_die.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips--linux-gnu"
  
  %union.tree_node.4288 = type { %struct.tree_type.4289, [24 x i8] }
  %struct.tree_type.4289 = type { %struct.tree_common.4290, %union.tree_node.4288*, %union.tree_node.4288*, %union.tree_node.4288*, %union.tree_node.4288*, i32, i32, i32, %union.tree_node.4288*, %union.tree_node.4288*, %union.anon.2.4291, %union.tree_node.4288*, %union.tree_node.4288*, %union.tree_node.4288*, %union.tree_node.4288*, %union.tree_node.4288*, %union.tree_node.4288*, %union.tree_node.4288*, i32, %struct.lang_type.4292* }
  %struct.tree_common.4290 = type { %union.tree_node.4288*, %union.tree_node.4288*, i32 }
  %union.anon.2.4291 = type { i32 }
  %struct.lang_type.4292 = type opaque
  %struct.die_struct.4315 = type { i32, i8*, %struct.dw_attr_struct.4316*, %struct.die_struct.4315*, %struct.die_struct.4315*, %struct.die_struct.4315*, i32, i32, i32 }
  %struct.dw_attr_struct.4316 = type { i32, %struct.dw_attr_struct.4316*, %struct.dw_val_struct.4317 }
  %struct.dw_val_struct.4317 = type { i32, %union.anon.3.4318 }
  %union.anon.3.4318 = type { %struct.dw_long_long_struct.4319 }
  %struct.dw_long_long_struct.4319 = type { i32, i32 }
  %struct.ht.4320 = type { %struct.obstack.4321, %struct.ht_identifier.4322**, %struct.ht_identifier.4322* (%struct.ht.4320*)*, i32, i32, %struct.cpp_reader.4323*, i32, i32 }
  %struct.obstack.4321 = type { i32, %struct._obstack_chunk.4324*, i8*, i8*, i8*, i32, i32, %struct._obstack_chunk.4324* (i8*, i32)*, void (i8*, %struct._obstack_chunk.4324*)*, i8*, i8 }
  %struct._obstack_chunk.4324 = type { i8*, %struct._obstack_chunk.4324*, [4 x i8] }
  %struct.ht_identifier.4322 = type { i32, i8* }
  %struct.cpp_reader.4323 = type opaque
  %struct.limbo_die_struct.4338 = type { %struct.die_struct.4315*, %union.tree_node.4288*, %struct.limbo_die_struct.4338* }
  
  @target_flags = external global i32, align 4
  @integer_types = external global [11 x %union.tree_node.4288*], align 4
  @.str.4 = external hidden unnamed_addr constant [12 x i8], align 1
  @demangle_name_func = external hidden unnamed_addr global i8* (i8*)*, align 4
  @comp_unit_die = external hidden unnamed_addr global %struct.die_struct.4315*, align 4
  @debug_str_hash = external global %struct.ht.4320*, align 4
  @__FUNCTION__.add_child_die = external hidden unnamed_addr constant [14 x i8], align 1
  @limbo_die_list = external hidden global %struct.limbo_die_struct.4338*, align 4
  @__FUNCTION__.modified_type_die = external hidden unnamed_addr constant [18 x i8], align 1
  @__FUNCTION__.is_base_type = external hidden unnamed_addr constant [13 x i8], align 1
  @.str.388 = external hidden unnamed_addr constant [12 x i8], align 1
  @.str.389 = external hidden unnamed_addr constant [12 x i8], align 1
  @.str.390 = external hidden unnamed_addr constant [14 x i8], align 1
  @__FUNCTION__.base_type_die = external hidden unnamed_addr constant [14 x i8], align 1
  
  ; Function Attrs: noreturn
  declare void @fancy_abort(i8*, i32 signext, i8*) #0
  
  declare noalias i8* @xcalloc(i32 signext, i32 signext) #1
  
  ; Function Attrs: nounwind
  define hidden fastcc %struct.die_struct.4315* @modified_type_die(%union.tree_node.4288* %type, i32 signext %is_const_type, i32 signext %is_volatile_type, %struct.die_struct.4315* %context_die) unnamed_addr #2 {
    %1 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %type, i32 0, i32 0, i32 0, i32 2
    %2 = load i32, i32* %1, align 4
    %3 = lshr i32 %2, 24
    %4 = icmp eq i32 %3, 0
    br i1 %4, label %.thread13, label %5
  
  ; <label>:5                                       ; preds = %0
    %6 = icmp ne i32 %is_const_type, 0
    %7 = zext i1 %6 to i32
    %8 = icmp ne i32 %is_volatile_type, 0
    %9 = select i1 %8, i32 2, i32 0
    %10 = or i32 %9, %7
    %11 = tail call %union.tree_node.4288* @get_qualified_type(%union.tree_node.4288* nonnull %type, i32 signext %10) #4
    %12 = icmp eq %union.tree_node.4288* %11, null
    br i1 %12, label %.thread, label %13
  
  ; <label>:13                                      ; preds = %5
    %14 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %11, i32 0, i32 0, i32 10
    %15 = bitcast %union.anon.2.4291* %14 to %struct.die_struct.4315**
    %16 = load %struct.die_struct.4315*, %struct.die_struct.4315** %15, align 4
    %17 = icmp eq %struct.die_struct.4315* %16, null
    br i1 %17, label %18, label %base_type_die.exit
  
  ; <label>:18                                      ; preds = %13
    %19 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %11, i32 0, i32 0, i32 11
    %20 = load %union.tree_node.4288*, %union.tree_node.4288** %19, align 4
    %21 = icmp eq %union.tree_node.4288* %20, null
    br i1 %21, label %.thread, label %22
  
  ; <label>:22                                      ; preds = %18
    %23 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %20, i32 0, i32 0, i32 0, i32 2
    %24 = load i32, i32* %23, align 4
    %.mask = and i32 %24, -16777216
    %25 = icmp eq i32 %.mask, 553648128
    br i1 %25, label %26, label %.thread
  
  ; <label>:26                                      ; preds = %22
    %27 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %20, i32 0, i32 0, i32 12
    %28 = load %union.tree_node.4288*, %union.tree_node.4288** %27, align 4
    %29 = icmp eq %union.tree_node.4288* %28, null
    br i1 %29, label %.thread, label %30
  
  ; <label>:30                                      ; preds = %26
    %31 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %20, i32 0, i32 0, i32 0, i32 1
    %32 = load %union.tree_node.4288*, %union.tree_node.4288** %31, align 4
    %33 = icmp eq %union.tree_node.4288* %11, %32
    br i1 %33, label %34, label %36
  
  ; <label>:34                                      ; preds = %30
    tail call fastcc void @gen_type_die(%union.tree_node.4288* nonnull %11, %struct.die_struct.4315* %context_die)
    %sunkaddr = ptrtoint %union.tree_node.4288* %11 to i32
    %sunkaddr1 = add i32 %sunkaddr, 48
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to %struct.die_struct.4315**
    %35 = load %struct.die_struct.4315*, %struct.die_struct.4315** %sunkaddr2, align 4
    br label %48
  
  ; <label>:36                                      ; preds = %30
    %37 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %32, i32 0, i32 0, i32 0, i32 2
    %38 = load i32, i32* %37, align 4
    %39 = lshr i32 %38, 19
    %40 = and i32 %39, 1
    %41 = icmp sgt i32 %40, %is_const_type
    br i1 %41, label %46, label %42
  
  ; <label>:42                                      ; preds = %36
    %43 = lshr i32 %38, 20
    %44 = and i32 %43, 1
    %45 = icmp sgt i32 %44, %is_volatile_type
    br i1 %45, label %46, label %.thread
  
  ; <label>:46                                      ; preds = %42, %36
    %47 = tail call fastcc %struct.die_struct.4315* @modified_type_die(%union.tree_node.4288* nonnull %28, i32 signext %is_const_type, i32 signext %is_volatile_type, %struct.die_struct.4315* %context_die)
    br label %48
  
  ; <label>:48                                      ; preds = %46, %34
    %mod_type_die.2 = phi %struct.die_struct.4315* [ %35, %34 ], [ %47, %46 ]
    %49 = icmp eq %struct.die_struct.4315* %mod_type_die.2, null
    br i1 %49, label %.thread, label %.thread13
  
  .thread:                                          ; preds = %48, %42, %26, %22, %18, %5
    %50 = icmp ne i32 %is_const_type, 0
    br i1 %50, label %51, label %81
  
  ; <label>:51                                      ; preds = %.thread
    %52 = load %struct.die_struct.4315*, %struct.die_struct.4315** @comp_unit_die, align 4
    %53 = tail call noalias i8* @xcalloc(i32 signext 1, i32 signext 36) #4
    %54 = bitcast i8* %53 to i32*
    store i32 38, i32* %54, align 4
    %55 = icmp eq %struct.die_struct.4315* %52, null
    br i1 %55, label %71, label %56
  
  ; <label>:56                                      ; preds = %51
    %57 = icmp eq i8* %53, null
    br i1 %57, label %new_die.exit, label %58
  
  ; <label>:58                                      ; preds = %56
    %59 = bitcast i8* %53 to %struct.die_struct.4315*
    %60 = icmp eq %struct.die_struct.4315* %59, %52
    br i1 %60, label %61, label %62
  
  ; <label>:61                                      ; preds = %58
    tail call void @fancy_abort(i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), i32 signext 5026, i8* nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.add_child_die, i32 0, i32 0)) #5
    unreachable
  
  ; <label>:62                                      ; preds = %58
    %63 = getelementptr inbounds i8, i8* %53, i32 12
    %64 = bitcast i8* %63 to %struct.die_struct.4315**
    store %struct.die_struct.4315* %52, %struct.die_struct.4315** %64, align 4
    %65 = getelementptr inbounds %struct.die_struct.4315, %struct.die_struct.4315* %52, i32 0, i32 4
    %66 = bitcast %struct.die_struct.4315** %65 to i32*
    %67 = load i32, i32* %66, align 4
    %68 = getelementptr inbounds i8, i8* %53, i32 20
    %69 = bitcast i8* %68 to i32*
    store i32 %67, i32* %69, align 4
    %70 = bitcast %struct.die_struct.4315** %65 to i8**
    store i8* %53, i8** %70, align 4
    br label %new_die.exit
  
  ; <label>:71                                      ; preds = %51
    %72 = tail call noalias i8* @xmalloc(i32 signext 12) #4
    %73 = bitcast i8* %72 to i8**
    store i8* %53, i8** %73, align 4
    %74 = getelementptr inbounds i8, i8* %72, i32 4
    %75 = bitcast i8* %74 to %union.tree_node.4288**
    store %union.tree_node.4288* %type, %union.tree_node.4288** %75, align 4
    %76 = load i32, i32* bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i32*), align 4
    %77 = getelementptr inbounds i8, i8* %72, i32 8
    %78 = bitcast i8* %77 to i32*
    store i32 %76, i32* %78, align 4
    store i8* %72, i8** bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i8**), align 4
    br label %new_die.exit
  
  new_die.exit:                                     ; preds = %71, %62, %56
    %79 = bitcast i8* %53 to %struct.die_struct.4315*
    %80 = tail call fastcc %struct.die_struct.4315* @modified_type_die(%union.tree_node.4288* nonnull %type, i32 signext 0, i32 signext %is_volatile_type, %struct.die_struct.4315* %context_die)
    br label %380
  
  ; <label>:81                                      ; preds = %.thread
    %82 = icmp ne i32 %is_volatile_type, 0
    br i1 %82, label %83, label %113
  
  ; <label>:83                                      ; preds = %81
    %84 = load %struct.die_struct.4315*, %struct.die_struct.4315** @comp_unit_die, align 4
    %85 = tail call noalias i8* @xcalloc(i32 signext 1, i32 signext 36) #4
    %86 = bitcast i8* %85 to i32*
    store i32 53, i32* %86, align 4
    %87 = icmp eq %struct.die_struct.4315* %84, null
    br i1 %87, label %103, label %88
  
  ; <label>:88                                      ; preds = %83
    %89 = icmp eq i8* %85, null
    br i1 %89, label %new_die.exit4, label %90
  
  ; <label>:90                                      ; preds = %88
    %91 = bitcast i8* %85 to %struct.die_struct.4315*
    %92 = icmp eq %struct.die_struct.4315* %91, %84
    br i1 %92, label %93, label %94
  
  ; <label>:93                                      ; preds = %90
    tail call void @fancy_abort(i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), i32 signext 5026, i8* nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.add_child_die, i32 0, i32 0)) #5
    unreachable
  
  ; <label>:94                                      ; preds = %90
    %95 = getelementptr inbounds i8, i8* %85, i32 12
    %96 = bitcast i8* %95 to %struct.die_struct.4315**
    store %struct.die_struct.4315* %84, %struct.die_struct.4315** %96, align 4
    %97 = getelementptr inbounds %struct.die_struct.4315, %struct.die_struct.4315* %84, i32 0, i32 4
    %98 = bitcast %struct.die_struct.4315** %97 to i32*
    %99 = load i32, i32* %98, align 4
    %100 = getelementptr inbounds i8, i8* %85, i32 20
    %101 = bitcast i8* %100 to i32*
    store i32 %99, i32* %101, align 4
    %102 = bitcast %struct.die_struct.4315** %97 to i8**
    store i8* %85, i8** %102, align 4
    br label %new_die.exit4
  
  ; <label>:103                                     ; preds = %83
    %104 = tail call noalias i8* @xmalloc(i32 signext 12) #4
    %105 = bitcast i8* %104 to i8**
    store i8* %85, i8** %105, align 4
    %106 = getelementptr inbounds i8, i8* %104, i32 4
    %107 = bitcast i8* %106 to %union.tree_node.4288**
    store %union.tree_node.4288* %type, %union.tree_node.4288** %107, align 4
    %108 = load i32, i32* bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i32*), align 4
    %109 = getelementptr inbounds i8, i8* %104, i32 8
    %110 = bitcast i8* %109 to i32*
    store i32 %108, i32* %110, align 4
    store i8* %104, i8** bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i8**), align 4
    br label %new_die.exit4
  
  new_die.exit4:                                    ; preds = %103, %94, %88
    %111 = bitcast i8* %85 to %struct.die_struct.4315*
    %112 = tail call fastcc %struct.die_struct.4315* @modified_type_die(%union.tree_node.4288* nonnull %type, i32 signext 0, i32 signext 0, %struct.die_struct.4315* %context_die)
    br label %380
  
  ; <label>:113                                     ; preds = %81
    switch i32 %3, label %216 [
      i32 13, label %114
      i32 15, label %165
    ]
  
  ; <label>:114                                     ; preds = %113
    %115 = load %struct.die_struct.4315*, %struct.die_struct.4315** @comp_unit_die, align 4
    %116 = tail call noalias i8* @xcalloc(i32 signext 1, i32 signext 36) #4
    %117 = bitcast i8* %116 to i32*
    store i32 15, i32* %117, align 4
    %118 = icmp eq %struct.die_struct.4315* %115, null
    br i1 %118, label %134, label %119
  
  ; <label>:119                                     ; preds = %114
    %120 = icmp eq i8* %116, null
    br i1 %120, label %new_die.exit5, label %121
  
  ; <label>:121                                     ; preds = %119
    %122 = bitcast i8* %116 to %struct.die_struct.4315*
    %123 = icmp eq %struct.die_struct.4315* %122, %115
    br i1 %123, label %124, label %125
  
  ; <label>:124                                     ; preds = %121
    tail call void @fancy_abort(i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), i32 signext 5026, i8* nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.add_child_die, i32 0, i32 0)) #5
    unreachable
  
  ; <label>:125                                     ; preds = %121
    %126 = getelementptr inbounds i8, i8* %116, i32 12
    %127 = bitcast i8* %126 to %struct.die_struct.4315**
    store %struct.die_struct.4315* %115, %struct.die_struct.4315** %127, align 4
    %128 = getelementptr inbounds %struct.die_struct.4315, %struct.die_struct.4315* %115, i32 0, i32 4
    %129 = bitcast %struct.die_struct.4315** %128 to i32*
    %130 = load i32, i32* %129, align 4
    %131 = getelementptr inbounds i8, i8* %116, i32 20
    %132 = bitcast i8* %131 to i32*
    store i32 %130, i32* %132, align 4
    %133 = bitcast %struct.die_struct.4315** %128 to i8**
    store i8* %116, i8** %133, align 4
    br label %new_die.exit5
  
  ; <label>:134                                     ; preds = %114
    %135 = tail call noalias i8* @xmalloc(i32 signext 12) #4
    %136 = bitcast i8* %135 to i8**
    store i8* %116, i8** %136, align 4
    %137 = getelementptr inbounds i8, i8* %135, i32 4
    %138 = bitcast i8* %137 to %union.tree_node.4288**
    store %union.tree_node.4288* %type, %union.tree_node.4288** %138, align 4
    %139 = load i32, i32* bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i32*), align 4
    %140 = getelementptr inbounds i8, i8* %135, i32 8
    %141 = bitcast i8* %140 to i32*
    store i32 %139, i32* %141, align 4
    store i8* %135, i8** bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i8**), align 4
    br label %new_die.exit5
  
  new_die.exit5:                                    ; preds = %134, %125, %119
    %142 = load i32, i32* @target_flags, align 4
    %143 = lshr i32 %142, 20
    %144 = and i32 %143, 32
    %145 = add nuw nsw i32 %144, 32
    %146 = lshr exact i32 %145, 3
    %147 = tail call noalias i8* @xmalloc(i32 signext 20) #4
    %148 = getelementptr inbounds i8, i8* %147, i32 4
    %149 = bitcast i8* %148 to %struct.dw_attr_struct.4316**
    store %struct.dw_attr_struct.4316* null, %struct.dw_attr_struct.4316** %149, align 4
    %150 = bitcast i8* %147 to i32*
    store i32 11, i32* %150, align 4
    %151 = getelementptr inbounds i8, i8* %147, i32 8
    %152 = bitcast i8* %151 to i32*
    store i32 6, i32* %152, align 4
    %153 = getelementptr inbounds i8, i8* %147, i32 12
    %154 = bitcast i8* %153 to i32*
    store i32 %146, i32* %154, align 4
    %155 = icmp ne i8* %116, null
    %156 = icmp ne i8* %147, null
    %or.cond.i.i = and i1 %155, %156
    br i1 %or.cond.i.i, label %157, label %add_AT_unsigned.exit
  
  ; <label>:157                                     ; preds = %new_die.exit5
    %158 = getelementptr inbounds i8, i8* %116, i32 8
    %159 = bitcast i8* %158 to i32*
    %160 = load i32, i32* %159, align 4
    %sunkaddr3 = ptrtoint i8* %147 to i32
    %sunkaddr4 = add i32 %sunkaddr3, 4
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to i32*
    store i32 %160, i32* %sunkaddr5, align 4
    %161 = bitcast i8* %158 to i8**
    store i8* %147, i8** %161, align 4
    br label %add_AT_unsigned.exit
  
  add_AT_unsigned.exit:                             ; preds = %157, %new_die.exit5
    %162 = bitcast i8* %116 to %struct.die_struct.4315*
    %163 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %type, i32 0, i32 0, i32 0, i32 1
    %164 = load %union.tree_node.4288*, %union.tree_node.4288** %163, align 4
    br label %380
  
  ; <label>:165                                     ; preds = %113
    %166 = load %struct.die_struct.4315*, %struct.die_struct.4315** @comp_unit_die, align 4
    %167 = tail call noalias i8* @xcalloc(i32 signext 1, i32 signext 36) #4
    %168 = bitcast i8* %167 to i32*
    store i32 16, i32* %168, align 4
    %169 = icmp eq %struct.die_struct.4315* %166, null
    br i1 %169, label %185, label %170
  
  ; <label>:170                                     ; preds = %165
    %171 = icmp eq i8* %167, null
    br i1 %171, label %new_die.exit6, label %172
  
  ; <label>:172                                     ; preds = %170
    %173 = bitcast i8* %167 to %struct.die_struct.4315*
    %174 = icmp eq %struct.die_struct.4315* %173, %166
    br i1 %174, label %175, label %176
  
  ; <label>:175                                     ; preds = %172
    tail call void @fancy_abort(i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), i32 signext 5026, i8* nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.add_child_die, i32 0, i32 0)) #5
    unreachable
  
  ; <label>:176                                     ; preds = %172
    %177 = getelementptr inbounds i8, i8* %167, i32 12
    %178 = bitcast i8* %177 to %struct.die_struct.4315**
    store %struct.die_struct.4315* %166, %struct.die_struct.4315** %178, align 4
    %179 = getelementptr inbounds %struct.die_struct.4315, %struct.die_struct.4315* %166, i32 0, i32 4
    %180 = bitcast %struct.die_struct.4315** %179 to i32*
    %181 = load i32, i32* %180, align 4
    %182 = getelementptr inbounds i8, i8* %167, i32 20
    %183 = bitcast i8* %182 to i32*
    store i32 %181, i32* %183, align 4
    %184 = bitcast %struct.die_struct.4315** %179 to i8**
    store i8* %167, i8** %184, align 4
    br label %new_die.exit6
  
  ; <label>:185                                     ; preds = %165
    %186 = tail call noalias i8* @xmalloc(i32 signext 12) #4
    %187 = bitcast i8* %186 to i8**
    store i8* %167, i8** %187, align 4
    %188 = getelementptr inbounds i8, i8* %186, i32 4
    %189 = bitcast i8* %188 to %union.tree_node.4288**
    store %union.tree_node.4288* %type, %union.tree_node.4288** %189, align 4
    %190 = load i32, i32* bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i32*), align 4
    %191 = getelementptr inbounds i8, i8* %186, i32 8
    %192 = bitcast i8* %191 to i32*
    store i32 %190, i32* %192, align 4
    store i8* %186, i8** bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i8**), align 4
    br label %new_die.exit6
  
  new_die.exit6:                                    ; preds = %185, %176, %170
    %193 = load i32, i32* @target_flags, align 4
    %194 = lshr i32 %193, 20
    %195 = and i32 %194, 32
    %196 = add nuw nsw i32 %195, 32
    %197 = lshr exact i32 %196, 3
    %198 = tail call noalias i8* @xmalloc(i32 signext 20) #4
    %199 = getelementptr inbounds i8, i8* %198, i32 4
    %200 = bitcast i8* %199 to %struct.dw_attr_struct.4316**
    store %struct.dw_attr_struct.4316* null, %struct.dw_attr_struct.4316** %200, align 4
    %201 = bitcast i8* %198 to i32*
    store i32 11, i32* %201, align 4
    %202 = getelementptr inbounds i8, i8* %198, i32 8
    %203 = bitcast i8* %202 to i32*
    store i32 6, i32* %203, align 4
    %204 = getelementptr inbounds i8, i8* %198, i32 12
    %205 = bitcast i8* %204 to i32*
    store i32 %197, i32* %205, align 4
    %206 = icmp ne i8* %167, null
    %207 = icmp ne i8* %198, null
    %or.cond.i.i7 = and i1 %206, %207
    br i1 %or.cond.i.i7, label %208, label %add_AT_unsigned.exit8
  
  ; <label>:208                                     ; preds = %new_die.exit6
    %209 = getelementptr inbounds i8, i8* %167, i32 8
    %210 = bitcast i8* %209 to i32*
    %211 = load i32, i32* %210, align 4
    %sunkaddr6 = ptrtoint i8* %198 to i32
    %sunkaddr7 = add i32 %sunkaddr6, 4
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to i32*
    store i32 %211, i32* %sunkaddr8, align 4
    %212 = bitcast i8* %209 to i8**
    store i8* %198, i8** %212, align 4
    br label %add_AT_unsigned.exit8
  
  add_AT_unsigned.exit8:                            ; preds = %208, %new_die.exit6
    %213 = bitcast i8* %167 to %struct.die_struct.4315*
    %214 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %type, i32 0, i32 0, i32 0, i32 1
    %215 = load %union.tree_node.4288*, %union.tree_node.4288** %214, align 4
    br label %380
  
  ; <label>:216                                     ; preds = %113
    %sunkaddr9 = ptrtoint %union.tree_node.4288* %type to i32
    %sunkaddr10 = add i32 %sunkaddr9, 8
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to i32*
    %217 = load i32, i32* %sunkaddr11, align 4
    %218 = lshr i32 %217, 24
    %219 = icmp ult i32 %217, 419430400
    br i1 %219, label %switch.hole_check.i, label %220
  
  ; <label>:220                                     ; preds = %switch.hole_check.i, %216
    tail call void @fancy_abort(i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), i32 signext 7461, i8* nonnull getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.is_base_type, i32 0, i32 0)) #5
    unreachable
  
  switch.hole_check.i:                              ; preds = %216
    %switch.shifted.i = lshr i32 33554401, %218
    %221 = and i32 %switch.shifted.i, 1
    %switch.lobit.i = icmp eq i32 %221, 0
    br i1 %switch.lobit.i, label %220, label %is_base_type.exit
  
  is_base_type.exit:                                ; preds = %switch.hole_check.i
    %222 = lshr i32 33547776, %218
    %223 = and i32 %222, 1
    %224 = icmp eq i32 %223, 0
    br i1 %224, label %225, label %366
  
  ; <label>:225                                     ; preds = %is_base_type.exit
    %226 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %type, i32 0, i32 0, i32 11
    %227 = load %union.tree_node.4288*, %union.tree_node.4288** %226, align 4
    switch i32 %218, label %228 [
      i32 0, label %380
      i32 5, label %380
    ]
  
  ; <label>:228                                     ; preds = %225
    %229 = icmp eq %union.tree_node.4288* %227, null
    br i1 %229, label %242, label %230
  
  ; <label>:230                                     ; preds = %228
    %231 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %227, i32 0, i32 0, i32 0, i32 2
    %232 = load i32, i32* %231, align 4
    %.mask17.i = and i32 %232, -16777216
    %233 = icmp eq i32 %.mask17.i, 553648128
    br i1 %233, label %234, label %237
  
  ; <label>:234                                     ; preds = %230
    %235 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %227, i32 0, i32 0, i32 9
    %236 = load %union.tree_node.4288*, %union.tree_node.4288** %235, align 4
    br label %237
  
  ; <label>:237                                     ; preds = %234, %230
    %name.0.i = phi %union.tree_node.4288* [ %236, %234 ], [ %227, %230 ]
    %238 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %name.0.i, i32 0, i32 0, i32 1
    %239 = getelementptr inbounds %union.tree_node.4288*, %union.tree_node.4288** %238, i32 1
    %240 = bitcast %union.tree_node.4288** %239 to i8**
    %241 = load i8*, i8** %240, align 4
    br label %242
  
  ; <label>:242                                     ; preds = %237, %228
    %type_name.0.i = phi i8* [ %241, %237 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.388, i32 0, i32 0), %228 ]
    switch i32 %218, label %272 [
      i32 6, label %243
      i32 12, label %260
      i32 7, label %273
      i32 8, label %264
      i32 11, label %271
    ]
  
  ; <label>:243                                     ; preds = %242
    %244 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %type, i32 0, i32 0, i32 6
    %245 = load i32, i32* %244, align 4
    %.mask16.i = and i32 %245, -8388608
    %246 = icmp eq i32 %.mask16.i, 67108864
    br i1 %246, label %247, label %256
  
  ; <label>:247                                     ; preds = %243
    %248 = load %union.tree_node.4288*, %union.tree_node.4288** getelementptr inbounds ([11 x %union.tree_node.4288*], [11 x %union.tree_node.4288*]* @integer_types, i32 0, i32 0), align 4
    %249 = icmp eq %union.tree_node.4288* %248, %type
    br i1 %249, label %260, label %250
  
  ; <label>:250                                     ; preds = %247
    %251 = tail call i32 @strcmp(i8* %type_name.0.i, i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.389, i32 0, i32 0)) #4
    %252 = icmp eq i32 %251, 0
    br i1 %252, label %260, label %253
  
  ; <label>:253                                     ; preds = %250
    %254 = tail call i32 @strcmp(i8* %type_name.0.i, i8* nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @.str.390, i32 0, i32 0)) #4
    %255 = icmp eq i32 %254, 0
    br i1 %255, label %260, label %256
  
  ; <label>:256                                     ; preds = %253, %243
    %257 = lshr i32 %217, 17
    %258 = and i32 %257, 2
    %259 = or i32 %258, 5
    br label %273
  
  ; <label>:260                                     ; preds = %253, %250, %247, %242
    %261 = lshr i32 %217, 17
    %262 = and i32 %261, 2
    %263 = add nuw nsw i32 %262, 6
    br label %273
  
  ; <label>:264                                     ; preds = %242
    %265 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %type, i32 0, i32 0, i32 0, i32 1
    %266 = bitcast %union.tree_node.4288** %265 to %struct.tree_common.4290**
    %267 = load %struct.tree_common.4290*, %struct.tree_common.4290** %266, align 4
    %268 = getelementptr inbounds %struct.tree_common.4290, %struct.tree_common.4290* %267, i32 0, i32 2
    %269 = load i32, i32* %268, align 4
    %.mask.i = and i32 %269, -16777216
    %270 = icmp eq i32 %.mask.i, 117440512
    %.19.i = select i1 %270, i32 3, i32 128
    br label %273
  
  ; <label>:271                                     ; preds = %242
    br label %273
  
  ; <label>:272                                     ; preds = %242
    tail call void @fancy_abort(i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), i32 signext 7381, i8* nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.base_type_die, i32 0, i32 0)) #5
    unreachable
  
  ; <label>:273                                     ; preds = %271, %264, %260, %256, %242
    %encoding.0.i = phi i32 [ 2, %271 ], [ %259, %256 ], [ %263, %260 ], [ 4, %242 ], [ %.19.i, %264 ]
    %274 = load %struct.die_struct.4315*, %struct.die_struct.4315** @comp_unit_die, align 4
    %275 = tail call noalias i8* @xcalloc(i32 signext 1, i32 signext 36) #4
    %276 = bitcast i8* %275 to i32*
    store i32 36, i32* %276, align 4
    %277 = icmp eq %struct.die_struct.4315* %274, null
    br i1 %277, label %293, label %278
  
  ; <label>:278                                     ; preds = %273
    %279 = icmp eq i8* %275, null
    br i1 %279, label %new_die.exit.i, label %280
  
  ; <label>:280                                     ; preds = %278
    %281 = bitcast i8* %275 to %struct.die_struct.4315*
    %282 = icmp eq %struct.die_struct.4315* %281, %274
    br i1 %282, label %283, label %284
  
  ; <label>:283                                     ; preds = %280
    tail call void @fancy_abort(i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), i32 signext 5026, i8* nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__.add_child_die, i32 0, i32 0)) #5
    unreachable
  
  ; <label>:284                                     ; preds = %280
    %285 = getelementptr inbounds i8, i8* %275, i32 12
    %286 = bitcast i8* %285 to %struct.die_struct.4315**
    store %struct.die_struct.4315* %274, %struct.die_struct.4315** %286, align 4
    %287 = getelementptr inbounds %struct.die_struct.4315, %struct.die_struct.4315* %274, i32 0, i32 4
    %288 = bitcast %struct.die_struct.4315** %287 to i32*
    %289 = load i32, i32* %288, align 4
    %290 = getelementptr inbounds i8, i8* %275, i32 20
    %291 = bitcast i8* %290 to i32*
    store i32 %289, i32* %291, align 4
    %292 = bitcast %struct.die_struct.4315** %287 to i8**
    store i8* %275, i8** %292, align 4
    br label %new_die.exit.i
  
  ; <label>:293                                     ; preds = %273
    %294 = tail call noalias i8* @xmalloc(i32 signext 12) #4
    %295 = bitcast i8* %294 to i8**
    store i8* %275, i8** %295, align 4
    %296 = getelementptr inbounds i8, i8* %294, i32 4
    %297 = bitcast i8* %296 to %union.tree_node.4288**
    store %union.tree_node.4288* %type, %union.tree_node.4288** %297, align 4
    %298 = load i32, i32* bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i32*), align 4
    %299 = getelementptr inbounds i8, i8* %294, i32 8
    %300 = bitcast i8* %299 to i32*
    store i32 %298, i32* %300, align 4
    store i8* %294, i8** bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i8**), align 4
    br label %new_die.exit.i
  
  new_die.exit.i:                                   ; preds = %293, %284, %278
    %301 = load i8* (i8*)*, i8* (i8*)** @demangle_name_func, align 4
    %302 = icmp eq i8* (i8*)* %301, null
    br i1 %302, label %305, label %303
  
  ; <label>:303                                     ; preds = %new_die.exit.i
    %304 = tail call i8* %301(i8* %type_name.0.i) #4
    br label %305
  
  ; <label>:305                                     ; preds = %303, %new_die.exit.i
    %type_name.1.i = phi i8* [ %304, %303 ], [ %type_name.0.i, %new_die.exit.i ]
    %306 = tail call noalias i8* @xmalloc(i32 signext 20) #4
    %307 = load %struct.ht.4320*, %struct.ht.4320** @debug_str_hash, align 4
    %308 = icmp eq %struct.ht.4320* %307, null
    br i1 %308, label %309, label %312
  
  ; <label>:309                                     ; preds = %305
    %310 = tail call %struct.ht.4320* @ht_create(i32 signext 10) #4
    store %struct.ht.4320* %310, %struct.ht.4320** @debug_str_hash, align 4
    %311 = getelementptr inbounds %struct.ht.4320, %struct.ht.4320* %310, i32 0, i32 2
    store %struct.ht_identifier.4322* (%struct.ht.4320*)* @indirect_string_alloc, %struct.ht_identifier.4322* (%struct.ht.4320*)** %311, align 4
    %.pre.i.i = load %struct.ht.4320*, %struct.ht.4320** @debug_str_hash, align 4
    br label %312
  
  ; <label>:312                                     ; preds = %309, %305
    %313 = phi %struct.ht.4320* [ %307, %305 ], [ %.pre.i.i, %309 ]
    %314 = tail call i32 @strlen(i8* %type_name.1.i) #6
    %315 = tail call %struct.ht_identifier.4322* @ht_lookup(%struct.ht.4320* %313, i8* %type_name.1.i, i32 signext %314, i32 signext 1) #4
    %316 = getelementptr inbounds %struct.ht_identifier.4322, %struct.ht_identifier.4322* %315, i32 1, i32 0
    %317 = load i32, i32* %316, align 4
    %318 = add i32 %317, 1
    store i32 %318, i32* %316, align 4
    %319 = getelementptr inbounds i8, i8* %306, i32 4
    %320 = bitcast i8* %319 to %struct.dw_attr_struct.4316**
    store %struct.dw_attr_struct.4316* null, %struct.dw_attr_struct.4316** %320, align 4
    %321 = bitcast i8* %306 to i32*
    store i32 3, i32* %321, align 4
    %322 = getelementptr inbounds i8, i8* %306, i32 8
    %323 = bitcast i8* %322 to i32*
    store i32 14, i32* %323, align 4
    %324 = getelementptr inbounds i8, i8* %306, i32 12
    %325 = bitcast i8* %324 to %struct.ht_identifier.4322**
    store %struct.ht_identifier.4322* %315, %struct.ht_identifier.4322** %325, align 4
    %326 = icmp ne i8* %275, null
    %327 = icmp ne i8* %306, null
    %or.cond.i.i.i = and i1 %326, %327
    br i1 %or.cond.i.i.i, label %328, label %add_AT_string.exit.i
  
  ; <label>:328                                     ; preds = %312
    %329 = getelementptr inbounds i8, i8* %275, i32 8
    %330 = bitcast i8* %329 to i32*
    %331 = load i32, i32* %330, align 4
    %sunkaddr12 = ptrtoint i8* %306 to i32
    %sunkaddr13 = add i32 %sunkaddr12, 4
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to i32*
    store i32 %331, i32* %sunkaddr14, align 4
    %332 = bitcast i8* %329 to i8**
    store i8* %306, i8** %332, align 4
    br label %add_AT_string.exit.i
  
  add_AT_string.exit.i:                             ; preds = %328, %312
    %333 = icmp ne i8* %275, null
    %334 = tail call i32 @int_size_in_bytes(%union.tree_node.4288* nonnull %type) #4
    %335 = tail call noalias i8* @xmalloc(i32 signext 20) #4
    %336 = getelementptr inbounds i8, i8* %335, i32 4
    %337 = bitcast i8* %336 to %struct.dw_attr_struct.4316**
    store %struct.dw_attr_struct.4316* null, %struct.dw_attr_struct.4316** %337, align 4
    %338 = bitcast i8* %335 to i32*
    store i32 11, i32* %338, align 4
    %339 = getelementptr inbounds i8, i8* %335, i32 8
    %340 = bitcast i8* %339 to i32*
    store i32 6, i32* %340, align 4
    %341 = getelementptr inbounds i8, i8* %335, i32 12
    %342 = bitcast i8* %341 to i32*
    store i32 %334, i32* %342, align 4
    %343 = icmp ne i8* %335, null
    %or.cond.i.i20.i = and i1 %333, %343
    br i1 %or.cond.i.i20.i, label %344, label %add_AT_unsigned.exit.i
  
  ; <label>:344                                     ; preds = %add_AT_string.exit.i
    %345 = getelementptr inbounds i8, i8* %275, i32 8
    %346 = bitcast i8* %345 to i32*
    %347 = load i32, i32* %346, align 4
    %sunkaddr15 = ptrtoint i8* %335 to i32
    %sunkaddr16 = add i32 %sunkaddr15, 4
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to i32*
    store i32 %347, i32* %sunkaddr17, align 4
    %348 = bitcast i8* %345 to i8**
    store i8* %335, i8** %348, align 4
    br label %add_AT_unsigned.exit.i
  
  add_AT_unsigned.exit.i:                           ; preds = %344, %add_AT_string.exit.i
    %349 = icmp ne i8* %275, null
    %350 = bitcast i8* %275 to %struct.die_struct.4315*
    %351 = tail call noalias i8* @xmalloc(i32 signext 20) #4
    %352 = getelementptr inbounds i8, i8* %351, i32 4
    %353 = bitcast i8* %352 to %struct.dw_attr_struct.4316**
    store %struct.dw_attr_struct.4316* null, %struct.dw_attr_struct.4316** %353, align 4
    %354 = bitcast i8* %351 to i32*
    store i32 62, i32* %354, align 4
    %355 = getelementptr inbounds i8, i8* %351, i32 8
    %356 = bitcast i8* %355 to i32*
    store i32 6, i32* %356, align 4
    %357 = getelementptr inbounds i8, i8* %351, i32 12
    %358 = bitcast i8* %357 to i32*
    store i32 %encoding.0.i, i32* %358, align 4
    %359 = icmp ne i8* %351, null
    %or.cond.i.i21.i = and i1 %349, %359
    br i1 %or.cond.i.i21.i, label %360, label %380
  
  ; <label>:360                                     ; preds = %add_AT_unsigned.exit.i
    %361 = bitcast i8* %275 to %struct.die_struct.4315*
    %362 = getelementptr inbounds i8, i8* %275, i32 8
    %363 = bitcast i8* %362 to i32*
    %364 = load i32, i32* %363, align 4
    %sunkaddr18 = ptrtoint i8* %351 to i32
    %sunkaddr19 = add i32 %sunkaddr18, 4
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to i32*
    store i32 %364, i32* %sunkaddr20, align 4
    %365 = bitcast i8* %362 to i8**
    store i8* %351, i8** %365, align 4
    br label %380
  
  ; <label>:366                                     ; preds = %is_base_type.exit
    tail call fastcc void @gen_type_die(%union.tree_node.4288* nonnull %type, %struct.die_struct.4315* %context_die)
    %367 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %type, i32 0, i32 0, i32 15
    %368 = load %union.tree_node.4288*, %union.tree_node.4288** %367, align 4
    %369 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %368, i32 0, i32 0, i32 0, i32 2
    %370 = load i32, i32* %369, align 4
    %.mask.i9 = and i32 %370, -16777216
    %371 = icmp eq i32 %.mask.i9, 301989888
    br i1 %371, label %.preheader.i, label %type_main_variant.exit
  
  .preheader.i:                                     ; preds = %366, %.preheader.i
    %.0.i10 = phi %union.tree_node.4288* [ %373, %.preheader.i ], [ %368, %366 ]
    %372 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %.0.i10, i32 0, i32 0, i32 15
    %373 = load %union.tree_node.4288*, %union.tree_node.4288** %372, align 4
    %374 = icmp eq %union.tree_node.4288* %.0.i10, %373
    br i1 %374, label %type_main_variant.exit, label %.preheader.i
  
  type_main_variant.exit:                           ; preds = %.preheader.i, %366
    %.1.i = phi %union.tree_node.4288* [ %368, %366 ], [ %.0.i10, %.preheader.i ]
    %375 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %.1.i, i32 0, i32 0, i32 10
    %376 = bitcast %union.anon.2.4291* %375 to %struct.die_struct.4315**
    %377 = load %struct.die_struct.4315*, %struct.die_struct.4315** %376, align 4
    %378 = icmp eq %struct.die_struct.4315* %377, null
    br i1 %378, label %379, label %380
  
  ; <label>:379                                     ; preds = %type_main_variant.exit
    tail call void @fancy_abort(i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), i32 signext 7573, i8* nonnull getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.modified_type_die, i32 0, i32 0)) #5
    unreachable
  
  ; <label>:380                                     ; preds = %type_main_variant.exit, %360, %add_AT_unsigned.exit.i, %225, %225, %add_AT_unsigned.exit8, %add_AT_unsigned.exit, %new_die.exit4, %new_die.exit
    %sub_die.1.ph = phi %struct.die_struct.4315* [ null, %360 ], [ null, %add_AT_unsigned.exit.i ], [ null, %225 ], [ null, %225 ], [ null, %type_main_variant.exit ], [ null, %add_AT_unsigned.exit8 ], [ null, %add_AT_unsigned.exit ], [ %112, %new_die.exit4 ], [ %80, %new_die.exit ]
    %item_type.1.ph = phi %union.tree_node.4288* [ null, %360 ], [ null, %add_AT_unsigned.exit.i ], [ null, %225 ], [ null, %225 ], [ null, %type_main_variant.exit ], [ %215, %add_AT_unsigned.exit8 ], [ %164, %add_AT_unsigned.exit ], [ null, %new_die.exit4 ], [ null, %new_die.exit ]
    %mod_type_die.4.ph = phi %struct.die_struct.4315* [ %361, %360 ], [ %350, %add_AT_unsigned.exit.i ], [ null, %225 ], [ null, %225 ], [ %377, %type_main_variant.exit ], [ %213, %add_AT_unsigned.exit8 ], [ %162, %add_AT_unsigned.exit ], [ %111, %new_die.exit4 ], [ %79, %new_die.exit ]
    %381 = icmp eq %union.tree_node.4288* %11, null
    br i1 %381, label %384, label %.thread13
  
  .thread13:                                        ; preds = %380, %48, %0
    %.1220 = phi %union.tree_node.4288* [ %11, %380 ], [ %type, %0 ], [ %11, %48 ]
    %mod_type_die.518 = phi %struct.die_struct.4315* [ %mod_type_die.4.ph, %380 ], [ null, %0 ], [ %mod_type_die.2, %48 ]
    %item_type.216 = phi %union.tree_node.4288* [ %item_type.1.ph, %380 ], [ null, %0 ], [ null, %48 ]
    %sub_die.214 = phi %struct.die_struct.4315* [ %sub_die.1.ph, %380 ], [ null, %0 ], [ null, %48 ]
    %382 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %.1220, i32 0, i32 0, i32 10
    %383 = bitcast %union.anon.2.4291* %382 to %struct.die_struct.4315**
    store %struct.die_struct.4315* %mod_type_die.518, %struct.die_struct.4315** %383, align 4
    br label %384
  
  ; <label>:384                                     ; preds = %.thread13, %380
    %mod_type_die.519 = phi %struct.die_struct.4315* [ %mod_type_die.4.ph, %380 ], [ %mod_type_die.518, %.thread13 ]
    %item_type.217 = phi %union.tree_node.4288* [ %item_type.1.ph, %380 ], [ %item_type.216, %.thread13 ]
    %sub_die.215 = phi %struct.die_struct.4315* [ %sub_die.1.ph, %380 ], [ %sub_die.214, %.thread13 ]
    %385 = icmp eq %union.tree_node.4288* %item_type.217, null
    br i1 %385, label %394, label %386
  
  ; <label>:386                                     ; preds = %384
    %387 = getelementptr inbounds %union.tree_node.4288, %union.tree_node.4288* %item_type.217, i32 0, i32 0, i32 0, i32 2
    %388 = load i32, i32* %387, align 4
    %389 = lshr i32 %388, 19
    %390 = and i32 %389, 1
    %391 = lshr i32 %388, 20
    %392 = and i32 %391, 1
    %393 = tail call fastcc %struct.die_struct.4315* @modified_type_die(%union.tree_node.4288* nonnull %item_type.217, i32 signext %390, i32 signext %392, %struct.die_struct.4315* %context_die)
    br label %394
  
  ; <label>:394                                     ; preds = %386, %384
    %sub_die.3 = phi %struct.die_struct.4315* [ %393, %386 ], [ %sub_die.215, %384 ]
    %395 = icmp eq %struct.die_struct.4315* %sub_die.3, null
    br i1 %395, label %base_type_die.exit, label %396
  
  ; <label>:396                                     ; preds = %394
    %397 = tail call noalias i8* @xmalloc(i32 signext 20) #4
    %398 = getelementptr inbounds i8, i8* %397, i32 4
    %399 = bitcast i8* %398 to %struct.dw_attr_struct.4316**
    store %struct.dw_attr_struct.4316* null, %struct.dw_attr_struct.4316** %399, align 4
    %400 = bitcast i8* %397 to i32*
    store i32 73, i32* %400, align 4
    %401 = getelementptr inbounds i8, i8* %397, i32 8
    %402 = bitcast i8* %401 to i32*
    store i32 10, i32* %402, align 4
    %403 = getelementptr inbounds i8, i8* %397, i32 12
    %404 = bitcast i8* %403 to %struct.die_struct.4315**
    store %struct.die_struct.4315* %sub_die.3, %struct.die_struct.4315** %404, align 4
    %405 = getelementptr inbounds i8, i8* %397, i32 16
    %406 = bitcast i8* %405 to i32*
    store i32 0, i32* %406, align 4
    %407 = icmp ne %struct.die_struct.4315* %mod_type_die.519, null
    %408 = icmp ne i8* %397, null
    %or.cond.i.i11 = and i1 %407, %408
    br i1 %or.cond.i.i11, label %409, label %base_type_die.exit
  
  ; <label>:409                                     ; preds = %396
    %410 = getelementptr inbounds %struct.die_struct.4315, %struct.die_struct.4315* %mod_type_die.519, i32 0, i32 2
    %411 = bitcast %struct.dw_attr_struct.4316** %410 to i32*
    %412 = load i32, i32* %411, align 4
    %sunkaddr21 = ptrtoint i8* %397 to i32
    %sunkaddr22 = add i32 %sunkaddr21, 4
    %sunkaddr23 = inttoptr i32 %sunkaddr22 to i32*
    store i32 %412, i32* %sunkaddr23, align 4
    %413 = bitcast %struct.dw_attr_struct.4316** %410 to i8**
    store i8* %397, i8** %413, align 4
    br label %base_type_die.exit
  
  base_type_die.exit:                               ; preds = %409, %396, %394, %13
    %.1 = phi %struct.die_struct.4315* [ %mod_type_die.519, %394 ], [ %16, %13 ], [ %mod_type_die.519, %396 ], [ %mod_type_die.519, %409 ]
    ret %struct.die_struct.4315* %.1
  }
  
  declare noalias i8* @xmalloc(i32 signext) #1
  
  ; Function Attrs: nounwind readonly
  declare i32 @strcmp(i8* nocapture, i8* nocapture) #3
  
  ; Function Attrs: nounwind readonly
  declare i32 @strlen(i8* nocapture) #3
  
  ; Function Attrs: nounwind
  declare hidden fastcc void @gen_type_die(%union.tree_node.4288* readonly, %struct.die_struct.4315*) unnamed_addr #2
  
  declare %struct.ht.4320* @ht_create(i32 signext) #1
  
  ; Function Attrs: nounwind
  declare hidden noalias %struct.ht_identifier.4322* @indirect_string_alloc(%struct.ht.4320* nocapture readnone) #2
  
  declare %struct.ht_identifier.4322* @ht_lookup(%struct.ht.4320*, i8*, i32 signext, i32 signext) #1
  
  declare i32 @int_size_in_bytes(%union.tree_node.4288*) #1
  
  declare %union.tree_node.4288* @get_qualified_type(%union.tree_node.4288*, i32 signext) #1
  
  attributes #0 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #3 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #4 = { nounwind }
  attributes #5 = { noreturn nounwind }
  attributes #6 = { nounwind readonly }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            modified_type_die
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           false
tracksRegLiveness: false
tracksSubRegLiveness: false
liveins:         
  - { reg: '%a0' }
  - { reg: '%a1' }
  - { reg: '%a2' }
  - { reg: '%a3' }
  - { reg: '%t9' }
  - { reg: '%v0' }
calleeSavedRegisters: [ '%fp', '%ra', '%d10', '%d11', '%d12', '%d13', '%d14', 
                        '%d15', '%f20', '%f21', '%f22', '%f23', '%f24', 
                        '%f25', '%f26', '%f27', '%f28', '%f29', '%f30', 
                        '%f31', '%s0', '%s1', '%s2', '%s3', '%s4', '%s5', 
                        '%s6', '%s7' ]
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       64
  offsetAdjustment: 0
  maxAlignment:    4
  adjustsStack:    true
  hasCalls:        true
  maxCallFrameSize: 16
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
stack:           
  - { id: 0, type: spill-slot, offset: -44, size: 4, alignment: 4 }
  - { id: 1, type: spill-slot, offset: -4, size: 4, alignment: 4, callee-saved-register: '%ra' }
  - { id: 2, type: spill-slot, offset: -8, size: 4, alignment: 4, callee-saved-register: '%fp' }
  - { id: 3, type: spill-slot, offset: -12, size: 4, alignment: 4, callee-saved-register: '%s7' }
  - { id: 4, type: spill-slot, offset: -16, size: 4, alignment: 4, callee-saved-register: '%s6' }
  - { id: 5, type: spill-slot, offset: -20, size: 4, alignment: 4, callee-saved-register: '%s5' }
  - { id: 6, type: spill-slot, offset: -24, size: 4, alignment: 4, callee-saved-register: '%s4' }
  - { id: 7, type: spill-slot, offset: -28, size: 4, alignment: 4, callee-saved-register: '%s3' }
  - { id: 8, type: spill-slot, offset: -32, size: 4, alignment: 4, callee-saved-register: '%s2' }
  - { id: 9, type: spill-slot, offset: -36, size: 4, alignment: 4, callee-saved-register: '%s1' }
  - { id: 10, type: spill-slot, offset: -40, size: 4, alignment: 4, callee-saved-register: '%s0' }
jumpTable:       
  kind:            gp-rel32-block-address
  entries:         
    - id:              0
      blocks:          [ '%bb.67', '%bb.75', '%bb.73', '%bb.109', '%bb.109', 
                         '%bb.74', '%bb.72' ]
body:             |
  bb.0 (%ir-block.0, freq 7515029365):
    successors: %bb.10(37), %bb.1(62)
    liveins: %a0, %a1, %a2, %a3, %t9, %ra, %fp, %s7, %s6, %s5, %s4, %s3, %s2, %s1, %s0
  
    %v0 = LUi target-flags(<unknown>) $_gp_disp
    %v0 = ADDiu %v0, target-flags(<unknown>) $_gp_disp
    %sp = ADDiu %sp, -64
    CFI_INSTRUCTION .cfi_def_cfa_offset 64
    SW killed %ra, %sp, 60 :: (store 4 into stack)
    SW killed %fp, %sp, 56 :: (store 4 into stack)
    SW killed %s7, %sp, 52 :: (store 4 into stack)
    SW killed %s6, %sp, 48 :: (store 4 into stack)
    SW killed %s5, %sp, 44 :: (store 4 into stack)
    SW killed %s4, %sp, 40 :: (store 4 into stack)
    SW killed %s3, %sp, 36 :: (store 4 into stack)
    SW killed %s2, %sp, 32 :: (store 4 into stack)
    SW killed %s1, %sp, 28 :: (store 4 into stack)
    SW killed %s0, %sp, 24 :: (store 4 into stack)
    CFI_INSTRUCTION .cfi_offset %ra_64, -4
    CFI_INSTRUCTION .cfi_offset %fp_64, -8
    CFI_INSTRUCTION .cfi_offset %s7_64, -12
    CFI_INSTRUCTION .cfi_offset %s6_64, -16
    CFI_INSTRUCTION .cfi_offset %s5_64, -20
    CFI_INSTRUCTION .cfi_offset %s4_64, -24
    CFI_INSTRUCTION .cfi_offset %s3_64, -28
    CFI_INSTRUCTION .cfi_offset %s2_64, -32
    CFI_INSTRUCTION .cfi_offset %s1_64, -36
    CFI_INSTRUCTION .cfi_offset %s0_64, -40
    %s0 = ADDu %v0, %t9
    %s1 = OR %a3, %zero
    %s5 = OR %a2, %zero
    %s7 = OR %a1, %zero
    %s3 = OR %a0, %zero
    %at = LW %s3, 8 :: (load 4 from %ir.1)
    %fp = SRL killed %at, 24
    BEQ %fp, %zero, %bb.10, implicit-def %at {
      %s4 = ADDiu %zero, 0
    }
  
  bb.1 (%ir-block.5, freq 4696893353):
    successors: %bb.14..thread(37), %bb.2(62)
    liveins: %fp, %s0, %s1, %s3, %s5, %s7
  
    %at = SLTu %zero, %s5
    %at = SLL killed %at, 1
    %v0 = SLTu %zero, %s7
    %a1 = OR killed %at, killed %v0
    %t9 = LW %s0, target-flags(<unknown>) @get_qualified_type :: (load 4 from call-entry @get_qualified_type)
    %a0 = OR %s3, %zero
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    %s2 = OR %v0, %zero
    BEQ %s2, %zero, %bb.14..thread, implicit-def %at {
      NOP
    }
  
  bb.2 (%ir-block.13, freq 2935558345):
    successors: %bb.3(37), %bb.103.base_type_die.exit(62)
    liveins: %fp, %s0, %s1, %s2, %s3, %s5, %s7
  
    %s4 = LW %s2, 48 :: (load 4 from %ir.15)
    BNE %s4, %zero, %bb.103.base_type_die.exit, implicit-def %at {
      NOP
    }
  
  bb.3 (%ir-block.18, freq 1100834379):
    successors: %bb.14..thread(37), %bb.4(62)
    liveins: %fp, %s0, %s1, %s2, %s3, %s5, %s7
  
    %v0 = LW %s2, 52 :: (load 4 from %ir.19)
    BEQ %v0, %zero, %bb.14..thread, implicit-def %at {
      NOP
    }
  
  bb.4 (%ir-block.22, freq 688021487):
    successors: %bb.5(50), %bb.14..thread(50)
    liveins: %fp, %s0, %s1, %s2, %s3, %s5, %s7, %v0
  
    %at = LW %v0, 8 :: (load 4 from %ir.23)
    %v1 = LUi 65280
    %at = AND killed %at, killed %v1
    %v1 = LUi 8448
    BNE %at, %v1, %bb.14..thread, implicit-def %at {
      NOP
    }
  
  bb.5 (%ir-block.26, freq 344010743):
    successors: %bb.14..thread(37), %bb.6(62)
    liveins: %fp, %s0, %s1, %s2, %s3, %s5, %s7, %v0
  
    %a0 = LW %v0, 56 :: (load 4 from %ir.27)
    BEQ %a0, %zero, %bb.14..thread, implicit-def %at {
      NOP
    }
  
  bb.6 (%ir-block.30, freq 215006714):
    successors: %bb.11(37), %bb.7(62)
    liveins: %fp, %a0, %s0, %s1, %s2, %s3, %s5, %s7, %v0
  
    %v0 = LW killed %v0, 4 :: (load 4 from %ir.31)
    BEQ %s2, %v0, %bb.11, implicit-def %at {
      NOP
    }
  
  bb.7 (%ir-block.36, freq 134379196):
    successors: %bb.9(50), %bb.8(50)
    liveins: %fp, %a0, %s0, %s1, %s2, %s3, %s5, %s7, %v0
  
    %v0 = LW killed %v0, 8 :: (load 4 from %ir.37)
    %at = EXT %v0, 19, 1
    %at = SLT %s7, killed %at
    BNE %at, %zero, %bb.9, implicit-def %at {
      NOP
    }
  
  bb.8 (%ir-block.42, freq 67189598):
    successors: %bb.9(50), %bb.14..thread(50)
    liveins: %fp, %a0, %s0, %s1, %s2, %s3, %s5, %s7, %v0
  
    %at = EXT killed %v0, 20, 1
    %at = SLT %s5, killed %at
    BEQ %at, %zero, %bb.14..thread, implicit-def %at {
      NOP
    }
  
  bb.9 (%ir-block.46, freq 100784397):
    successors: %bb.12(100)
    liveins: %fp, %a0, %s0, %s1, %s2, %s3, %s5, %s7
  
    %t9 = LW %s0, target-flags(<unknown>) @modified_type_die :: (load 4 from call-entry @modified_type_die)
    %a1 = OR %s7, %zero
    %a2 = OR %s5, %zero
    %a3 = OR %s1, %zero
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    B %bb.12, implicit-def %at {
      %s4 = OR %v0, %zero
    }
  
  bb.10 (freq 2818136012):
    successors: %bb.96..thread13(100)
    liveins: %s0, %s1, %s3, %s4
  
    %s2 = OR killed %s3, %zero
    %s6 = ADDiu %zero, 0
    B %bb.96..thread13, implicit-def %at {
      %s5 = ADDiu %zero, 0
    }
  
  bb.11 (%ir-block.34, freq 80627518):
    successors: %bb.12(100)
    liveins: %fp, %s0, %s1, %s2, %s3, %s5, %s7
  
    %t9 = LW %s0, target-flags(<unknown>) @gen_type_die :: (load 4 from call-entry @gen_type_die)
    %a0 = OR %s2, %zero
    %a1 = OR %s1, %zero
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp {
      %gp = OR %s0, %zero
    }
    %s4 = LW %s2, 48 :: (load 4 from %ir.sunkaddr2)
  
  bb.12 (%ir-block.48, freq 181411915):
    successors: %bb.14..thread(37), %bb.13(62)
    liveins: %fp, %s0, %s1, %s2, %s3, %s4, %s5, %s7
  
    BEQ %s4, %zero, %bb.14..thread, implicit-def %at {
      %s6 = ADDiu %zero, 0
    }
  
  bb.13 (freq 113382447):
    successors: %bb.96..thread13(100)
    liveins: %s0, %s1, %s2, %s4, %s6
  
    B %bb.96..thread13, implicit-def %at {
      %s5 = ADDiu %zero, 0
    }
  
  bb.14..thread (freq 2748786940):
    successors: %bb.15(62), %bb.19(37)
    liveins: %fp, %s0, %s1, %s2, %s3, %s5, %s7
  
    BEQ %s7, %zero, %bb.19, implicit-def %at {
      NOP
    }
  
  bb.15 (%ir-block.51, freq 1717991837):
    successors: %bb.24(37), %bb.16(62)
    liveins: %s0, %s1, %s2, %s3, %s5
  
    %at = LW %s0, target-flags(<unknown>) @comp_unit_die :: (load 4 from got)
    %s6 = LW killed %at, 0 :: (load 4 from @comp_unit_die)
    %t9 = LW %s0, target-flags(<unknown>) @xcalloc :: (load 4 from call-entry @xcalloc)
    %a0 = ADDiu %zero, 1
    %a1 = ADDiu %zero, 36
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    %s4 = OR %v0, %zero
    %at = ADDiu %zero, 38
    BEQ %s6, %zero, %bb.24, implicit-def %at {
      SW killed %at, %s4, 0 :: (store 4 into %ir.54)
    }
  
  bb.16 (%ir-block.56, freq 1073744898):
    successors: %bb.25.new_die.exit(37), %bb.17(62)
    liveins: %s0, %s1, %s2, %s3, %s4, %s5, %s6
  
    BEQ %s4, %zero, %bb.25.new_die.exit, implicit-def %at {
      NOP
    }
  
  bb.17 (%ir-block.58, freq 671090561):
    successors: %bb.104(0), %bb.18(99)
    liveins: %s0, %s1, %s2, %s3, %s4, %s5, %s6
  
    BEQ %s4, %s6, %bb.104, implicit-def %at {
      NOP
    }
  
  bb.18 (%ir-block.62, freq 671089921):
    successors: %bb.25.new_die.exit(100)
    liveins: %s0, %s1, %s2, %s3, %s4, %s5, %s6
  
    SW %s6, %s4, 12 :: (store 4 into %ir.64)
    %at = LW %s6, 16 :: (load 4 from %ir.66)
    SW killed %at, %s4, 20 :: (store 4 into %ir.69)
    B %bb.25.new_die.exit, implicit-def dead %at {
      SW %s4, killed %s6, 16 :: (store 4 into %ir.70)
    }
  
  bb.19 (%ir-block.81, freq 1030795102):
    successors: %bb.20(62), %bb.26(37)
    liveins: %fp, %s0, %s1, %s2, %s3, %s5
  
    BEQ %s5, %zero, %bb.26, implicit-def %at {
      NOP
    }
  
  bb.20 (%ir-block.83, freq 644246939):
    successors: %bb.32(37), %bb.21(62)
    liveins: %s0, %s1, %s2, %s3
  
    %at = LW %s0, target-flags(<unknown>) @comp_unit_die :: (load 4 from got)
    %s5 = LW killed %at, 0 :: (load 4 from @comp_unit_die)
    %t9 = LW %s0, target-flags(<unknown>) @xcalloc :: (load 4 from call-entry @xcalloc)
    %a0 = ADDiu %zero, 1
    %a1 = ADDiu %zero, 36
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    %s4 = OR %v0, %zero
    %at = ADDiu %zero, 53
    BEQ %s5, %zero, %bb.32, implicit-def %at {
      SW killed %at, %s4, 0 :: (store 4 into %ir.86)
    }
  
  bb.21 (%ir-block.88, freq 402654336):
    successors: %bb.33.new_die.exit4(37), %bb.22(62)
    liveins: %s0, %s1, %s2, %s3, %s4, %s5
  
    BEQ %s4, %zero, %bb.33.new_die.exit4, implicit-def %at {
      NOP
    }
  
  bb.22 (%ir-block.90, freq 251658960):
    successors: %bb.106(0), %bb.23(99)
    liveins: %s0, %s1, %s2, %s3, %s4, %s5
  
    BEQ %s4, %s5, %bb.106, implicit-def %at {
      NOP
    }
  
  bb.23 (%ir-block.94, freq 251658720):
    successors: %bb.33.new_die.exit4(100)
    liveins: %s0, %s1, %s2, %s3, %s4, %s5
  
    SW %s5, %s4, 12 :: (store 4 into %ir.96)
    %at = LW %s5, 16 :: (load 4 from %ir.98)
    SW killed %at, %s4, 20 :: (store 4 into %ir.101)
    B %bb.33.new_die.exit4, implicit-def dead %at {
      SW %s4, killed %s5, 16 :: (store 4 into %ir.102)
    }
  
  bb.24 (%ir-block.71, freq 644246939):
    successors: %bb.25.new_die.exit(100)
    liveins: %s0, %s1, %s2, %s3, %s4, %s5
  
    %t9 = LW %s0, target-flags(<unknown>) @xmalloc :: (load 4 from call-entry @xmalloc)
    %a0 = ADDiu %zero, 12
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    SW %s4, %v0, 0 :: (store 4 into %ir.73)
    SW %s3, %v0, 4 :: (store 4 into %ir.75)
    %at = LW %s0, target-flags(<unknown>) @limbo_die_list :: (load 4 from got)
    %v1 = LW %at, 0 :: (load 4 from `i32* bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i32*)`)
    SW killed %v1, %v0, 8 :: (store 4 into %ir.78)
    SW killed %v0, killed %at, 0 :: (store 4 into `i8** bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i8**)`)
  
  bb.25.new_die.exit (freq 1717991197):
    successors: %bb.95(100)
    liveins: %s0, %s1, %s2, %s3, %s4, %s5
  
    %t9 = LW %s0, target-flags(<unknown>) @modified_type_die :: (load 4 from call-entry @modified_type_die)
    %s6 = ADDiu %zero, 0
    %a0 = OR killed %s3, %zero
    %a1 = ADDiu %zero, 0
    %a2 = OR killed %s5, %zero
    %a3 = OR %s1, %zero
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    B %bb.95, implicit-def dead %at {
      %s5 = OR %v0, %zero
    }
  
  bb.26 (%ir-block.113, freq 386548163):
    successors: %bb.34(33), %bb.27(66)
    liveins: %fp, %s0, %s1, %s2, %s3
  
    %at = ADDiu %zero, 15
    BEQ %fp, %at, %bb.34, implicit-def %at {
      NOP
    }
  
  bb.27 (%ir-block.113, freq 257698775):
    successors: %bb.28(50), %bb.38(49)
    liveins: %fp, %s0, %s1, %s2, %s3
  
    %at = ADDiu %zero, 13
    BNE %fp, %at, %bb.38, implicit-def %at {
      NOP
    }
  
  bb.28 (%ir-block.114, freq 128849387):
    successors: %bb.50(37), %bb.29(62)
    liveins: %s0, %s1, %s2, %s3
  
    %at = LW %s0, target-flags(<unknown>) @comp_unit_die :: (load 4 from got)
    %s5 = LW killed %at, 0 :: (load 4 from @comp_unit_die)
    %t9 = LW %s0, target-flags(<unknown>) @xcalloc :: (load 4 from call-entry @xcalloc)
    %a0 = ADDiu %zero, 1
    %a1 = ADDiu %zero, 36
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    %s4 = OR %v0, %zero
    %at = ADDiu %zero, 15
    BEQ %s5, %zero, %bb.50, implicit-def %at {
      SW killed %at, %s4, 0 :: (store 4 into %ir.117)
    }
  
  bb.29 (%ir-block.119, freq 80530867):
    successors: %bb.51.new_die.exit5(37), %bb.30(62)
    liveins: %s0, %s1, %s2, %s3, %s4, %s5
  
    BEQ %s4, %zero, %bb.51.new_die.exit5, implicit-def %at {
      NOP
    }
  
  bb.30 (%ir-block.121, freq 50331792):
    successors: %bb.107(0), %bb.31(99)
    liveins: %s0, %s1, %s2, %s3, %s4, %s5
  
    BEQ %s4, %s5, %bb.107, implicit-def %at {
      NOP
    }
  
  bb.31 (%ir-block.125, freq 50331744):
    successors: %bb.51.new_die.exit5(100)
    liveins: %s0, %s1, %s2, %s3, %s4, %s5
  
    SW %s5, %s4, 12 :: (store 4 into %ir.127)
    %at = LW %s5, 16 :: (load 4 from %ir.129)
    SW killed %at, %s4, 20 :: (store 4 into %ir.132)
    B %bb.51.new_die.exit5, implicit-def dead %at {
      SW %s4, killed %s5, 16 :: (store 4 into %ir.133)
    }
  
  bb.32 (%ir-block.103, freq 241592602):
    successors: %bb.33.new_die.exit4(100)
    liveins: %s0, %s1, %s2, %s3, %s4
  
    %t9 = LW %s0, target-flags(<unknown>) @xmalloc :: (load 4 from call-entry @xmalloc)
    %a0 = ADDiu %zero, 12
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    SW %s4, %v0, 0 :: (store 4 into %ir.105)
    SW %s3, %v0, 4 :: (store 4 into %ir.107)
    %at = LW %s0, target-flags(<unknown>) @limbo_die_list :: (load 4 from got)
    %v1 = LW %at, 0 :: (load 4 from `i32* bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i32*)`)
    SW killed %v1, %v0, 8 :: (store 4 into %ir.110)
    SW killed %v0, killed %at, 0 :: (store 4 into `i8** bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i8**)`)
  
  bb.33.new_die.exit4 (freq 644246699):
    successors: %bb.95(100)
    liveins: %s0, %s1, %s2, %s3, %s4
  
    %t9 = LW %s0, target-flags(<unknown>) @modified_type_die :: (load 4 from call-entry @modified_type_die)
    %s6 = ADDiu %zero, 0
    %a0 = OR killed %s3, %zero
    %a1 = ADDiu %zero, 0
    %a2 = ADDiu %zero, 0
    %a3 = OR %s1, %zero
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    B %bb.95, implicit-def dead %at {
      %s5 = OR %v0, %zero
    }
  
  bb.34 (%ir-block.165, freq 128849387):
    successors: %bb.55(37), %bb.35(62)
    liveins: %s0, %s1, %s2, %s3
  
    %at = LW %s0, target-flags(<unknown>) @comp_unit_die :: (load 4 from got)
    %s5 = LW killed %at, 0 :: (load 4 from @comp_unit_die)
    %t9 = LW %s0, target-flags(<unknown>) @xcalloc :: (load 4 from call-entry @xcalloc)
    %a0 = ADDiu %zero, 1
    %a1 = ADDiu %zero, 36
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    %s4 = OR %v0, %zero
    %at = ADDiu %zero, 16
    BEQ %s5, %zero, %bb.55, implicit-def %at {
      SW killed %at, %s4, 0 :: (store 4 into %ir.168)
    }
  
  bb.35 (%ir-block.170, freq 80530867):
    successors: %bb.56.new_die.exit6(37), %bb.36(62)
    liveins: %s0, %s1, %s2, %s3, %s4, %s5
  
    BEQ %s4, %zero, %bb.56.new_die.exit6, implicit-def %at {
      NOP
    }
  
  bb.36 (%ir-block.172, freq 50331792):
    successors: %bb.108(0), %bb.37(99)
    liveins: %s0, %s1, %s2, %s3, %s4, %s5
  
    BEQ %s4, %s5, %bb.108, implicit-def %at {
      NOP
    }
  
  bb.37 (%ir-block.176, freq 50331744):
    successors: %bb.56.new_die.exit6(100)
    liveins: %s0, %s1, %s2, %s3, %s4, %s5
  
    SW %s5, %s4, 12 :: (store 4 into %ir.178)
    %at = LW %s5, 16 :: (load 4 from %ir.180)
    SW killed %at, %s4, 20 :: (store 4 into %ir.183)
    B %bb.56.new_die.exit6, implicit-def dead %at {
      SW %s4, killed %s5, 16 :: (store 4 into %ir.184)
    }
  
  bb.38 (%ir-block.216, freq 128849387):
    successors: %bb.39.switch.hole_check.i(99), %bb.105(0)
    liveins: %s0, %s1, %s2, %s3
  
    %s7 = LW %s3, 8 :: (load 4 from %ir.sunkaddr11)
    %at = LUi 6400
    %at = SLTu %s7, killed %at
    BEQ %at, %zero, %bb.105, implicit-def %at {
      NOP
    }
  
  bb.39.switch.hole_check.i (freq 128849264):
    successors: %bb.105(0), %bb.40.is_base_type.exit(99)
    liveins: %s0, %s1, %s2, %s3, %s7
  
    %v0 = SRL %s7, 24
    %v1 = LUi 511
    %at = ORi %v1, 65505
    %at = SRLV killed %at, %v0
    %at = ANDi killed %at, 1
    BEQ %at, %zero, %bb.105, implicit-def %at {
      NOP
    }
  
  bb.40.is_base_type.exit (freq 128849141):
    successors: %bb.41(50), %bb.47(50)
    liveins: %s0, %s1, %s2, %s3, %s7, %v0, %v1
  
    %at = ORi killed %v1, 58880
    %at = SRLV killed %at, %v0
    %at = ANDi killed %at, 1
    BNE %at, %zero, %bb.47, implicit-def %at {
      NOP
    }
  
  bb.41 (%ir-block.225, freq 64424570):
    successors: %bb.63(33), %bb.42(66)
    liveins: %s0, %s1, %s2, %s3, %s7, %v0
  
    BEQ %v0, %zero, %bb.63, implicit-def %at {
      %s5 = ADDiu %zero, 0
    }
  
  bb.42 (%ir-block.225, freq 42949713):
    successors: %bb.95(50), %bb.43(49)
    liveins: %s0, %s1, %s2, %s3, %s5, %s7, %v0
  
    %at = ADDiu %zero, 5
    %s6 = ADDiu %zero, 0
    BEQ %v0, %at, %bb.95, implicit-def %at {
      %s4 = ADDiu %zero, 0
    }
  
  bb.43 (%ir-block.228, freq 21474856):
    successors: %bb.64(37), %bb.44(62)
    liveins: %s0, %s1, %s2, %s3, %s7, %v0
  
    %v1 = LW %s3, 52 :: (load 4 from %ir.226)
    BEQ %v1, %zero, %bb.64, implicit-def %at {
      NOP
    }
  
  bb.44 (%ir-block.230, freq 13421785):
    successors: %bb.45(50), %bb.46(50)
    liveins: %s0, %s1, %s2, %s3, %s7, %v0, %v1
  
    %at = LW %v1, 8 :: (load 4 from %ir.231)
    %a0 = LUi 65280
    %at = AND killed %at, killed %a0
    %a0 = LUi 8448
    BNE %at, %a0, %bb.46, implicit-def %at {
      NOP
    }
  
  bb.45 (%ir-block.234, freq 6710892):
    successors: %bb.46(100)
    liveins: %s0, %s1, %s2, %s3, %s7, %v0, %v1
  
    %v1 = LW killed %v1, 44 :: (load 4 from %ir.235)
  
  bb.46 (%ir-block.237, freq 13421785):
    successors: %bb.65(100)
    liveins: %s0, %s1, %s2, %s3, %s7, %v0, %v1
  
    %s5 = LW killed %v1, 16 :: (load 4 from %ir.240)
    B %bb.65, implicit-def %at {
      NOP
    }
  
  bb.47 (%ir-block.366, freq 64424570):
    successors: %bb.48..preheader.i(50), %bb.60(50)
    liveins: %s0, %s1, %s2, %s3
  
    %t9 = LW %s0, target-flags(<unknown>) @gen_type_die :: (load 4 from call-entry @gen_type_die)
    %a0 = OR %s3, %zero
    %a1 = OR %s1, %zero
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp {
      %gp = OR %s0, %zero
    }
    %v0 = LW killed %s3, 68 :: (load 4 from %ir.367)
    %at = LUi 4608
    %v1 = LUi 65280
    %a0 = LW %v0, 8 :: (load 4 from %ir.369)
    %v1 = AND killed %a0, killed %v1
    BNE %v1, %at, %bb.60, implicit-def %at {
      NOP
    }
  
  bb.48..preheader.i (freq 64424570):
    successors: %bb.49..preheader.i(50), %bb.48..preheader.i(50)
    liveins: %s0, %s1, %s2, %v0
  
    %v1 = OR killed %v0, %zero
    %v0 = LW %v1, 68 :: (load 4 from %ir.372)
    BNE %v1, %v0, %bb.48..preheader.i, implicit-def %at {
      NOP
    }
  
  bb.49..preheader.i (freq 32212285):
    successors: %bb.61.type_main_variant.exit(100)
  
    B %bb.61.type_main_variant.exit, implicit-def %at {
      NOP
    }
  
  bb.50 (%ir-block.134, freq 48318520):
    successors: %bb.51.new_die.exit5(100)
    liveins: %s0, %s1, %s2, %s3, %s4
  
    %t9 = LW %s0, target-flags(<unknown>) @xmalloc :: (load 4 from call-entry @xmalloc)
    %a0 = ADDiu %zero, 12
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    SW %s4, %v0, 0 :: (store 4 into %ir.136)
    SW %s3, %v0, 4 :: (store 4 into %ir.138)
    %at = LW %s0, target-flags(<unknown>) @limbo_die_list :: (load 4 from got)
    %v1 = LW %at, 0 :: (load 4 from `i32* bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i32*)`)
    SW killed %v1, %v0, 8 :: (store 4 into %ir.141)
    SW killed %v0, killed %at, 0 :: (store 4 into `i8** bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i8**)`)
  
  bb.51.new_die.exit5 (freq 128849339):
    successors: %bb.52.new_die.exit5(75), %bb.54.add_AT_unsigned.exit(25)
    liveins: %s0, %s1, %s2, %s3, %s4
  
    %at = LW %s0, target-flags(<unknown>) @target_flags :: (load 4 from got)
    %s5 = LW killed %at, 0 :: (load 4 from @target_flags)
    %t9 = LW %s0, target-flags(<unknown>) @xmalloc :: (load 4 from call-entry @xmalloc)
    %a0 = ADDiu %zero, 20
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    %at = ADDiu %zero, 6
    %v1 = ADDiu %zero, 11
    SW %zero, %v0, 4 :: (store 4 into %ir.149)
    SW killed %v1, %v0, 0 :: (store 4 into %ir.150)
    SW killed %at, %v0, 8 :: (store 4 into %ir.152)
    %at = SRL killed %s5, 20
    %at = ANDi killed %at, 32
    %at = ADDiu killed %at, 32
    %at = SRL killed %at, 3
    BEQ %s4, %zero, %bb.54.add_AT_unsigned.exit, implicit-def %at {
      SW killed %at, %v0, 12 :: (store 4 into %ir.154)
    }
  
  bb.52.new_die.exit5 (freq 96637004):
    successors: %bb.53(66), %bb.54.add_AT_unsigned.exit(33)
    liveins: %s0, %s1, %s2, %s3, %s4, %v0
  
    BEQ %v0, %zero, %bb.54.add_AT_unsigned.exit, implicit-def %at {
      NOP
    }
  
  bb.53 (%ir-block.157, freq 64424669):
    successors: %bb.54.add_AT_unsigned.exit(100)
    liveins: %s0, %s1, %s2, %s3, %s4, %v0
  
    %at = LW %s4, 8 :: (load 4 from %ir.159)
    SW killed %at, %v0, 4 :: (store 4 into %ir.sunkaddr5)
    SW killed %v0, %s4, 8 :: (store 4 into %ir.161)
  
  bb.54.add_AT_unsigned.exit (freq 128849339):
    successors: %bb.95(100)
    liveins: %s0, %s1, %s2, %s3, %s4
  
    %s6 = LW killed %s3, 4 :: (load 4 from %ir.163)
    B %bb.95, implicit-def dead %at {
      %s5 = ADDiu %zero, 0
    }
  
  bb.55 (%ir-block.185, freq 48318520):
    successors: %bb.56.new_die.exit6(100)
    liveins: %s0, %s1, %s2, %s3, %s4
  
    %t9 = LW %s0, target-flags(<unknown>) @xmalloc :: (load 4 from call-entry @xmalloc)
    %a0 = ADDiu %zero, 12
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    SW %s4, %v0, 0 :: (store 4 into %ir.187)
    SW %s3, %v0, 4 :: (store 4 into %ir.189)
    %at = LW %s0, target-flags(<unknown>) @limbo_die_list :: (load 4 from got)
    %v1 = LW %at, 0 :: (load 4 from `i32* bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i32*)`)
    SW killed %v1, %v0, 8 :: (store 4 into %ir.192)
    SW killed %v0, killed %at, 0 :: (store 4 into `i8** bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i8**)`)
  
  bb.56.new_die.exit6 (freq 128849339):
    successors: %bb.57.new_die.exit6(75), %bb.59.add_AT_unsigned.exit8(25)
    liveins: %s0, %s1, %s2, %s3, %s4
  
    %at = LW %s0, target-flags(<unknown>) @target_flags :: (load 4 from got)
    %s5 = LW killed %at, 0 :: (load 4 from @target_flags)
    %t9 = LW %s0, target-flags(<unknown>) @xmalloc :: (load 4 from call-entry @xmalloc)
    %a0 = ADDiu %zero, 20
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    %at = ADDiu %zero, 6
    %v1 = ADDiu %zero, 11
    SW %zero, %v0, 4 :: (store 4 into %ir.200)
    SW killed %v1, %v0, 0 :: (store 4 into %ir.201)
    SW killed %at, %v0, 8 :: (store 4 into %ir.203)
    %at = SRL killed %s5, 20
    %at = ANDi killed %at, 32
    %at = ADDiu killed %at, 32
    %at = SRL killed %at, 3
    BEQ %s4, %zero, %bb.59.add_AT_unsigned.exit8, implicit-def %at {
      SW killed %at, %v0, 12 :: (store 4 into %ir.205)
    }
  
  bb.57.new_die.exit6 (freq 96637004):
    successors: %bb.58(66), %bb.59.add_AT_unsigned.exit8(33)
    liveins: %s0, %s1, %s2, %s3, %s4, %v0
  
    BEQ %v0, %zero, %bb.59.add_AT_unsigned.exit8, implicit-def %at {
      NOP
    }
  
  bb.58 (%ir-block.208, freq 64424669):
    successors: %bb.59.add_AT_unsigned.exit8(100)
    liveins: %s0, %s1, %s2, %s3, %s4, %v0
  
    %at = LW %s4, 8 :: (load 4 from %ir.210)
    SW killed %at, %v0, 4 :: (store 4 into %ir.sunkaddr8)
    SW killed %v0, %s4, 8 :: (store 4 into %ir.212)
  
  bb.59.add_AT_unsigned.exit8 (freq 128849339):
    successors: %bb.95(100)
    liveins: %s0, %s1, %s2, %s3, %s4
  
    %s6 = LW killed %s3, 4 :: (load 4 from %ir.214)
    B %bb.95, implicit-def dead %at {
      %s5 = ADDiu %zero, 0
    }
  
  bb.60 (freq 32212285):
    successors: %bb.61.type_main_variant.exit(100)
    liveins: %s0, %s1, %s2, %v0
  
    %v1 = OR killed %v0, %zero
  
  bb.61.type_main_variant.exit (freq 64424570):
    successors: %bb.62(0), %bb.95(99)
    liveins: %s0, %s1, %s2, %v1
  
    %s4 = LW killed %v1, 48 :: (load 4 from %ir.376)
    %s5 = ADDiu %zero, 0
    BNE %s4, %zero, %bb.95, implicit-def %at {
      %s6 = ADDiu %zero, 0
    }
  
  bb.62 (%ir-block.379, freq 61):
    liveins: %s0
    exit
  
    %a0 = LW %s0, target-flags(<unknown>) @.str.4 :: (load 4 from got)
    %a2 = LW %s0, target-flags(<unknown>) @__FUNCTION__.modified_type_die :: (load 4 from got)
    %t9 = LW %s0, target-flags(<unknown>) @fancy_abort :: (load 4 from call-entry @fancy_abort)
    %a1 = ADDiu %zero, 7573
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp {
      %gp = OR killed %s0, %zero
    }
  
  bb.63 (freq 21474856):
    successors: %bb.95(100)
    liveins: %s0, %s1, %s2, %s5
  
    %s6 = ADDiu %zero, 0
    B %bb.95, implicit-def %at {
      %s4 = ADDiu %zero, 0
    }
  
  bb.64 (freq 8053071):
    successors: %bb.65(100)
    liveins: %s0, %s1, %s2, %s3, %s7, %v0
  
    %s5 = LW %s0, target-flags(<unknown>) @.str.388 :: (load 4 from got)
  
  bb.65 (%ir-block.242, freq 21474856):
    successors: %bb.109(0), %bb.66(99)
    liveins: %s0, %s1, %s2, %s3, %s5, %s7, %v0
  
    %v0 = ADDiu killed %v0, -6
    %at = SLTiu %v0, 7
    BEQ killed %at, %zero, %bb.109, implicit-def dead %at {
      NOP
    }
  
  bb.66 (%ir-block.242, freq 21474846):
    successors: %bb.67(19), %bb.75(19), %bb.73(19), %bb.109(0), %bb.74(19), %bb.72(19)
    liveins: %s0, %s1, %s2, %s3, %s5, %s7, %v0
  
    %at = SLL killed %v0, 2
    %v0 = LW %s0, target-flags(<unknown>) %jump-table.0 :: (load 4 from got)
    %at = ADDu killed %at, killed %v0
    %at = LW killed %at, target-flags(<unknown>) %jump-table.0 :: (load 4 from jump-table)
    %at = ADDu killed %at, %s0
    PseudoIndirectBranch killed %at {
      %fp = ADDiu %zero, 4
    }
  
  bb.67 (%ir-block.243, freq 4294967):
    successors: %bb.68(50), %bb.71(50)
    liveins: %s0, %s1, %s2, %s3, %s5, %s7
  
    %at = LW %s3, 32 :: (load 4 from %ir.244)
    %v0 = LUi 65408
    %at = AND killed %at, killed %v0
    %v0 = LUi 1024
    BNE %at, %v0, %bb.71, implicit-def %at {
      NOP
    }
  
  bb.68 (%ir-block.247, freq 2147483):
    successors: %bb.72(37), %bb.69(62)
    liveins: %s0, %s1, %s2, %s3, %s5, %s7
  
    %at = LW %s0, target-flags(<unknown>) @integer_types :: (load 4 from got)
    %at = LW killed %at, 0 :: (load 4 from `%union.tree_node.4288** getelementptr inbounds ([11 x %union.tree_node.4288*], [11 x %union.tree_node.4288*]* @integer_types, i32 0, i32 0)`)
    BEQ %at, %s3, %bb.72, implicit-def %at {
      NOP
    }
  
  bb.69 (%ir-block.250, freq 1342177):
    successors: %bb.72(37), %bb.70(62)
    liveins: %s0, %s1, %s2, %s3, %s5, %s7
  
    %a1 = LW %s0, target-flags(<unknown>) @.str.389 :: (load 4 from got)
    %t9 = LW %s0, target-flags(<unknown>) @strcmp :: (load 4 from call-entry @strcmp)
    %a0 = OR %s5, %zero
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    BEQ %v0, %zero, %bb.72, implicit-def %at {
      NOP
    }
  
  bb.70 (%ir-block.253, freq 838860):
    successors: %bb.72(37), %bb.71(62)
    liveins: %s0, %s1, %s2, %s3, %s5, %s7
  
    %a1 = LW %s0, target-flags(<unknown>) @.str.390 :: (load 4 from got)
    %t9 = LW %s0, target-flags(<unknown>) @strcmp :: (load 4 from call-entry @strcmp)
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit-def %sp, implicit-def %v0 {
      %a0 = OR %s5, %zero
    }
    BEQ %v0, %zero, %bb.72, implicit-def %at {
      NOP
    }
  
  bb.71 (%ir-block.256, freq 2671771):
    successors: %bb.75(100)
    liveins: %s0, %s1, %s2, %s3, %s5, %s7
  
    %at = SRL killed %s7, 17
    %at = ANDi killed %at, 2
    B %bb.75, implicit-def dead %at {
      %fp = ORi killed %at, 5
    }
  
  bb.72 (%ir-block.260, freq 5918162):
    successors: %bb.75(100)
    liveins: %s0, %s1, %s2, %s3, %s5, %s7
  
    %at = SRL killed %s7, 17
    %at = ANDi killed %at, 2
    B %bb.75, implicit-def %at {
      %fp = ADDiu killed %at, 6
    }
  
  bb.73 (%ir-block.264, freq 4294967):
    successors: %bb.75(100)
    liveins: %s0, %s1, %s2, %s3, %s5
  
    %at = LW %s3, 4 :: (load 4 from %ir.266)
    %at = LW killed %at, 8 :: (load 4 from %ir.268)
    %v0 = LUi 65280
    %at = AND killed %at, killed %v0
    %fp = ADDiu %zero, 128
    %v0 = ADDiu %zero, 3
    %v1 = LUi 1792
    %at = XOR killed %at, killed %v1
    B %bb.75, implicit-def dead %at {
      %fp = MOVZ_I_I killed %v0, killed %at, killed %fp
    }
  
  bb.74 (%ir-block.271, freq 4294967):
    successors: %bb.75(100)
    liveins: %s0, %s1, %s2, %s3, %s5
  
    %fp = ADDiu %zero, 2
  
  bb.75 (%ir-block.273, freq 21474836):
    successors: %bb.79(37), %bb.76(62)
    liveins: %fp, %s0, %s1, %s2, %s3, %s5
  
    %at = LW %s0, target-flags(<unknown>) @comp_unit_die :: (load 4 from got)
    %s6 = LW killed %at, 0 :: (load 4 from @comp_unit_die)
    %t9 = LW %s0, target-flags(<unknown>) @xcalloc :: (load 4 from call-entry @xcalloc)
    %s7 = ADDiu %zero, 36
    %a0 = ADDiu %zero, 1
    %a1 = ADDiu %zero, 36
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    %s4 = OR %v0, %zero
    BEQ %s6, %zero, %bb.79, implicit-def %at {
      SW killed %s7, %s4, 0 :: (store 4 into %ir.276)
    }
  
  bb.76 (%ir-block.278, freq 13421772):
    successors: %bb.80.new_die.exit.i(37), %bb.77(62)
    liveins: %fp, %s0, %s1, %s2, %s3, %s4, %s5, %s6
  
    BEQ %s4, %zero, %bb.80.new_die.exit.i, implicit-def %at {
      NOP
    }
  
  bb.77 (%ir-block.280, freq 8388607):
    successors: %bb.110(0), %bb.78(99)
    liveins: %fp, %s0, %s1, %s2, %s3, %s4, %s5, %s6
  
    BEQ %s4, %s6, %bb.110, implicit-def %at {
      NOP
    }
  
  bb.78 (%ir-block.284, freq 8388599):
    successors: %bb.80.new_die.exit.i(100)
    liveins: %fp, %s0, %s1, %s2, %s3, %s4, %s5, %s6
  
    SW %s6, %s4, 12 :: (store 4 into %ir.286)
    %at = LW %s6, 16 :: (load 4 from %ir.288)
    SW killed %at, %s4, 20 :: (store 4 into %ir.291)
    B %bb.80.new_die.exit.i, implicit-def dead %at {
      SW %s4, killed %s6, 16 :: (store 4 into %ir.292)
    }
  
  bb.79 (%ir-block.293, freq 8053063):
    successors: %bb.80.new_die.exit.i(100)
    liveins: %fp, %s0, %s1, %s2, %s3, %s4, %s5
  
    %t9 = LW %s0, target-flags(<unknown>) @xmalloc :: (load 4 from call-entry @xmalloc)
    %a0 = ADDiu %zero, 12
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    SW %s4, %v0, 0 :: (store 4 into %ir.295)
    SW %s3, %v0, 4 :: (store 4 into %ir.297)
    %at = LW %s0, target-flags(<unknown>) @limbo_die_list :: (load 4 from got)
    %v1 = LW %at, 0 :: (load 4 from `i32* bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i32*)`)
    SW killed %v1, %v0, 8 :: (store 4 into %ir.300)
    SW killed %v0, killed %at, 0 :: (store 4 into `i8** bitcast (%struct.limbo_die_struct.4338** @limbo_die_list to i8**)`)
  
  bb.80.new_die.exit.i (freq 21474828):
    successors: %bb.82(37), %bb.81(62)
    liveins: %fp, %s0, %s1, %s2, %s3, %s4, %s5
  
    %at = LW %s0, target-flags(<unknown>) @demangle_name_func :: (load 4 from got)
    %t9 = LW killed %at, 0 :: (load 4 from @demangle_name_func)
    BEQ %t9, %zero, %bb.82, implicit-def %at {
      NOP
    }
  
  bb.81 (%ir-block.303, freq 13421767):
    successors: %bb.83(100)
    liveins: %fp, %s0, %s1, %s2, %s3, %s4, %s5, %t9
  
    SW killed %fp, %sp, 20 :: (store 4 into stack)
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit-def %sp, implicit-def %v0 {
      %a0 = OR killed %s5, %zero
    }
    B %bb.83, implicit-def %at {
      %s5 = OR %v0, %zero
    }
  
  bb.82 (freq 8053060):
    successors: %bb.83(100)
    liveins: %fp, %s0, %s1, %s2, %s3, %s4, %s5
  
    SW killed %fp, %sp, 20 :: (store 4 into stack)
  
  bb.83 (%ir-block.305, freq 21474828):
    successors: %bb.84(37), %bb.85(62)
    liveins: %s0, %s1, %s2, %s3, %s4, %s5
  
    %t9 = LW %s0, target-flags(<unknown>) @xmalloc :: (load 4 from call-entry @xmalloc)
    %a0 = ADDiu %zero, 20
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    %fp = LW %s0, target-flags(<unknown>) @debug_str_hash :: (load 4 from got)
    %s7 = LW %fp, 0 :: (load 4 from @debug_str_hash)
    BNE %s7, %zero, %bb.85, implicit-def %at {
      %s6 = OR %v0, %zero
    }
  
  bb.84 (%ir-block.309, freq 8053060):
    successors: %bb.85(100)
    liveins: %fp, %s0, %s1, %s2, %s3, %s4, %s5, %s6
  
    %t9 = LW %s0, target-flags(<unknown>) @ht_create :: (load 4 from call-entry @ht_create)
    %a0 = ADDiu %zero, 10
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    SW %v0, %fp, 0 :: (store 4 into @debug_str_hash)
    %at = LW %s0, target-flags(<unknown>) @indirect_string_alloc :: (load 4 from got)
    SW killed %at, killed %v0, 48 :: (store 4 into %ir.311)
    %s7 = LW killed %fp, 0 :: (load 4 from @debug_str_hash)
  
  bb.85 (%ir-block.312, freq 21474828):
    successors: %bb.86(75), %bb.88.add_AT_string.exit.i(25)
    liveins: %s0, %s1, %s2, %s3, %s4, %s5, %s6, %s7
  
    %t9 = LW %s0, target-flags(<unknown>) @strlen :: (load 4 from call-entry @strlen)
    %a0 = OR %s5, %zero
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    %t9 = LW %s0, target-flags(<unknown>) @ht_lookup :: (load 4 from call-entry @ht_lookup)
    %a0 = OR killed %s7, %zero
    %a1 = OR killed %s5, %zero
    %a2 = OR killed %v0, %zero
    %a3 = ADDiu %zero, 1
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    %at = ADDiu %zero, 14
    %v1 = ADDiu %zero, 3
    %a0 = LW %v0, 8 :: (load 4 from %ir.316)
    %a0 = ADDiu killed %a0, 1
    SW killed %a0, %v0, 8 :: (store 4 into %ir.316)
    SW %zero, %s6, 4 :: (store 4 into %ir.320)
    SW killed %v1, %s6, 0 :: (store 4 into %ir.321)
    SW killed %at, %s6, 8 :: (store 4 into %ir.323)
    BEQ %s4, %zero, %bb.88.add_AT_string.exit.i, implicit-def %at {
      SW killed %v0, %s6, 12 :: (store 4 into %ir.325)
    }
  
  bb.86 (%ir-block.312, freq 16106121):
    successors: %bb.87(66), %bb.88.add_AT_string.exit.i(33)
    liveins: %s0, %s1, %s2, %s3, %s4, %s6
  
    BEQ %s6, %zero, %bb.88.add_AT_string.exit.i, implicit-def %at {
      NOP
    }
  
  bb.87 (%ir-block.328, freq 10737414):
    successors: %bb.88.add_AT_string.exit.i(100)
    liveins: %s0, %s1, %s2, %s3, %s4, %s6
  
    %at = LW %s4, 8 :: (load 4 from %ir.330)
    SW killed %at, %s6, 4 :: (store 4 into %ir.sunkaddr14)
    SW killed %s6, %s4, 8 :: (store 4 into %ir.332)
  
  bb.88.add_AT_string.exit.i (freq 21474828):
    successors: %bb.89.add_AT_string.exit.i(75), %bb.91.add_AT_unsigned.exit.i(25)
    liveins: %s0, %s1, %s2, %s3, %s4
  
    %t9 = LW %s0, target-flags(<unknown>) @int_size_in_bytes :: (load 4 from call-entry @int_size_in_bytes)
    %a0 = OR killed %s3, %zero
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    %s3 = OR %v0, %zero
    %t9 = LW %s0, target-flags(<unknown>) @xmalloc :: (load 4 from call-entry @xmalloc)
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit-def %sp, implicit-def %v0 {
      %a0 = ADDiu %zero, 20
    }
    %s6 = ADDiu %zero, 6
    %at = ADDiu %zero, 11
    SW %zero, %v0, 4 :: (store 4 into %ir.337)
    SW killed %at, %v0, 0 :: (store 4 into %ir.338)
    SW %s6, %v0, 8 :: (store 4 into %ir.340)
    SW killed %s3, %v0, 12 :: (store 4 into %ir.342)
    %s3 = LW %sp, 20 :: (load 4 from stack)
    BEQ %s4, %zero, %bb.91.add_AT_unsigned.exit.i, implicit-def %at {
      NOP
    }
  
  bb.89.add_AT_string.exit.i (freq 16106121):
    successors: %bb.90(66), %bb.91.add_AT_unsigned.exit.i(33)
    liveins: %s0, %s1, %s2, %s3, %s4, %s6, %v0
  
    BEQ %v0, %zero, %bb.91.add_AT_unsigned.exit.i, implicit-def %at {
      NOP
    }
  
  bb.90 (%ir-block.344, freq 10737414):
    successors: %bb.91.add_AT_unsigned.exit.i(100)
    liveins: %s0, %s1, %s2, %s3, %s4, %s6, %v0
  
    %at = LW %s4, 8 :: (load 4 from %ir.346)
    SW killed %at, %v0, 4 :: (store 4 into %ir.sunkaddr17)
    SW killed %v0, %s4, 8 :: (store 4 into %ir.348)
  
  bb.91.add_AT_unsigned.exit.i (freq 21474828):
    successors: %bb.92.add_AT_unsigned.exit.i(75), %bb.94(25)
    liveins: %s0, %s1, %s2, %s3, %s4, %s6
  
    %t9 = LW %s0, target-flags(<unknown>) @xmalloc :: (load 4 from call-entry @xmalloc)
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit-def %sp, implicit-def %v0 {
      %a0 = ADDiu %zero, 20
    }
    SW %zero, %v0, 4 :: (store 4 into %ir.353)
    %at = ADDiu %zero, 62
    SW killed %at, %v0, 0 :: (store 4 into %ir.354)
    %s5 = ADDiu %zero, 0
    SW killed %s6, %v0, 8 :: (store 4 into %ir.356)
    BEQ %s4, %zero, %bb.94, implicit-def %at {
      SW killed %s3, %v0, 12 :: (store 4 into %ir.358)
    }
  
  bb.92.add_AT_unsigned.exit.i (freq 16106121):
    successors: %bb.93(66), %bb.95(33)
    liveins: %s0, %s1, %s2, %s4, %s5, %v0
  
    BEQ %v0, %zero, %bb.95, implicit-def %at {
      %s6 = ADDiu %zero, 0
    }
  
  bb.93 (%ir-block.360, freq 10737414):
    successors: %bb.95(100)
    liveins: %s0, %s1, %s2, %s4, %v0
  
    %at = LW %s4, 8 :: (load 4 from %ir.363)
    SW killed %at, %v0, 4 :: (store 4 into %ir.sunkaddr20)
    SW killed %v0, %s4, 8 :: (store 4 into %ir.365)
    %s5 = ADDiu %zero, 0
    B %bb.95, implicit-def dead %at {
      %s6 = ADDiu %zero, 0
    }
  
  bb.94 (freq 5368707):
    successors: %bb.95(100)
    liveins: %s0, %s1, %s2, %s4, %s5
  
    %s6 = ADDiu %zero, 0
  
  bb.95 (%ir-block.380, freq 2748785628):
    successors: %bb.97(37), %bb.96..thread13(62)
    liveins: %s0, %s1, %s2, %s4, %s5, %s6
  
    BEQ %s2, %zero, %bb.97, implicit-def %at {
      NOP
    }
  
  bb.96..thread13 (freq 4649509477):
    successors: %bb.97(100)
    liveins: %s0, %s1, %s2, %s4, %s5, %s6
  
    SW %s4, killed %s2, 48 :: (store 4 into %ir.383)
  
  bb.97 (%ir-block.384, freq 5680304087):
    successors: %bb.99(37), %bb.98(62)
    liveins: %s0, %s1, %s4, %s5, %s6
  
    BEQ %s6, %zero, %bb.99, implicit-def %at {
      NOP
    }
  
  bb.98 (%ir-block.386, freq 3550190054):
    successors: %bb.99(100)
    liveins: %s0, %s1, %s4, %s6
  
    %at = LW %s6, 8 :: (load 4 from %ir.387)
    %a1 = EXT %at, 19, 1
    %a2 = EXT killed %at, 20, 1
    %t9 = LW %s0, target-flags(<unknown>) @modified_type_die :: (load 4 from call-entry @modified_type_die)
    %a0 = OR killed %s6, %zero
    %a3 = OR killed %s1, %zero
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR %s0, %zero
    }
    %s5 = OR %v0, %zero
  
  bb.99 (%ir-block.394, freq 5680304087):
    successors: %bb.103.base_type_die.exit(37), %bb.100(62)
    liveins: %s0, %s4, %s5
  
    BEQ %s5, %zero, %bb.103.base_type_die.exit, implicit-def %at {
      NOP
    }
  
  bb.100 (%ir-block.396, freq 3550190054):
    successors: %bb.101(75), %bb.103.base_type_die.exit(25)
    liveins: %s0, %s4, %s5
  
    %t9 = LW %s0, target-flags(<unknown>) @xmalloc :: (load 4 from call-entry @xmalloc)
    %a0 = ADDiu %zero, 20
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0 {
      %gp = OR killed %s0, %zero
    }
    SW %zero, %v0, 4 :: (store 4 into %ir.399)
    %at = ADDiu %zero, 73
    SW killed %at, %v0, 0 :: (store 4 into %ir.400)
    %at = ADDiu %zero, 10
    SW killed %at, %v0, 8 :: (store 4 into %ir.402)
    SW killed %s5, %v0, 12 :: (store 4 into %ir.404)
    BEQ %s4, %zero, %bb.103.base_type_die.exit, implicit-def %at {
      SW %zero, %v0, 16 :: (store 4 into %ir.406)
    }
  
  bb.101 (%ir-block.396, freq 2662642541):
    successors: %bb.102(66), %bb.103.base_type_die.exit(33)
    liveins: %s4, %v0
  
    BEQ %v0, %zero, %bb.103.base_type_die.exit, implicit-def %at {
      NOP
    }
  
  bb.102 (%ir-block.409, freq 1775095026):
    successors: %bb.103.base_type_die.exit(100)
    liveins: %s4, %v0
  
    %at = LW %s4, 8 :: (load 4 from %ir.411)
    SW killed %at, %v0, 4 :: (store 4 into %ir.sunkaddr23)
    SW killed %v0, %s4, 8 :: (store 4 into %ir.413)
  
  bb.103.base_type_die.exit (freq 7515028053):
    liveins: %s4
    liveouts:
  
    %v0 = OR killed %s4, %zero
    %s0 = LW %sp, 24 :: (load 4 from stack)
    %s1 = LW %sp, 28 :: (load 4 from stack)
    %s2 = LW %sp, 32 :: (load 4 from stack)
    %s3 = LW %sp, 36 :: (load 4 from stack)
    %s4 = LW %sp, 40 :: (load 4 from stack)
    %s5 = LW %sp, 44 :: (load 4 from stack)
    %s6 = LW %sp, 48 :: (load 4 from stack)
    %s7 = LW %sp, 52 :: (load 4 from stack)
    %fp = LW %sp, 56 :: (load 4 from stack)
    %ra = LW %sp, 60 :: (load 4 from stack)
    PseudoReturn %ra {
      %sp = ADDiu %sp, 64
    }
  
  bb.104 (%ir-block.61, freq 640):
    liveins: %s0
    exit
  
    %a0 = LW %s0, target-flags(<unknown>) @.str.4 :: (load 4 from got)
    %a2 = LW %s0, target-flags(<unknown>) @__FUNCTION__.add_child_die :: (load 4 from got)
    %t9 = LW %s0, target-flags(<unknown>) @fancy_abort :: (load 4 from call-entry @fancy_abort)
    %a1 = ADDiu %zero, 5026
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp {
      %gp = OR killed %s0, %zero
    }
  
  bb.105 (%ir-block.220, freq 245):
    liveins: %s0
    exit
  
    %a0 = LW %s0, target-flags(<unknown>) @.str.4 :: (load 4 from got)
    %a2 = LW %s0, target-flags(<unknown>) @__FUNCTION__.is_base_type :: (load 4 from got)
    %t9 = LW %s0, target-flags(<unknown>) @fancy_abort :: (load 4 from call-entry @fancy_abort)
    %a1 = ADDiu %zero, 7461
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp {
      %gp = OR killed %s0, %zero
    }
  
  bb.106 (%ir-block.93, freq 240):
    liveins: %s0
    exit
  
    %a0 = LW %s0, target-flags(<unknown>) @.str.4 :: (load 4 from got)
    %a2 = LW %s0, target-flags(<unknown>) @__FUNCTION__.add_child_die :: (load 4 from got)
    %t9 = LW %s0, target-flags(<unknown>) @fancy_abort :: (load 4 from call-entry @fancy_abort)
    %a1 = ADDiu %zero, 5026
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp {
      %gp = OR killed %s0, %zero
    }
  
  bb.107 (%ir-block.124, freq 48):
    liveins: %s0
    exit
  
    %a0 = LW %s0, target-flags(<unknown>) @.str.4 :: (load 4 from got)
    %a2 = LW %s0, target-flags(<unknown>) @__FUNCTION__.add_child_die :: (load 4 from got)
    %t9 = LW %s0, target-flags(<unknown>) @fancy_abort :: (load 4 from call-entry @fancy_abort)
    %a1 = ADDiu %zero, 5026
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp {
      %gp = OR killed %s0, %zero
    }
  
  bb.108 (%ir-block.175, freq 48):
    liveins: %s0
    exit
  
    %a0 = LW %s0, target-flags(<unknown>) @.str.4 :: (load 4 from got)
    %a2 = LW %s0, target-flags(<unknown>) @__FUNCTION__.add_child_die :: (load 4 from got)
    %t9 = LW %s0, target-flags(<unknown>) @fancy_abort :: (load 4 from call-entry @fancy_abort)
    %a1 = ADDiu %zero, 5026
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp {
      %gp = OR killed %s0, %zero
    }
  
  bb.109 (%ir-block.272, freq 20):
    liveins: %s0
    exit
  
    %a0 = LW %s0, target-flags(<unknown>) @.str.4 :: (load 4 from got)
    %a2 = LW %s0, target-flags(<unknown>) @__FUNCTION__.base_type_die :: (load 4 from got)
    %t9 = LW %s0, target-flags(<unknown>) @fancy_abort :: (load 4 from call-entry @fancy_abort)
    %a1 = ADDiu %zero, 7381
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp {
      %gp = OR killed %s0, %zero
    }
  
  bb.110 (%ir-block.283, freq 8):
    liveins: %s0
    exit
  
    %a0 = LW %s0, target-flags(<unknown>) @.str.4 :: (load 4 from got)
    %a2 = LW %s0, target-flags(<unknown>) @__FUNCTION__.add_child_die :: (load 4 from got)
    %t9 = LW %s0, target-flags(<unknown>) @fancy_abort :: (load 4 from call-entry @fancy_abort)
    %a1 = ADDiu %zero, 5026
    JALRPseudo %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %gp, implicit-def %sp {
      %gp = OR killed %s0, %zero
    }

...
