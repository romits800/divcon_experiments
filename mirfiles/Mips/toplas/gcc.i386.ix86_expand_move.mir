--- |
  ; ModuleID = '/home/romi/didaktoriko/unison/unison-experiments/experiments/mips/selected-functions/size-toplas/gcc.i386.ix86_expand_move.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips--linux-gnu"
  
  %struct.rtx_def.11418 = type { i32, [1 x %union.rtunion_def.11419] }
  %union.rtunion_def.11419 = type { i32 }
  %struct.rtvec_def.11455 = type { i32, [1 x %struct.rtx_def.11418*] }
  
  @target_flags = external global i32, align 4
  @flag_pic = external global i32, align 4
  @optimize = external global i32, align 4
  @mode_size = external constant [59 x i8], align 1
  @mode_class = external constant [59 x i32], align 4
  @global_rtl = external global [11 x %struct.rtx_def.11418*], align 4
  @reload_completed = external global i32, align 4
  @reload_in_progress = external global i32, align 4
  
  declare %struct.rtx_def.11418* @gen_reg_rtx(i32 signext) #0
  
  declare %struct.rtx_def.11418* @emit_insn(%struct.rtx_def.11418*) #0
  
  declare %struct.rtx_def.11418* @gen_rtx_fmt_ee(i32 signext, i32 signext, %struct.rtx_def.11418*, %struct.rtx_def.11418*) #0
  
  declare i32 @general_operand(%struct.rtx_def.11418*, i32 signext) #0
  
  ; Function Attrs: nounwind
  declare i32 @x86_64_zero_extended_value(%struct.rtx_def.11418* nocapture readonly) #1
  
  declare i32 @register_operand(%struct.rtx_def.11418*, i32 signext) #0
  
  declare i32 @immediate_operand(%struct.rtx_def.11418*, i32 signext) #0
  
  ; Function Attrs: nounwind
  declare %struct.rtx_def.11418* @legitimize_pic_address(%struct.rtx_def.11418*, %struct.rtx_def.11418*) #1
  
  declare %struct.rtx_def.11418* @force_reg(i32 signext, %struct.rtx_def.11418*) #0
  
  ; Function Attrs: nounwind
  define void @ix86_expand_move(i32 signext %mode, %struct.rtx_def.11418** nocapture %operands) #1 {
    %1 = load i32, i32* @reload_in_progress, align 4
    %2 = load i32, i32* @reload_completed, align 4
    %3 = or i32 %2, %1
    %4 = load i32, i32* @flag_pic, align 4
    %5 = icmp eq i32 %4, 0
    br i1 %5, label %symbolic_operand.exit.thread, label %6
  
  ; <label>:6                                       ; preds = %0
    %7 = load i32, i32* @target_flags, align 4
    %8 = lshr i32 %7, 25
    %9 = and i32 %8, 1
    %10 = or i32 %9, 4
    %11 = icmp eq i32 %10, %mode
    br i1 %11, label %12, label %symbolic_operand.exit.thread
  
  ; <label>:12                                      ; preds = %6
    %13 = getelementptr inbounds %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, i32 1
    %14 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %13, align 4
    %15 = bitcast %struct.rtx_def.11418* %14 to i32*
    %16 = load i32, i32* %15, align 4
    %17 = lshr i32 %16, 16
    switch i32 %17, label %symbolic_operand.exit.thread [
      i32 68, label %symbolic_operand.exit.thread18
      i32 67, label %symbolic_operand.exit.thread18
      i32 58, label %18
    ]
  
  ; <label>:18                                      ; preds = %12
    %19 = getelementptr inbounds %struct.rtx_def.11418, %struct.rtx_def.11418* %14, i32 0, i32 1, i32 0
    %20 = bitcast %union.rtunion_def.11419* %19 to %struct.rtx_def.11418**
    %21 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %20, align 4
    %22 = bitcast %struct.rtx_def.11418* %21 to i32*
    %23 = load i32, i32* %22, align 4
    %24 = lshr i32 %23, 16
    switch i32 %24, label %28 [
      i32 68, label %symbolic_operand.exit.thread18
      i32 67, label %symbolic_operand.exit.thread18
      i32 42, label %25
    ]
  
  ; <label>:25                                      ; preds = %18
    %26 = getelementptr inbounds %struct.rtx_def.11418, %struct.rtx_def.11418* %21, i32 0, i32 1, i32 1, i32 0
    %27 = load i32, i32* %26, align 4
    switch i32 %27, label %28 [
      i32 6, label %symbolic_operand.exit.thread18
      i32 7, label %symbolic_operand.exit.thread18
      i32 15, label %symbolic_operand.exit.thread18
    ]
  
  ; <label>:28                                      ; preds = %25, %18
    %.mask.i = and i32 %23, -65536
    %29 = icmp eq i32 %.mask.i, 4915200
    br i1 %29, label %30, label %symbolic_operand.exit.thread
  
  ; <label>:30                                      ; preds = %28
    %31 = getelementptr inbounds %struct.rtx_def.11418, %struct.rtx_def.11418* %21, i32 0, i32 1, i32 1
    %32 = bitcast %union.rtunion_def.11419* %31 to i32**
    %33 = load i32*, i32** %32, align 4
    %34 = load i32, i32* %33, align 4
    %.mask1.i = and i32 %34, -65536
    %35 = icmp eq i32 %.mask1.i, 3538944
    br i1 %35, label %36, label %symbolic_operand.exit.thread
  
  ; <label>:36                                      ; preds = %30
    %37 = getelementptr inbounds %struct.rtx_def.11418, %struct.rtx_def.11418* %21, i32 0, i32 1, i32 0
    %38 = bitcast %union.rtunion_def.11419* %37 to %struct.rtx_def.11418**
    %39 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %38, align 4
    %40 = bitcast %struct.rtx_def.11418* %39 to i32*
    %41 = load i32, i32* %40, align 4
    %42 = lshr i32 %41, 16
    switch i32 %42, label %symbolic_operand.exit.thread [
      i32 68, label %symbolic_operand.exit.thread18
      i32 67, label %symbolic_operand.exit.thread18
      i32 42, label %43
    ]
  
  ; <label>:43                                      ; preds = %36
    %44 = getelementptr inbounds %struct.rtx_def.11418, %struct.rtx_def.11418* %39, i32 0, i32 1, i32 1, i32 0
    %45 = load i32, i32* %44, align 4
    %46 = icmp eq i32 %45, 7
    br i1 %46, label %symbolic_operand.exit, label %symbolic_operand.exit.thread
  
  symbolic_operand.exit:                            ; preds = %43
    %47 = getelementptr inbounds %struct.rtx_def.11418, %struct.rtx_def.11418* %39, i32 0, i32 1, i32 0
    %48 = bitcast %union.rtunion_def.11419* %47 to %struct.rtvec_def.11455**
    %49 = load %struct.rtvec_def.11455*, %struct.rtvec_def.11455** %48, align 4
    %50 = getelementptr inbounds %struct.rtvec_def.11455, %struct.rtvec_def.11455* %49, i32 0, i32 1, i32 0
    %51 = bitcast %struct.rtx_def.11418** %50 to i32**
    %52 = load i32*, i32** %51, align 4
    %53 = load i32, i32* %52, align 4
    %54 = lshr i32 %53, 16
    %.off.i = add nsw i32 %54, -67
    %switch.i = icmp ult i32 %.off.i, 2
    br i1 %switch.i, label %symbolic_operand.exit.thread18, label %symbolic_operand.exit.thread
  
  symbolic_operand.exit.thread18:                   ; preds = %symbolic_operand.exit, %36, %36, %25, %25, %25, %18, %18, %12, %12
    %55 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, align 4
    %56 = bitcast %struct.rtx_def.11418* %55 to i32*
    %57 = load i32, i32* %56, align 4
    %58 = lshr i32 %57, 16
    switch i32 %58, label %61 [
      i32 66, label %59
      i32 61, label %63
    ]
  
  ; <label>:59                                      ; preds = %symbolic_operand.exit.thread18
    %60 = tail call %struct.rtx_def.11418* @force_reg(i32 signext %mode, %struct.rtx_def.11418* %14) #2
    %sunkaddr = ptrtoint %struct.rtx_def.11418** %operands to i32
    %sunkaddr1 = add i32 %sunkaddr, 4
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to %struct.rtx_def.11418**
    store %struct.rtx_def.11418* %60, %struct.rtx_def.11418** %sunkaddr2, align 4
    br label %182
  
  ; <label>:61                                      ; preds = %symbolic_operand.exit.thread18
    %62 = tail call %struct.rtx_def.11418* @gen_reg_rtx(i32 signext %mode) #2
    %sunkaddr3 = ptrtoint %struct.rtx_def.11418** %operands to i32
    %sunkaddr4 = add i32 %sunkaddr3, 4
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to %struct.rtx_def.11418**
    %.pre = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %sunkaddr5, align 4
    br label %63
  
  ; <label>:63                                      ; preds = %61, %symbolic_operand.exit.thread18
    %64 = phi %struct.rtx_def.11418* [ %.pre, %61 ], [ %14, %symbolic_operand.exit.thread18 ]
    %temp.0 = phi %struct.rtx_def.11418* [ %62, %61 ], [ %55, %symbolic_operand.exit.thread18 ]
    %65 = tail call %struct.rtx_def.11418* @legitimize_pic_address(%struct.rtx_def.11418* %64, %struct.rtx_def.11418* %temp.0)
    %66 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, align 4
    %67 = icmp eq %struct.rtx_def.11418* %65, %66
    br i1 %67, label %188, label %.critedge
  
  .critedge:                                        ; preds = %63
    %sunkaddr6 = ptrtoint %struct.rtx_def.11418** %operands to i32
    %sunkaddr7 = add i32 %sunkaddr6, 4
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to %struct.rtx_def.11418**
    store %struct.rtx_def.11418* %65, %struct.rtx_def.11418** %sunkaddr8, align 4
    br label %182
  
  symbolic_operand.exit.thread:                     ; preds = %symbolic_operand.exit, %43, %36, %30, %28, %12, %6, %0
    %68 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, align 4
    %69 = bitcast %struct.rtx_def.11418* %68 to i32*
    %70 = load i32, i32* %69, align 4
    %.mask = and i32 %70, -65536
    %71 = icmp eq i32 %.mask, 4325376
    br i1 %71, label %72, label %96
  
  ; <label>:72                                      ; preds = %symbolic_operand.exit.thread
    %73 = load i32, i32* @target_flags, align 4
    %74 = and i32 %73, 33554432
    %75 = icmp ne i32 %74, 0
    %76 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i32 %mode
    %77 = load i8, i8* %76, align 1
    %78 = zext i8 %77 to i32
    %79 = add nuw nsw i32 %78, 7
    %80 = and i32 %79, 504
    %81 = add nuw nsw i32 %78, 1
    %82 = and i32 %81, 510
    %83 = select i1 %75, i32 %80, i32 %82
    %84 = icmp eq i32 %83, %78
    br i1 %84, label %85, label %88
  
  ; <label>:85                                      ; preds = %72
    %86 = tail call i32 @push_operand(%struct.rtx_def.11418* %68, i32 signext %mode) #2
    %87 = icmp eq i32 %86, 0
    br i1 %87, label %88, label %96
  
  ; <label>:88                                      ; preds = %85, %72
    %89 = getelementptr inbounds %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, i32 1
    %90 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %89, align 4
    %91 = bitcast %struct.rtx_def.11418* %90 to i32*
    %92 = load i32, i32* %91, align 4
    %.mask12 = and i32 %92, -65536
    %93 = icmp eq i32 %.mask12, 4325376
    br i1 %93, label %94, label %96
  
  ; <label>:94                                      ; preds = %88
    %95 = tail call %struct.rtx_def.11418* @force_reg(i32 signext %mode, %struct.rtx_def.11418* %90) #2
    %sunkaddr9 = ptrtoint %struct.rtx_def.11418** %operands to i32
    %sunkaddr10 = add i32 %sunkaddr9, 4
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to %struct.rtx_def.11418**
    store %struct.rtx_def.11418* %95, %struct.rtx_def.11418** %sunkaddr11, align 4
    br label %96
  
  ; <label>:96                                      ; preds = %94, %88, %85, %symbolic_operand.exit.thread
    %97 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, align 4
    %98 = tail call i32 @push_operand(%struct.rtx_def.11418* %97, i32 signext %mode) #2
    %99 = icmp eq i32 %98, 0
    br i1 %99, label %133, label %100
  
  ; <label>:100                                     ; preds = %96
    %101 = getelementptr inbounds %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, i32 1
    %102 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %101, align 4
    %103 = bitcast %struct.rtx_def.11418* %102 to i32*
    %104 = load i32, i32* %103, align 4
    %.mask.i13 = and i32 %104, -65536
    %105 = icmp eq i32 %.mask.i13, 4128768
    br i1 %105, label %106, label %110
  
  ; <label>:106                                     ; preds = %100
    %107 = getelementptr inbounds %struct.rtx_def.11418, %struct.rtx_def.11418* %102, i32 0, i32 1, i32 0
    %108 = bitcast %union.rtunion_def.11419* %107 to %struct.rtx_def.11418**
    %109 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %108, align 4
    br label %110
  
  ; <label>:110                                     ; preds = %106, %100
    %t.0.i = phi %struct.rtx_def.11418* [ %109, %106 ], [ %102, %100 ]
    %111 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 5), align 4
    %112 = icmp eq %struct.rtx_def.11418* %t.0.i, %111
    %113 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 3), align 4
    %114 = icmp eq %struct.rtx_def.11418* %t.0.i, %113
    %or.cond.i = or i1 %112, %114
    %115 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 6), align 4
    %116 = icmp eq %struct.rtx_def.11418* %t.0.i, %115
    %or.cond4.i = or i1 %or.cond.i, %116
    %117 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 7), align 4
    %118 = icmp eq %struct.rtx_def.11418* %t.0.i, %117
    %or.cond6.i = or i1 %or.cond4.i, %118
    %119 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 8), align 4
    %120 = icmp eq %struct.rtx_def.11418* %t.0.i, %119
    %or.cond8.i = or i1 %or.cond6.i, %120
    br i1 %or.cond8.i, label %general_no_elim_operand.exit.thread, label %121
  
  ; <label>:121                                     ; preds = %110
    %122 = bitcast %struct.rtx_def.11418* %t.0.i to i32*
    %123 = load i32, i32* %122, align 4
    %.mask1.i14 = and i32 %123, -65536
    %124 = icmp eq i32 %.mask1.i14, 3997696
    br i1 %124, label %125, label %general_no_elim_operand.exit
  
  ; <label>:125                                     ; preds = %121
    %126 = getelementptr inbounds %struct.rtx_def.11418, %struct.rtx_def.11418* %t.0.i, i32 0, i32 1, i32 0, i32 0
    %127 = load i32, i32* %126, align 4
    %.off.i15 = add i32 %127, -53
    %128 = icmp ult i32 %.off.i15, 5
    br i1 %128, label %general_no_elim_operand.exit.thread, label %general_no_elim_operand.exit
  
  general_no_elim_operand.exit:                     ; preds = %125, %121
    %129 = tail call i32 @general_operand(%struct.rtx_def.11418* nonnull %102, i32 signext %mode) #2
    %130 = icmp eq i32 %129, 0
    br i1 %130, label %general_no_elim_operand.exit.general_no_elim_operand.exit.thread_crit_edge, label %133
  
  general_no_elim_operand.exit.general_no_elim_operand.exit.thread_crit_edge: ; preds = %general_no_elim_operand.exit
    %sunkaddr12 = ptrtoint %struct.rtx_def.11418** %operands to i32
    %sunkaddr13 = add i32 %sunkaddr12, 4
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to %struct.rtx_def.11418**
    %.pre19 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %sunkaddr14, align 4
    br label %general_no_elim_operand.exit.thread
  
  general_no_elim_operand.exit.thread:              ; preds = %general_no_elim_operand.exit.general_no_elim_operand.exit.thread_crit_edge, %125, %110
    %131 = phi %struct.rtx_def.11418* [ %.pre19, %general_no_elim_operand.exit.general_no_elim_operand.exit.thread_crit_edge ], [ %102, %125 ], [ %102, %110 ]
    %132 = tail call %struct.rtx_def.11418* @copy_to_mode_reg(i32 signext %mode, %struct.rtx_def.11418* %131) #2
    %sunkaddr15 = ptrtoint %struct.rtx_def.11418** %operands to i32
    %sunkaddr16 = add i32 %sunkaddr15, 4
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to %struct.rtx_def.11418**
    store %struct.rtx_def.11418* %132, %struct.rtx_def.11418** %sunkaddr17, align 4
    br label %133
  
  ; <label>:133                                     ; preds = %general_no_elim_operand.exit.thread, %general_no_elim_operand.exit, %96
    %134 = load i32, i32* @target_flags, align 4
    %135 = and i32 %134, 33554432
    %136 = icmp ne i32 %135, 0
    %137 = icmp eq i32 %mode, 5
    %or.cond = and i1 %137, %136
    br i1 %or.cond, label %138, label %160
  
  ; <label>:138                                     ; preds = %133
    %139 = getelementptr inbounds %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, i32 1
    %140 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %139, align 4
    %141 = tail call i32 @immediate_operand(%struct.rtx_def.11418* %140, i32 signext 5) #2
    %142 = icmp eq i32 %141, 0
    br i1 %142, label %160, label %143
  
  ; <label>:143                                     ; preds = %138
    %sunkaddr18 = ptrtoint %struct.rtx_def.11418** %operands to i32
    %sunkaddr19 = add i32 %sunkaddr18, 4
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to %struct.rtx_def.11418**
    %144 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %sunkaddr20, align 4
    %145 = tail call i32 @x86_64_zero_extended_value(%struct.rtx_def.11418* %144)
    %146 = icmp eq i32 %145, 0
    br i1 %146, label %147, label %160
  
  ; <label>:147                                     ; preds = %143
    %148 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, align 4
    %149 = tail call i32 @register_operand(%struct.rtx_def.11418* %148, i32 signext 5) #2
    %150 = load i32, i32* @optimize, align 4
    %notrhs = icmp eq i32 %150, 0
    %151 = load i32, i32* @reload_completed, align 4
    %152 = or i32 %151, %149
    %153 = load i32, i32* @reload_in_progress, align 4
    %154 = or i32 %152, %153
    %155 = icmp ne i32 %154, 0
    %156 = or i1 %notrhs, %155
    br i1 %156, label %160, label %157
  
  ; <label>:157                                     ; preds = %147
    %sunkaddr21 = ptrtoint %struct.rtx_def.11418** %operands to i32
    %sunkaddr22 = add i32 %sunkaddr21, 4
    %sunkaddr23 = inttoptr i32 %sunkaddr22 to %struct.rtx_def.11418**
    %158 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %sunkaddr23, align 4
    %159 = tail call %struct.rtx_def.11418* @copy_to_mode_reg(i32 signext 5, %struct.rtx_def.11418* %158) #2
    store %struct.rtx_def.11418* %159, %struct.rtx_def.11418** %sunkaddr23, align 4
    br label %160
  
  ; <label>:160                                     ; preds = %157, %147, %143, %138, %133
    %161 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i32 %mode
    %162 = load i32, i32* %161, align 4
    switch i32 %162, label %163 [
      i32 2, label %166
      i32 6, label %166
    ]
  
  ; <label>:163                                     ; preds = %160
    %164 = icmp ne i32 %3, 0
    %165 = icmp ne i32 %162, 8
    %or.cond10 = or i1 %164, %165
    br i1 %or.cond10, label %182, label %168
  
  ; <label>:166                                     ; preds = %160, %160
    %167 = icmp ne i32 %3, 0
    br i1 %167, label %182, label %168
  
  ; <label>:168                                     ; preds = %166, %163
    %169 = getelementptr inbounds %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, i32 1
    %170 = bitcast %struct.rtx_def.11418** %169 to i32**
    %171 = load i32*, i32** %170, align 4
    %172 = load i32, i32* %171, align 4
    %.mask11 = and i32 %172, -65536
    %173 = icmp eq i32 %.mask11, 3604480
    br i1 %173, label %174, label %182
  
  ; <label>:174                                     ; preds = %168
    %175 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, align 4
    %176 = tail call i32 @register_operand(%struct.rtx_def.11418* %175, i32 signext %mode) #2
    %177 = icmp eq i32 %176, 0
    br i1 %177, label %182, label %178
  
  ; <label>:178                                     ; preds = %174
    %sunkaddr24 = ptrtoint %struct.rtx_def.11418** %operands to i32
    %sunkaddr25 = add i32 %sunkaddr24, 4
    %sunkaddr26 = inttoptr i32 %sunkaddr25 to %struct.rtx_def.11418**
    %179 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %sunkaddr26, align 4
    %180 = tail call %struct.rtx_def.11418* @force_const_mem(i32 signext %mode, %struct.rtx_def.11418* %179) #2
    %181 = tail call %struct.rtx_def.11418* @validize_mem(%struct.rtx_def.11418* %180) #2
    store %struct.rtx_def.11418* %181, %struct.rtx_def.11418** %sunkaddr26, align 4
    br label %182
  
  ; <label>:182                                     ; preds = %178, %174, %168, %166, %163, %.critedge, %59
    %183 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, align 4
    %184 = getelementptr inbounds %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, i32 1
    %185 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %184, align 4
    %186 = tail call %struct.rtx_def.11418* @gen_rtx_fmt_ee(i32 signext 47, i32 signext 0, %struct.rtx_def.11418* %183, %struct.rtx_def.11418* %185) #2
    %187 = tail call %struct.rtx_def.11418* @emit_insn(%struct.rtx_def.11418* %186) #2
    br label %188
  
  ; <label>:188                                     ; preds = %182, %63
    ret void
  }
  
  declare i32 @push_operand(%struct.rtx_def.11418*, i32 signext) #0
  
  declare %struct.rtx_def.11418* @copy_to_mode_reg(i32 signext, %struct.rtx_def.11418*) #0
  
  declare %struct.rtx_def.11418* @validize_mem(%struct.rtx_def.11418*) #0
  
  declare %struct.rtx_def.11418* @force_const_mem(i32 signext, %struct.rtx_def.11418*) #0
  
  attributes #0 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #2 = { nounwind }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            ix86_expand_move
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
  - { id: 2, class: gpr32 }
  - { id: 3, class: gpr32 }
  - { id: 4, class: gpr32 }
  - { id: 5, class: gpr32 }
  - { id: 6, class: gpr32 }
  - { id: 7, class: gpr32 }
  - { id: 8, class: gpr32 }
  - { id: 9, class: gpr32 }
  - { id: 10, class: gpr32 }
  - { id: 11, class: gpr32 }
  - { id: 12, class: gpr32 }
  - { id: 13, class: gpr32 }
  - { id: 14, class: gpr32 }
  - { id: 15, class: gpr32 }
  - { id: 16, class: gpr32 }
  - { id: 17, class: gpr32 }
  - { id: 18, class: gpr32 }
  - { id: 19, class: gpr32 }
  - { id: 20, class: gpr32 }
  - { id: 21, class: gpr32 }
  - { id: 22, class: gpr32 }
  - { id: 23, class: gpr32 }
  - { id: 24, class: gpr32 }
  - { id: 25, class: gpr32 }
  - { id: 26, class: gpr32 }
  - { id: 27, class: gpr32 }
  - { id: 28, class: gpr32 }
  - { id: 29, class: gpr32 }
  - { id: 30, class: gpr32 }
  - { id: 31, class: gpr32 }
  - { id: 32, class: gpr32 }
  - { id: 33, class: gpr32 }
  - { id: 34, class: gpr32 }
  - { id: 35, class: gpr32 }
  - { id: 36, class: gpr32 }
  - { id: 37, class: gpr32 }
  - { id: 38, class: gpr32 }
  - { id: 39, class: gpr32 }
  - { id: 40, class: gpr32 }
  - { id: 41, class: gpr32 }
  - { id: 42, class: gpr32 }
  - { id: 43, class: gpr32 }
  - { id: 44, class: gpr32 }
  - { id: 45, class: gpr32 }
  - { id: 46, class: gpr32 }
  - { id: 47, class: gpr32 }
  - { id: 48, class: gpr32 }
  - { id: 49, class: gpr32 }
  - { id: 50, class: gpr32 }
  - { id: 51, class: gpr32 }
  - { id: 52, class: gpr32 }
  - { id: 53, class: gpr32 }
  - { id: 54, class: gpr32 }
  - { id: 55, class: gpr32 }
  - { id: 56, class: gpr32 }
  - { id: 57, class: gpr32 }
  - { id: 58, class: gpr32 }
  - { id: 59, class: gpr32 }
  - { id: 60, class: gpr32 }
  - { id: 61, class: gpr32 }
  - { id: 62, class: gpr32 }
  - { id: 63, class: gpr32 }
  - { id: 64, class: gpr32 }
  - { id: 65, class: gpr32 }
  - { id: 66, class: gpr32 }
  - { id: 67, class: gpr32 }
  - { id: 68, class: gpr32 }
  - { id: 69, class: gpr32 }
  - { id: 70, class: gpr32 }
  - { id: 71, class: gpr32 }
  - { id: 72, class: gpr32 }
  - { id: 73, class: gpr32 }
  - { id: 74, class: gpr32 }
  - { id: 75, class: gpr32 }
  - { id: 76, class: gpr32 }
  - { id: 77, class: gpr32 }
  - { id: 78, class: gpr32 }
  - { id: 79, class: gpr32 }
  - { id: 80, class: gpr32 }
  - { id: 81, class: gpr32 }
  - { id: 82, class: gpr32 }
  - { id: 83, class: gpr32 }
  - { id: 84, class: gpr32 }
  - { id: 85, class: gpr32 }
  - { id: 86, class: gpr32 }
  - { id: 87, class: gpr32 }
  - { id: 88, class: gpr32 }
  - { id: 89, class: gpr32 }
  - { id: 90, class: gpr32 }
  - { id: 91, class: gpr32 }
  - { id: 92, class: gpr32 }
  - { id: 93, class: gpr32 }
  - { id: 94, class: gpr32 }
  - { id: 95, class: gpr32 }
  - { id: 96, class: gpr32 }
  - { id: 97, class: gpr32 }
  - { id: 98, class: gpr32 }
  - { id: 99, class: gpr32 }
  - { id: 100, class: gpr32 }
  - { id: 101, class: gpr32 }
  - { id: 102, class: gpr32 }
  - { id: 103, class: gpr32 }
  - { id: 104, class: gpr32 }
  - { id: 105, class: gpr32 }
  - { id: 106, class: gpr32 }
  - { id: 107, class: gpr32 }
  - { id: 108, class: gpr32 }
  - { id: 109, class: gpr32 }
  - { id: 110, class: gpr32 }
  - { id: 111, class: gpr32 }
  - { id: 112, class: gpr32 }
  - { id: 113, class: gpr32 }
  - { id: 114, class: gpr32 }
  - { id: 115, class: gpr32 }
  - { id: 116, class: gpr32 }
  - { id: 117, class: gpr32 }
  - { id: 118, class: gpr32 }
  - { id: 119, class: gpr32 }
  - { id: 120, class: gpr32 }
  - { id: 121, class: gpr32 }
  - { id: 122, class: gpr32 }
  - { id: 123, class: gpr32 }
  - { id: 124, class: gpr32 }
  - { id: 125, class: gpr32 }
  - { id: 126, class: gpr32 }
  - { id: 127, class: gpr32 }
  - { id: 128, class: gpr32 }
  - { id: 129, class: gpr32 }
  - { id: 130, class: gpr32 }
  - { id: 131, class: gpr32 }
  - { id: 132, class: gpr32 }
  - { id: 133, class: gpr32 }
  - { id: 134, class: gpr32 }
  - { id: 135, class: gpr32 }
  - { id: 136, class: gpr32 }
  - { id: 137, class: gpr32 }
  - { id: 138, class: gpr32 }
  - { id: 139, class: gpr32 }
  - { id: 140, class: gpr32 }
  - { id: 141, class: gpr32 }
  - { id: 142, class: gpr32 }
  - { id: 143, class: gpr32 }
  - { id: 144, class: gpr32 }
  - { id: 145, class: gpr32 }
  - { id: 146, class: gpr32 }
  - { id: 147, class: gpr32 }
  - { id: 148, class: gpr32 }
  - { id: 149, class: gpr32 }
  - { id: 150, class: gpr32 }
  - { id: 151, class: gpr32 }
  - { id: 152, class: gpr32 }
  - { id: 153, class: gpr32 }
  - { id: 154, class: gpr32 }
  - { id: 155, class: gpr32 }
  - { id: 156, class: gpr32 }
  - { id: 157, class: gpr32 }
  - { id: 158, class: gpr32 }
  - { id: 159, class: gpr32 }
  - { id: 160, class: gpr32 }
  - { id: 161, class: gpr32 }
  - { id: 162, class: gpr32 }
  - { id: 163, class: gpr32 }
  - { id: 164, class: gpr32 }
  - { id: 165, class: gpr32 }
  - { id: 166, class: gpr32 }
  - { id: 167, class: gpr32 }
  - { id: 168, class: gpr32 }
  - { id: 169, class: gpr32 }
  - { id: 170, class: gpr32 }
  - { id: 171, class: gpr32 }
  - { id: 172, class: gpr32 }
  - { id: 173, class: gpr32 }
  - { id: 174, class: gpr32 }
  - { id: 175, class: gpr32 }
  - { id: 176, class: gpr32 }
  - { id: 177, class: gpr32 }
  - { id: 178, class: gpr32 }
  - { id: 179, class: gpr32 }
  - { id: 180, class: gpr32 }
  - { id: 181, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%19' }
  - { reg: '%a1', virtual-reg: '%20' }
  - { reg: '%t9' }
  - { reg: '%v0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 10485):
    successors: %bb.15.symbolic_operand.exit.thread(37), %bb.1(62)
    liveins: %a0, %a1, %t9, %v0
  
    %21 = ADDu %v0, %t9
    %20 = COPY %a1
    %19 = COPY %a0
    %22 = LW %21, target-flags(<unknown>) @reload_in_progress, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %23 = LW %22, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from @reload_in_progress)
    %24 = LW %21, target-flags(<unknown>) @reload_completed, <0x466f670> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %25 = LW %24, 0, <0x4707e60> = !{!"unison-memory-partition", i32 3} :: (load 4 from @reload_completed)
    %26 = LW %21, target-flags(<unknown>) @flag_pic, <0x471ba50> = !{!"unison-memory-partition", i32 4} :: (load 4 from got)
    %27 = LW killed %26, 0, <0x46f9790> = !{!"unison-memory-partition", i32 5} :: (load 4 from @flag_pic)
    BEQ killed %27, %zero, %bb.15.symbolic_operand.exit.thread, implicit-def dead %at
    B %bb.1, implicit-def dead %at
  
  bb.1 (%ir-block.6, freq 6553):
    successors: %bb.2(50), %bb.15.symbolic_operand.exit.thread(50)
  
    %28 = LW %21, target-flags(<unknown>) @target_flags, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %29 = LW killed %28, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from @target_flags)
    %30 = EXT killed %29, 25, 1
    %31 = ORi killed %30, 4
    BNE killed %31, %19, %bb.15.symbolic_operand.exit.thread, implicit-def dead %at
    B %bb.2, implicit-def dead %at
  
  bb.2 (%ir-block.12, freq 3276):
    successors: %bb.10.symbolic_operand.exit.thread18(50), %bb.42(50)
  
    %1 = LW %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.13)
    %33 = LW %1, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.15)
    %32 = SRL killed %33, 16
    %34 = ADDiu %32, -67
    %35 = SLTiu killed %34, 2
    BNE killed %35, %zero, %bb.10.symbolic_operand.exit.thread18, implicit-def dead %at
    B %bb.42, implicit-def dead %at
  
  bb.42 (%ir-block.12, freq 1638):
    successors: %bb.3(50), %bb.15.symbolic_operand.exit.thread(50)
  
    %36 = ADDiu %zero, 58
    BNE %32, killed %36, %bb.15.symbolic_operand.exit.thread, implicit-def dead %at
    B %bb.3, implicit-def dead %at
  
  bb.3 (%ir-block.18, freq 819):
    successors: %bb.10.symbolic_operand.exit.thread18(50), %bb.43(50)
  
    %2 = LW %1, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.20)
    %3 = LW %2, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.22)
    %37 = SRL %3, 16
    %38 = ADDiu %37, -67
    %39 = SLTiu killed %38, 2
    BNE killed %39, %zero, %bb.10.symbolic_operand.exit.thread18, implicit-def dead %at
    B %bb.43, implicit-def dead %at
  
  bb.43 (%ir-block.18, freq 409):
    successors: %bb.4(50), %bb.5(50)
  
    %40 = ADDiu %zero, 42
    BNE %37, killed %40, %bb.5, implicit-def dead %at
    B %bb.4, implicit-def dead %at
  
  bb.4 (%ir-block.25, freq 204):
    successors: %bb.5(12), %bb.44(87)
  
    %41 = LW %2, 8, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.26)
    %42 = SLTiu %41, 16
    BEQ killed %42, %zero, %bb.5, implicit-def dead %at
  
  bb.44 (%ir-block.25, freq 179):
    successors: %bb.10.symbolic_operand.exit.thread18(85), %bb.5(14)
  
    %43 = ADDiu %zero, 1
    %44 = SLLV killed %43, %41
    %45 = ANDi killed %44, 32960
    BNE killed %45, %zero, %bb.10.symbolic_operand.exit.thread18, implicit-def dead %at
  
  bb.5 (%ir-block.28, freq 256):
    successors: %bb.6(50), %bb.15.symbolic_operand.exit.thread(50)
  
    %46 = LUi 65535
    %47 = AND %3, %46
    %48 = LUi 75
    BNE killed %47, killed %48, %bb.15.symbolic_operand.exit.thread, implicit-def dead %at
    B %bb.6, implicit-def dead %at
  
  bb.6 (%ir-block.30, freq 128):
    successors: %bb.7(50), %bb.15.symbolic_operand.exit.thread(50)
  
    %49 = LW %2, 8, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.32)
    %50 = LW killed %49, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.33)
    %52 = AND killed %50, %46
    %53 = LUi 54
    BNE killed %52, killed %53, %bb.15.symbolic_operand.exit.thread, implicit-def dead %at
    B %bb.7, implicit-def dead %at
  
  bb.7 (%ir-block.36, freq 64):
    successors: %bb.10.symbolic_operand.exit.thread18(50), %bb.45(50)
  
    %4 = LW %2, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.38)
    %55 = LW %4, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.40)
    %54 = SRL killed %55, 16
    %56 = ADDiu %54, -67
    %57 = SLTiu killed %56, 2
    BNE killed %57, %zero, %bb.10.symbolic_operand.exit.thread18, implicit-def dead %at
    B %bb.45, implicit-def dead %at
  
  bb.45 (%ir-block.36, freq 32):
    successors: %bb.8(50), %bb.15.symbolic_operand.exit.thread(50)
  
    %58 = ADDiu %zero, 42
    BNE %54, killed %58, %bb.15.symbolic_operand.exit.thread, implicit-def dead %at
    B %bb.8, implicit-def dead %at
  
  bb.8 (%ir-block.43, freq 16):
    successors: %bb.9.symbolic_operand.exit(50), %bb.15.symbolic_operand.exit.thread(50)
  
    %59 = LW %4, 8, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.44)
    %60 = ADDiu %zero, 7
    BNE killed %59, killed %60, %bb.15.symbolic_operand.exit.thread, implicit-def dead %at
    B %bb.9.symbolic_operand.exit, implicit-def dead %at
  
  bb.9.symbolic_operand.exit (freq 8):
    successors: %bb.10.symbolic_operand.exit.thread18(50), %bb.15.symbolic_operand.exit.thread(50)
  
    %61 = LW %4, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.48)
    %62 = LW killed %61, 4, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.51)
    %63 = LHu killed %62, 0, <0x466f670> = !{!"unison-memory-partition", i32 2} :: (load 2 from %ir.52, align 4)
    %64 = ADDiu killed %63, -67
    %65 = SLTiu killed %64, 2
    BEQ killed %65, %zero, %bb.15.symbolic_operand.exit.thread, implicit-def dead %at
    B %bb.10.symbolic_operand.exit.thread18, implicit-def dead %at
  
  bb.10.symbolic_operand.exit.thread18 (freq 2237):
    successors: %bb.13(33), %bb.46.symbolic_operand.exit.thread18(66)
  
    %5 = LW %20, 0, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.operands)
    %67 = LW %5, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.56)
    %66 = SRL killed %67, 16
    %68 = ADDiu %zero, 61
    BEQ %66, killed %68, %bb.13, implicit-def dead %at
    B %bb.46.symbolic_operand.exit.thread18, implicit-def dead %at
  
  bb.46.symbolic_operand.exit.thread18 (freq 1491):
    successors: %bb.11(50), %bb.12(49)
  
    %69 = ADDiu %zero, 66
    BNE %66, killed %69, %bb.12, implicit-def dead %at
    B %bb.11, implicit-def dead %at
  
  bb.11 (%ir-block.59, freq 745):
    successors: %bb.40(100)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %70 = LW %21, target-flags(<unknown>) @force_reg, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @force_reg)
    %a0 = COPY %19
    %a1 = COPY %1
    %gp = COPY %21
    %t9 = COPY %70
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %71 = COPY %v0
    SW %71, %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr2)
    B %bb.40, implicit-def dead %at
  
  bb.12 (%ir-block.61, freq 745):
    successors: %bb.13(100)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %72 = LW %21, target-flags(<unknown>) @gen_reg_rtx, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @gen_reg_rtx)
    %a0 = COPY %19
    %gp = COPY %21
    %t9 = COPY %72
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %73 = COPY %v0
    %7 = LW %20, 4, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.sunkaddr5)
    %6 = COPY %73
  
  bb.13 (%ir-block.63, freq 1491):
    successors: %bb.41(37), %bb.14..critedge(62)
  
    %8 = PHI %1, %bb.10.symbolic_operand.exit.thread18, %7, %bb.12
    %9 = PHI %5, %bb.10.symbolic_operand.exit.thread18, %6, %bb.12
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %74 = LW %21, target-flags(<unknown>) @legitimize_pic_address, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @legitimize_pic_address)
    %a0 = COPY %8
    %a1 = COPY %9
    %gp = COPY %21
    %t9 = COPY %74
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %75 = COPY %v0
    %76 = LW %20, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.operands)
    BEQ %75, killed %76, %bb.41, implicit-def dead %at
    B %bb.14..critedge, implicit-def dead %at
  
  bb.14..critedge (freq 932):
    successors: %bb.40(100)
  
    %10 = COPY %75
    SW %10, %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr8)
    B %bb.40, implicit-def dead %at
  
  bb.15.symbolic_operand.exit.thread (freq 8248):
    successors: %bb.16(50), %bb.20(50)
  
    %11 = LW %20, 0, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.operands)
    %77 = LW %11, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.69)
    %78 = LUi 65535
    %79 = AND killed %77, killed %78
    %80 = LUi 66
    BNE killed %79, killed %80, %bb.20, implicit-def dead %at
    B %bb.16, implicit-def dead %at
  
  bb.16 (%ir-block.72, freq 4124):
    successors: %bb.17(50), %bb.18(50)
  
    %81 = LW %21, target-flags(<unknown>) @mode_size, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %82 = ADDu killed %81, %19
    %83 = LBu killed %82, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.76)
    %84 = LW %21, target-flags(<unknown>) @target_flags, <0x466f670> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %85 = ADDiu %83, 1
    %86 = ANDi killed %85, 510
    %87 = ADDiu %83, 7
    %88 = ANDi killed %87, 504
    %89 = LBu killed %84, 0, <0x4707e60> = !{!"unison-memory-partition", i32 3} :: (load 1 from @target_flags, align 4)
    %90 = ANDi killed %89, 2
    %91 = SRL killed %90, 1
    %92 = MOVN_I_I killed %88, killed %91, %86
    BNE killed %92, %83, %bb.18, implicit-def dead %at
    B %bb.17, implicit-def dead %at
  
  bb.17 (%ir-block.85, freq 2062):
    successors: %bb.18(37), %bb.20(62)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %93 = LW %21, target-flags(<unknown>) @push_operand, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @push_operand)
    %a0 = COPY %11
    %a1 = COPY %19
    %gp = COPY %21
    %t9 = COPY %93
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %94 = COPY %v0
    BNE %94, %zero, %bb.20, implicit-def dead %at
    B %bb.18, implicit-def dead %at
  
  bb.18 (%ir-block.88, freq 2835):
    successors: %bb.19(50), %bb.20(50)
  
    %12 = LW %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.89)
    %95 = LW %12, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.91)
    %96 = LUi 65535
    %97 = AND killed %95, killed %96
    %98 = LUi 66
    BNE killed %97, killed %98, %bb.20, implicit-def dead %at
    B %bb.19, implicit-def dead %at
  
  bb.19 (%ir-block.94, freq 1417):
    successors: %bb.20(100)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %99 = LW %21, target-flags(<unknown>) @force_reg, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @force_reg)
    %a0 = COPY %19
    %a1 = COPY %12
    %gp = COPY %21
    %t9 = COPY %99
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %100 = COPY %v0
    SW %100, %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr11)
  
  bb.20 (%ir-block.96, freq 8248):
    successors: %bb.29(37), %bb.21(62)
  
    %101 = LW %20, 0, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.operands)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %102 = LW %21, target-flags(<unknown>) @push_operand, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @push_operand)
    %a0 = COPY %101
    %a1 = COPY %19
    %gp = COPY %21
    %t9 = COPY %102
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %103 = COPY %v0
    BEQ %103, %zero, %bb.29, implicit-def dead %at
    B %bb.21, implicit-def dead %at
  
  bb.21 (%ir-block.100, freq 5155):
    successors: %bb.22(50), %bb.23(50)
  
    %13 = LW %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.101)
    %104 = LW %13, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.103)
    %105 = LUi 65535
    %106 = AND killed %104, killed %105
    %107 = LUi 63
    BNE killed %106, killed %107, %bb.23, implicit-def dead %at
    B %bb.22, implicit-def dead %at
  
  bb.22 (%ir-block.106, freq 2577):
    successors: %bb.23(100)
  
    %14 = LW %13, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.108)
  
  bb.23 (%ir-block.110, freq 5155):
    successors: %bb.28.general_no_elim_operand.exit.thread(3), %bb.50(96)
  
    %15 = PHI %13, %bb.21, %14, %bb.22
    %112 = LW %21, target-flags(<unknown>) @global_rtl, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %113 = LW %112, 20, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from `%struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 5)`)
    BEQ %15, killed %113, %bb.28.general_no_elim_operand.exit.thread, implicit-def dead %at
    B %bb.50, implicit-def dead %at
  
  bb.50 (%ir-block.110, freq 4994):
    successors: %bb.28.general_no_elim_operand.exit.thread(3), %bb.49(96)
  
    %108 = LW %112, 12, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from `%struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 3)`)
    BEQ %15, %108, %bb.28.general_no_elim_operand.exit.thread, implicit-def dead %at
    B %bb.49, implicit-def dead %at
  
  bb.49 (%ir-block.110, freq 4832):
    successors: %bb.28.general_no_elim_operand.exit.thread(6), %bb.48(93)
  
    %109 = LW %112, 24, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from `%struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 6)`)
    BEQ %15, %109, %bb.28.general_no_elim_operand.exit.thread, implicit-def dead %at
    B %bb.48, implicit-def dead %at
  
  bb.48 (%ir-block.110, freq 4510):
    successors: %bb.28.general_no_elim_operand.exit.thread(14), %bb.47(85)
  
    %110 = LW %112, 28, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from `%struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 7)`)
    BEQ %15, %110, %bb.28.general_no_elim_operand.exit.thread, implicit-def dead %at
    B %bb.47, implicit-def dead %at
  
  bb.47 (%ir-block.110, freq 3866):
    successors: %bb.28.general_no_elim_operand.exit.thread(33), %bb.24(66)
  
    %111 = LW %112, 32, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from `%struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 8)`)
    BEQ %15, %111, %bb.28.general_no_elim_operand.exit.thread, implicit-def dead %at
    B %bb.24, implicit-def dead %at
  
  bb.24 (%ir-block.121, freq 2577):
    successors: %bb.25(50), %bb.26.general_no_elim_operand.exit(50)
  
    %114 = LW %15, 0, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.122)
    %115 = LUi 65535
    %116 = AND killed %114, killed %115
    %117 = LUi 61
    BNE killed %116, killed %117, %bb.26.general_no_elim_operand.exit, implicit-def dead %at
    B %bb.25, implicit-def dead %at
  
  bb.25 (%ir-block.125, freq 1288):
    successors: %bb.28.general_no_elim_operand.exit.thread(50), %bb.26.general_no_elim_operand.exit(50)
  
    %118 = LW %15, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.126)
    %119 = ADDiu killed %118, -53
    %120 = SLTiu killed %119, 5
    BNE killed %120, %zero, %bb.28.general_no_elim_operand.exit.thread, implicit-def dead %at
    B %bb.26.general_no_elim_operand.exit, implicit-def dead %at
  
  bb.26.general_no_elim_operand.exit (freq 1933):
    successors: %bb.27.general_no_elim_operand.exit.general_no_elim_operand.exit.thread_crit_edge(37), %bb.29(62)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %121 = LW %21, target-flags(<unknown>) @general_operand, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @general_operand)
    %a0 = COPY %13
    %a1 = COPY %19
    %gp = COPY %21
    %t9 = COPY %121
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %122 = COPY %v0
    BNE %122, %zero, %bb.29, implicit-def dead %at
    B %bb.27.general_no_elim_operand.exit.general_no_elim_operand.exit.thread_crit_edge, implicit-def dead %at
  
  bb.27.general_no_elim_operand.exit.general_no_elim_operand.exit.thread_crit_edge (freq 724):
    successors: %bb.28.general_no_elim_operand.exit.thread(100)
  
    %16 = LW %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr14)
  
  bb.28.general_no_elim_operand.exit.thread (freq 3946):
    successors: %bb.29(100)
  
    %17 = PHI %13, %bb.23, %13, %bb.50, %13, %bb.49, %13, %bb.48, %13, %bb.47, %13, %bb.25, %16, %bb.27.general_no_elim_operand.exit.general_no_elim_operand.exit.thread_crit_edge
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %123 = LW %21, target-flags(<unknown>) @copy_to_mode_reg, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @copy_to_mode_reg)
    %a0 = COPY %19
    %a1 = COPY %17
    %gp = COPY %21
    %t9 = COPY %123
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %124 = COPY %v0
    SW %124, %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr17)
  
  bb.29 (%ir-block.133, freq 8248):
    successors: %bb.51(75), %bb.34(25)
  
    %129 = ADDiu %zero, 5
    BNE %19, killed %129, %bb.34, implicit-def dead %at
    B %bb.51, implicit-def dead %at
  
  bb.51 (%ir-block.133, freq 6186):
    successors: %bb.30(66), %bb.34(33)
  
    %126 = LW %21, target-flags(<unknown>) @target_flags, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %127 = LW %126, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from @target_flags)
    %128 = LUi 512
    %125 = AND %127, %128
    BEQ %125, %zero, %bb.34, implicit-def dead %at
    B %bb.30, implicit-def dead %at
  
  bb.30 (%ir-block.138, freq 4124):
    successors: %bb.34(37), %bb.31(62)
  
    %130 = LW %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.139)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %131 = LW %21, target-flags(<unknown>) @immediate_operand, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @immediate_operand)
    %132 = ADDiu %zero, 5
    %a0 = COPY %130
    %a1 = COPY %132
    %gp = COPY %21
    %t9 = COPY %131
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %133 = COPY %v0
    BEQ %133, %zero, %bb.34, implicit-def dead %at
    B %bb.31, implicit-def dead %at
  
  bb.31 (%ir-block.143, freq 2577):
    successors: %bb.32(37), %bb.34(62)
  
    %134 = LW %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr20)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %135 = LW %21, target-flags(<unknown>) @x86_64_zero_extended_value, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @x86_64_zero_extended_value)
    %a0 = COPY %134
    %gp = COPY %21
    %t9 = COPY %135
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %136 = COPY %v0
    BNE %136, %zero, %bb.34, implicit-def dead %at
    B %bb.32, implicit-def dead %at
  
  bb.32 (%ir-block.147, freq 966):
    successors: %bb.34(25), %bb.52(75)
  
    %138 = LW %20, 0, <0x466f670> = !{!"unison-memory-partition", i32 2} :: (load 4 from %ir.operands)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %139 = LW %21, target-flags(<unknown>) @register_operand, <0x4707e60> = !{!"unison-memory-partition", i32 3} :: (load 4 from call-entry @register_operand)
    %140 = ADDiu %zero, 5
    %a0 = COPY %138
    %a1 = COPY %140
    %gp = COPY %21
    %t9 = COPY %139
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %141 = COPY %v0
    %144 = LW %21, target-flags(<unknown>) @optimize, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %148 = LW killed %144, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from @optimize)
    BEQ killed %148, %zero, %bb.34, implicit-def dead %at
    B %bb.52, implicit-def dead %at
  
  bb.52 (%ir-block.147, freq 724):
    successors: %bb.34(33), %bb.33(66)
  
    %143 = LW %24, 0, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from @reload_completed)
    %146 = OR %143, %141
    %147 = LW %22, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from @reload_in_progress)
    %137 = OR %146, %147
    BNE %137, %zero, %bb.34, implicit-def dead %at
    B %bb.33, implicit-def dead %at
  
  bb.33 (%ir-block.157, freq 483):
    successors: %bb.34(100)
  
    %149 = LW %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr23)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %150 = LW %21, target-flags(<unknown>) @copy_to_mode_reg, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @copy_to_mode_reg)
    %151 = ADDiu %zero, 5
    %a0 = COPY %151
    %a1 = COPY %149
    %gp = COPY %21
    %t9 = COPY %150
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %152 = COPY %v0
    SW %152, %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr23)
  
  bb.34 (%ir-block.160, freq 8248):
    successors: %bb.36(66), %bb.35(33)
  
    %0 = OR %25, %23
    %153 = SLL %19, 2
    %154 = LW %21, target-flags(<unknown>) @mode_class, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %155 = ADDu killed %154, killed %153
    %18 = LW killed %155, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.161)
    %156 = ADDiu %zero, 6
    %157 = ORi %18, 4
    BEQ killed %157, killed %156, %bb.36, implicit-def dead %at
    B %bb.35, implicit-def dead %at
  
  bb.35 (%ir-block.163, freq 2749):
    successors: %bb.40(25), %bb.53(75)
  
    BNE %0, %zero, %bb.40, implicit-def dead %at
    B %bb.53, implicit-def dead %at
  
  bb.53 (%ir-block.163, freq 2062):
    successors: %bb.40(33), %bb.37(66)
  
    %158 = ADDiu %zero, 8
    BNE %18, killed %158, %bb.40, implicit-def dead %at
    B %bb.37, implicit-def dead %at
  
  bb.36 (%ir-block.166, freq 5498):
    successors: %bb.40(62), %bb.37(37)
  
    BNE %0, %zero, %bb.40, implicit-def dead %at
    B %bb.37, implicit-def dead %at
  
  bb.37 (%ir-block.168, freq 3436):
    successors: %bb.38(50), %bb.40(50)
  
    %159 = LW %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.170)
    %160 = LW killed %159, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.171)
    %161 = LUi 65535
    %162 = AND killed %160, killed %161
    %163 = LUi 55
    BNE killed %162, killed %163, %bb.40, implicit-def dead %at
    B %bb.38, implicit-def dead %at
  
  bb.38 (%ir-block.174, freq 1718):
    successors: %bb.40(37), %bb.39(62)
  
    %164 = LW %20, 0, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.operands)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %165 = LW %21, target-flags(<unknown>) @register_operand, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @register_operand)
    %a0 = COPY %164
    %a1 = COPY %19
    %gp = COPY %21
    %t9 = COPY %165
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %166 = COPY %v0
    BEQ %166, %zero, %bb.40, implicit-def dead %at
    B %bb.39, implicit-def dead %at
  
  bb.39 (%ir-block.178, freq 1073):
    successors: %bb.40(100)
  
    %167 = LW %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr26)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %168 = LW %21, target-flags(<unknown>) @force_const_mem, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @force_const_mem)
    %a0 = COPY %19
    %a1 = COPY %167
    %gp = COPY %21
    %t9 = COPY %168
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %169 = COPY %v0
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %170 = LW %21, target-flags(<unknown>) @validize_mem, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @validize_mem)
    %a0 = COPY %169
    %gp = COPY %21
    %t9 = COPY %170
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %171 = COPY %v0
    SW %171, %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr26)
  
  bb.40 (%ir-block.182, freq 9926):
    successors: %bb.41(100)
  
    %172 = LW %20, 4, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.184)
    %173 = LW %20, 0, <0x466f670> = !{!"unison-memory-partition", i32 2} :: (load 4 from %ir.operands)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %174 = LW %21, target-flags(<unknown>) @gen_rtx_fmt_ee, <0x4707e60> = !{!"unison-memory-partition", i32 3} :: (load 4 from call-entry @gen_rtx_fmt_ee)
    %175 = ADDiu %zero, 47
    %176 = ADDiu %zero, 0
    %a0 = COPY %175
    %a1 = COPY %176
    %a2 = COPY %173
    %a3 = COPY %172
    %gp = COPY %21
    %t9 = COPY %174
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %177 = COPY %v0
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %178 = LW %21, target-flags(<unknown>) @emit_insn, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @emit_insn)
    %a0 = COPY %177
    %gp = COPY %21
    %t9 = COPY %178
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
  
  bb.41 (%ir-block.188, freq 10485):
    liveouts:
  
    RetRA

...
--- |
  ; ModuleID = '/home/romi/didaktoriko/unison/unison-experiments/experiments/mips/selected-functions/size-toplas/gcc.i386.ix86_expand_move.ll'
  target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
  target triple = "mips--linux-gnu"
  
  %struct.rtx_def.11418 = type { i32, [1 x %union.rtunion_def.11419] }
  %union.rtunion_def.11419 = type { i32 }
  %struct.rtvec_def.11455 = type { i32, [1 x %struct.rtx_def.11418*] }
  
  @target_flags = external global i32, align 4
  @flag_pic = external global i32, align 4
  @optimize = external global i32, align 4
  @mode_size = external constant [59 x i8], align 1
  @mode_class = external constant [59 x i32], align 4
  @global_rtl = external global [11 x %struct.rtx_def.11418*], align 4
  @reload_completed = external global i32, align 4
  @reload_in_progress = external global i32, align 4
  
  declare %struct.rtx_def.11418* @gen_reg_rtx(i32 signext) #0
  
  declare %struct.rtx_def.11418* @emit_insn(%struct.rtx_def.11418*) #0
  
  declare %struct.rtx_def.11418* @gen_rtx_fmt_ee(i32 signext, i32 signext, %struct.rtx_def.11418*, %struct.rtx_def.11418*) #0
  
  declare i32 @general_operand(%struct.rtx_def.11418*, i32 signext) #0
  
  ; Function Attrs: nounwind
  declare i32 @x86_64_zero_extended_value(%struct.rtx_def.11418* nocapture readonly) #1
  
  declare i32 @register_operand(%struct.rtx_def.11418*, i32 signext) #0
  
  declare i32 @immediate_operand(%struct.rtx_def.11418*, i32 signext) #0
  
  ; Function Attrs: nounwind
  declare %struct.rtx_def.11418* @legitimize_pic_address(%struct.rtx_def.11418*, %struct.rtx_def.11418*) #1
  
  declare %struct.rtx_def.11418* @force_reg(i32 signext, %struct.rtx_def.11418*) #0
  
  ; Function Attrs: nounwind
  define void @ix86_expand_move(i32 signext %mode, %struct.rtx_def.11418** nocapture %operands) #1 {
    %1 = load i32, i32* @reload_in_progress, align 4
    %2 = load i32, i32* @reload_completed, align 4
    %3 = or i32 %2, %1
    %4 = load i32, i32* @flag_pic, align 4
    %5 = icmp eq i32 %4, 0
    br i1 %5, label %symbolic_operand.exit.thread, label %6
  
  ; <label>:6                                       ; preds = %0
    %7 = load i32, i32* @target_flags, align 4
    %8 = lshr i32 %7, 25
    %9 = and i32 %8, 1
    %10 = or i32 %9, 4
    %11 = icmp eq i32 %10, %mode
    br i1 %11, label %12, label %symbolic_operand.exit.thread
  
  ; <label>:12                                      ; preds = %6
    %13 = getelementptr inbounds %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, i32 1
    %14 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %13, align 4
    %15 = bitcast %struct.rtx_def.11418* %14 to i32*
    %16 = load i32, i32* %15, align 4
    %17 = lshr i32 %16, 16
    switch i32 %17, label %symbolic_operand.exit.thread [
      i32 68, label %symbolic_operand.exit.thread18
      i32 67, label %symbolic_operand.exit.thread18
      i32 58, label %18
    ]
  
  ; <label>:18                                      ; preds = %12
    %19 = getelementptr inbounds %struct.rtx_def.11418, %struct.rtx_def.11418* %14, i32 0, i32 1, i32 0
    %20 = bitcast %union.rtunion_def.11419* %19 to %struct.rtx_def.11418**
    %21 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %20, align 4
    %22 = bitcast %struct.rtx_def.11418* %21 to i32*
    %23 = load i32, i32* %22, align 4
    %24 = lshr i32 %23, 16
    switch i32 %24, label %28 [
      i32 68, label %symbolic_operand.exit.thread18
      i32 67, label %symbolic_operand.exit.thread18
      i32 42, label %25
    ]
  
  ; <label>:25                                      ; preds = %18
    %26 = getelementptr inbounds %struct.rtx_def.11418, %struct.rtx_def.11418* %21, i32 0, i32 1, i32 1, i32 0
    %27 = load i32, i32* %26, align 4
    switch i32 %27, label %28 [
      i32 6, label %symbolic_operand.exit.thread18
      i32 7, label %symbolic_operand.exit.thread18
      i32 15, label %symbolic_operand.exit.thread18
    ]
  
  ; <label>:28                                      ; preds = %25, %18
    %.mask.i = and i32 %23, -65536
    %29 = icmp eq i32 %.mask.i, 4915200
    br i1 %29, label %30, label %symbolic_operand.exit.thread
  
  ; <label>:30                                      ; preds = %28
    %31 = getelementptr inbounds %struct.rtx_def.11418, %struct.rtx_def.11418* %21, i32 0, i32 1, i32 1
    %32 = bitcast %union.rtunion_def.11419* %31 to i32**
    %33 = load i32*, i32** %32, align 4
    %34 = load i32, i32* %33, align 4
    %.mask1.i = and i32 %34, -65536
    %35 = icmp eq i32 %.mask1.i, 3538944
    br i1 %35, label %36, label %symbolic_operand.exit.thread
  
  ; <label>:36                                      ; preds = %30
    %37 = getelementptr inbounds %struct.rtx_def.11418, %struct.rtx_def.11418* %21, i32 0, i32 1, i32 0
    %38 = bitcast %union.rtunion_def.11419* %37 to %struct.rtx_def.11418**
    %39 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %38, align 4
    %40 = bitcast %struct.rtx_def.11418* %39 to i32*
    %41 = load i32, i32* %40, align 4
    %42 = lshr i32 %41, 16
    switch i32 %42, label %symbolic_operand.exit.thread [
      i32 68, label %symbolic_operand.exit.thread18
      i32 67, label %symbolic_operand.exit.thread18
      i32 42, label %43
    ]
  
  ; <label>:43                                      ; preds = %36
    %44 = getelementptr inbounds %struct.rtx_def.11418, %struct.rtx_def.11418* %39, i32 0, i32 1, i32 1, i32 0
    %45 = load i32, i32* %44, align 4
    %46 = icmp eq i32 %45, 7
    br i1 %46, label %symbolic_operand.exit, label %symbolic_operand.exit.thread
  
  symbolic_operand.exit:                            ; preds = %43
    %47 = getelementptr inbounds %struct.rtx_def.11418, %struct.rtx_def.11418* %39, i32 0, i32 1, i32 0
    %48 = bitcast %union.rtunion_def.11419* %47 to %struct.rtvec_def.11455**
    %49 = load %struct.rtvec_def.11455*, %struct.rtvec_def.11455** %48, align 4
    %50 = getelementptr inbounds %struct.rtvec_def.11455, %struct.rtvec_def.11455* %49, i32 0, i32 1, i32 0
    %51 = bitcast %struct.rtx_def.11418** %50 to i32**
    %52 = load i32*, i32** %51, align 4
    %53 = load i32, i32* %52, align 4
    %54 = lshr i32 %53, 16
    %.off.i = add nsw i32 %54, -67
    %switch.i = icmp ult i32 %.off.i, 2
    br i1 %switch.i, label %symbolic_operand.exit.thread18, label %symbolic_operand.exit.thread
  
  symbolic_operand.exit.thread18:                   ; preds = %symbolic_operand.exit, %36, %36, %25, %25, %25, %18, %18, %12, %12
    %55 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, align 4
    %56 = bitcast %struct.rtx_def.11418* %55 to i32*
    %57 = load i32, i32* %56, align 4
    %58 = lshr i32 %57, 16
    switch i32 %58, label %61 [
      i32 66, label %59
      i32 61, label %63
    ]
  
  ; <label>:59                                      ; preds = %symbolic_operand.exit.thread18
    %60 = tail call %struct.rtx_def.11418* @force_reg(i32 signext %mode, %struct.rtx_def.11418* %14) #2
    %sunkaddr = ptrtoint %struct.rtx_def.11418** %operands to i32
    %sunkaddr1 = add i32 %sunkaddr, 4
    %sunkaddr2 = inttoptr i32 %sunkaddr1 to %struct.rtx_def.11418**
    store %struct.rtx_def.11418* %60, %struct.rtx_def.11418** %sunkaddr2, align 4
    br label %182
  
  ; <label>:61                                      ; preds = %symbolic_operand.exit.thread18
    %62 = tail call %struct.rtx_def.11418* @gen_reg_rtx(i32 signext %mode) #2
    %sunkaddr3 = ptrtoint %struct.rtx_def.11418** %operands to i32
    %sunkaddr4 = add i32 %sunkaddr3, 4
    %sunkaddr5 = inttoptr i32 %sunkaddr4 to %struct.rtx_def.11418**
    %.pre = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %sunkaddr5, align 4
    br label %63
  
  ; <label>:63                                      ; preds = %61, %symbolic_operand.exit.thread18
    %64 = phi %struct.rtx_def.11418* [ %.pre, %61 ], [ %14, %symbolic_operand.exit.thread18 ]
    %temp.0 = phi %struct.rtx_def.11418* [ %62, %61 ], [ %55, %symbolic_operand.exit.thread18 ]
    %65 = tail call %struct.rtx_def.11418* @legitimize_pic_address(%struct.rtx_def.11418* %64, %struct.rtx_def.11418* %temp.0)
    %66 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, align 4
    %67 = icmp eq %struct.rtx_def.11418* %65, %66
    br i1 %67, label %188, label %.critedge
  
  .critedge:                                        ; preds = %63
    %sunkaddr6 = ptrtoint %struct.rtx_def.11418** %operands to i32
    %sunkaddr7 = add i32 %sunkaddr6, 4
    %sunkaddr8 = inttoptr i32 %sunkaddr7 to %struct.rtx_def.11418**
    store %struct.rtx_def.11418* %65, %struct.rtx_def.11418** %sunkaddr8, align 4
    br label %182
  
  symbolic_operand.exit.thread:                     ; preds = %symbolic_operand.exit, %43, %36, %30, %28, %12, %6, %0
    %68 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, align 4
    %69 = bitcast %struct.rtx_def.11418* %68 to i32*
    %70 = load i32, i32* %69, align 4
    %.mask = and i32 %70, -65536
    %71 = icmp eq i32 %.mask, 4325376
    br i1 %71, label %72, label %96
  
  ; <label>:72                                      ; preds = %symbolic_operand.exit.thread
    %73 = load i32, i32* @target_flags, align 4
    %74 = and i32 %73, 33554432
    %75 = icmp ne i32 %74, 0
    %76 = getelementptr inbounds [59 x i8], [59 x i8]* @mode_size, i32 0, i32 %mode
    %77 = load i8, i8* %76, align 1
    %78 = zext i8 %77 to i32
    %79 = add nuw nsw i32 %78, 7
    %80 = and i32 %79, 504
    %81 = add nuw nsw i32 %78, 1
    %82 = and i32 %81, 510
    %83 = select i1 %75, i32 %80, i32 %82
    %84 = icmp eq i32 %83, %78
    br i1 %84, label %85, label %88
  
  ; <label>:85                                      ; preds = %72
    %86 = tail call i32 @push_operand(%struct.rtx_def.11418* %68, i32 signext %mode) #2
    %87 = icmp eq i32 %86, 0
    br i1 %87, label %88, label %96
  
  ; <label>:88                                      ; preds = %85, %72
    %89 = getelementptr inbounds %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, i32 1
    %90 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %89, align 4
    %91 = bitcast %struct.rtx_def.11418* %90 to i32*
    %92 = load i32, i32* %91, align 4
    %.mask12 = and i32 %92, -65536
    %93 = icmp eq i32 %.mask12, 4325376
    br i1 %93, label %94, label %96
  
  ; <label>:94                                      ; preds = %88
    %95 = tail call %struct.rtx_def.11418* @force_reg(i32 signext %mode, %struct.rtx_def.11418* %90) #2
    %sunkaddr9 = ptrtoint %struct.rtx_def.11418** %operands to i32
    %sunkaddr10 = add i32 %sunkaddr9, 4
    %sunkaddr11 = inttoptr i32 %sunkaddr10 to %struct.rtx_def.11418**
    store %struct.rtx_def.11418* %95, %struct.rtx_def.11418** %sunkaddr11, align 4
    br label %96
  
  ; <label>:96                                      ; preds = %94, %88, %85, %symbolic_operand.exit.thread
    %97 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, align 4
    %98 = tail call i32 @push_operand(%struct.rtx_def.11418* %97, i32 signext %mode) #2
    %99 = icmp eq i32 %98, 0
    br i1 %99, label %133, label %100
  
  ; <label>:100                                     ; preds = %96
    %101 = getelementptr inbounds %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, i32 1
    %102 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %101, align 4
    %103 = bitcast %struct.rtx_def.11418* %102 to i32*
    %104 = load i32, i32* %103, align 4
    %.mask.i13 = and i32 %104, -65536
    %105 = icmp eq i32 %.mask.i13, 4128768
    br i1 %105, label %106, label %110
  
  ; <label>:106                                     ; preds = %100
    %107 = getelementptr inbounds %struct.rtx_def.11418, %struct.rtx_def.11418* %102, i32 0, i32 1, i32 0
    %108 = bitcast %union.rtunion_def.11419* %107 to %struct.rtx_def.11418**
    %109 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %108, align 4
    br label %110
  
  ; <label>:110                                     ; preds = %106, %100
    %t.0.i = phi %struct.rtx_def.11418* [ %109, %106 ], [ %102, %100 ]
    %111 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 5), align 4
    %112 = icmp eq %struct.rtx_def.11418* %t.0.i, %111
    %113 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 3), align 4
    %114 = icmp eq %struct.rtx_def.11418* %t.0.i, %113
    %or.cond.i = or i1 %112, %114
    %115 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 6), align 4
    %116 = icmp eq %struct.rtx_def.11418* %t.0.i, %115
    %or.cond4.i = or i1 %or.cond.i, %116
    %117 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 7), align 4
    %118 = icmp eq %struct.rtx_def.11418* %t.0.i, %117
    %or.cond6.i = or i1 %or.cond4.i, %118
    %119 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 8), align 4
    %120 = icmp eq %struct.rtx_def.11418* %t.0.i, %119
    %or.cond8.i = or i1 %or.cond6.i, %120
    br i1 %or.cond8.i, label %general_no_elim_operand.exit.thread, label %121
  
  ; <label>:121                                     ; preds = %110
    %122 = bitcast %struct.rtx_def.11418* %t.0.i to i32*
    %123 = load i32, i32* %122, align 4
    %.mask1.i14 = and i32 %123, -65536
    %124 = icmp eq i32 %.mask1.i14, 3997696
    br i1 %124, label %125, label %general_no_elim_operand.exit
  
  ; <label>:125                                     ; preds = %121
    %126 = getelementptr inbounds %struct.rtx_def.11418, %struct.rtx_def.11418* %t.0.i, i32 0, i32 1, i32 0, i32 0
    %127 = load i32, i32* %126, align 4
    %.off.i15 = add i32 %127, -53
    %128 = icmp ult i32 %.off.i15, 5
    br i1 %128, label %general_no_elim_operand.exit.thread, label %general_no_elim_operand.exit
  
  general_no_elim_operand.exit:                     ; preds = %125, %121
    %129 = tail call i32 @general_operand(%struct.rtx_def.11418* nonnull %102, i32 signext %mode) #2
    %130 = icmp eq i32 %129, 0
    br i1 %130, label %general_no_elim_operand.exit.general_no_elim_operand.exit.thread_crit_edge, label %133
  
  general_no_elim_operand.exit.general_no_elim_operand.exit.thread_crit_edge: ; preds = %general_no_elim_operand.exit
    %sunkaddr12 = ptrtoint %struct.rtx_def.11418** %operands to i32
    %sunkaddr13 = add i32 %sunkaddr12, 4
    %sunkaddr14 = inttoptr i32 %sunkaddr13 to %struct.rtx_def.11418**
    %.pre19 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %sunkaddr14, align 4
    br label %general_no_elim_operand.exit.thread
  
  general_no_elim_operand.exit.thread:              ; preds = %general_no_elim_operand.exit.general_no_elim_operand.exit.thread_crit_edge, %125, %110
    %131 = phi %struct.rtx_def.11418* [ %.pre19, %general_no_elim_operand.exit.general_no_elim_operand.exit.thread_crit_edge ], [ %102, %125 ], [ %102, %110 ]
    %132 = tail call %struct.rtx_def.11418* @copy_to_mode_reg(i32 signext %mode, %struct.rtx_def.11418* %131) #2
    %sunkaddr15 = ptrtoint %struct.rtx_def.11418** %operands to i32
    %sunkaddr16 = add i32 %sunkaddr15, 4
    %sunkaddr17 = inttoptr i32 %sunkaddr16 to %struct.rtx_def.11418**
    store %struct.rtx_def.11418* %132, %struct.rtx_def.11418** %sunkaddr17, align 4
    br label %133
  
  ; <label>:133                                     ; preds = %general_no_elim_operand.exit.thread, %general_no_elim_operand.exit, %96
    %134 = load i32, i32* @target_flags, align 4
    %135 = and i32 %134, 33554432
    %136 = icmp ne i32 %135, 0
    %137 = icmp eq i32 %mode, 5
    %or.cond = and i1 %137, %136
    br i1 %or.cond, label %138, label %160
  
  ; <label>:138                                     ; preds = %133
    %139 = getelementptr inbounds %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, i32 1
    %140 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %139, align 4
    %141 = tail call i32 @immediate_operand(%struct.rtx_def.11418* %140, i32 signext 5) #2
    %142 = icmp eq i32 %141, 0
    br i1 %142, label %160, label %143
  
  ; <label>:143                                     ; preds = %138
    %sunkaddr18 = ptrtoint %struct.rtx_def.11418** %operands to i32
    %sunkaddr19 = add i32 %sunkaddr18, 4
    %sunkaddr20 = inttoptr i32 %sunkaddr19 to %struct.rtx_def.11418**
    %144 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %sunkaddr20, align 4
    %145 = tail call i32 @x86_64_zero_extended_value(%struct.rtx_def.11418* %144)
    %146 = icmp eq i32 %145, 0
    br i1 %146, label %147, label %160
  
  ; <label>:147                                     ; preds = %143
    %148 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, align 4
    %149 = tail call i32 @register_operand(%struct.rtx_def.11418* %148, i32 signext 5) #2
    %150 = load i32, i32* @optimize, align 4
    %notrhs = icmp eq i32 %150, 0
    %151 = load i32, i32* @reload_completed, align 4
    %152 = or i32 %151, %149
    %153 = load i32, i32* @reload_in_progress, align 4
    %154 = or i32 %152, %153
    %155 = icmp ne i32 %154, 0
    %156 = or i1 %notrhs, %155
    br i1 %156, label %160, label %157
  
  ; <label>:157                                     ; preds = %147
    %sunkaddr21 = ptrtoint %struct.rtx_def.11418** %operands to i32
    %sunkaddr22 = add i32 %sunkaddr21, 4
    %sunkaddr23 = inttoptr i32 %sunkaddr22 to %struct.rtx_def.11418**
    %158 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %sunkaddr23, align 4
    %159 = tail call %struct.rtx_def.11418* @copy_to_mode_reg(i32 signext 5, %struct.rtx_def.11418* %158) #2
    store %struct.rtx_def.11418* %159, %struct.rtx_def.11418** %sunkaddr23, align 4
    br label %160
  
  ; <label>:160                                     ; preds = %157, %147, %143, %138, %133
    %161 = getelementptr inbounds [59 x i32], [59 x i32]* @mode_class, i32 0, i32 %mode
    %162 = load i32, i32* %161, align 4
    switch i32 %162, label %163 [
      i32 2, label %166
      i32 6, label %166
    ]
  
  ; <label>:163                                     ; preds = %160
    %164 = icmp ne i32 %3, 0
    %165 = icmp ne i32 %162, 8
    %or.cond10 = or i1 %164, %165
    br i1 %or.cond10, label %182, label %168
  
  ; <label>:166                                     ; preds = %160, %160
    %167 = icmp ne i32 %3, 0
    br i1 %167, label %182, label %168
  
  ; <label>:168                                     ; preds = %166, %163
    %169 = getelementptr inbounds %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, i32 1
    %170 = bitcast %struct.rtx_def.11418** %169 to i32**
    %171 = load i32*, i32** %170, align 4
    %172 = load i32, i32* %171, align 4
    %.mask11 = and i32 %172, -65536
    %173 = icmp eq i32 %.mask11, 3604480
    br i1 %173, label %174, label %182
  
  ; <label>:174                                     ; preds = %168
    %175 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, align 4
    %176 = tail call i32 @register_operand(%struct.rtx_def.11418* %175, i32 signext %mode) #2
    %177 = icmp eq i32 %176, 0
    br i1 %177, label %182, label %178
  
  ; <label>:178                                     ; preds = %174
    %sunkaddr24 = ptrtoint %struct.rtx_def.11418** %operands to i32
    %sunkaddr25 = add i32 %sunkaddr24, 4
    %sunkaddr26 = inttoptr i32 %sunkaddr25 to %struct.rtx_def.11418**
    %179 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %sunkaddr26, align 4
    %180 = tail call %struct.rtx_def.11418* @force_const_mem(i32 signext %mode, %struct.rtx_def.11418* %179) #2
    %181 = tail call %struct.rtx_def.11418* @validize_mem(%struct.rtx_def.11418* %180) #2
    store %struct.rtx_def.11418* %181, %struct.rtx_def.11418** %sunkaddr26, align 4
    br label %182
  
  ; <label>:182                                     ; preds = %178, %174, %168, %166, %163, %.critedge, %59
    %183 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, align 4
    %184 = getelementptr inbounds %struct.rtx_def.11418*, %struct.rtx_def.11418** %operands, i32 1
    %185 = load %struct.rtx_def.11418*, %struct.rtx_def.11418** %184, align 4
    %186 = tail call %struct.rtx_def.11418* @gen_rtx_fmt_ee(i32 signext 47, i32 signext 0, %struct.rtx_def.11418* %183, %struct.rtx_def.11418* %185) #2
    %187 = tail call %struct.rtx_def.11418* @emit_insn(%struct.rtx_def.11418* %186) #2
    br label %188
  
  ; <label>:188                                     ; preds = %182, %63
    ret void
  }
  
  declare i32 @push_operand(%struct.rtx_def.11418*, i32 signext) #0
  
  declare %struct.rtx_def.11418* @copy_to_mode_reg(i32 signext, %struct.rtx_def.11418*) #0
  
  declare %struct.rtx_def.11418* @validize_mem(%struct.rtx_def.11418*) #0
  
  declare %struct.rtx_def.11418* @force_const_mem(i32 signext, %struct.rtx_def.11418*) #0
  
  attributes #0 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #1 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
  attributes #2 = { nounwind }
  
  !llvm.ident = !{!0}
  
  !0 = !{!"clang version 3.8.0 (http://llvm.org/git/clang.git 2d49f0a0ae8366964a93e3b7b26e29679bee7160) (http://llvm.org/git/llvm.git 60bc66b44837125843b58ed3e0fd2e6bb948d839)"}

...
---
name:            ix86_expand_move
alignment:       2
exposesReturnsTwice: false
hasInlineAsm:    false
isSSA:           true
tracksRegLiveness: true
tracksSubRegLiveness: false
registers:       
  - { id: 0, class: gpr32 }
  - { id: 1, class: gpr32 }
  - { id: 2, class: gpr32 }
  - { id: 3, class: gpr32 }
  - { id: 4, class: gpr32 }
  - { id: 5, class: gpr32 }
  - { id: 6, class: gpr32 }
  - { id: 7, class: gpr32 }
  - { id: 8, class: gpr32 }
  - { id: 9, class: gpr32 }
  - { id: 10, class: gpr32 }
  - { id: 11, class: gpr32 }
  - { id: 12, class: gpr32 }
  - { id: 13, class: gpr32 }
  - { id: 14, class: gpr32 }
  - { id: 15, class: gpr32 }
  - { id: 16, class: gpr32 }
  - { id: 17, class: gpr32 }
  - { id: 18, class: gpr32 }
  - { id: 19, class: gpr32 }
  - { id: 20, class: gpr32 }
  - { id: 21, class: gpr32 }
  - { id: 22, class: gpr32 }
  - { id: 23, class: gpr32 }
  - { id: 24, class: gpr32 }
  - { id: 25, class: gpr32 }
  - { id: 26, class: gpr32 }
  - { id: 27, class: gpr32 }
  - { id: 28, class: gpr32 }
  - { id: 29, class: gpr32 }
  - { id: 30, class: gpr32 }
  - { id: 31, class: gpr32 }
  - { id: 32, class: gpr32 }
  - { id: 33, class: gpr32 }
  - { id: 34, class: gpr32 }
  - { id: 35, class: gpr32 }
  - { id: 36, class: gpr32 }
  - { id: 37, class: gpr32 }
  - { id: 38, class: gpr32 }
  - { id: 39, class: gpr32 }
  - { id: 40, class: gpr32 }
  - { id: 41, class: gpr32 }
  - { id: 42, class: gpr32 }
  - { id: 43, class: gpr32 }
  - { id: 44, class: gpr32 }
  - { id: 45, class: gpr32 }
  - { id: 46, class: gpr32 }
  - { id: 47, class: gpr32 }
  - { id: 48, class: gpr32 }
  - { id: 49, class: gpr32 }
  - { id: 50, class: gpr32 }
  - { id: 51, class: gpr32 }
  - { id: 52, class: gpr32 }
  - { id: 53, class: gpr32 }
  - { id: 54, class: gpr32 }
  - { id: 55, class: gpr32 }
  - { id: 56, class: gpr32 }
  - { id: 57, class: gpr32 }
  - { id: 58, class: gpr32 }
  - { id: 59, class: gpr32 }
  - { id: 60, class: gpr32 }
  - { id: 61, class: gpr32 }
  - { id: 62, class: gpr32 }
  - { id: 63, class: gpr32 }
  - { id: 64, class: gpr32 }
  - { id: 65, class: gpr32 }
  - { id: 66, class: gpr32 }
  - { id: 67, class: gpr32 }
  - { id: 68, class: gpr32 }
  - { id: 69, class: gpr32 }
  - { id: 70, class: gpr32 }
  - { id: 71, class: gpr32 }
  - { id: 72, class: gpr32 }
  - { id: 73, class: gpr32 }
  - { id: 74, class: gpr32 }
  - { id: 75, class: gpr32 }
  - { id: 76, class: gpr32 }
  - { id: 77, class: gpr32 }
  - { id: 78, class: gpr32 }
  - { id: 79, class: gpr32 }
  - { id: 80, class: gpr32 }
  - { id: 81, class: gpr32 }
  - { id: 82, class: gpr32 }
  - { id: 83, class: gpr32 }
  - { id: 84, class: gpr32 }
  - { id: 85, class: gpr32 }
  - { id: 86, class: gpr32 }
  - { id: 87, class: gpr32 }
  - { id: 88, class: gpr32 }
  - { id: 89, class: gpr32 }
  - { id: 90, class: gpr32 }
  - { id: 91, class: gpr32 }
  - { id: 92, class: gpr32 }
  - { id: 93, class: gpr32 }
  - { id: 94, class: gpr32 }
  - { id: 95, class: gpr32 }
  - { id: 96, class: gpr32 }
  - { id: 97, class: gpr32 }
  - { id: 98, class: gpr32 }
  - { id: 99, class: gpr32 }
  - { id: 100, class: gpr32 }
  - { id: 101, class: gpr32 }
  - { id: 102, class: gpr32 }
  - { id: 103, class: gpr32 }
  - { id: 104, class: gpr32 }
  - { id: 105, class: gpr32 }
  - { id: 106, class: gpr32 }
  - { id: 107, class: gpr32 }
  - { id: 108, class: gpr32 }
  - { id: 109, class: gpr32 }
  - { id: 110, class: gpr32 }
  - { id: 111, class: gpr32 }
  - { id: 112, class: gpr32 }
  - { id: 113, class: gpr32 }
  - { id: 114, class: gpr32 }
  - { id: 115, class: gpr32 }
  - { id: 116, class: gpr32 }
  - { id: 117, class: gpr32 }
  - { id: 118, class: gpr32 }
  - { id: 119, class: gpr32 }
  - { id: 120, class: gpr32 }
  - { id: 121, class: gpr32 }
  - { id: 122, class: gpr32 }
  - { id: 123, class: gpr32 }
  - { id: 124, class: gpr32 }
  - { id: 125, class: gpr32 }
  - { id: 126, class: gpr32 }
  - { id: 127, class: gpr32 }
  - { id: 128, class: gpr32 }
  - { id: 129, class: gpr32 }
  - { id: 130, class: gpr32 }
  - { id: 131, class: gpr32 }
  - { id: 132, class: gpr32 }
  - { id: 133, class: gpr32 }
  - { id: 134, class: gpr32 }
  - { id: 135, class: gpr32 }
  - { id: 136, class: gpr32 }
  - { id: 137, class: gpr32 }
  - { id: 138, class: gpr32 }
  - { id: 139, class: gpr32 }
  - { id: 140, class: gpr32 }
  - { id: 141, class: gpr32 }
  - { id: 142, class: gpr32 }
  - { id: 143, class: gpr32 }
  - { id: 144, class: gpr32 }
  - { id: 145, class: gpr32 }
  - { id: 146, class: gpr32 }
  - { id: 147, class: gpr32 }
  - { id: 148, class: gpr32 }
  - { id: 149, class: gpr32 }
  - { id: 150, class: gpr32 }
  - { id: 151, class: gpr32 }
  - { id: 152, class: gpr32 }
  - { id: 153, class: gpr32 }
  - { id: 154, class: gpr32 }
  - { id: 155, class: gpr32 }
  - { id: 156, class: gpr32 }
  - { id: 157, class: gpr32 }
  - { id: 158, class: gpr32 }
  - { id: 159, class: gpr32 }
  - { id: 160, class: gpr32 }
  - { id: 161, class: gpr32 }
  - { id: 162, class: gpr32 }
  - { id: 163, class: gpr32 }
  - { id: 164, class: gpr32 }
  - { id: 165, class: gpr32 }
  - { id: 166, class: gpr32 }
  - { id: 167, class: gpr32 }
  - { id: 168, class: gpr32 }
  - { id: 169, class: gpr32 }
  - { id: 170, class: gpr32 }
  - { id: 171, class: gpr32 }
  - { id: 172, class: gpr32 }
  - { id: 173, class: gpr32 }
  - { id: 174, class: gpr32 }
  - { id: 175, class: gpr32 }
  - { id: 176, class: gpr32 }
  - { id: 177, class: gpr32 }
  - { id: 178, class: gpr32 }
  - { id: 179, class: gpr32 }
  - { id: 180, class: gpr32 }
  - { id: 181, class: gpr32 }
liveins:         
  - { reg: '%a0', virtual-reg: '%19' }
  - { reg: '%a1', virtual-reg: '%20' }
  - { reg: '%t9' }
  - { reg: '%v0' }
frameInfo:       
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        true
  maxCallFrameSize: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
body:             |
  bb.0 (%ir-block.0, freq 10485):
    successors: %bb.15.symbolic_operand.exit.thread(37), %bb.1(62)
    liveins: %a0, %a1, %t9, %v0
  
    %21 = ADDu %v0, %t9
    %20 = COPY %a1
    %19 = COPY %a0
    %22 = LW %21, target-flags(<unknown>) @reload_in_progress, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %23 = LW %22, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from @reload_in_progress)
    %24 = LW %21, target-flags(<unknown>) @reload_completed, <0x466f670> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %25 = LW %24, 0, <0x4707e60> = !{!"unison-memory-partition", i32 3} :: (load 4 from @reload_completed)
    %26 = LW %21, target-flags(<unknown>) @flag_pic, <0x471ba50> = !{!"unison-memory-partition", i32 4} :: (load 4 from got)
    %27 = LW killed %26, 0, <0x46f9790> = !{!"unison-memory-partition", i32 5} :: (load 4 from @flag_pic)
    BEQ killed %27, %zero, %bb.15.symbolic_operand.exit.thread, implicit-def dead %at
    B %bb.1, implicit-def dead %at
  
  bb.1 (%ir-block.6, freq 6553):
    successors: %bb.2(50), %bb.15.symbolic_operand.exit.thread(50)
  
    %28 = LW %21, target-flags(<unknown>) @target_flags, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %29 = LW killed %28, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from @target_flags)
    %30 = EXT killed %29, 25, 1
    %31 = ORi killed %30, 4
    BNE killed %31, %19, %bb.15.symbolic_operand.exit.thread, implicit-def dead %at
    B %bb.2, implicit-def dead %at
  
  bb.2 (%ir-block.12, freq 3276):
    successors: %bb.10.symbolic_operand.exit.thread18(50), %bb.42(50)
  
    %1 = LW %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.13)
    %33 = LW %1, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.15)
    %32 = SRL killed %33, 16
    %34 = ADDiu %32, -67
    %35 = SLTiu killed %34, 2
    BNE killed %35, %zero, %bb.10.symbolic_operand.exit.thread18, implicit-def dead %at
    B %bb.42, implicit-def dead %at
  
  bb.42 (%ir-block.12, freq 1638):
    successors: %bb.3(50), %bb.15.symbolic_operand.exit.thread(50)
  
    %36 = ADDiu %zero, 58
    BNE %32, killed %36, %bb.15.symbolic_operand.exit.thread, implicit-def dead %at
    B %bb.3, implicit-def dead %at
  
  bb.3 (%ir-block.18, freq 819):
    successors: %bb.10.symbolic_operand.exit.thread18(50), %bb.43(50)
  
    %2 = LW %1, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.20)
    %3 = LW %2, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.22)
    %37 = SRL %3, 16
    %38 = ADDiu %37, -67
    %39 = SLTiu killed %38, 2
    BNE killed %39, %zero, %bb.10.symbolic_operand.exit.thread18, implicit-def dead %at
    B %bb.43, implicit-def dead %at
  
  bb.43 (%ir-block.18, freq 409):
    successors: %bb.4(50), %bb.5(50)
  
    %40 = ADDiu %zero, 42
    BNE %37, killed %40, %bb.5, implicit-def dead %at
    B %bb.4, implicit-def dead %at
  
  bb.4 (%ir-block.25, freq 204):
    successors: %bb.5(12), %bb.44(87)
  
    %41 = LW %2, 8, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.26)
    %42 = SLTiu %41, 16
    BEQ killed %42, %zero, %bb.5, implicit-def dead %at
  
  bb.44 (%ir-block.25, freq 179):
    successors: %bb.10.symbolic_operand.exit.thread18(85), %bb.5(14)
  
    %43 = ADDiu %zero, 1
    %44 = SLLV killed %43, %41
    %45 = ANDi killed %44, 32960
    BNE killed %45, %zero, %bb.10.symbolic_operand.exit.thread18, implicit-def dead %at
  
  bb.5 (%ir-block.28, freq 256):
    successors: %bb.6(50), %bb.15.symbolic_operand.exit.thread(50)
  
    %46 = LUi 65535
    %47 = AND %3, %46
    %48 = LUi 75
    BNE killed %47, killed %48, %bb.15.symbolic_operand.exit.thread, implicit-def dead %at
    B %bb.6, implicit-def dead %at
  
  bb.6 (%ir-block.30, freq 128):
    successors: %bb.7(50), %bb.15.symbolic_operand.exit.thread(50)
  
    %49 = LW %2, 8, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.32)
    %50 = LW killed %49, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.33)
    %52 = AND killed %50, %46
    %53 = LUi 54
    BNE killed %52, killed %53, %bb.15.symbolic_operand.exit.thread, implicit-def dead %at
    B %bb.7, implicit-def dead %at
  
  bb.7 (%ir-block.36, freq 64):
    successors: %bb.10.symbolic_operand.exit.thread18(50), %bb.45(50)
  
    %4 = LW %2, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.38)
    %55 = LW %4, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.40)
    %54 = SRL killed %55, 16
    %56 = ADDiu %54, -67
    %57 = SLTiu killed %56, 2
    BNE killed %57, %zero, %bb.10.symbolic_operand.exit.thread18, implicit-def dead %at
    B %bb.45, implicit-def dead %at
  
  bb.45 (%ir-block.36, freq 32):
    successors: %bb.8(50), %bb.15.symbolic_operand.exit.thread(50)
  
    %58 = ADDiu %zero, 42
    BNE %54, killed %58, %bb.15.symbolic_operand.exit.thread, implicit-def dead %at
    B %bb.8, implicit-def dead %at
  
  bb.8 (%ir-block.43, freq 16):
    successors: %bb.9.symbolic_operand.exit(50), %bb.15.symbolic_operand.exit.thread(50)
  
    %59 = LW %4, 8, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.44)
    %60 = ADDiu %zero, 7
    BNE killed %59, killed %60, %bb.15.symbolic_operand.exit.thread, implicit-def dead %at
    B %bb.9.symbolic_operand.exit, implicit-def dead %at
  
  bb.9.symbolic_operand.exit (freq 8):
    successors: %bb.10.symbolic_operand.exit.thread18(50), %bb.15.symbolic_operand.exit.thread(50)
  
    %61 = LW %4, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.48)
    %62 = LW killed %61, 4, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.51)
    %63 = LHu killed %62, 0, <0x466f670> = !{!"unison-memory-partition", i32 2} :: (load 2 from %ir.52, align 4)
    %64 = ADDiu killed %63, -67
    %65 = SLTiu killed %64, 2
    BEQ killed %65, %zero, %bb.15.symbolic_operand.exit.thread, implicit-def dead %at
    B %bb.10.symbolic_operand.exit.thread18, implicit-def dead %at
  
  bb.10.symbolic_operand.exit.thread18 (freq 2237):
    successors: %bb.13(33), %bb.46.symbolic_operand.exit.thread18(66)
  
    %5 = LW %20, 0, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.operands)
    %67 = LW %5, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.56)
    %66 = SRL killed %67, 16
    %68 = ADDiu %zero, 61
    BEQ %66, killed %68, %bb.13, implicit-def dead %at
    B %bb.46.symbolic_operand.exit.thread18, implicit-def dead %at
  
  bb.46.symbolic_operand.exit.thread18 (freq 1491):
    successors: %bb.11(50), %bb.12(49)
  
    %69 = ADDiu %zero, 66
    BNE %66, killed %69, %bb.12, implicit-def dead %at
    B %bb.11, implicit-def dead %at
  
  bb.11 (%ir-block.59, freq 745):
    successors: %bb.40(100)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %70 = LW %21, target-flags(<unknown>) @force_reg, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @force_reg)
    %a0 = COPY %19
    %a1 = COPY %1
    %gp = COPY %21
    %t9 = COPY %70
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %71 = COPY %v0
    SW %71, %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr2)
    B %bb.40, implicit-def dead %at
  
  bb.12 (%ir-block.61, freq 745):
    successors: %bb.13(100)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %72 = LW %21, target-flags(<unknown>) @gen_reg_rtx, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @gen_reg_rtx)
    %a0 = COPY %19
    %gp = COPY %21
    %t9 = COPY %72
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %73 = COPY %v0
    %7 = LW %20, 4, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.sunkaddr5)
    %6 = COPY %73
  
  bb.13 (%ir-block.63, freq 1491):
    successors: %bb.41(37), %bb.14..critedge(62)
  
    %8 = PHI %1, %bb.10.symbolic_operand.exit.thread18, %7, %bb.12
    %9 = PHI %5, %bb.10.symbolic_operand.exit.thread18, %6, %bb.12
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %74 = LW %21, target-flags(<unknown>) @legitimize_pic_address, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @legitimize_pic_address)
    %a0 = COPY %8
    %a1 = COPY %9
    %gp = COPY %21
    %t9 = COPY %74
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %75 = COPY %v0
    %76 = LW %20, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.operands)
    BEQ %75, killed %76, %bb.41, implicit-def dead %at
    B %bb.14..critedge, implicit-def dead %at
  
  bb.14..critedge (freq 932):
    successors: %bb.40(100)
  
    %10 = COPY %75
    SW %10, %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr8)
    B %bb.40, implicit-def dead %at
  
  bb.15.symbolic_operand.exit.thread (freq 8248):
    successors: %bb.16(50), %bb.20(50)
  
    %11 = LW %20, 0, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.operands)
    %77 = LW %11, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.69)
    %78 = LUi 65535
    %79 = AND killed %77, killed %78
    %80 = LUi 66
    BNE killed %79, killed %80, %bb.20, implicit-def dead %at
    B %bb.16, implicit-def dead %at
  
  bb.16 (%ir-block.72, freq 4124):
    successors: %bb.17(50), %bb.18(50)
  
    %81 = LW %21, target-flags(<unknown>) @mode_size, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %82 = ADDu killed %81, %19
    %83 = LBu killed %82, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 1 from %ir.76)
    %84 = LW %21, target-flags(<unknown>) @target_flags, <0x466f670> = !{!"unison-memory-partition", i32 2} :: (load 4 from got)
    %85 = ADDiu %83, 1
    %86 = ANDi killed %85, 510
    %87 = ADDiu %83, 7
    %88 = ANDi killed %87, 504
    %89 = LBu killed %84, 0, <0x4707e60> = !{!"unison-memory-partition", i32 3} :: (load 1 from @target_flags, align 4)
    %90 = ANDi killed %89, 2
    %91 = SRL killed %90, 1
    %92 = MOVN_I_I killed %88, killed %91, %86
    BNE killed %92, %83, %bb.18, implicit-def dead %at
    B %bb.17, implicit-def dead %at
  
  bb.17 (%ir-block.85, freq 2062):
    successors: %bb.18(37), %bb.20(62)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %93 = LW %21, target-flags(<unknown>) @push_operand, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @push_operand)
    %a0 = COPY %11
    %a1 = COPY %19
    %gp = COPY %21
    %t9 = COPY %93
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %94 = COPY %v0
    BNE %94, %zero, %bb.20, implicit-def dead %at
    B %bb.18, implicit-def dead %at
  
  bb.18 (%ir-block.88, freq 2835):
    successors: %bb.19(50), %bb.20(50)
  
    %12 = LW %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.89)
    %95 = LW %12, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.91)
    %96 = LUi 65535
    %97 = AND killed %95, killed %96
    %98 = LUi 66
    BNE killed %97, killed %98, %bb.20, implicit-def dead %at
    B %bb.19, implicit-def dead %at
  
  bb.19 (%ir-block.94, freq 1417):
    successors: %bb.20(100)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %99 = LW %21, target-flags(<unknown>) @force_reg, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @force_reg)
    %a0 = COPY %19
    %a1 = COPY %12
    %gp = COPY %21
    %t9 = COPY %99
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %100 = COPY %v0
    SW %100, %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr11)
  
  bb.20 (%ir-block.96, freq 8248):
    successors: %bb.29(37), %bb.21(62)
  
    %101 = LW %20, 0, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.operands)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %102 = LW %21, target-flags(<unknown>) @push_operand, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @push_operand)
    %a0 = COPY %101
    %a1 = COPY %19
    %gp = COPY %21
    %t9 = COPY %102
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %103 = COPY %v0
    BEQ %103, %zero, %bb.29, implicit-def dead %at
    B %bb.21, implicit-def dead %at
  
  bb.21 (%ir-block.100, freq 5155):
    successors: %bb.22(50), %bb.23(50)
  
    %13 = LW %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.101)
    %104 = LW %13, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.103)
    %105 = LUi 65535
    %106 = AND killed %104, killed %105
    %107 = LUi 63
    BNE killed %106, killed %107, %bb.23, implicit-def dead %at
    B %bb.22, implicit-def dead %at
  
  bb.22 (%ir-block.106, freq 2577):
    successors: %bb.23(100)
  
    %14 = LW %13, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.108)
  
  bb.23 (%ir-block.110, freq 5155):
    successors: %bb.28.general_no_elim_operand.exit.thread(3), %bb.50(96)
  
    %15 = PHI %13, %bb.21, %14, %bb.22
    %112 = LW %21, target-flags(<unknown>) @global_rtl, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %113 = LW %112, 20, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from `%struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 5)`)
    BEQ %15, killed %113, %bb.28.general_no_elim_operand.exit.thread, implicit-def dead %at
    B %bb.50, implicit-def dead %at
  
  bb.50 (%ir-block.110, freq 4994):
    successors: %bb.28.general_no_elim_operand.exit.thread(3), %bb.49(96)
  
    %108 = LW %112, 12, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from `%struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 3)`)
    BEQ %15, %108, %bb.28.general_no_elim_operand.exit.thread, implicit-def dead %at
    B %bb.49, implicit-def dead %at
  
  bb.49 (%ir-block.110, freq 4832):
    successors: %bb.28.general_no_elim_operand.exit.thread(6), %bb.48(93)
  
    %109 = LW %112, 24, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from `%struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 6)`)
    BEQ %15, %109, %bb.28.general_no_elim_operand.exit.thread, implicit-def dead %at
    B %bb.48, implicit-def dead %at
  
  bb.48 (%ir-block.110, freq 4510):
    successors: %bb.28.general_no_elim_operand.exit.thread(14), %bb.47(85)
  
    %110 = LW %112, 28, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from `%struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 7)`)
    BEQ %15, %110, %bb.28.general_no_elim_operand.exit.thread, implicit-def dead %at
    B %bb.47, implicit-def dead %at
  
  bb.47 (%ir-block.110, freq 3866):
    successors: %bb.28.general_no_elim_operand.exit.thread(33), %bb.24(66)
  
    %111 = LW %112, 32, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from `%struct.rtx_def.11418** getelementptr inbounds ([11 x %struct.rtx_def.11418*], [11 x %struct.rtx_def.11418*]* @global_rtl, i32 0, i32 8)`)
    BEQ %15, %111, %bb.28.general_no_elim_operand.exit.thread, implicit-def dead %at
    B %bb.24, implicit-def dead %at
  
  bb.24 (%ir-block.121, freq 2577):
    successors: %bb.25(50), %bb.26.general_no_elim_operand.exit(50)
  
    %114 = LW %15, 0, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.122)
    %115 = LUi 65535
    %116 = AND killed %114, killed %115
    %117 = LUi 61
    BNE killed %116, killed %117, %bb.26.general_no_elim_operand.exit, implicit-def dead %at
    B %bb.25, implicit-def dead %at
  
  bb.25 (%ir-block.125, freq 1288):
    successors: %bb.28.general_no_elim_operand.exit.thread(50), %bb.26.general_no_elim_operand.exit(50)
  
    %118 = LW %15, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.126)
    %119 = ADDiu killed %118, -53
    %120 = SLTiu killed %119, 5
    BNE killed %120, %zero, %bb.28.general_no_elim_operand.exit.thread, implicit-def dead %at
    B %bb.26.general_no_elim_operand.exit, implicit-def dead %at
  
  bb.26.general_no_elim_operand.exit (freq 1933):
    successors: %bb.27.general_no_elim_operand.exit.general_no_elim_operand.exit.thread_crit_edge(37), %bb.29(62)
  
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %121 = LW %21, target-flags(<unknown>) @general_operand, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @general_operand)
    %a0 = COPY %13
    %a1 = COPY %19
    %gp = COPY %21
    %t9 = COPY %121
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %122 = COPY %v0
    BNE %122, %zero, %bb.29, implicit-def dead %at
    B %bb.27.general_no_elim_operand.exit.general_no_elim_operand.exit.thread_crit_edge, implicit-def dead %at
  
  bb.27.general_no_elim_operand.exit.general_no_elim_operand.exit.thread_crit_edge (freq 724):
    successors: %bb.28.general_no_elim_operand.exit.thread(100)
  
    %16 = LW %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr14)
  
  bb.28.general_no_elim_operand.exit.thread (freq 3946):
    successors: %bb.29(100)
  
    %17 = PHI %13, %bb.23, %13, %bb.50, %13, %bb.49, %13, %bb.48, %13, %bb.47, %13, %bb.25, %16, %bb.27.general_no_elim_operand.exit.general_no_elim_operand.exit.thread_crit_edge
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %123 = LW %21, target-flags(<unknown>) @copy_to_mode_reg, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @copy_to_mode_reg)
    %a0 = COPY %19
    %a1 = COPY %17
    %gp = COPY %21
    %t9 = COPY %123
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %124 = COPY %v0
    SW %124, %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr17)
  
  bb.29 (%ir-block.133, freq 8248):
    successors: %bb.51(75), %bb.34(25)
  
    %129 = ADDiu %zero, 5
    BNE %19, killed %129, %bb.34, implicit-def dead %at
    B %bb.51, implicit-def dead %at
  
  bb.51 (%ir-block.133, freq 6186):
    successors: %bb.30(66), %bb.34(33)
  
    %126 = LW %21, target-flags(<unknown>) @target_flags, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %127 = LW %126, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from @target_flags)
    %128 = LUi 512
    %125 = AND %127, %128
    BEQ %125, %zero, %bb.34, implicit-def dead %at
    B %bb.30, implicit-def dead %at
  
  bb.30 (%ir-block.138, freq 4124):
    successors: %bb.34(37), %bb.31(62)
  
    %130 = LW %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.139)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %131 = LW %21, target-flags(<unknown>) @immediate_operand, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @immediate_operand)
    %132 = ADDiu %zero, 5
    %a0 = COPY %130
    %a1 = COPY %132
    %gp = COPY %21
    %t9 = COPY %131
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %133 = COPY %v0
    BEQ %133, %zero, %bb.34, implicit-def dead %at
    B %bb.31, implicit-def dead %at
  
  bb.31 (%ir-block.143, freq 2577):
    successors: %bb.32(37), %bb.34(62)
  
    %134 = LW %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr20)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %135 = LW %21, target-flags(<unknown>) @x86_64_zero_extended_value, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @x86_64_zero_extended_value)
    %a0 = COPY %134
    %gp = COPY %21
    %t9 = COPY %135
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %136 = COPY %v0
    BNE %136, %zero, %bb.34, implicit-def dead %at
    B %bb.32, implicit-def dead %at
  
  bb.32 (%ir-block.147, freq 966):
    successors: %bb.34(25), %bb.52(75)
  
    %138 = LW %20, 0, <0x466f670> = !{!"unison-memory-partition", i32 2} :: (load 4 from %ir.operands)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %139 = LW %21, target-flags(<unknown>) @register_operand, <0x4707e60> = !{!"unison-memory-partition", i32 3} :: (load 4 from call-entry @register_operand)
    %140 = ADDiu %zero, 5
    %a0 = COPY %138
    %a1 = COPY %140
    %gp = COPY %21
    %t9 = COPY %139
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %141 = COPY %v0
    %144 = LW %21, target-flags(<unknown>) @optimize, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %148 = LW killed %144, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from @optimize)
    BEQ killed %148, %zero, %bb.34, implicit-def dead %at
    B %bb.52, implicit-def dead %at
  
  bb.52 (%ir-block.147, freq 724):
    successors: %bb.34(33), %bb.33(66)
  
    %143 = LW %24, 0, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from @reload_completed)
    %146 = OR %143, %141
    %147 = LW %22, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from @reload_in_progress)
    %137 = OR %146, %147
    BNE %137, %zero, %bb.34, implicit-def dead %at
    B %bb.33, implicit-def dead %at
  
  bb.33 (%ir-block.157, freq 483):
    successors: %bb.34(100)
  
    %149 = LW %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr23)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %150 = LW %21, target-flags(<unknown>) @copy_to_mode_reg, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @copy_to_mode_reg)
    %151 = ADDiu %zero, 5
    %a0 = COPY %151
    %a1 = COPY %149
    %gp = COPY %21
    %t9 = COPY %150
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %152 = COPY %v0
    SW %152, %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr23)
  
  bb.34 (%ir-block.160, freq 8248):
    successors: %bb.36(66), %bb.35(33)
  
    %0 = OR %25, %23
    %153 = SLL %19, 2
    %154 = LW %21, target-flags(<unknown>) @mode_class, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from got)
    %155 = ADDu killed %154, killed %153
    %18 = LW killed %155, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.161)
    %156 = ADDiu %zero, 6
    %157 = ORi %18, 4
    BEQ killed %157, killed %156, %bb.36, implicit-def dead %at
    B %bb.35, implicit-def dead %at
  
  bb.35 (%ir-block.163, freq 2749):
    successors: %bb.40(25), %bb.53(75)
  
    BNE %0, %zero, %bb.40, implicit-def dead %at
    B %bb.53, implicit-def dead %at
  
  bb.53 (%ir-block.163, freq 2062):
    successors: %bb.40(33), %bb.37(66)
  
    %158 = ADDiu %zero, 8
    BNE %18, killed %158, %bb.40, implicit-def dead %at
    B %bb.37, implicit-def dead %at
  
  bb.36 (%ir-block.166, freq 5498):
    successors: %bb.40(62), %bb.37(37)
  
    BNE %0, %zero, %bb.40, implicit-def dead %at
    B %bb.37, implicit-def dead %at
  
  bb.37 (%ir-block.168, freq 3436):
    successors: %bb.38(50), %bb.40(50)
  
    %159 = LW %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.170)
    %160 = LW killed %159, 0, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.171)
    %161 = LUi 65535
    %162 = AND killed %160, killed %161
    %163 = LUi 55
    BNE killed %162, killed %163, %bb.40, implicit-def dead %at
    B %bb.38, implicit-def dead %at
  
  bb.38 (%ir-block.174, freq 1718):
    successors: %bb.40(37), %bb.39(62)
  
    %164 = LW %20, 0, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.operands)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %165 = LW %21, target-flags(<unknown>) @register_operand, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from call-entry @register_operand)
    %a0 = COPY %164
    %a1 = COPY %19
    %gp = COPY %21
    %t9 = COPY %165
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %166 = COPY %v0
    BEQ %166, %zero, %bb.40, implicit-def dead %at
    B %bb.39, implicit-def dead %at
  
  bb.39 (%ir-block.178, freq 1073):
    successors: %bb.40(100)
  
    %167 = LW %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from %ir.sunkaddr26)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %168 = LW %21, target-flags(<unknown>) @force_const_mem, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @force_const_mem)
    %a0 = COPY %19
    %a1 = COPY %167
    %gp = COPY %21
    %t9 = COPY %168
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %169 = COPY %v0
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %170 = LW %21, target-flags(<unknown>) @validize_mem, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @validize_mem)
    %a0 = COPY %169
    %gp = COPY %21
    %t9 = COPY %170
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %171 = COPY %v0
    SW %171, %20, 4, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (store 4 into %ir.sunkaddr26)
  
  bb.40 (%ir-block.182, freq 9926):
    successors: %bb.41(100)
  
    %172 = LW %20, 4, <0x471f670> = !{!"unison-memory-partition", i32 1} :: (load 4 from %ir.184)
    %173 = LW %20, 0, <0x466f670> = !{!"unison-memory-partition", i32 2} :: (load 4 from %ir.operands)
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %174 = LW %21, target-flags(<unknown>) @gen_rtx_fmt_ee, <0x4707e60> = !{!"unison-memory-partition", i32 3} :: (load 4 from call-entry @gen_rtx_fmt_ee)
    %175 = ADDiu %zero, 47
    %176 = ADDiu %zero, 0
    %a0 = COPY %175
    %a1 = COPY %176
    %a2 = COPY %173
    %a3 = COPY %172
    %gp = COPY %21
    %t9 = COPY %174
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %a1, implicit %a2, implicit %a3, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
    %177 = COPY %v0
    ADJCALLSTACKDOWN 16, implicit-def dead %sp, implicit %sp
    %178 = LW %21, target-flags(<unknown>) @emit_insn, <0x471ecd0> = !{!"unison-memory-partition", i32 0} :: (load 4 from call-entry @emit_insn)
    %a0 = COPY %177
    %gp = COPY %21
    %t9 = COPY %178
    JALRPseudo killed %t9, csr_o32, implicit-def dead %ra, implicit %a0, implicit %gp, implicit-def %sp, implicit-def %v0
    ADJCALLSTACKUP 16, 0, implicit-def dead %sp, implicit %sp
  
  bb.41 (%ir-block.188, freq 10485):
    liveouts:
  
    RetRA

...
